/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 18);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (process.env.NODE_ENV === 'production') {
  module.exports = __webpack_require__(19);
} else {
  module.exports = __webpack_require__(20);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 1 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var emptyFunction = __webpack_require__(2);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== 'production') {
  var invariant = __webpack_require__(4);
  var warning = __webpack_require__(6);
  var ReactPropTypesSecret = __webpack_require__(8);
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (process.env.NODE_ENV === 'production') {
  // DCE check should happen before ReactDOM bundle executes so that
  // DevTools can report bad minification during injection.
  checkDCE();
  module.exports = __webpack_require__(21);
} else {
  module.exports = __webpack_require__(24);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(31)(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(32)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(2);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * 
 */

var isTextNode = __webpack_require__(22);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChracterCard = function (_React$Component) {
	_inherits(ChracterCard, _React$Component);

	function ChracterCard(props) {
		_classCallCheck(this, ChracterCard);

		return _possibleConstructorReturn(this, (ChracterCard.__proto__ || Object.getPrototypeOf(ChracterCard)).call(this, props));
	}

	_createClass(ChracterCard, [{
		key: "render",
		value: function render() {
			var _this2 = this;

			return _react2.default.createElement(
				"div",
				{ className: "card bg-secondary" },
				_react2.default.createElement("img", { src: "", alt: "" }),
				_react2.default.createElement(
					"div",
					{ className: "card-img-overlay", onClick: function onClick(e) {
							_this2.props.clickCharacter(e);
						} },
					this.props.data
				)
			);
		}
	}]);

	return ChracterCard;
}(_react2.default.Component);

exports.default = ChracterCard;

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(9);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _App = __webpack_require__(29);

var _App2 = _interopRequireDefault(_App);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rootElement = document.getElementById('root');
_reactDom2.default.render(_react2.default.createElement(_App2.default, null), rootElement);

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.1.1
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var m=__webpack_require__(3),n=__webpack_require__(5),p=__webpack_require__(2);
function q(a){for(var b=arguments.length-1,e="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,d=0;d<b;d++)e+="\x26args[]\x3d"+encodeURIComponent(arguments[d+1]);b=Error(e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}
var r={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function t(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}t.prototype.isReactComponent={};t.prototype.setState=function(a,b){"object"!==typeof a&&"function"!==typeof a&&null!=a?q("85"):void 0;this.updater.enqueueSetState(this,a,b,"setState")};t.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};
function u(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}function v(){}v.prototype=t.prototype;var w=u.prototype=new v;w.constructor=u;m(w,t.prototype);w.isPureReactComponent=!0;function x(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||r}var y=x.prototype=new v;y.constructor=x;m(y,t.prototype);y.unstable_isAsyncReactComponent=!0;y.render=function(){return this.props.children};
var z={current:null},A=Object.prototype.hasOwnProperty,B="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103,C={key:!0,ref:!0,__self:!0,__source:!0};
function D(a,b,e){var d,c={},h=null,k=null;if(null!=b)for(d in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(h=""+b.key),b)A.call(b,d)&&!C.hasOwnProperty(d)&&(c[d]=b[d]);var f=arguments.length-2;if(1===f)c.children=e;else if(1<f){for(var g=Array(f),l=0;l<f;l++)g[l]=arguments[l+2];c.children=g}if(a&&a.defaultProps)for(d in f=a.defaultProps,f)void 0===c[d]&&(c[d]=f[d]);return{$$typeof:B,type:a,key:h,ref:k,props:c,_owner:z.current}}function E(a){return"object"===typeof a&&null!==a&&a.$$typeof===B}
var F="function"===typeof Symbol&&Symbol.iterator,G="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.element")||60103,H="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.portal")||60106;function escape(a){var b={"\x3d":"\x3d0",":":"\x3d2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var I=/\/+/g,J=[];
function K(a,b,e,d){if(J.length){var c=J.pop();c.result=a;c.keyPrefix=b;c.func=e;c.context=d;c.count=0;return c}return{result:a,keyPrefix:b,func:e,context:d,count:0}}function L(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>J.length&&J.push(a)}
function M(a,b,e,d){var c=typeof a;if("undefined"===c||"boolean"===c)a=null;if(null===a||"string"===c||"number"===c||"object"===c&&a.$$typeof===G||"object"===c&&a.$$typeof===H)return e(d,a,""===b?"."+N(a,0):b),1;var h=0;b=""===b?".":b+":";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var f=b+N(c,k);h+=M(c,f,e,d)}else if(f=F&&a[F]||a["@@iterator"],"function"===typeof f)for(a=f.call(a),k=0;!(c=a.next()).done;)c=c.value,f=b+N(c,k++),h+=M(c,f,e,d);else"object"===c&&(e=""+a,q("31","[object Object]"===
e?"object with keys {"+Object.keys(a).join(", ")+"}":e,""));return h}function N(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function O(a,b){a.func.call(a.context,b,a.count++)}
function P(a,b,e){var d=a.result,c=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?Q(a,d,e,p.thatReturnsArgument):null!=a&&(E(a)&&(b=c+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(I,"$\x26/")+"/")+e,a={$$typeof:B,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),d.push(a))}function Q(a,b,e,d,c){var h="";null!=e&&(h=(""+e).replace(I,"$\x26/")+"/");b=K(b,h,d,c);null==a||M(a,"",P,b);L(b)}"function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.fragment");
var R={Children:{map:function(a,b,e){if(null==a)return a;var d=[];Q(a,d,null,b,e);return d},forEach:function(a,b,e){if(null==a)return a;b=K(null,null,b,e);null==a||M(a,"",O,b);L(b)},count:function(a){return null==a?0:M(a,"",p.thatReturnsNull,null)},toArray:function(a){var b=[];Q(a,b,null,p.thatReturnsArgument);return b},only:function(a){E(a)?void 0:q("143");return a}},Component:t,PureComponent:u,unstable_AsyncComponent:x,createElement:D,cloneElement:function(a,b,e){var d=m({},a.props),c=a.key,h=a.ref,
k=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,k=z.current);void 0!==b.key&&(c=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(g in b)A.call(b,g)&&!C.hasOwnProperty(g)&&(d[g]=void 0===b[g]&&void 0!==f?f[g]:b[g])}var g=arguments.length-2;if(1===g)d.children=e;else if(1<g){f=Array(g);for(var l=0;l<g;l++)f[l]=arguments[l+2];d.children=f}return{$$typeof:B,type:a.type,key:c,ref:h,props:d,_owner:k}},createFactory:function(a){var b=D.bind(null,a);b.type=a;return b},isValidElement:E,
version:"16.1.1",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:z,assign:m}},S=Object.freeze({default:R}),T=S&&R||S;module.exports=T["default"]?T["default"]:T;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.1.1
 * react.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var _assign = __webpack_require__(3);
var invariant = __webpack_require__(4);
var emptyObject = __webpack_require__(5);
var warning = __webpack_require__(6);
var emptyFunction = __webpack_require__(2);
var checkPropTypes = __webpack_require__(7);

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.1.1';

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

// Exports React.Fragment
var enableReactFragment = false;
// Exports ReactDOM.createRoot



// Mutating mode (React DOM, React ART, React Native):

// Experimental noop mode (currently unused):

// Experimental persistent mode (CS):


// Only used in www builds.

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var constructor = publicInstance.constructor;
    var componentName = constructor && (constructor.displayName || constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function PureComponent(props, context, updater) {
  // Duplicated from Component.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;
var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
_assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

function AsyncComponent(props, context, updater) {
  // Duplicated from Component.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

var asyncComponentPrototype = AsyncComponent.prototype = new ComponentDummy();
asyncComponentPrototype.constructor = AsyncComponent;
// Avoid an extra prototype jump for these methods.
_assign(asyncComponentPrototype, Component.prototype);
asyncComponentPrototype.unstable_isAsyncReactComponent = true;
asyncComponentPrototype.render = function () {
  return this.props.children;
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var hasOwnProperty = Object.prototype.hasOwnProperty;

// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE$1 = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown;
var specialPropRefWarningShown;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE$1,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE$1) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE$1;
}

var ReactDebugCurrentFrame = {};

{
  // Component that is being worked on
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      return impl();
    }
    return null;
  };
}

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;
var REACT_PORTAL_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.portal') || 0xeaca;
var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE || type === 'object' && children.$$typeof === REACT_PORTAL_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'string') {
    return type;
  }
  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  return null;
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

{
  var currentlyValidatingElement = null;

  var getDisplayName = function (element) {
    if (element == null) {
      return '#empty';
    } else if (typeof element === 'string' || typeof element === 'number') {
      return '#text';
    } else if (typeof element.type === 'string') {
      return element.type;
    } else if (element.type === REACT_FRAGMENT_TYPE$1) {
      return 'React.Fragment';
    } else {
      return element.type.displayName || element.type.name || 'Unknown';
    }
  };

  var getStackAddendum = function () {
    var stack = '';
    if (currentlyValidatingElement) {
      var name = getDisplayName(currentlyValidatingElement);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
    }
    stack += ReactDebugCurrentFrame.getStackAddendum() || '';
    return stack;
  };

  var REACT_FRAGMENT_TYPE$1 = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.fragment') || 0xeacb;

  var VALID_FRAGMENT_PROPS = new Map([['children', true], ['key', true]]);
}

var ITERATOR_SYMBOL$1 = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL$1 = '@@iterator'; // Before Symbol spec.

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
  }

  currentlyValidatingElement = element;
  {
    warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());
  }
  currentlyValidatingElement = null;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = ITERATOR_SYMBOL$1 && node[ITERATOR_SYMBOL$1] || node[FAUX_ITERATOR_SYMBOL$1];
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  var propTypes = componentClass.propTypes;

  if (propTypes) {
    currentlyValidatingElement = element;
    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);
    currentlyValidatingElement = null;
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  currentlyValidatingElement = fragment;

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = Object.keys(fragment.props)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var key = _step.value;

      if (!VALID_FRAGMENT_PROPS.has(key)) {
        warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());
        break;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator['return']) {
        _iterator['return']();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  if (fragment.ref !== null) {
    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());
  }

  currentlyValidatingElement = null;
}

function createElementWithValidation(type, props, children) {
  var validType = typeof type === 'string' || typeof type === 'function' || typeof type === 'symbol' || typeof type === 'number';
  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    info += getStackAddendum() || '';

    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (typeof type === 'symbol' && type === REACT_FRAGMENT_TYPE$1) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  // Legacy hook TODO: Warn if this is accessed
  validatedFactory.type = type;

  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

var REACT_FRAGMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.fragment') || 0xeacb;

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  Component: Component,
  PureComponent: PureComponent,
  unstable_AsyncComponent: AsyncComponent,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    ReactCurrentOwner: ReactCurrentOwner,
    // Used by renderers to avoid bundling object-assign twice in UMD bundles:
    assign: _assign
  }
};

if (enableReactFragment) {
  React.Fragment = REACT_FRAGMENT_TYPE;
}

{
  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3['default'] ? React$3['default'] : React$3;

module.exports = react;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.1.1
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/
var aa=__webpack_require__(0),m=__webpack_require__(11),A=__webpack_require__(3),B=__webpack_require__(2),ca=__webpack_require__(12),da=__webpack_require__(13),ea=__webpack_require__(14),ha=__webpack_require__(15),ia=__webpack_require__(16),C=__webpack_require__(5);
function D(a){for(var b=arguments.length-1,c="Minified React error #"+a+"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d"+a,d=0;d<b;d++)c+="\x26args[]\x3d"+encodeURIComponent(arguments[d+1]);b=Error(c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name="Invariant Violation";b.framesToPop=1;throw b;}aa?void 0:D("227");
var la={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function qa(a,b){return(a&b)===b}
var ra={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ra,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){sa.hasOwnProperty(f)?D("48",f):void 0;var g=f.toLowerCase(),k=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:qa(k,b.MUST_USE_PROPERTY),
hasBooleanValue:qa(k,b.HAS_BOOLEAN_VALUE),hasNumericValue:qa(k,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:qa(k,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:qa(k,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:qa(k,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:D("50",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);sa[f]=g}}},sa={};
function ta(a,b){if(la.hasOwnProperty(a)||2<a.length&&("o"===a[0]||"O"===a[0])&&("n"===a[1]||"N"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case "boolean":return la.hasOwnProperty(a)?a=!0:(b=ua(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a="data-"===a||"aria-"===a),a;case "undefined":case "number":case "string":case "object":return!0;default:return!1}}function ua(a){return sa.hasOwnProperty(a)?sa[a]:null}
var va=ra,wa=va.MUST_USE_PROPERTY,H=va.HAS_BOOLEAN_VALUE,xa=va.HAS_NUMERIC_VALUE,ya=va.HAS_POSITIVE_NUMERIC_VALUE,za=va.HAS_OVERLOADED_BOOLEAN_VALUE,Aa=va.HAS_STRING_BOOLEAN_VALUE,Ba={Properties:{allowFullScreen:H,async:H,autoFocus:H,autoPlay:H,capture:za,checked:wa|H,cols:ya,contentEditable:Aa,controls:H,"default":H,defer:H,disabled:H,download:za,draggable:Aa,formNoValidate:H,hidden:H,loop:H,multiple:wa|H,muted:wa|H,noValidate:H,open:H,playsInline:H,readOnly:H,required:H,reversed:H,rows:ya,rowSpan:xa,
scoped:H,seamless:H,selected:wa|H,size:ya,start:xa,span:ya,spellCheck:Aa,style:0,tabIndex:0,itemScope:H,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Aa},DOMAttributeNames:{acceptCharset:"accept-charset",className:"class",htmlFor:"for",httpEquiv:"http-equiv"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute("value");"number"!==a.type||!1===a.hasAttribute("value")?a.setAttribute("value",""+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&
a.setAttribute("value",""+b)}}},Ca=va.HAS_STRING_BOOLEAN_VALUE,K={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"},Da={Properties:{autoReverse:Ca,externalResourcesRequired:Ca,preserveAlpha:Ca},DOMAttributeNames:{autoReverse:"autoReverse",externalResourcesRequired:"externalResourcesRequired",preserveAlpha:"preserveAlpha"},DOMAttributeNamespaces:{xlinkActuate:K.xlink,xlinkArcrole:K.xlink,xlinkHref:K.xlink,xlinkRole:K.xlink,xlinkShow:K.xlink,xlinkTitle:K.xlink,xlinkType:K.xlink,
xmlBase:K.xml,xmlLang:K.xml,xmlSpace:K.xml}},Ea=/[\-\:]([a-z])/g;function Ha(a){return a[1].toUpperCase()}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function(a){var b=a.replace(Ea,
Ha);Da.Properties[b]=0;Da.DOMAttributeNames[b]=a});va.injectDOMPropertyConfig(Ba);va.injectDOMPropertyConfig(Da);
var N={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){"function"!==typeof a.invokeGuardedCallback?D("197"):void 0;Ia=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,k,h){Ia.apply(N,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,k,h){N.invokeGuardedCallback.apply(this,arguments);if(N.hasCaughtError()){var r=N.clearCaughtError();N._hasRethrowError||(N._hasRethrowError=!0,N._rethrowError=
r)}},rethrowCaughtError:function(){return Ja.apply(N,arguments)},hasCaughtError:function(){return N._hasCaughtError},clearCaughtError:function(){if(N._hasCaughtError){var a=N._caughtError;N._caughtError=null;N._hasCaughtError=!1;return a}D("198")}};function Ia(a,b,c,d,e,f,g,k,h){N._hasCaughtError=!1;N._caughtError=null;var r=Array.prototype.slice.call(arguments,3);try{b.apply(c,r)}catch(n){N._caughtError=n,N._hasCaughtError=!0}}
function Ja(){if(N._hasRethrowError){var a=N._rethrowError;N._rethrowError=null;N._hasRethrowError=!1;throw a;}}var Ka=null,La={};
function Ma(){if(Ka)for(var a in La){var b=La[a],c=Ka.indexOf(a);-1<c?void 0:D("96",a);if(!Na[c]){b.extractEvents?void 0:D("97",a);Na[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,k=d;Oa.hasOwnProperty(k)?D("99",k):void 0;Oa[k]=f;var h=f.phasedRegistrationNames;if(h){for(e in h)h.hasOwnProperty(e)&&Pa(h[e],g,k);e=!0}else f.registrationName?(Pa(f.registrationName,g,k),e=!0):e=!1;e?void 0:D("98",d,a)}}}}
function Pa(a,b,c){Qa[a]?D("100",a):void 0;Qa[a]=b;Ra[a]=b.eventTypes[c].dependencies}var Na=[],Oa={},Qa={},Ra={};function Sa(a){Ka?D("101"):void 0;Ka=Array.prototype.slice.call(a);Ma()}function Ta(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];La.hasOwnProperty(c)&&La[c]===d||(La[c]?D("102",c):void 0,La[c]=d,b=!0)}b&&Ma()}
var Ua=Object.freeze({plugins:Na,eventNameDispatchConfigs:Oa,registrationNameModules:Qa,registrationNameDependencies:Ra,possibleRegistrationNames:null,injectEventPluginOrder:Sa,injectEventPluginsByName:Ta}),Va=null,Wa=null,Xa=null;function Ya(a,b,c,d){b=a.type||"unknown-event";a.currentTarget=Xa(d);N.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}
function Za(a,b){null==b?D("30"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function $a(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var ab=null;
function bb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Ya(a,b,c[e],d[e]);else c&&Ya(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function cb(a){return bb(a,!0)}function db(a){return bb(a,!1)}var ib={injectEventPluginOrder:Sa,injectEventPluginsByName:Ta};
function jb(a,b){var c=a.stateNode;if(!c)return null;var d=Va(c);if(!d)return null;c=d[b];a:switch(b){case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":(d=!d.disabled)||(a=a.type,d=!("button"===a||"input"===a||"select"===a||"textarea"===a));a=!d;break a;default:a=!1}if(a)return null;c&&"function"!==typeof c?D("231",b,typeof c):void 0;
return c}function kb(a,b,c,d){for(var e,f=0;f<Na.length;f++){var g=Na[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Za(e,g))}return e}function lb(a){a&&(ab=Za(ab,a))}function mb(a){var b=ab;ab=null;a?$a(b,cb):$a(b,db);ab?D("95"):void 0;N.rethrowCaughtError()}var nb=Object.freeze({injection:ib,getListener:jb,extractEvents:kb,enqueueEvents:lb,processEventQueue:mb}),ob=Math.random().toString(36).slice(2),O="__reactInternalInstance$"+ob,pb="__reactEventHandlers$"+ob;
function qb(a){if(a[O])return a[O];for(var b=[];!a[O];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[O];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[O]);a=b.pop())c=d;return c}function rb(a){if(5===a.tag||6===a.tag)return a.stateNode;D("33")}function sb(a){return a[pb]||null}
var tb=Object.freeze({precacheFiberNode:function(a,b){b[O]=a},getClosestInstanceFromNode:qb,getInstanceFromNode:function(a){a=a[O];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:rb,getFiberCurrentPropsFromNode:sb,updateFiberProps:function(a,b){a[pb]=b}});function Q(a){do a=a["return"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=Q(a);for(a=d.length;0<a--;)b(d[a],"captured",c);for(a=0;a<d.length;a++)b(d[a],"bubbled",c)}
function vb(a,b,c){if(b=jb(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Za(c._dispatchListeners,b),c._dispatchInstances=Za(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?Q(b):null;ub(b,vb,a)}}
function yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=jb(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Za(c._dispatchListeners,b),c._dispatchInstances=Za(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){$a(a,wb)}
function Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,k=e;k;k=Q(k))g++;k=0;for(var h=f;h;h=Q(h))k++;for(;0<g-k;)e=Q(e),g--;for(;0<k-g;)f=Q(f),k--;for(;g--;){if(e===f||e===f.alternate)break a;e=Q(e);f=Q(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=Q(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=Q(d)}for(d=0;d<e.length;d++)yb(e[d],"bubbled",a);for(a=c.length;0<a--;)yb(c[a],"captured",b)}
var Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){$a(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){$a(a,zb)}}),Db=null;function Eb(){!Db&&m.canUseDOM&&(Db="textContent"in document.documentElement?"textContent":"innerText");return Db}var R={_root:null,_startText:null,_fallbackText:null};
function Fb(){if(R._fallbackText)return R._fallbackText;var a,b=R._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);R._fallbackText=e.slice(a,1<d?1-d:void 0);return R._fallbackText}function Gb(){return"value"in R._root?R._root.value:R._root[Eb()]}
var Hb="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),Ib={type:null,target:null,currentTarget:B.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};
function S(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):"target"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?B.thatReturnsTrue:B.thatReturnsFalse;this.isPropagationStopped=B.thatReturnsFalse;return this}
A(S.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():"unknown"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=B.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():"unknown"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=B.thatReturnsTrue)},persist:function(){this.isPersistent=B.thatReturnsTrue},isPersistent:B.thatReturnsFalse,
destructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});S.Interface=Ib;S.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;A(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=A({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(S);function Qb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}
function Rb(a){a instanceof this?void 0:D("223");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Qb;a.release=Rb}function Sb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Sb,{data:null});function Tb(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Tb,{data:null});var Ub=[9,13,27,32],Vb=m.canUseDOM&&"CompositionEvent"in window,Wb=null;m.canUseDOM&&"documentMode"in document&&(Wb=document.documentMode);var Xb;
if(Xb=m.canUseDOM&&"TextEvent"in window&&!Wb){var Yb=window.opera;Xb=!("object"===typeof Yb&&"function"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}
var Zb=Xb,$b=m.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["topCompositionEnd","topKeyPress","topTextInput","topPaste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",
captured:"onCompositionStartCapture"},dependencies:"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ")}},cc=!1;
function dc(a,b){switch(a){case "topKeyUp":return-1!==Ub.indexOf(b.keyCode);case "topKeyDown":return 229!==b.keyCode;case "topKeyPress":case "topMouseDown":case "topBlur":return!0;default:return!1}}function ec(a){a=a.detail;return"object"===typeof a&&"data"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case "topCompositionEnd":return ec(b);case "topKeyPress":if(32!==b.which)return null;cc=!0;return ac;case "topTextInput":return a=b.data,a===ac&&cc?null:a;default:return null}}
function hc(a,b){if(fc)return"topCompositionEnd"===a||!Vb&&dc(a,b)?(a=Fb(),R._root=null,R._startText=null,R._fallbackText=null,fc=!1,a):null;switch(a){case "topPaste":return null;case "topKeyPress":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case "topCompositionEnd":return $b?null:b.data;default:return null}}
var ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case "topCompositionStart":var f=bc.compositionStart;break b;case "topCompositionEnd":f=bc.compositionEnd;break b;case "topCompositionUpdate":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):"topKeyDown"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(R._root=d,R._startText=Gb(),fc=!0)),f=Sb.getPooled(f,b,c,d),e?f.data=
e:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Tb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Wa(a)){jc&&"function"===typeof jc.restoreControlledState?void 0:D("194");var b=Va(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}
function pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};
function vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return"input"===b?!!uc[a.type]:"textarea"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;m.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature("",""));
function yc(a,b){if(!m.canUseDOM||b&&!("addEventListener"in document))return!1;b="on"+a;var c=b in document;c||(c=document.createElement("div"),c.setAttribute(b,"return;"),c="function"===typeof c[b]);!c&&xc&&"wheel"===a&&(c=document.implementation.hasFeature("Events.wheel","3.0"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===b||"radio"===b)}
function Ac(a){var b=zc(a)?"checked":"value",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=""+a[b];if(!a.hasOwnProperty(b)&&"function"===typeof c.get&&"function"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=""+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=""+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}
function Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d="";a&&(d=zc(a)?a.checked?"true":"false":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ")}};
function Ec(a,b,c){a=S.getPooled(Dc.change,a,b,c);a.type="change";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){lb(a);mb(!1)}function Ic(a){var b=rb(a);if(Cc(b))return a}function Jc(a,b){if("topChange"===a)return b}var Qc=!1;m.canUseDOM&&(Qc=yc("input")&&(!document.documentMode||9<document.documentMode));function Rc(){Fc&&(Fc.detachEvent("onpropertychange",Sc),Gc=Fc=null)}function Sc(a){"value"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}
function Tc(a,b,c){"topFocus"===a?(Rc(),Fc=b,Gc=c,Fc.attachEvent("onpropertychange",Sc)):"topBlur"===a&&Rc()}function Uc(a){if("topSelectionChange"===a||"topKeyUp"===a||"topKeyDown"===a)return Ic(Gc)}function Vc(a,b){if("topClick"===a)return Ic(b)}function Wc(a,b){if("topInput"===a||"topChange"===a)return Ic(b)}
var Xc={eventTypes:Dc,_isInputEventSupported:Qc,extractEvents:function(a,b,c,d){var e=b?rb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if("select"===f||"input"===f&&"file"===e.type)var g=Jc;else if(vc(e))if(Qc)g=Wc;else{g=Uc;var k=Tc}else f=e.nodeName,!f||"input"!==f.toLowerCase()||"checkbox"!==e.type&&"radio"!==e.type||(g=Vc);if(g&&(g=g(a,b)))return Ec(g,c,d);k&&k(a,e,b);"topBlur"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&"number"===e.type&&(a=""+e.value,e.getAttribute("value")!==
a&&e.setAttribute("value",a))}};function Yc(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Yc,{view:null,detail:null});var Zc={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function $c(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Zc[a])?!!b[a]:!1}function ad(){return $c}function bd(a,b,c,d){return S.call(this,a,b,c,d)}
Yc.augmentClass(bd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ad,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});
var cd={mouseEnter:{registrationName:"onMouseEnter",dependencies:["topMouseOut","topMouseOver"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["topMouseOut","topMouseOver"]}},dd={eventTypes:cd,extractEvents:function(a,b,c,d){if("topMouseOver"===a&&(c.relatedTarget||c.fromElement)||"topMouseOut"!==a&&"topMouseOver"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;"topMouseOut"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?qb(b):null):a=null;if(a===
b)return null;var f=null==a?e:rb(a);e=null==b?e:rb(b);var g=bd.getPooled(cd.mouseLeave,a,c,d);g.type="mouseleave";g.target=f;g.relatedTarget=e;c=bd.getPooled(cd.mouseEnter,b,c,d);c.type="mouseenter";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},ed=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function fd(a){a=a.type;return"string"===typeof a?a:"function"===typeof a?a.displayName||a.name:null}
function gd(a){var b=a;if(a.alternate)for(;b["return"];)b=b["return"];else{if(0!==(b.effectTag&2))return 1;for(;b["return"];)if(b=b["return"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function hd(a){return(a=a._reactInternalFiber)?2===gd(a):!1}function id(a){2!==gd(a)?D("188"):void 0}
function jd(a){var b=a.alternate;if(!b)return b=gd(a),3===b?D("188"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c["return"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return id(e),a;if(g===d)return id(e),b;g=g.sibling}D("188")}if(c["return"]!==d["return"])c=e,d=f;else{g=!1;for(var k=e.child;k;){if(k===c){g=!0;c=e;d=f;break}if(k===d){g=!0;d=e;c=f;break}k=k.sibling}if(!g){for(k=f.child;k;){if(k===c){g=!0;c=f;d=e;break}if(k===d){g=!0;d=f;c=e;break}k=k.sibling}g?
void 0:D("189")}}c.alternate!==d?D("190"):void 0}3!==c.tag?D("188"):void 0;return c.stateNode.current===c?a:b}function kd(a){a=jd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}
function ld(a){a=jd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child["return"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b["return"]||b["return"]===a)return null;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}}return null}var md=[];
function nd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c["return"];)c=c["return"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=qb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],od(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var pd=!0,od=void 0;function qd(a){pd=!!a}function U(a,b,c){return c?ca.listen(c,b,rd.bind(null,a)):null}function sd(a,b,c){return c?ca.capture(c,b,rd.bind(null,a)):null}
function rd(a,b){if(pd){var c=wc(b);c=qb(c);null===c||"number"!==typeof c.tag||2===gd(c)||(c=null);if(md.length){var d=md.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(nd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>md.length&&md.push(a)}}}
var td=Object.freeze({get _enabled(){return pd},get _handleTopLevel(){return od},setHandleTopLevel:function(a){od=a},setEnabled:qd,isEnabled:function(){return pd},trapBubbledEvent:U,trapCapturedEvent:sd,dispatchEvent:rd});function ud(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c["Webkit"+a]="webkit"+b;c["Moz"+a]="moz"+b;c["ms"+a]="MS"+b;c["O"+a]="o"+b.toLowerCase();return c}
var vd={animationend:ud("Animation","AnimationEnd"),animationiteration:ud("Animation","AnimationIteration"),animationstart:ud("Animation","AnimationStart"),transitionend:ud("Transition","TransitionEnd")},wd={},xd={};m.canUseDOM&&(xd=document.createElement("div").style,"AnimationEvent"in window||(delete vd.animationend.animation,delete vd.animationiteration.animation,delete vd.animationstart.animation),"TransitionEvent"in window||delete vd.transitionend.transition);
function yd(a){if(wd[a])return wd[a];if(!vd[a])return a;var b=vd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in xd)return wd[a]=b[c];return""}
var zd={topAbort:"abort",topAnimationEnd:yd("animationend")||"animationend",topAnimationIteration:yd("animationiteration")||"animationiteration",topAnimationStart:yd("animationstart")||"animationstart",topBlur:"blur",topCancel:"cancel",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topChange:"change",topClick:"click",topClose:"close",topCompositionEnd:"compositionend",topCompositionStart:"compositionstart",topCompositionUpdate:"compositionupdate",topContextMenu:"contextmenu",topCopy:"copy",
topCut:"cut",topDoubleClick:"dblclick",topDrag:"drag",topDragEnd:"dragend",topDragEnter:"dragenter",topDragExit:"dragexit",topDragLeave:"dragleave",topDragOver:"dragover",topDragStart:"dragstart",topDrop:"drop",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topFocus:"focus",topInput:"input",topKeyDown:"keydown",topKeyPress:"keypress",topKeyUp:"keyup",topLoadedData:"loadeddata",topLoad:"load",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",
topMouseDown:"mousedown",topMouseMove:"mousemove",topMouseOut:"mouseout",topMouseOver:"mouseover",topMouseUp:"mouseup",topPaste:"paste",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topScroll:"scroll",topSeeked:"seeked",topSeeking:"seeking",topSelectionChange:"selectionchange",topStalled:"stalled",topSuspend:"suspend",topTextInput:"textInput",topTimeUpdate:"timeupdate",topToggle:"toggle",topTouchCancel:"touchcancel",topTouchEnd:"touchend",topTouchMove:"touchmove",
topTouchStart:"touchstart",topTransitionEnd:yd("transitionend")||"transitionend",topVolumeChange:"volumechange",topWaiting:"waiting",topWheel:"wheel"},Ad={},Bd=0,Cd="_reactListenersID"+(""+Math.random()).slice(2);function Dd(a){Object.prototype.hasOwnProperty.call(a,Cd)||(a[Cd]=Bd++,Ad[a[Cd]]={});return Ad[a[Cd]]}function Ed(a){for(;a&&a.firstChild;)a=a.firstChild;return a}
function Fd(a,b){var c=Ed(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ed(c)}}function Gd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&("input"===b&&"text"===a.type||"textarea"===b||"true"===a.contentEditable)}
var Hd=m.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Id={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ")}},Jd=null,Kd=null,Ld=null,Md=!1;
function Nd(a,b){if(Md||null==Jd||Jd!==da())return null;var c=Jd;"selectionStart"in c&&Gd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Ld&&ea(Ld,c)?null:(Ld=c,a=S.getPooled(Id.select,Kd,a,b),a.type="select",a.target=Jd,Ab(a),a)}
var Od={eventTypes:Id,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Dd(e);f=Ra.onSelect;for(var g=0;g<f.length;g++){var k=f[g];if(!e.hasOwnProperty(k)||!e[k]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?rb(b):window;switch(a){case "topFocus":if(vc(e)||"true"===e.contentEditable)Jd=e,Kd=b,Ld=null;break;case "topBlur":Ld=Kd=Jd=null;break;case "topMouseDown":Md=!0;break;case "topContextMenu":case "topMouseUp":return Md=!1,Nd(c,d);case "topSelectionChange":if(Hd)break;
case "topKeyDown":case "topKeyUp":return Nd(c,d)}return null}};function Pd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Pd,{animationName:null,elapsedTime:null,pseudoElement:null});function Qd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Qd,{clipboardData:function(a){return"clipboardData"in a?a.clipboardData:window.clipboardData}});function Rd(a,b,c,d){return S.call(this,a,b,c,d)}Yc.augmentClass(Rd,{relatedTarget:null});
function Sd(a){var b=a.keyCode;"charCode"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}
var Td={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ud={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",
116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"};function Vd(a,b,c,d){return S.call(this,a,b,c,d)}
Yc.augmentClass(Vd,{key:function(a){if(a.key){var b=Td[a.key]||a.key;if("Unidentified"!==b)return b}return"keypress"===a.type?(a=Sd(a),13===a?"Enter":String.fromCharCode(a)):"keydown"===a.type||"keyup"===a.type?Ud[a.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ad,charCode:function(a){return"keypress"===a.type?Sd(a):0},keyCode:function(a){return"keydown"===a.type||"keyup"===a.type?a.keyCode:0},which:function(a){return"keypress"===
a.type?Sd(a):"keydown"===a.type||"keyup"===a.type?a.keyCode:0}});function Wd(a,b,c,d){return S.call(this,a,b,c,d)}bd.augmentClass(Wd,{dataTransfer:null});function Xd(a,b,c,d){return S.call(this,a,b,c,d)}Yc.augmentClass(Xd,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ad});function Yd(a,b,c,d){return S.call(this,a,b,c,d)}S.augmentClass(Yd,{propertyName:null,elapsedTime:null,pseudoElement:null});
function Zd(a,b,c,d){return S.call(this,a,b,c,d)}bd.augmentClass(Zd,{deltaX:function(a){return"deltaX"in a?a.deltaX:"wheelDeltaX"in a?-a.wheelDeltaX:0},deltaY:function(a){return"deltaY"in a?a.deltaY:"wheelDeltaY"in a?-a.wheelDeltaY:"wheelDelta"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var $d={},ae={};
"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function(a){var b=a[0].toUpperCase()+
a.slice(1),c="on"+b;b="top"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+"Capture"},dependencies:[b]};$d[a]=c;ae[b]=c});
var be={eventTypes:$d,extractEvents:function(a,b,c,d){var e=ae[a];if(!e)return null;switch(a){case "topKeyPress":if(0===Sd(c))return null;case "topKeyDown":case "topKeyUp":a=Vd;break;case "topBlur":case "topFocus":a=Rd;break;case "topClick":if(2===c.button)return null;case "topDoubleClick":case "topMouseDown":case "topMouseMove":case "topMouseUp":case "topMouseOut":case "topMouseOver":case "topContextMenu":a=bd;break;case "topDrag":case "topDragEnd":case "topDragEnter":case "topDragExit":case "topDragLeave":case "topDragOver":case "topDragStart":case "topDrop":a=
Wd;break;case "topTouchCancel":case "topTouchEnd":case "topTouchMove":case "topTouchStart":a=Xd;break;case "topAnimationEnd":case "topAnimationIteration":case "topAnimationStart":a=Pd;break;case "topTransitionEnd":a=Yd;break;case "topScroll":a=Yc;break;case "topWheel":a=Zd;break;case "topCopy":case "topCut":case "topPaste":a=Qd;break;default:a=S}b=a.getPooled(e,b,c,d);Ab(b);return b}};od=function(a,b,c,d){a=kb(a,b,c,d);lb(a);mb(!1)};ib.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
Va=tb.getFiberCurrentPropsFromNode;Wa=tb.getInstanceFromNode;Xa=tb.getNodeFromInstance;ib.injectEventPluginsByName({SimpleEventPlugin:be,EnterLeaveEventPlugin:dd,ChangeEventPlugin:Xc,SelectEventPlugin:Od,BeforeInputEventPlugin:ic});var ce=[],de=-1;function V(a){0>de||(a.current=ce[de],ce[de]=null,de--)}function W(a,b){de++;ce[de]=a.current;a.current=b}new Set;var ee={current:C},X={current:!1},fe=C;function ge(a){return he(a)?fe:ee.current}
function ie(a,b){var c=a.type.contextTypes;if(!c)return C;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function he(a){return 2===a.tag&&null!=a.type.childContextTypes}function je(a){he(a)&&(V(X,a),V(ee,a))}
function ke(a,b,c){null!=ee.cursor?D("168"):void 0;W(ee,b,a);W(X,c,a)}function le(a,b){var c=a.stateNode,d=a.type.childContextTypes;if("function"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:D("108",fd(a)||"Unknown",e);return A({},b,c)}function me(a){if(!he(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||C;fe=ee.current;W(ee,b,a);W(X,X.current,a);return!0}
function ne(a,b){var c=a.stateNode;c?void 0:D("169");if(b){var d=le(a,fe);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ee,a);W(ee,d,a)}else V(X,a);W(X,b,a)}
function Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this["return"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}
function oe(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}
function pe(a,b,c){var d=void 0,e=a.type,f=a.key;"function"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):"string"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):"object"===typeof e&&null!==e&&"number"===typeof e.tag?(d=e,d.pendingProps=a.props):D("130",null==e?e:typeof e,"");d.expirationTime=c;return d}function qe(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}
function re(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function se(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function te(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ue(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ve=null,we=null;
function xe(a){return function(b){try{return a(b)}catch(c){}}}function ye(a){if("undefined"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ve=xe(function(a){return b.onCommitFiberRoot(c,a)});we=xe(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function ze(a){"function"===typeof ve&&ve(a)}function Ae(a){"function"===typeof we&&we(a)}
function Be(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ce(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}
function De(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Be(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Be(null))):a=null;a=a!==d?a:null;null===a?Ce(d,b):null===d.last||null===a.last?(Ce(d,b),Ce(a,b)):(Ce(d,b),a.last=b)}function Ee(a,b,c,d){a=a.partialState;return"function"===typeof a?a.call(b,c,d):a}
function Le(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,k=c.first,h=!1;null!==k;){var r=k.expirationTime;if(r>f){var n=c.expirationTime;if(0===n||n>r)c.expirationTime=r;h||(h=!0,c.baseState=a)}else{h||(c.first=k.next,null===
c.first&&(c.last=null));if(k.isReplace)a=Ee(k,d,a,e),g=!0;else if(r=Ee(k,d,a,e))a=g?A({},a,r):A(a,r),g=!1;k.isForced&&(c.hasForceUpdate=!0);null!==k.callback&&(r=c.callbackList,null===r&&(r=c.callbackList=[]),r.push(k))}k=k.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);h||(c.baseState=a);return a}
function Me(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;"function"!==typeof e?D("191",e):void 0;e.call(b)}}
function Ne(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:hd,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);De(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var f=b(c);De(c,{expirationTime:f,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});
a(c,f)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);De(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ge(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?ie(a,d):C;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,
b){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:D("158");var k=ge(a);d.props=g;d.state=a.memoizedState=e;d.refs=C;d.context=ie(a,k);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);"function"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Le(c,a,e,d,g,b)));"function"===typeof d.componentDidMount&&(a.effectTag|=
4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var k=b.memoizedProps,h=b.pendingProps;h||(h=k,null==h?D("159"):void 0);var u=g.context,x=ge(b);x=ie(b,x);"function"!==typeof g.componentWillReceiveProps||k===h&&u===x||(u=g.state,g.componentWillReceiveProps(h,x),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Le(a,b,b.updateQueue,g,h,e):u;if(!(k!==h||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return"function"!==
typeof g.componentDidUpdate||k===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var F=h;if(null===k||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)F=!0;else{var L=b.stateNode,G=b.type;F="function"===typeof L.shouldComponentUpdate?L.shouldComponentUpdate(F,e,x):G.prototype&&G.prototype.isPureReactComponent?!ea(k,F)||!ea(u,e):!0}F?("function"===typeof g.componentWillUpdate&&g.componentWillUpdate(h,e,x),"function"===typeof g.componentDidUpdate&&(b.effectTag|=4)):("function"!==typeof g.componentDidUpdate||
k===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,h),d(b,e));g.props=h;g.state=e;g.context=x;return F}}}var Oe="function"===typeof Symbol&&Symbol["for"]&&Symbol["for"]("react.portal")||60106;function Pe(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Oe,key:null==d?null:""+d,children:a,containerInfo:b,implementation:c}}var Qe=Array.isArray,Re="function"===typeof Symbol&&Symbol.iterator,Se,Te,Ue,Ve;
"function"===typeof Symbol&&Symbol["for"]?(Se=Symbol["for"]("react.element"),Te=Symbol["for"]("react.call"),Ue=Symbol["for"]("react.return"),Ve=Symbol["for"]("react.fragment")):(Se=60103,Te=60104,Ue=60105,Ve=60107);function We(a){if(null===a||"undefined"===typeof a)return null;a=Re&&a[Re]||a["@@iterator"];return"function"===typeof a?a:null}
function Xe(a,b){var c=b.ref;if(null!==c&&"function"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?D("110"):void 0,d=b.stateNode);d?void 0:D("147",c);var e=""+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===C?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}"string"!==typeof c?D("148"):void 0;b._owner?void 0:D("149",c)}return c}
function Ye(a,b){"textarea"!==a.type&&D("31","[object Object]"===Object.prototype.toString.call(b)?"object with keys {"+Object.keys(b).join(", ")+"}":b,"")}
function Ze(a,b){function c(c,d){if(b){if(!a){if(null===d.alternate)return;d=d.alternate}var p=c.lastEffect;null!==p?(p.nextEffect=d,c.lastEffect=d):c.firstEffect=c.lastEffect=d;d.nextEffect=null;d.effectTag=8}}function d(a,d){if(!b)return null;for(;null!==d;)c(a,d),d=d.sibling;return null}function e(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function f(b,c,d){if(a)return b=oe(b,c,d),b.index=0,b.sibling=null,b;b.expirationTime=d;b.effectTag=0;b.index=
0;b.sibling=null;b.pendingProps=c;return b}function g(a,c,d){a.index=d;if(!b)return c;d=a.alternate;if(null!==d)return d=d.index,d<c?(a.effectTag=2,c):d;a.effectTag=2;return c}function k(a){b&&null===a.alternate&&(a.effectTag=2);return a}function h(a,b,c,d){if(null===b||6!==b.tag)return b=re(c,a.internalContextTag,d),b["return"]=a,b;b=f(b,c,d);b["return"]=a;return b}function r(a,b,c,d){if(null!==b&&b.type===c.type)return d=f(b,c.props,d),d.ref=Xe(b,c),d["return"]=a,d;d=pe(c,a.internalContextTag,d);
d.ref=Xe(b,c);d["return"]=a;return d}function n(a,b,c,d){if(null===b||7!==b.tag)return b=se(c,a.internalContextTag,d),b["return"]=a,b;b=f(b,c,d);b["return"]=a;return b}function y(a,b,c,d){if(null===b||9!==b.tag)return b=te(c,a.internalContextTag,d),b.type=c.value,b["return"]=a,b;b=f(b,null,d);b.type=c.value;b["return"]=a;return b}function u(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ue(c,a.internalContextTag,
d),b["return"]=a,b;b=f(b,c.children||[],d);b["return"]=a;return b}function x(a,b,c,d,e){if(null===b||10!==b.tag)return b=qe(c,a.internalContextTag,d,e),b["return"]=a,b;b=f(b,c,d);b["return"]=a;return b}function F(a,b,c){if("string"===typeof b||"number"===typeof b)return b=re(""+b,a.internalContextTag,c),b["return"]=a,b;if("object"===typeof b&&null!==b){switch(b.$$typeof){case Se:if(b.type===Ve)return b=qe(b.props.children,a.internalContextTag,c,b.key),b["return"]=a,b;c=pe(b,a.internalContextTag,c);
c.ref=Xe(null,b);c["return"]=a;return c;case Te:return b=se(b,a.internalContextTag,c),b["return"]=a,b;case Ue:return c=te(b,a.internalContextTag,c),c.type=b.value,c["return"]=a,c;case Oe:return b=ue(b,a.internalContextTag,c),b["return"]=a,b}if(Qe(b)||We(b))return b=qe(b,a.internalContextTag,c,null),b["return"]=a,b;Ye(a,b)}return null}function L(a,b,c,d){var e=null!==b?b.key:null;if("string"===typeof c||"number"===typeof c)return null!==e?null:h(a,b,""+c,d);if("object"===typeof c&&null!==c){switch(c.$$typeof){case Se:return c.key===
e?c.type===Ve?x(a,b,c.props.children,d,e):r(a,b,c,d):null;case Te:return c.key===e?n(a,b,c,d):null;case Ue:return null===e?y(a,b,c,d):null;case Oe:return c.key===e?u(a,b,c,d):null}if(Qe(c)||We(c))return null!==e?null:x(a,b,c,d,null);Ye(a,c)}return null}function G(a,b,c,d,e){if("string"===typeof d||"number"===typeof d)return a=a.get(c)||null,h(b,a,""+d,e);if("object"===typeof d&&null!==d){switch(d.$$typeof){case Se:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?x(b,a,d.props.children,e,d.key):
r(b,a,d,e);case Te:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e);case Ue:return a=a.get(c)||null,y(b,a,d,e);case Oe:return a=a.get(null===d.key?c:d.key)||null,u(b,a,d,e)}if(Qe(d)||We(d))return a=a.get(c)||null,x(b,a,d,e,null);Ye(b,d)}return null}function T(a,f,v,k){for(var p=null,z=null,l=f,h=f=0,t=null;null!==l&&h<v.length;h++){l.index>h?(t=l,l=null):t=l.sibling;var w=L(a,l,v[h],k);if(null===w){null===l&&(l=t);break}b&&l&&null===w.alternate&&c(a,l);f=g(w,f,h);null===z?p=w:z.sibling=w;z=w;
l=t}if(h===v.length)return d(a,l),p;if(null===l){for(;h<v.length;h++)if(l=F(a,v[h],k))f=g(l,f,h),null===z?p=l:z.sibling=l,z=l;return p}for(l=e(a,l);h<v.length;h++)if(t=G(l,a,h,v[h],k)){if(b&&null!==t.alternate)l["delete"](null===t.key?h:t.key);f=g(t,f,h);null===z?p=t:z.sibling=t;z=t}b&&l.forEach(function(b){return c(a,b)});return p}function I(a,f,v,k){var p=We(v);"function"!==typeof p?D("150"):void 0;v=p.call(v);null==v?D("151"):void 0;for(var h=p=null,l=f,z=f=0,t=null,w=v.next();null!==l&&!w.done;z++,
w=v.next()){l.index>z?(t=l,l=null):t=l.sibling;var n=L(a,l,w.value,k);if(null===n){l||(l=t);break}b&&l&&null===n.alternate&&c(a,l);f=g(n,f,z);null===h?p=n:h.sibling=n;h=n;l=t}if(w.done)return d(a,l),p;if(null===l){for(;!w.done;z++,w=v.next())w=F(a,w.value,k),null!==w&&(f=g(w,f,z),null===h?p=w:h.sibling=w,h=w);return p}for(l=e(a,l);!w.done;z++,w=v.next())if(w=G(l,a,z,w.value,k),null!==w){if(b&&null!==w.alternate)l["delete"](null===w.key?z:w.key);f=g(w,f,z);null===h?p=w:h.sibling=w;h=w}b&&l.forEach(function(b){return c(a,
b)});return p}return function(a,b,e,g){var h="object"===typeof e&&null!==e;if(h)switch(e.$$typeof){case Se:a:{var v=e.key;for(h=b;null!==h;){if(h.key===v)if(10===h.tag?e.type===Ve:h.type===e.type){d(a,h.sibling);b=f(h,e.type===Ve?e.props.children:e.props,g);b.ref=Xe(h,e);b["return"]=a;a=b;break a}else{d(a,h);break}else c(a,h);h=h.sibling}e.type===Ve?(e=qe(e.props.children,a.internalContextTag,g,e.key),e["return"]=a,a=e):(g=pe(e,a.internalContextTag,g),g.ref=Xe(b,e),g["return"]=a,a=g)}return k(a);
case Te:a:{for(h=e.key;null!==b;){if(b.key===h)if(7===b.tag){d(a,b.sibling);e=f(b,e,g);e["return"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=se(e,a.internalContextTag,g);e["return"]=a;a=e}return k(a);case Ue:a:{if(null!==b)if(9===b.tag){d(a,b.sibling);b=f(b,null,g);b.type=e.value;b["return"]=a;a=b;break a}else d(a,b);b=te(e,a.internalContextTag,g);b.type=e.value;b["return"]=a;a=b}return k(a);case Oe:a:{for(h=e.key;null!==b;){if(b.key===h)if(4===b.tag&&b.stateNode.containerInfo===e.containerInfo&&
b.stateNode.implementation===e.implementation){d(a,b.sibling);e=f(b,e.children||[],g);e["return"]=a;a=e;break a}else{d(a,b);break}else c(a,b);b=b.sibling}e=ue(e,a.internalContextTag,g);e["return"]=a;a=e}return k(a)}if("string"===typeof e||"number"===typeof e)return e=""+e,null!==b&&6===b.tag?(d(a,b.sibling),e=f(b,e,g)):(d(a,b),e=re(e,a.internalContextTag,g)),e["return"]=a,a=e,k(a);if(Qe(e))return T(a,b,e,g);if(We(e))return I(a,b,e,g);h&&Ye(a,e);if("undefined"===typeof e)switch(a.tag){case 2:case 1:e=
a.type,D("152",e.displayName||e.name||"Component")}return d(a,b)}}var $e=Ze(!0,!0),af=Ze(!1,!0),bf=Ze(!1,!1);
function cf(a,b,c,d,e){function f(a,b,c){g(a,b,c,b.expirationTime)}function g(a,b,c,d){b.child=null===a?bf(b,b.child,c,d):a.child===b.child?$e(b,b.child,c,d):af(b,b.child,c,d)}function k(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){k(a,b);if(!c)return d&&ne(b,!1),n(a,b);c=b.stateNode;ed.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&ne(b,!0);return b.child}function r(a){var b=a.stateNode;b.pendingContext?ke(a,
b.pendingContext,b.pendingContext!==b.context):b.context&&ke(a,b.context,!1);G(a,b.containerInfo)}function n(a,b){null!==a&&b.child!==a.child?D("153"):void 0;if(null!==b.child){a=b.child;var c=oe(a,a.pendingProps,a.expirationTime);b.child=c;for(c["return"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=oe(a,a.pendingProps,a.expirationTime),c["return"]=b;c.sibling=null}return b.child}function y(a,b){switch(b.tag){case 3:r(b);break;case 2:me(b);break;case 4:G(b,b.stateNode.containerInfo)}return null}var u=
a.shouldSetTextContent,x=a.useSyncScheduling,F=a.shouldDeprioritizeSubtree,L=b.pushHostContext,G=b.pushHostContainer,T=c.enterHydrationState,I=c.resetHydrationState,z=c.tryToClaimNextHydratableInstance;a=Ne(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var p=a.adoptClassInstance,v=a.constructClassInstance,t=a.mountClassInstance,Kb=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return y(a,b);switch(b.tag){case 0:null!==a?
D("155"):void 0;var d=b.type,e=b.pendingProps,g=ge(b);g=ie(b,g);d=d(e,g);b.effectTag|=1;"object"===typeof d&&null!==d&&"function"===typeof d.render?(b.tag=2,e=me(b),p(b,d),t(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=n(a,b);break a}d=ge(b);d=ie(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=me(b),d=void 0,null===
a?b.stateNode?D("153"):(v(b,b.pendingProps),t(b,c),d=!0):d=Kb(a,b,c),h(a,b,d,e);case 3:return r(b),e=b.updateQueue,null!==e?(d=b.memoizedState,e=Le(a,b,e,null,null,c),d===e?(I(),b=n(a,b)):(d=e.element,g=b.stateNode,(null===a||null===a.child)&&g.hydrate&&T(b)?(b.effectTag|=2,b.child=bf(b,b.child,d,c)):(I(),f(a,b,d)),b.memoizedState=e,b=b.child)):(I(),b=n(a,b)),b;case 5:L(b);null===a&&z(b);e=b.type;var l=b.memoizedProps;d=b.pendingProps;null===d&&(d=l,null===d?D("154"):void 0);g=null!==a?a.memoizedProps:
null;X.current||null!==d&&l!==d?(l=d.children,u(e,d)?l=null:g&&u(e,g)&&(b.effectTag|=16),k(a,b),2147483647!==c&&!x&&F(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,l),b.memoizedProps=d,b=b.child)):b=n(a,b);return b;case 6:return null===a&&z(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?D("154"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=
null===a?bf(b,b.stateNode,d,c):a.child===b.child?$e(b,b.stateNode,d,c):af(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;case 9:return null;case 4:a:{G(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?D("154"):void 0);else if(null===e||b.memoizedProps===e){b=n(a,b);break a}null===a?b.child=af(b,b.child,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||
b.memoizedProps===c){b=n(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:D("156")}},beginFailedWork:function(a,b,c){switch(b.tag){case 2:me(b);break;case 3:r(b);break;default:D("157")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return y(a,b);b.firstEffect=null;b.lastEffect=null;g(a,b,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}
function df(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,k=a.finalizeInitialChildren,h=a.prepareUpdate,r=a.persistence,n=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,x=b.popHostContainer,F=c.prepareToHydrateHostInstance,L=c.prepareToHydrateHostTextInstance,G=c.popHydrationState,T=void 0,I=void 0,z=void 0;a.mutation?(T=function(){},I=function(a,b,c){(b.updateQueue=c)&&d(b)},z=function(a,b,c,e){c!==e&&d(b)}):r?D("235"):D("236");
return{completeWork:function(a,b,c){var p=b.pendingProps;if(null===p)p=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return je(b),null;case 3:x(b);V(X,b);V(ee,b);p=b.stateNode;p.pendingContext&&(p.context=p.pendingContext,p.pendingContext=null);if(null===a||null===a.child)G(b),b.effectTag&=-3;T(b);return null;case 5:y(b);c=n();var v=b.type;if(null!==a&&null!=b.stateNode){var l=a.memoizedProps,t=b.stateNode,r=u();t=
h(t,v,l,p,c,r);I(a,b,t,v,l,p,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!p)return null===b.stateNode?D("166"):void 0,null;a=u();if(G(b))F(b,c,a)&&d(b);else{a=e(v,p,c,a,b);a:for(l=b.child;null!==l;){if(5===l.tag||6===l.tag)g(a,l.stateNode);else if(4!==l.tag&&null!==l.child){l.child["return"]=l;l=l.child;continue}if(l===b)break;for(;null===l.sibling;){if(null===l["return"]||l["return"]===b)break a;l=l["return"]}l.sibling["return"]=l["return"];l=l.sibling}k(a,v,p,c)&&d(b);b.stateNode=a}null!==b.ref&&
(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)z(a,b,a.memoizedProps,p);else{if("string"!==typeof p)return null===b.stateNode?D("166"):void 0,null;a=n();c=u();G(b)?L(b)&&d(b):b.stateNode=f(p,a,c,b)}return null;case 7:(p=b.memoizedProps)?void 0:D("165");b.tag=8;v=[];a:for((l=b.stateNode)&&(l["return"]=b);null!==l;){if(5===l.tag||6===l.tag||4===l.tag)D("247");else if(9===l.tag)v.push(l.type);else if(null!==l.child){l.child["return"]=l;l=l.child;continue}for(;null===l.sibling;){if(null===
l["return"]||l["return"]===b)break a;l=l["return"]}l.sibling["return"]=l["return"];l=l.sibling}l=p.handler;p=l(p.props,v);b.child=$e(b,null!==a?a.child:null,p,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return x(b),T(b),null;case 0:D("167");default:D("156")}}}}
function ef(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(v){b(a,v)}}function d(a){"function"===typeof Ae&&Ae(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if("function"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(v){b(a,v)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:h&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||h&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||
b["return"]===a)return;b=b["return"]}b.sibling["return"]=b["return"];b=b.sibling}else b.child["return"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b["return"];a:for(;;){null===c?D("160"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c["return"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?I(f,b.stateNode):T(f,b.stateNode);
else if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child["return"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b["return"]||b["return"]===a)return;b=b["return"];4===b.tag&&(c=!1)}b.sibling["return"]=b["return"];b=b.sibling}}var k=a.getPublicInstance,h=a.mutation;a=a.persistence;h||(a?D("235"):D("236"));var r=h.commitMount,n=h.commitUpdate,y=h.resetTextContent,u=h.commitTextUpdate,x=h.appendChild,F=h.appendChildToContainer,L=h.insertBefore,G=h.insertInContainerBefore,
T=h.removeChild,I=h.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a["return"];null!==b;){if(f(b)){var c=b;break a}b=b["return"]}D("160");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:D("161")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c["return"]||f(c["return"])){c=
null;break a}c=c["return"]}c.sibling["return"]=c["return"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child["return"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?G(b,e.stateNode,c):L(b,e.stateNode,c):d?F(b,e.stateNode):x(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child["return"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e["return"]||e["return"]===
a)return;e=e["return"]}e.sibling["return"]=e["return"];e=e.sibling}},commitDeletion:function(a){g(a);a["return"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate["return"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&n(c,f,e,a,d,b)}break;case 6:null===b.stateNode?D("162"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:
c,c);break;case 3:break;default:D("163")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Me(b,c);break;case 3:c=b.updateQueue;null!==c&&Me(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&r(c,
b.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:D("163")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(k(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var ff={};
function gf(a){function b(a){a===ff?D("174"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:ff},f={current:ff},g={current:ff};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),k=b(e.current);
d=c(k,a.type,d);k!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=ff;g.current=ff}}}
function hf(a){function b(a,b){var c=new Y(5,null,0);c.type="DELETED";c.stateNode=b;c["return"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a["return"];null!==a&&5!==a.tag&&3!==a.tag;)a=a["return"];y=a}var e=a.shouldSetTextContent;
a=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){D("175")},prepareToHydrateHostTextInstance:function(){D("176")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,k=a.getNextHydratableSibling,h=a.getFirstHydratableChild,r=a.hydrateInstance,n=a.hydrateTextInstance,y=null,u=null,x=!1;return{enterHydrationState:function(a){u=
h(a.stateNode.containerInfo);y=a;return x=!0},resetHydrationState:function(){u=y=null;x=!1},tryToClaimNextHydratableInstance:function(a){if(x){var d=u;if(d){if(!c(a,d)){d=k(d);if(!d||!c(a,d)){a.effectTag|=2;x=!1;y=a;return}b(y,u)}y=a;u=h(d)}else a.effectTag|=2,x=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=r(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return n(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==
y)return!1;if(!x)return d(a),x=!0,!1;var c=a.type;if(5!==a.tag||"head"!==c&&"body"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=k(c);d(a);u=y?k(a.stateNode):null;return!0}}}
function jf(a){function b(a){Lb=ma=!0;var b=a.stateNode;b.current===a?D("177"):void 0;b.isReadyForCommit=!1;ed.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;vg();for(q=c;null!==q;){var d=!1,e=void 0;try{for(;null!==q;){var f=q.effectTag;f&16&&wg(q);if(f&128){var g=q.alternate;null!==g&&xg(g)}switch(f&-242){case 2:He(q);q.effectTag&=-3;break;case 6:He(q);q.effectTag&=-3;Ie(q.alternate,q);break;case 4:Ie(q.alternate,
q);break;case 8:Lc=!0,yg(q),Lc=!1}q=q.nextEffect}}catch(Mc){d=!0,e=Mc}d&&(null===q?D("178"):void 0,k(q,e),null!==q&&(q=q.nextEffect))}zg();b.current=a;for(q=c;null!==q;){c=!1;d=void 0;try{for(;null!==q;){var h=q.effectTag;h&36&&Ag(q.alternate,q);h&128&&Bg(q);if(h&64)switch(e=q,f=void 0,null!==P&&(f=P.get(e),P["delete"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=P.get(e),P["delete"](e))),null==f?D("184"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});
break;case 3:null===ba&&(ba=f.error);break;default:D("157")}var Fa=q.nextEffect;q.nextEffect=null;q=Fa}}catch(Mc){c=!0,d=Mc}c&&(null===q?D("178"):void 0,k(q,d),null!==q&&(q=q.nextEffect))}ma=Lb=!1;"function"===typeof ze&&ze(a.stateNode);fa&&(fa.forEach(F),fa=null);null!==ba&&(a=ba,ba=null,v(a));b=b.current.expirationTime;0===b&&(na=P=null);return b}function c(a){for(;;){var b=og(a.alternate,a,J),c=a["return"],d=a.sibling;var e=a;if(2147483647===J||2147483647!==e.expirationTime){if(2!==e.tag&&3!==
e.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;
if(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=w(a.alternate,a,J);null===b&&(b=c(a));ed.current=null;return b}function e(a){var b=ng(a.alternate,a,J);null===b&&(b=c(a));ed.current=null;return b}function f(a){if(null!==P){if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=h(E)?e(E):d(E);else for(;null!==E&&!p();)E=h(E)?e(E):d(E)}else if(!(0===J||J>a))if(J<=Nc)for(;null!==E;)E=d(E);else for(;null!==E&&!p();)E=d(E)}function g(a,b){ma?D("243"):void 0;ma=!0;a.isReadyForCommit=
!1;if(a!==eb||b!==J||null===E){for(;-1<de;)ce[de]=null,de--;fe=C;ee.current=C;X.current=!1;mg();eb=a;J=b;E=oe(eb.current,null,b)}var c=!1,d=null;try{f(b)}catch(Kc){c=!0,d=Kc}for(;c;){if(fb){ba=d;break}var g=E;if(null===g)fb=!0;else{var h=k(g,d);null===h?D("183"):void 0;if(!fb){try{c=h;d=b;for(h=c;null!==g;){switch(g.tag){case 2:je(g);break;case 5:l(g);break;case 3:Fe(g);break;case 4:Fe(g)}if(g===h||g.alternate===h)break;g=g["return"]}E=e(c);f(d)}catch(Kc){c=!0;d=Kc;continue}break}}}b=ba;fb=ma=!1;
ba=null;null!==b&&v(b);return a.isReadyForCommit?a.current.alternate:null}function k(a,b){var c=ed.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,r(a)&&(fb=!0);else for(var g=a["return"];null!==g&&null===c;){2===g.tag?"function"===typeof g.stateNode.componentDidCatch&&(d=!0,f=fd(g),c=g,e=!0):3===g.tag&&(c=g);if(r(g)){if(Lc||null!==fa&&(fa.has(g)||null!==g.alternate&&fa.has(g.alternate)))return null;c=null;e=!1}g=g["return"]}if(null!==c){null===na&&(na=new Set);na.add(c);var h="";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=
g._debugOwner,l=g._debugSource;var Fa=fd(g);var n=null;k&&(n=fd(k));k=l;Fa="\n    in "+(Fa||"Unknown")+(k?" (at "+k.fileName.replace(/^.*[\\\/]/,"")+":"+k.lineNumber+")":n?" (created by "+n+")":"");break a;default:Fa=""}h+=Fa;g=g["return"]}while(g);g=h;a=fd(a);null===P&&(P=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};P.set(c,b);try{console.error(b.error)}catch(Cg){console.error(Cg)}Lb?(null===fa&&(fa=new Set),
fa.add(c)):F(c);return c}null===ba&&(ba=b);return null}function h(a){return null!==P&&(P.has(a)||null!==a.alternate&&P.has(a.alternate))}function r(a){return null!==na&&(na.has(a)||null!==a.alternate&&na.has(a.alternate))}function n(){return 20*(((L()+100)/20|0)+1)}function y(a){return 0!==ja?ja:ma?Lb?1:J:!Dg||a.internalContextTag&1?n():1}function u(a,b){return x(a,b,!1)}function x(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||
a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a["return"])if(3===a.tag){var c=a.stateNode;!ma&&c===eb&&b<=J&&(E=eb=null,J=0);var d=b;Mb>Eg&&D("185");if(null===c.nextScheduledRoot)c.remainingExpirationTime=d,null===M?(oa=M=c,c.nextScheduledRoot=c):(M=M.nextScheduledRoot=c,M.nextScheduledRoot=oa);else{var e=c.remainingExpirationTime;if(0===e||d<e)c.remainingExpirationTime=d}Ga||(ka?Nb&&z(c,1):1===d?I(1,null):gb||(gb=!0,Je(T)))}else break;a=a["return"]}}function F(a){x(a,1,
!0)}function L(){return Nc=((Ke()-Fg)/10|0)+2}function G(){var a=0,b=null;if(null!==M)for(var c=M,d=oa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===M?D("244"):void 0;if(d===d.nextScheduledRoot){oa=M=d.nextScheduledRoot=null;break}else if(d===oa)oa=e=d.nextScheduledRoot,M.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===M){M=c;M.nextScheduledRoot=oa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===
a||e<a)a=e,b=d;if(d===M)break;c=d;d=d.nextScheduledRoot}}c=pa;null!==c&&c===b?Mb++:Mb=0;pa=b;Ob=a}function T(a){I(0,a)}function I(a,b){hb=b;for(G();null!==pa&&0!==Ob&&(0===a||Ob<=a)&&!Oc;)z(pa,Ob),G();null!==hb&&(gb=!1);null===pa||gb||(gb=!0,Je(T));hb=null;Oc=!1;Mb=0;if(Pb)throw a=Pc,Pc=null,Pb=!1,a;}function z(a,c){Ga?D("245"):void 0;Ga=!0;if(c<=L()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=
b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(p()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Ga=!1}function p(){return null===hb||hb.timeRemaining()>Gg?!1:Oc=!0}function v(a){null===pa?D("246"):void 0;pa.remainingExpirationTime=0;Pb||(Pb=!0,Pc=a)}var t=gf(a),Kb=hf(a),Fe=t.popHostContainer,l=t.popHostContext,mg=t.resetHostContainer,Ge=cf(a,t,Kb,u,y),w=Ge.beginWork,ng=Ge.beginFailedWork,og=df(a,t,Kb).completeWork;
t=ef(a,k);var wg=t.commitResetTextContent,He=t.commitPlacement,yg=t.commitDeletion,Ie=t.commitWork,Ag=t.commitLifeCycles,Bg=t.commitAttachRef,xg=t.commitDetachRef,Ke=a.now,Je=a.scheduleDeferredCallback,Dg=a.useSyncScheduling,vg=a.prepareForCommit,zg=a.resetAfterCommit,Fg=Ke(),Nc=2,ja=0,ma=!1,E=null,eb=null,J=0,q=null,P=null,na=null,fa=null,ba=null,fb=!1,Lb=!1,Lc=!1,oa=null,M=null,gb=!1,Ga=!1,pa=null,Ob=0,Oc=!1,Pb=!1,Pc=null,hb=null,ka=!1,Nb=!1,Eg=1E3,Mb=0,Gg=1;return{computeAsyncExpiration:n,computeExpirationForFiber:y,
scheduleWork:u,batchedUpdates:function(a,b){var c=ka;ka=!0;try{return a(b)}finally{(ka=c)||Ga||I(1,null)}},unbatchedUpdates:function(a){if(ka&&!Nb){Nb=!0;try{return a()}finally{Nb=!1}}return a()},flushSync:function(a){var b=ka;ka=!0;try{a:{var c=ja;ja=1;try{var d=a();break a}finally{ja=c}d=void 0}return d}finally{ka=b,Ga?D("187"):void 0,I(1,null)}},deferredUpdates:function(a){var b=ja;ja=n();try{return a()}finally{ja=b}}}}
function kf(a){function b(a){a=kd(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=jf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,r){var g=b.current;if(c){c=
c._reactInternalFiber;var h;b:{2===gd(c)&&2===c.tag?void 0:D("170");for(h=c;3!==h.tag;){if(he(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h["return"])?void 0:D("171")}h=h.stateNode.context}c=he(c)?le(c,h):h}else c=C;null===b.context?b.context=c:b.pendingContext=c;b=r;b=void 0===b?null:b;r=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);De(g,{expirationTime:r,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,
nextCallback:null,next:null});f(g,r)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=ld(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return ye(A({},
a,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var lf=Object.freeze({default:kf}),mf=lf&&kf||lf,nf=mf["default"]?mf["default"]:mf,of="object"===typeof performance&&"function"===typeof performance.now,pf=void 0;pf=of?function(){return performance.now()}:function(){return Date.now()};var qf=void 0;
if(m.canUseDOM)if("function"!==typeof requestIdleCallback){var rf=null,sf=!1,tf=!1,uf=0,vf=33,wf=33,xf;xf=of?{timeRemaining:function(){return uf-performance.now()}}:{timeRemaining:function(){return uf-Date.now()}};var yf="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(a){a.source===window&&a.data===yf&&(sf=!1,a=rf,rf=null,null!==a&&a(xf))},!1);var zf=function(a){tf=!1;var b=a-uf+wf;b<wf&&vf<wf?(8>b&&(b=8),wf=b<vf?vf:b):vf=b;uf=a+wf;sf||(sf=!0,
window.postMessage(yf,"*"))};qf=function(a){rf=a;tf||(tf=!0,requestAnimationFrame(zf));return 0}}else qf=requestIdleCallback;else qf=function(a){setTimeout(function(){a({timeRemaining:function(){return Infinity}})});return 0};
var Af=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Bf={},Cf={};function Df(a){if(Cf.hasOwnProperty(a))return!0;if(Bf.hasOwnProperty(a))return!1;if(Af.test(a))return Cf[a]=!0;Bf[a]=!0;return!1}
function Ef(a,b,c){var d=ua(b);if(d&&ta(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Ff(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,""+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,""):a.setAttribute(b,""+c))}else Gf(a,b,ta(b,c)?c:null)}
function Gf(a,b,c){Df(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,""+c))}function Ff(a,b){var c=ua(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:"":a.removeAttribute(c.attributeName):a.removeAttribute(b)}
function Hf(a,b){var c=b.value,d=b.checked;return A({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function If(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:"checkbox"===b.type||"radio"===b.type?null!=b.checked:null!=b.value}}
function Jf(a,b){var c=b.checked;null!=c&&Ef(a,"checked",c||!1);c=b.value;if(null!=c)if(0===c&&""===a.value)a.value="0";else if("number"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=""+c}else a.value!==""+c&&(a.value=""+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==""+b.defaultValue&&(a.defaultValue=""+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}
function Kf(a,b){switch(b.type){case "submit":case "reset":break;case "color":case "date":case "datetime":case "datetime-local":case "month":case "time":case "week":a.value="";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;""!==b&&(a.name="");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;""!==b&&(a.name=b)}function Lf(a){var b="";aa.Children.forEach(a,function(a){null==a||"string"!==typeof a&&"number"!==typeof a||(b+=a)});return b}
function Mf(a,b){a=A({children:void 0},b);if(b=Lf(b.children))a.children=b;return a}function Nf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b["$"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty("$"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=""+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}
function Of(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Pf(a,b){null!=b.dangerouslySetInnerHTML?D("91"):void 0;return A({},b,{value:void 0,defaultValue:void 0,children:""+a._wrapperState.initialValue})}function Qf(a,b){var c=b.value,d=c;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?D("92"):void 0,Array.isArray(b)&&(1>=b.length?void 0:D("93"),b=b[0]),c=""+b),null==c&&(c=""),d=c);a._wrapperState={initialValue:""+d}}
function Rf(a,b){var c=b.value;null!=c&&(c=""+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Sf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Tf={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};
function Uf(a){switch(a){case "svg":return"http://www.w3.org/2000/svg";case "math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Vf(a,b){return null==a||"http://www.w3.org/1999/xhtml"===a?Uf(b):"http://www.w3.org/2000/svg"===a&&"foreignObject"===b?"http://www.w3.org/1999/xhtml":a}
var Wf=void 0,Xf=function(a){return"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Tf.svg||"innerHTML"in a)a.innerHTML=b;else{Wf=Wf||document.createElement("div");Wf.innerHTML="\x3csvg\x3e"+b+"\x3c/svg\x3e";for(b=Wf.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}}),Yf=/["'&<>]/;
function Zf(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}
m.canUseDOM&&("textContent"in document.documentElement||(Zf=function(a,b){if(3===a.nodeType)a.nodeValue=b;else{if("boolean"===typeof b||"number"===typeof b)b=""+b;else{b=""+b;var c=Yf.exec(b);if(c){var d="",e,f=0;for(e=c.index;e<b.length;e++){switch(b.charCodeAt(e)){case 34:c="\x26quot;";break;case 38:c="\x26amp;";break;case 39:c="\x26#x27;";break;case 60:c="\x26lt;";break;case 62:c="\x26gt;";break;default:continue}f!==e&&(d+=b.substring(f,e));f=e+1;d+=c}b=f!==e?d+b.substring(f,e):d}}Xf(a,b)}}));
var $f=Zf,ag={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,
floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},bg=["Webkit","ms","Moz","O"];Object.keys(ag).forEach(function(a){bg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);ag[b]=ag[a]})});
function cg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf("--");var e=c;var f=b[c];e=null==f||"boolean"===typeof f||""===f?"":d||"number"!==typeof f||0===f||ag.hasOwnProperty(e)&&ag[e]?(""+f).trim():f+"px";"float"===c&&(c="cssFloat");d?a.setProperty(c,e):a[c]=e}}var dg=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});
function eg(a,b,c){b&&(dg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?D("137",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?D("60"):void 0,"object"===typeof b.dangerouslySetInnerHTML&&"__html"in b.dangerouslySetInnerHTML?void 0:D("61")),null!=b.style&&"object"!==typeof b.style?D("62",c()):void 0)}
function fg(a,b){if(-1===a.indexOf("-"))return"string"===typeof b.is;switch(a){case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":return!1;default:return!0}}var gg=Tf.html,hg=B.thatReturns("");
function ig(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Dd(a);b=Ra[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||("topWheel"===e?yc("wheel")?U("topWheel","wheel",a):yc("mousewheel")?U("topWheel","mousewheel",a):U("topWheel","DOMMouseScroll",a):"topScroll"===e?sd("topScroll","scroll",a):"topFocus"===e||"topBlur"===e?(sd("topFocus","focus",a),sd("topBlur","blur",a),c.topBlur=!0,c.topFocus=!0):"topCancel"===e?(yc("cancel",!0)&&sd("topCancel","cancel",a),c.topCancel=
!0):"topClose"===e?(yc("close",!0)&&sd("topClose","close",a),c.topClose=!0):zd.hasOwnProperty(e)&&U(e,zd[e],a),c[e]=!0)}}
var jg={topAbort:"abort",topCanPlay:"canplay",topCanPlayThrough:"canplaythrough",topDurationChange:"durationchange",topEmptied:"emptied",topEncrypted:"encrypted",topEnded:"ended",topError:"error",topLoadedData:"loadeddata",topLoadedMetadata:"loadedmetadata",topLoadStart:"loadstart",topPause:"pause",topPlay:"play",topPlaying:"playing",topProgress:"progress",topRateChange:"ratechange",topSeeked:"seeked",topSeeking:"seeking",topStalled:"stalled",topSuspend:"suspend",topTimeUpdate:"timeupdate",topVolumeChange:"volumechange",
topWaiting:"waiting"};function kg(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===gg&&(d=Uf(a));d===gg?"script"===a?(a=c.createElement("div"),a.innerHTML="\x3cscript\x3e\x3c/script\x3e",a=a.removeChild(a.firstChild)):a="string"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function lg(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}
function pg(a,b,c,d){var e=fg(b,c);switch(b){case "iframe":case "object":U("topLoad","load",a);var f=c;break;case "video":case "audio":for(f in jg)jg.hasOwnProperty(f)&&U(f,jg[f],a);f=c;break;case "source":U("topError","error",a);f=c;break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);f=c;break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);f=c;break;case "details":U("topToggle","toggle",a);f=c;break;case "input":If(a,c);f=Hf(a,c);U("topInvalid","invalid",a);
ig(d,"onChange");break;case "option":f=Mf(a,c);break;case "select":Of(a,c);f=A({},c,{value:void 0});U("topInvalid","invalid",a);ig(d,"onChange");break;case "textarea":Qf(a,c);f=Pf(a,c);U("topInvalid","invalid",a);ig(d,"onChange");break;default:f=c}eg(b,f,hg);var g=f,k;for(k in g)if(g.hasOwnProperty(k)){var h=g[k];"style"===k?cg(a,h,hg):"dangerouslySetInnerHTML"===k?(h=h?h.__html:void 0,null!=h&&Xf(a,h)):"children"===k?"string"===typeof h?("textarea"!==b||""!==h)&&$f(a,h):"number"===typeof h&&$f(a,
""+h):"suppressContentEditableWarning"!==k&&"suppressHydrationWarning"!==k&&"autoFocus"!==k&&(Qa.hasOwnProperty(k)?null!=h&&ig(d,k):e?Gf(a,k,h):null!=h&&Ef(a,k,h))}switch(b){case "input":Bc(a);Kf(a,c);break;case "textarea":Bc(a);Sf(a,c);break;case "option":null!=c.value&&a.setAttribute("value",c.value);break;case "select":a.multiple=!!c.multiple;b=c.value;null!=b?Nf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Nf(a,!!c.multiple,c.defaultValue,!0);break;default:"function"===typeof f.onClick&&(a.onclick=
B)}}
function qg(a,b,c,d,e){var f=null;switch(b){case "input":c=Hf(a,c);d=Hf(a,d);f=[];break;case "option":c=Mf(a,c);d=Mf(a,d);f=[];break;case "select":c=A({},c,{value:void 0});d=A({},d,{value:void 0});f=[];break;case "textarea":c=Pf(a,c);d=Pf(a,d);f=[];break;default:"function"!==typeof c.onClick&&"function"===typeof d.onClick&&(a.onclick=B)}eg(b,d,hg);var g,k;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if("style"===g)for(k in b=c[g],b)b.hasOwnProperty(k)&&(a||(a={}),a[k]=
"");else"dangerouslySetInnerHTML"!==g&&"children"!==g&&"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&"autoFocus"!==g&&(Qa.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var h=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&h!==b&&(null!=h||null!=b))if("style"===g)if(b){for(k in b)!b.hasOwnProperty(k)||h&&h.hasOwnProperty(k)||(a||(a={}),a[k]="");for(k in h)h.hasOwnProperty(k)&&b[k]!==h[k]&&(a||(a={}),a[k]=h[k])}else a||(f||(f=[]),f.push(g,a)),a=h;else"dangerouslySetInnerHTML"===
g?(h=h?h.__html:void 0,b=b?b.__html:void 0,null!=h&&b!==h&&(f=f||[]).push(g,""+h)):"children"===g?b===h||"string"!==typeof h&&"number"!==typeof h||(f=f||[]).push(g,""+h):"suppressContentEditableWarning"!==g&&"suppressHydrationWarning"!==g&&(Qa.hasOwnProperty(g)?(null!=h&&ig(e,g),f||b===h||(f=[])):(f=f||[]).push(g,h))}a&&(f=f||[]).push("style",a);return f}
function rg(a,b,c,d,e){fg(c,d);d=fg(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],k=b[f+1];"style"===g?cg(a,k,hg):"dangerouslySetInnerHTML"===g?Xf(a,k):"children"===g?$f(a,k):d?null!=k?Gf(a,g,k):a.removeAttribute(g):null!=k?Ef(a,g,k):Ff(a,g)}switch(c){case "input":Jf(a,e);Cc(a);break;case "textarea":Rf(a,e);break;case "select":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Nf(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=
e.defaultValue?Nf(a,!!e.multiple,e.defaultValue,!0):Nf(a,!!e.multiple,e.multiple?[]:"",!1))}}
function sg(a,b,c,d,e){switch(b){case "iframe":case "object":U("topLoad","load",a);break;case "video":case "audio":for(var f in jg)jg.hasOwnProperty(f)&&U(f,jg[f],a);break;case "source":U("topError","error",a);break;case "img":case "image":U("topError","error",a);U("topLoad","load",a);break;case "form":U("topReset","reset",a);U("topSubmit","submit",a);break;case "details":U("topToggle","toggle",a);break;case "input":If(a,c);U("topInvalid","invalid",a);ig(e,"onChange");break;case "select":Of(a,c);
U("topInvalid","invalid",a);ig(e,"onChange");break;case "textarea":Qf(a,c),U("topInvalid","invalid",a),ig(e,"onChange")}eg(b,c,hg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],"children"===g?"string"===typeof f?a.textContent!==f&&(d=["children",f]):"number"===typeof f&&a.textContent!==""+f&&(d=["children",""+f]):Qa.hasOwnProperty(g)&&null!=f&&ig(e,g));switch(b){case "input":Bc(a);Kf(a,c);break;case "textarea":Bc(a);Sf(a,c);break;case "select":case "option":break;default:"function"===typeof c.onClick&&
(a.onclick=B)}return d}function tg(a,b){return a.nodeValue!==b}
var ug=Object.freeze({createElement:kg,createTextNode:lg,setInitialProperties:pg,diffProperties:qg,updateProperties:rg,diffHydratedProperties:sg,diffHydratedText:tg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case "input":Jf(a,c);b=c.name;if("radio"===c.type&&null!=b){for(c=a;c.parentNode;)c=
c.parentNode;c=c.querySelectorAll("input[name\x3d"+JSON.stringify(""+b)+'][type\x3d"radio"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=sb(d);e?void 0:D("90");Jf(d,e)}}}break;case "textarea":Rf(a,c);break;case "select":b=c.value,null!=b&&Nf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(ug);var Hg=null,Ig=null;function Jg(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||" react-mount-point-unstable "!==a.nodeValue))}
function Kg(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute("data-reactroot"))}
var Z=nf({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:Vf(null,"");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=Vf(a,b)}return a},getChildHostContext:function(a,b){return Vf(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){Hg=pd;var a=da();if(Gd(a)){if("selectionStart"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();
if(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(x){b=null;break a}var f=0,g=-1,k=-1,h=0,r=0,n=a,y=null;b:for(;;){for(var u;;){n!==b||0!==d&&3!==n.nodeType||(g=f+d);n!==e||0!==c&&3!==n.nodeType||(k=f+c);3===n.nodeType&&(f+=n.nodeValue.length);if(null===(u=n.firstChild))break;y=n;n=u}for(;;){if(n===a)break b;y===b&&++h===d&&(g=f);y===e&&++r===c&&(k=f);if(null!==(u=n.nextSibling))break;n=y;y=n.parentNode}n=u}b=-1===g||-1===k?null:
{start:g,end:k}}else b=null}b=b||{start:0,end:0}}else b=null;Ig={focusedElem:a,selectionRange:b};qd(!1)},resetAfterCommit:function(){var a=Ig,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&ha(document.documentElement,c)){if(Gd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),"selectionStart"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>
d&&(e=d,d=a,a=e);e=Fd(c,a);var f=Fd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=
a.top}Ig=null;qd(Hg);Hg=null},createInstance:function(a,b,c,d,e){a=kg(a,b,c,d);a[O]=e;a[pb]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case "button":case "input":case "select":case "textarea":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return qg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return"textarea"===a||"string"===typeof b.children||"number"===typeof b.children||"object"===
typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&"string"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=lg(a,b);a[O]=d;return a},now:pf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[pb]=e;rg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=""},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,
b){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,
b){return""===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[O]=f;a[pb]=c;return sg(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[O]=c;return tg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},
didNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:qf,useSyncScheduling:!0});rc=Z.batchedUpdates;
function Lg(a,b,c,d,e){Jg(c)?void 0:D("200");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Kg(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Mg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Jg(b)?void 0:D("200");return Pe(a,b,null,c)}
function Ng(a,b){this._reactRootContainer=Z.createContainer(a,b)}Ng.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Ng.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};
var Og={createPortal:Mg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);"function"===typeof a.render?D("188"):D("213",Object.keys(a))},hydrate:function(a,b,c){return Lg(null,a,b,!0,c)},render:function(a,b,c){return Lg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?D("38"):void 0;return Lg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Jg(a)?void 0:
D("40");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Lg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Mg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:nb,EventPluginRegistry:Ua,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:tb,ReactDOMEventListener:td}};
Z.injectIntoDevTools({findFiberByHostInstance:qb,bundleType:0,version:"16.1.1",rendererPackageName:"react-dom"});var Pg=Object.freeze({default:Og}),Qg=Pg&&Og||Pg;module.exports=Qg["default"]?Qg["default"]:Qg;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var isNode = __webpack_require__(23);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/** @license React v16.1.1
 * react-dom.development.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



if (process.env.NODE_ENV !== "production") {
  (function() {
'use strict';

var React = __webpack_require__(0);
var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);
var ExecutionEnvironment = __webpack_require__(11);
var _assign = __webpack_require__(3);
var emptyFunction$1 = __webpack_require__(2);
var EventListener = __webpack_require__(12);
var getActiveElement = __webpack_require__(13);
var shallowEqual = __webpack_require__(14);
var containsNode = __webpack_require__(15);
var focusNode = __webpack_require__(16);
var emptyObject = __webpack_require__(5);
var checkPropTypes = __webpack_require__(7);
var hyphenateStyleName = __webpack_require__(25);
var camelizeStyleName = __webpack_require__(27);

/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

// These attributes should be all lowercase to allow for
// case insensitive checks
var RESERVED_PROPS = {
  children: true,
  dangerouslySetInnerHTML: true,
  defaultValue: true,
  defaultChecked: true,
  innerHTML: true,
  suppressContentEditableWarning: true,
  suppressHydrationWarning: true,
  style: true
};

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
  HAS_STRING_BOOLEAN_VALUE: 0x40,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    for (var propName in Properties) {
      !!properties.hasOwnProperty(propName) ? invariant(false, "injectDOMPropertyConfig(...): You're trying to inject DOM property '%s' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.", propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE),
        hasStringBooleanValue: checkMask(propConfig, Injection.HAS_STRING_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? invariant(false, "DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s", propName) : void 0;

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];

        propertyInfo.attributeName = attributeName;
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      // Downcase references to whitelist properties to check for membership
      // without case-sensitivity. This allows the whitelist to pick up
      // `allowfullscreen`, which should be written using the property configuration
      // for `allowFullscreen`
      properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';

/**
 * Map from property "standard name" to an object with info about how to set
 * the property in the DOM. Each object contains:
 *
 * attributeName:
 *   Used when rendering markup or with `*Attribute()`.
 * attributeNamespace
 * propertyName:
 *   Used on DOM node instances. (This includes properties that mutate due to
 *   external factors.)
 * mutationMethod:
 *   If non-null, used instead of the property or `setAttribute()` after
 *   initial render.
 * mustUseProperty:
 *   Whether the property must be accessed and mutated as an object property.
 * hasBooleanValue:
 *   Whether the property should be removed when set to a falsey value.
 * hasNumericValue:
 *   Whether the property must be numeric or parse as a numeric and should be
 *   removed when set to a falsey value.
 * hasPositiveNumericValue:
 *   Whether the property must be positive numeric or parse as a positive
 *   numeric and should be removed when set to a falsey value.
 * hasOverloadedBooleanValue:
 *   Whether the property can be used as a flag as well as with a value.
 *   Removed when strictly equal to false; present without a value when
 *   strictly equal to true; present with a value otherwise.
 */
var properties = {};

/**
 * Checks whether a property name is a writeable attribute.
 * @method
 */
function shouldSetAttribute(name, value) {
  if (isReservedProp(name)) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return false;
  }
  if (value === null) {
    return true;
  }
  switch (typeof value) {
    case 'boolean':
      return shouldAttributeAcceptBooleanValue(name);
    case 'undefined':
    case 'number':
    case 'string':
    case 'object':
      return true;
    default:
      // function, symbol
      return false;
  }
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function shouldAttributeAcceptBooleanValue(name) {
  if (isReservedProp(name)) {
    return true;
  }
  var propertyInfo = getPropertyInfo(name);
  if (propertyInfo) {
    return propertyInfo.hasBooleanValue || propertyInfo.hasStringBooleanValue || propertyInfo.hasOverloadedBooleanValue;
  }
  var prefix = name.toLowerCase().slice(0, 5);
  return prefix === 'data-' || prefix === 'aria-';
}

/**
 * Checks to see if a property name is within the list of properties
 * reserved for internal React operations. These properties should
 * not be set on an HTML element.
 *
 * @private
 * @param {string} name
 * @return {boolean} If the name is within reserved props
 */
function isReservedProp(name) {
  return RESERVED_PROPS.hasOwnProperty(name);
}

var injection = DOMPropertyInjection;

var MUST_USE_PROPERTY = injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = injection.HAS_OVERLOADED_BOOLEAN_VALUE;
var HAS_STRING_BOOLEAN_VALUE = injection.HAS_STRING_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  // When adding attributes to this list, be sure to also add them to
  // the `possibleStandardNames` module to ensure casing and incorrect
  // name warnings.
  Properties: {
    allowFullScreen: HAS_BOOLEAN_VALUE,
    // specifies target context for links with `preload` type
    async: HAS_BOOLEAN_VALUE,
    // Note: there is a special case that prevents it from being written to the DOM
    // on the client side because the browsers are inconsistent. Instead we call focus().
    autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_OVERLOADED_BOOLEAN_VALUE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    contentEditable: HAS_STRING_BOOLEAN_VALUE,
    controls: HAS_BOOLEAN_VALUE,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: HAS_STRING_BOOLEAN_VALUE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    hidden: HAS_BOOLEAN_VALUE,
    loop: HAS_BOOLEAN_VALUE,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    playsInline: HAS_BOOLEAN_VALUE,
    readOnly: HAS_BOOLEAN_VALUE,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    scoped: HAS_BOOLEAN_VALUE,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    start: HAS_NUMERIC_VALUE,
    // support for projecting regular DOM Elements via V1 named slots ( shadow dom )
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: HAS_STRING_BOOLEAN_VALUE,
    // Style must be explicitly set in the attribute list. React components
    // expect a style object
    style: 0,
    // Keep it in the whitelist because it is case-sensitive for SVG.
    tabIndex: 0,
    // itemScope is for for Microdata support.
    // See http://schema.org/docs/gs.html
    itemScope: HAS_BOOLEAN_VALUE,
    // These attributes must stay in the white-list because they have
    // different attribute names (see DOMAttributeNames below)
    acceptCharset: 0,
    className: 0,
    htmlFor: 0,
    httpEquiv: 0,
    // Attributes with mutation methods must be specified in the whitelist
    // Set the string boolean flag to allow the behavior
    value: HAS_STRING_BOOLEAN_VALUE
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

var HAS_STRING_BOOLEAN_VALUE$1 = injection.HAS_STRING_BOOLEAN_VALUE;


var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

/**
 * This is a list of all SVG attributes that need special casing,
 * namespacing, or boolean value assignment.
 *
 * When adding attributes to this list, be sure to also add them to
 * the `possibleStandardNames` module to ensure casing and incorrect
 * name warnings.
 *
 * SVG Attributes List:
 * https://www.w3.org/TR/SVG/attindex.html
 * SMIL Spec:
 * https://www.w3.org/TR/smil
 */
var ATTRS = ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'x-height', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xmlns:xlink', 'xml:lang', 'xml:space'];

var SVGDOMPropertyConfig = {
  Properties: {
    autoReverse: HAS_STRING_BOOLEAN_VALUE$1,
    externalResourcesRequired: HAS_STRING_BOOLEAN_VALUE$1,
    preserveAlpha: HAS_STRING_BOOLEAN_VALUE$1
  },
  DOMAttributeNames: {
    autoReverse: 'autoReverse',
    externalResourcesRequired: 'externalResourcesRequired',
    preserveAlpha: 'preserveAlpha'
  },
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  }
};

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

ATTRS.forEach(function (original) {
  var reactName = original.replace(CAMELIZE, capitalize);

  SVGDOMPropertyConfig.Properties[reactName] = 0;
  SVGDOMPropertyConfig.DOMAttributeNames[reactName] = original;
});

injection.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
injection.injectDOMPropertyConfig(SVGDOMPropertyConfig);

var ReactErrorUtils = {
  // Used by Fiber to simulate a try-catch.
  _caughtError: null,
  _hasCaughtError: false,

  // Used by event system to capture/rethrow the first error.
  _rethrowError: null,
  _hasRethrowError: false,

  injection: {
    injectErrorUtils: function (injectedErrorUtils) {
      !(typeof injectedErrorUtils.invokeGuardedCallback === 'function') ? invariant(false, 'Injected invokeGuardedCallback() must be a function.') : void 0;
      invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
    }
  },

  /**
   * Call a function while guarding against errors that happens within it.
   * Returns an error if it throws, otherwise null.
   *
   * In production, this is implemented using a try-catch. The reason we don't
   * use a try-catch directly is so that we can swap out a different
   * implementation in DEV mode.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallback: function (name, func, context, a, b, c, d, e, f) {
    invokeGuardedCallback.apply(ReactErrorUtils, arguments);
  },

  /**
   * Same as invokeGuardedCallback, but instead of returning an error, it stores
   * it in a global so it can be rethrown by `rethrowCaughtError` later.
   * TODO: See if _caughtError and _rethrowError can be unified.
   *
   * @param {String} name of the guard to use for logging or debugging
   * @param {Function} func The function to invoke
   * @param {*} context The context to use when calling the function
   * @param {...*} args Arguments for function
   */
  invokeGuardedCallbackAndCatchFirstError: function (name, func, context, a, b, c, d, e, f) {
    ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
    if (ReactErrorUtils.hasCaughtError()) {
      var error = ReactErrorUtils.clearCaughtError();
      if (!ReactErrorUtils._hasRethrowError) {
        ReactErrorUtils._hasRethrowError = true;
        ReactErrorUtils._rethrowError = error;
      }
    }
  },

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    return rethrowCaughtError.apply(ReactErrorUtils, arguments);
  },

  hasCaughtError: function () {
    return ReactErrorUtils._hasCaughtError;
  },

  clearCaughtError: function () {
    if (ReactErrorUtils._hasCaughtError) {
      var error = ReactErrorUtils._caughtError;
      ReactErrorUtils._caughtError = null;
      ReactErrorUtils._hasCaughtError = false;
      return error;
    } else {
      invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
    }
  }
};

var invokeGuardedCallback = function (name, func, context, a, b, c, d, e, f) {
  ReactErrorUtils._hasCaughtError = false;
  ReactErrorUtils._caughtError = null;
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    ReactErrorUtils._caughtError = error;
    ReactErrorUtils._hasCaughtError = true;
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // untintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);
        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function onError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', onError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        ReactErrorUtils._hasCaughtError = true;
        ReactErrorUtils._caughtError = error;
      } else {
        ReactErrorUtils._hasCaughtError = false;
        ReactErrorUtils._caughtError = null;
      }

      // Remove our event listeners
      window.removeEventListener('error', onError);
    };

    invokeGuardedCallback = invokeGuardedCallbackDev;
  }
}

var rethrowCaughtError = function () {
  if (ReactErrorUtils._hasRethrowError) {
    var error = ReactErrorUtils._rethrowError;
    ReactErrorUtils._rethrowError = null;
    ReactErrorUtils._hasRethrowError = false;
    throw error;
  }
};

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
    if (plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

var EventPluginRegistry = Object.freeze({
	plugins: plugins,
	eventNameDispatchConfigs: eventNameDispatchConfigs,
	registrationNameModules: registrationNameModules,
	registrationNameDependencies: registrationNameDependencies,
	possibleRegistrationNames: possibleRegistrationNames,
	injectEventPluginOrder: injectEventPluginOrder,
	injectEventPluginsByName: injectEventPluginsByName
});

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

var injection$2 = {
  injectComponentTree: function (Injected) {
    getFiberCurrentPropsFromNode = Injected.getFiberCurrentPropsFromNode;
    getInstanceFromNode = Injected.getInstanceFromNode;
    getNodeFromInstance = Injected.getNodeFromInstance;

    {
      warning(getNodeFromInstance && getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');
    }
  }
};






var validateEventDispatches;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  ReactErrorUtils.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection$1 = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

/**
 * Enqueues a synthetic event that should be dispatched when
 * `processEventQueue` is invoked.
 *
 * @param {*} events An accumulation of synthetic events.
 * @internal
 */
function enqueueEvents(events) {
  if (events) {
    eventQueue = accumulateInto(eventQueue, events);
  }
}

/**
 * Dispatches all synthetic events on the event queue.
 *
 * @internal
 */
function processEventQueue(simulated) {
  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;
  if (simulated) {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
  } else {
    forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  }
  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
  // This would be a good time to rethrow if any of the event handlers threw.
  ReactErrorUtils.rethrowCaughtError();
}

var EventPluginHub = Object.freeze({
	injection: injection$1,
	getListener: getListener,
	extractEvents: extractEvents,
	enqueueEvents: enqueueEvents,
	processEventQueue: processEventQueue
});

var IndeterminateComponent = 0; // Before we know whether it is functional or class
var FunctionalComponent = 1;
var ClassComponent = 2;
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;
var CallComponent = 7;
var CallHandlerPhase = 8;
var ReturnComponent = 9;
var Fragment = 10;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode$1(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest = void 0;
  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  invariant(false, 'getNodeFromInstance: Invalid argument.');
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps$1(node, props) {
  node[internalEventHandlersKey] = props;
}

var ReactDOMComponentTree = Object.freeze({
	precacheFiberNode: precacheFiberNode$1,
	getClosestInstanceFromNode: getClosestInstanceFromNode,
	getInstanceFromNode: getInstanceFromNode$1,
	getNodeFromInstance: getNodeFromInstance$1,
	getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode$1,
	updateFiberProps: updateFiberProps$1
});

function getParent(inst) {
  do {
    inst = inst['return'];
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  return getParent(inst);
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    warning(inst, 'Dispatching inst must not be null');
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? getParentInstance(targetInst) : null;
    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var EventPropagators = Object.freeze({
	accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches,
	accumulateDirectDispatches: accumulateDirectDispatches
});

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

/**
 * This helper object stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */
var compositionState = {
  _root: null,
  _startText: null,
  _fallbackText: null
};

function initialize(nativeEventTarget) {
  compositionState._root = nativeEventTarget;
  compositionState._startText = getText();
  return true;
}

function reset() {
  compositionState._root = null;
  compositionState._startText = null;
  compositionState._fallbackText = null;
}

function getData() {
  if (compositionState._fallbackText) {
    return compositionState._fallbackText;
  }

  var start;
  var startValue = compositionState._startText;
  var startLength = startValue.length;
  var end;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  compositionState._fallbackText = endValue.slice(start, sliceTail);
  return compositionState._fallbackText;
}

function getText() {
  if ('value' in compositionState._root) {
    return compositionState._root.value;
  }
  return compositionState._root[getTextContentAccessor()];
}

/* eslint valid-typeof: 0 */

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';
var EVENT_POOL_SIZE = 10;

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction$1.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction$1.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction$1.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction$1.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction$1.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction$1.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction$1.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction$1.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction$1));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction$1));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;
  addEventPoolingTo(Class);
};

/** Proxying after everything set on SyntheticEvent
 * to resolve Proxy issue on some WebKit browsers
 * in which some Event properties are set to undefined (GH#10010)
 */
{
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

var SyntheticEvent$1 = SyntheticEvent;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticInputEvent, InputEventInterface);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelTypes} topLevelType Record from `BrowserEventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `BrowserEventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

// Use to restore controlled state after a change event has fired.

var fiberHostComponent = null;

var ReactControlledComponentInjection = {
  injectFiberControlledHostComponent: function (hostComponentImpl) {
    // The fiber implementation doesn't use dynamic dispatch so we need to
    // inject the implementation.
    fiberHostComponent = hostComponentImpl;
  }
};

var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
}

var injection$3 = ReactControlledComponentInjection;

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

var ReactControlledComponent = Object.freeze({
	injection: injection$3,
	enqueueStateRestore: enqueueStateRestore,
	restoreStateIfNeeded: restoreStateIfNeeded
});

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var fiberBatchedUpdates = function (fn, bookkeeping) {
  return fn(bookkeeping);
};

var isNestingBatched = false;
function batchedUpdates(fn, bookkeeping) {
  if (isNestingBatched) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state. Therefore, we add the target to
    // a queue of work.
    return fiberBatchedUpdates(fn, bookkeeping);
  }
  isNestingBatched = true;
  try {
    return fiberBatchedUpdates(fn, bookkeeping);
  } finally {
    // Here we wait until all updates have propagated, which is important
    // when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    // Then we restore state of any controlled component.
    isNestingBatched = false;
    restoreStateIfNeeded();
  }
}

var ReactGenericBatchingInjection = {
  injectFiberBatchedUpdates: function (_batchedUpdates) {
    fiberBatchedUpdates = _batchedUpdates;
  }
};

var injection$4 = ReactGenericBatchingInjection;

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }

  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable,
    configurable: true,
    get: function () {
      return descriptor.get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      descriptor.set.call(this, value);
    }
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent$1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  enqueueEvents(event);
  processEventQueue(false);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: null,
  detail: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticUIEvent, UIEventInterface);

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes$2.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes$2.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

var ReactInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

var ReactCurrentOwner = ReactInternals.ReactCurrentOwner;
var ReactDebugCurrentFrame = ReactInternals.ReactDebugCurrentFrame;

function getComponentName(fiber) {
  var type = fiber.type;

  if (typeof type === 'string') {
    return type;
  }
  if (typeof type === 'function') {
    return type.displayName || type.name;
  }
  return null;
}

// Don't change these two values:
var NoEffect = 0; //           0b00000000
var PerformedWork = 1; //      0b00000001

// You can change the rest (and add more).
var Placement = 2; //          0b00000010
var Update = 4; //             0b00000100
var PlacementAndUpdate = 6; // 0b00000110
var Deletion = 8; //           0b00001000
var ContentReset = 16; //      0b00010000
var Callback = 32; //          0b00100000
var Err = 64; //               0b01000000
var Ref = 128; //              0b10000000

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node['return']) {
      node = node['return'];
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node['return']) {
      node = node['return'];
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      warning(instance._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber) || 'A component');
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a['return'];
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      // We're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a['return'] !== b['return']) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
      }
    }

    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child['return'] = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node['return'] || node['return'] === currentParent) {
        return null;
      }
      node = node['return'];
    }
    node.sibling['return'] = node['return'];
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child['return'] = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node['return'] || node['return'] === currentParent) {
        return null;
      }
      node = node['return'];
    }
    node.sibling['return'] = node['return'];
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst['return']) {
    inst = inst['return'];
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevelImpl(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      bookKeeping.ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    _handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

// TODO: can we stop exporting these?
var _enabled = true;
var _handleTopLevel = void 0;

function setHandleTopLevel(handleTopLevel) {
  _handleTopLevel = handleTopLevel;
}

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {string} topLevelType Record from `BrowserEventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, handlerBaseName, element) {
  if (!element) {
    return null;
  }
  return EventListener.listen(element, handlerBaseName, dispatchEvent.bind(null, topLevelType));
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {string} topLevelType Record from `BrowserEventConstants`.
 * @param {string} handlerBaseName Event name (e.g. "click").
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, handlerBaseName, element) {
  if (!element) {
    return null;
  }
  return EventListener.capture(element, handlerBaseName, dispatchEvent.bind(null, topLevelType));
}

function dispatchEvent(topLevelType, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedUpdates(handleTopLevelImpl, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

var ReactDOMEventListener = Object.freeze({
	get _enabled () { return _enabled; },
	get _handleTopLevel () { return _handleTopLevel; },
	setHandleTopLevel: setHandleTopLevel,
	setEnabled: setEnabled,
	isEnabled: isEnabled,
	trapBubbledEvent: trapBubbledEvent,
	trapCapturedEvent: trapCapturedEvent,
	dispatchEvent: dispatchEvent
});

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

/**
 * Types of raw signals from the browser caught at the top level.
 *
 * For events like 'submit' which don't consistently bubble (which we
 * trap at a lower node than `document`), binding at `document` would
 * cause duplicate events so we don't include them here.
 */
var topLevelTypes$1 = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCancel: 'cancel',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topClose: 'close',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoad: 'load',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topToggle: 'toggle',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

var BrowserEventConstants = {
  topLevelTypes: topLevelTypes$1
};

function runEventQueueInBatch(events) {
  enqueueEvents(events);
  processEventQueue(false);
}

/**
 * Streams a fired top-level event to `EventPluginHub` where plugins have the
 * opportunity to create `ReactEvent`s to be dispatched.
 */
function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventQueueInBatch(events);
}

var topLevelTypes = BrowserEventConstants.topLevelTypes;

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var reactTopListenersCounter = 0;

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} contentDocumentHandle Document which owns the container
 */
function listenTo(registrationName, contentDocumentHandle) {
  var mountAt = contentDocumentHandle;
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      if (dependency === 'topWheel') {
        if (isEventSupported('wheel')) {
          trapBubbledEvent('topWheel', 'wheel', mountAt);
        } else if (isEventSupported('mousewheel')) {
          trapBubbledEvent('topWheel', 'mousewheel', mountAt);
        } else {
          // Firefox needs to capture a different mouse scroll event.
          // @see http://www.quirksmode.org/dom/events/tests/scroll.html
          trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
        }
      } else if (dependency === 'topScroll') {
        trapCapturedEvent('topScroll', 'scroll', mountAt);
      } else if (dependency === 'topFocus' || dependency === 'topBlur') {
        trapCapturedEvent('topFocus', 'focus', mountAt);
        trapCapturedEvent('topBlur', 'blur', mountAt);

        // to make sure blur and focus event listeners are only attached once
        isListening.topBlur = true;
        isListening.topFocus = true;
      } else if (dependency === 'topCancel') {
        if (isEventSupported('cancel', true)) {
          trapCapturedEvent('topCancel', 'cancel', mountAt);
        }
        isListening.topCancel = true;
      } else if (dependency === 'topClose') {
        if (isEventSupported('close', true)) {
          trapCapturedEvent('topClose', 'close', mountAt);
        }
        isListening.topClose = true;
      } else if (topLevelTypes.hasOwnProperty(dependency)) {
        trapBubbledEvent(dependency, topLevelTypes[dependency], mountAt);
      }

      isListening[dependency] = true;
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];
  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      return false;
    }
  }
  return true;
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode$$1 = selection.focusNode;
  var focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode$$1.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode$$1, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode$$1, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode$$1 && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode$$1 && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElement();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElement();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    focusNode(priorFocusedElem);

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent$1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE ? nativeEventTarget : nativeEventTarget.ownerDocument;
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent$1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent$1.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'toggle', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes$4[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = ['topAbort', 'topCancel', 'topCanPlay', 'topCanPlayThrough', 'topClose', 'topDurationChange', 'topEmptied', 'topEncrypted', 'topEnded', 'topError', 'topInput', 'topInvalid', 'topLoad', 'topLoadedData', 'topLoadedMetadata', 'topLoadStart', 'topPause', 'topPlay', 'topPlaying', 'topProgress', 'topRateChange', 'topReset', 'topSeeked', 'topSeeking', 'topStalled', 'topSubmit', 'topSuspend', 'topTimeUpdate', 'topToggle', 'topVolumeChange', 'topWaiting'];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warning(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent$1;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

setHandleTopLevel(handleTopLevel);

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection$1.injectEventPluginOrder(DOMEventPluginOrder);
injection$2.injectComponentTree(ReactDOMComponentTree);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection$1.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

var enableAsyncSubtreeAPI = true;
var enableAsyncSchedulingByDefaultInReactDOM = false;
// Exports React.Fragment
var enableReactFragment = false;
// Exports ReactDOM.createRoot
var enableCreateRoot = false;
var enableUserTimingAPI = true;

// Mutating mode (React DOM, React ART, React Native):
var enableMutatingReconciler = true;
// Experimental noop mode (currently unused):
var enableNoopReconciler = false;
// Experimental persistent mode (CS):
var enablePersistentReconciler = false;

// Only used in www builds.

var valueStack = [];

{
  var fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}



function pop(cursor, fiber) {
  if (index < 0) {
    {
      warning(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warning(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

function reset$1() {
  while (index > -1) {
    valueStack[index] = null;

    {
      fiberStack[index] = null;
    }

    index--;
  }
}

var describeComponentFrame = function (name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
};

function describeFiber(fiber) {
  switch (fiber.tag) {
    case IndeterminateComponent:
    case FunctionalComponent:
    case ClassComponent:
    case HostComponent:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner);
      }
      return describeComponentFrame(name, source, ownerName);
    default:
      return '';
  }
}

// This function can only be called with a work-in-progress fiber and
// only during begin or complete phase. Do not call it under any other
// circumstances.
function getStackAddendumByWorkInProgressFiber(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    // Otherwise this return pointer might point to the wrong tree:
    node = node['return'];
  } while (node);
  return info;
}

function getCurrentFiberOwnerName() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    var owner = fiber._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner);
    }
  }
  return null;
}

function getCurrentFiberStackAddendum() {
  {
    var fiber = ReactDebugCurrentFiber.current;
    if (fiber === null) {
      return null;
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackAddendumByWorkInProgressFiber(fiber);
  }
  return null;
}

function resetCurrentFiber() {
  ReactDebugCurrentFrame.getCurrentStack = null;
  ReactDebugCurrentFiber.current = null;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentFiber(fiber) {
  ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum;
  ReactDebugCurrentFiber.current = fiber;
  ReactDebugCurrentFiber.phase = null;
}

function setCurrentPhase(phase) {
  ReactDebugCurrentFiber.phase = phase;
}

var ReactDebugCurrentFiber = {
  current: null,
  phase: null,
  resetCurrentFiber: resetCurrentFiber,
  setCurrentFiber: setCurrentFiber,
  setCurrentPhase: setCurrentPhase,
  getCurrentFiberOwnerName: getCurrentFiberOwnerName,
  getCurrentFiberStackAddendum: getCurrentFiberStackAddendum
};

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning$$1) {
  var prefix = warning$$1 ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning$$1 ? ' Warning: ' + warning$$1 : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning$$1) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning$$1);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning$$1) {
  var componentName = getComponentName(fiber) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning$$1);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case ReturnComponent:
    case Fragment:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber['return'];
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber['return'] !== null) {
    resumeTimersRecursively(fiber['return']);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning$$1 = didExpire ? 'React was blocked by main thread' : null;
      endMark('(Waiting for async callback...)', '(Waiting for async callback...)', warning$$1);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber['return'];
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber['return'];
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning$$1 = 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning$$1);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning$$1 = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning$$1);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning$$1 = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning$$1 = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy) || 'Unknown';
        warning$$1 = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning$$1 = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark('(React Tree Reconciliation)', '(React Tree Reconciliation)', warning$$1);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning$$1 = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning$$1 = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning$$1 = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning$$1);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

{
  var warnedAboutMissingGetChildContext = {};
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyObject;

function getUnmaskedContext(workInProgress) {
  var hasOwnContext = isContextProvider(workInProgress);
  if (hasOwnContext) {
    // If the fiber is a context provider itself, when we read its context
    // we have already pushed its own child context on the stack. A context
    // provider should not "see" its own child context. Therefore we read the
    // previous (parent) context instead for a context provider.
    return previousContext;
  }
  return contextStackCursor.current;
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

function getMaskedContext(workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyObject;
  }

  // Avoid recreating masked context unless unmasked context has changed.
  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
  // This may trigger infinite loops if componentWillReceiveProps calls setState.
  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  {
    var name = getComponentName(workInProgress) || 'Unknown';
    checkPropTypes(contextTypes, context, 'context', name, ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // Context is created before the class component is instantiated so check for instance.
  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
}

function hasContextChanged() {
  return didPerformWorkStackCursor.current;
}

function isContextConsumer(fiber) {
  return fiber.tag === ClassComponent && fiber.type.contextTypes != null;
}

function isContextProvider(fiber) {
  return fiber.tag === ClassComponent && fiber.type.childContextTypes != null;
}

function popContextProvider(fiber) {
  if (!isContextProvider(fiber)) {
    return;
  }

  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function popTopLevelContextObject(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function pushTopLevelContextObject(fiber, context, didChange) {
  !(contextStackCursor.cursor == null) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
}

function processChildContext(fiber, parentContext) {
  var instance = fiber.stateNode;
  var childContextTypes = fiber.type.childContextTypes;

  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
  if (typeof instance.getChildContext !== 'function') {
    {
      var componentName = getComponentName(fiber) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warning(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  {
    ReactDebugCurrentFiber.setCurrentPhase('getChildContext');
  }
  startPhaseTimer(fiber, 'getChildContext');
  childContext = instance.getChildContext();
  stopPhaseTimer();
  {
    ReactDebugCurrentFiber.setCurrentPhase(null);
  }
  for (var contextKey in childContext) {
    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(fiber) || 'Unknown', contextKey) : void 0;
  }
  {
    var name = getComponentName(fiber) || 'Unknown';
    checkPropTypes(childContextTypes, childContext, 'child context', name,
    // In practice, there is one case in which we won't get a stack. It's when
    // somebody calls unstable_renderSubtreeIntoContainer() and we process
    // context from the parent component instance. The stack will be missing
    // because it's outside of the reconciliation, and so the pointer has not
    // been set. This is rare and doesn't matter. We'll also remove that API.
    ReactDebugCurrentFiber.getCurrentFiberStackAddendum);
  }

  return _assign({}, parentContext, childContext);
}

function pushContextProvider(workInProgress) {
  if (!isContextProvider(workInProgress)) {
    return false;
  }

  var instance = workInProgress.stateNode;
  // We push the context as early as possible to ensure stack integrity.
  // If the instance does not exist yet, we will push null at first,
  // and replace it on the stack later when invalidating the context.
  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

  // Remember the parent context so we can merge with it later.
  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

  return true;
}

function invalidateContextProvider(workInProgress, didChange) {
  var instance = workInProgress.stateNode;
  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  if (didChange) {
    // Merge parent and own context.
    // Skip this if we're not updating due to sCU.
    // This avoids unnecessarily recomputing memoized values.
    var mergedContext = processChildContext(workInProgress, previousContext);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

    // Replace the old (or empty) context with the new one.
    // It is important to unwind the context in the reverse order.
    pop(didPerformWorkStackCursor, workInProgress);
    pop(contextStackCursor, workInProgress);
    // Now push the new context and mark that it has changed.
    push(contextStackCursor, mergedContext, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  } else {
    pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }
}

function resetContext() {
  previousContext = emptyObject;
  contextStackCursor.current = emptyObject;
  didPerformWorkStackCursor.current = false;
}

function findCurrentUnmaskedContext(fiber) {
  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
  // makes sense elsewhere
  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  var node = fiber;
  while (node.tag !== HostRoot) {
    if (isContextProvider(node)) {
      return node.stateNode.__reactInternalMemoizedMergedChildContext;
    }
    var parent = node['return'];
    !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    node = parent;
  }
  return node.stateNode.context;
}

var NoWork = 0; // TODO: Use an opaque type once ESLint et al support the syntax

var Sync = 1;
var Never = 2147483647; // Max int32: Math.pow(2, 31) - 1

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = 2;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return (ms / UNIT_SIZE | 0) + MAGIC_NUMBER_OFFSET;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return ceiling(currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

var NoContext = 0;
var AsyncUpdates = 1;

{
  var hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    /* eslint-disable no-new */
    new Map([[nonExtensibleObject, null]]);
    new Set([nonExtensibleObject]);
    /* eslint-enable no-new */
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


{
  var debugCounter = 1;
}

function FiberNode(tag, key, internalContextTag) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this['return'] = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = null;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;

  this.internalContextTag = internalContextTag;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;

  this.alternate = null;

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, key, internalContextTag) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, key, internalContextTag);
};

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, current.key, current.internalContextTag);
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;
  }

  workInProgress.expirationTime = expirationTime;
  workInProgress.pendingProps = pendingProps;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  return workInProgress;
}

function createHostRootFiber() {
  var fiber = createFiber(HostRoot, null, NoContext);
  return fiber;
}

function createFiberFromElement(element, internalContextTag, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }

  var fiber = void 0;
  var type = element.type,
      key = element.key;

  if (typeof type === 'function') {
    fiber = shouldConstruct(type) ? createFiber(ClassComponent, key, internalContextTag) : createFiber(IndeterminateComponent, key, internalContextTag);
    fiber.type = type;
    fiber.pendingProps = element.props;
  } else if (typeof type === 'string') {
    fiber = createFiber(HostComponent, key, internalContextTag);
    fiber.type = type;
    fiber.pendingProps = element.props;
  } else if (typeof type === 'object' && type !== null && typeof type.tag === 'number') {
    // Currently assumed to be a continuation and therefore is a fiber already.
    // TODO: The yield system is currently broken for updates in some cases.
    // The reified yield stores a fiber, but we don't know which fiber that is;
    // the current or a workInProgress? When the continuation gets rendered here
    // we don't know if we can reuse that fiber or if we need to clone it.
    // There is probably a clever way to restructure this.
    fiber = type;
    fiber.pendingProps = element.props;
  } else {
    var info = '';
    {
      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
        info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
      }
      var ownerName = owner ? getComponentName(owner) : null;
      if (ownerName) {
        info += '\n\nCheck the render method of `' + ownerName + '`.';
      }
    }
    invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
  }

  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }

  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromFragment(elements, internalContextTag, expirationTime, key) {
  var fiber = createFiber(Fragment, key, internalContextTag);
  fiber.pendingProps = elements;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromText(content, internalContextTag, expirationTime) {
  var fiber = createFiber(HostText, null, internalContextTag);
  fiber.pendingProps = content;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, NoContext);
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromCall(call, internalContextTag, expirationTime) {
  var fiber = createFiber(CallComponent, call.key, internalContextTag);
  fiber.type = call.handler;
  fiber.pendingProps = call;
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromReturn(returnNode, internalContextTag, expirationTime) {
  var fiber = createFiber(ReturnComponent, null, internalContextTag);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromPortal(portal, internalContextTag, expirationTime) {
  var fiber = createFiber(HostPortal, portal.key, internalContextTag);
  fiber.pendingProps = portal.children || [];
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

function createFiberRoot(containerInfo, hydrate) {
  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber();
  var root = {
    current: uninitializedFiber,
    containerInfo: containerInfo,
    pendingChildren: null,
    remainingExpirationTime: NoWork,
    isReadyForCommit: false,
    finishedWork: null,
    context: null,
    pendingContext: null,
    hydrate: hydrate,
    nextScheduledRoot: null
  };
  uninitializedFiber.stateNode = root;
  return root;
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

function catchErrors(fn) {
  return function (arg) {
    try {
      return fn(arg);
    } catch (err) {
      if (true && !hasLoggedError) {
        hasLoggedError = true;
        warning(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warning(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = catchErrors(function (root) {
      return hook.onCommitFiberRoot(rendererID, root);
    });
    onCommitFiberUnmount = catchErrors(function (fiber) {
      return hook.onCommitFiberUnmount(rendererID, fiber);
    });
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warning(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

{
  var didWarnUpdateInsideUpdate = false;
}

// Callbacks are not validated until invocation


// Singly linked-list of updates. When an update is scheduled, it is added to
// the queue of the current fiber and the work-in-progress fiber. The two queues
// are separate but they share a persistent structure.
//
// During reconciliation, updates are removed from the work-in-progress fiber,
// but they remain on the current fiber. That ensures that if a work-in-progress
// is aborted, the aborted updates are recovered by cloning from current.
//
// The work-in-progress queue is always a subset of the current queue.
//
// When the tree is committed, the work-in-progress becomes the current.


function createUpdateQueue(baseState) {
  var queue = {
    baseState: baseState,
    expirationTime: NoWork,
    first: null,
    last: null,
    callbackList: null,
    hasForceUpdate: false,
    isInitialized: false
  };
  {
    queue.isProcessing = false;
  }
  return queue;
}

function insertUpdateIntoQueue(queue, update) {
  // Append the update to the end of the list.
  if (queue.last === null) {
    // Queue is empty
    queue.first = queue.last = update;
  } else {
    queue.last.next = update;
    queue.last = update;
  }
  if (queue.expirationTime === NoWork || queue.expirationTime > update.expirationTime) {
    queue.expirationTime = update.expirationTime;
  }
}

function insertUpdateIntoFiber(fiber, update) {
  // We'll have at least one and at most two distinct update queues.
  var alternateFiber = fiber.alternate;
  var queue1 = fiber.updateQueue;
  if (queue1 === null) {
    // TODO: We don't know what the base state will be until we begin work.
    // It depends on which fiber is the next current. Initialize with an empty
    // base state, then set to the memoizedState when rendering. Not super
    // happy with this approach.
    queue1 = fiber.updateQueue = createUpdateQueue(null);
  }

  var queue2 = void 0;
  if (alternateFiber !== null) {
    queue2 = alternateFiber.updateQueue;
    if (queue2 === null) {
      queue2 = alternateFiber.updateQueue = createUpdateQueue(null);
    }
  } else {
    queue2 = null;
  }
  queue2 = queue2 !== queue1 ? queue2 : null;

  // Warn if an update is scheduled from inside an updater function.
  {
    if ((queue1.isProcessing || queue2 !== null && queue2.isProcessing) && !didWarnUpdateInsideUpdate) {
      warning(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }

  // If there's only one queue, add the update to that queue and exit.
  if (queue2 === null) {
    insertUpdateIntoQueue(queue1, update);
    return;
  }

  // If either queue is empty, we need to add to both queues.
  if (queue1.last === null || queue2.last === null) {
    insertUpdateIntoQueue(queue1, update);
    insertUpdateIntoQueue(queue2, update);
    return;
  }

  // If both lists are not empty, the last update is the same for both lists
  // because of structural sharing. So, we should only append to one of
  // the lists.
  insertUpdateIntoQueue(queue1, update);
  // But we still need to update the `last` pointer of queue2.
  queue2.last = update;
}

function getUpdateExpirationTime(fiber) {
  if (fiber.tag !== ClassComponent && fiber.tag !== HostRoot) {
    return NoWork;
  }
  var updateQueue = fiber.updateQueue;
  if (updateQueue === null) {
    return NoWork;
  }
  return updateQueue.expirationTime;
}

function getStateFromUpdate(update, instance, prevState, props) {
  var partialState = update.partialState;
  if (typeof partialState === 'function') {
    var updateFn = partialState;
    return updateFn.call(instance, prevState, props);
  } else {
    return partialState;
  }
}

function processUpdateQueue(current, workInProgress, queue, instance, props, renderExpirationTime) {
  if (current !== null && current.updateQueue === queue) {
    // We need to create a work-in-progress queue, by cloning the current queue.
    var currentQueue = queue;
    queue = workInProgress.updateQueue = {
      baseState: currentQueue.baseState,
      expirationTime: currentQueue.expirationTime,
      first: currentQueue.first,
      last: currentQueue.last,
      isInitialized: currentQueue.isInitialized,
      // These fields are no longer valid because they were already committed.
      // Reset them.
      callbackList: null,
      hasForceUpdate: false
    };
  }

  {
    // Set this flag so we can warn if setState is called inside the update
    // function of another setState.
    queue.isProcessing = true;
  }

  // Reset the remaining expiration time. If we skip over any updates, we'll
  // increase this accordingly.
  queue.expirationTime = NoWork;

  // TODO: We don't know what the base state will be until we begin work.
  // It depends on which fiber is the next current. Initialize with an empty
  // base state, then set to the memoizedState when rendering. Not super
  // happy with this approach.
  var state = void 0;
  if (queue.isInitialized) {
    state = queue.baseState;
  } else {
    state = queue.baseState = workInProgress.memoizedState;
    queue.isInitialized = true;
  }
  var dontMutatePrevState = true;
  var update = queue.first;
  var didSkip = false;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime > renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      var remainingExpirationTime = queue.expirationTime;
      if (remainingExpirationTime === NoWork || remainingExpirationTime > updateExpirationTime) {
        // Update the remaining expiration time.
        queue.expirationTime = updateExpirationTime;
      }
      if (!didSkip) {
        didSkip = true;
        queue.baseState = state;
      }
      // Continue to the next update.
      update = update.next;
      continue;
    }

    // This update does have sufficient priority.

    // If no previous updates were skipped, drop this update from the queue by
    // advancing the head of the list.
    if (!didSkip) {
      queue.first = update.next;
      if (queue.first === null) {
        queue.last = null;
      }
    }

    // Process the update
    var _partialState = void 0;
    if (update.isReplace) {
      state = getStateFromUpdate(update, instance, state, props);
      dontMutatePrevState = true;
    } else {
      _partialState = getStateFromUpdate(update, instance, state, props);
      if (_partialState) {
        if (dontMutatePrevState) {
          // $FlowFixMe: Idk how to type this properly.
          state = _assign({}, state, _partialState);
        } else {
          state = _assign(state, _partialState);
        }
        dontMutatePrevState = false;
      }
    }
    if (update.isForced) {
      queue.hasForceUpdate = true;
    }
    if (update.callback !== null) {
      // Append to list of callbacks.
      var _callbackList = queue.callbackList;
      if (_callbackList === null) {
        _callbackList = queue.callbackList = [];
      }
      _callbackList.push(update);
    }
    update = update.next;
  }

  if (queue.callbackList !== null) {
    workInProgress.effectTag |= Callback;
  } else if (queue.first === null && !queue.hasForceUpdate) {
    // The queue is empty. We can reset it.
    workInProgress.updateQueue = null;
  }

  if (!didSkip) {
    didSkip = true;
    queue.baseState = state;
  }

  {
    // No longer processing.
    queue.isProcessing = false;
  }

  return state;
}

function commitCallbacks(queue, context) {
  var callbackList = queue.callbackList;
  if (callbackList === null) {
    return;
  }
  // Set the list to null to make sure they don't get called more than once.
  queue.callbackList = null;
  for (var i = 0; i < callbackList.length; i++) {
    var update = callbackList[i];
    var _callback = update.callback;
    // This update might be processed again. Clear the callback so it's only
    // called once.
    update.callback = null;
    !(typeof _callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback) : void 0;
    _callback.call(context);
  }
}

var fakeInternalInstance = {};
var isArray = Array.isArray;

{
  var didWarnAboutStateAssignmentForComponent = {};

  var warnOnInvalidCallback = function (callback, callerName) {
    warning(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

var ReactFiberClassComponent = function (scheduleWork, computeExpirationForFiber, memoizeProps, memoizeState) {
  // Class component state updater
  var updater = {
    isMounted: isMounted,
    enqueueSetState: function (instance, partialState, callback) {
      var fiber = get(instance);
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'setState');
      }
      var expirationTime = computeExpirationForFiber(fiber);
      var update = {
        expirationTime: expirationTime,
        partialState: partialState,
        callback: callback,
        isReplace: false,
        isForced: false,
        nextCallback: null,
        next: null
      };
      insertUpdateIntoFiber(fiber, update);
      scheduleWork(fiber, expirationTime);
    },
    enqueueReplaceState: function (instance, state, callback) {
      var fiber = get(instance);
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'replaceState');
      }
      var expirationTime = computeExpirationForFiber(fiber);
      var update = {
        expirationTime: expirationTime,
        partialState: state,
        callback: callback,
        isReplace: true,
        isForced: false,
        nextCallback: null,
        next: null
      };
      insertUpdateIntoFiber(fiber, update);
      scheduleWork(fiber, expirationTime);
    },
    enqueueForceUpdate: function (instance, callback) {
      var fiber = get(instance);
      callback = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(callback, 'forceUpdate');
      }
      var expirationTime = computeExpirationForFiber(fiber);
      var update = {
        expirationTime: expirationTime,
        partialState: null,
        callback: callback,
        isReplace: false,
        isForced: true,
        nextCallback: null,
        next: null
      };
      insertUpdateIntoFiber(fiber, update);
      scheduleWork(fiber, expirationTime);
    }
  };

  function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
    if (oldProps === null || workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate) {
      // If the workInProgress already has an Update effect, return true
      return true;
    }

    var instance = workInProgress.stateNode;
    var type = workInProgress.type;
    if (typeof instance.shouldComponentUpdate === 'function') {
      startPhaseTimer(workInProgress, 'shouldComponentUpdate');
      var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
      stopPhaseTimer();

      {
        warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(workInProgress) || 'Unknown');
      }

      return shouldUpdate;
    }

    if (type.prototype && type.prototype.isPureReactComponent) {
      return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
    }

    return true;
  }

  function checkClassInstance(workInProgress) {
    var instance = workInProgress.stateNode;
    var type = workInProgress.type;
    {
      var name = getComponentName(workInProgress);
      var renderPresent = instance.render;

      if (!renderPresent) {
        if (type.prototype && typeof type.prototype.render === 'function') {
          warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
        } else {
          warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
        }
      }

      var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
      warning(noGetInitialStateOnES6, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
      var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
      warning(noGetDefaultPropsOnES6, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
      var noInstancePropTypes = !instance.propTypes;
      warning(noInstancePropTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
      var noInstanceContextTypes = !instance.contextTypes;
      warning(noInstanceContextTypes, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
      var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
      warning(noComponentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
      if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
        warning(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(workInProgress) || 'A pure component');
      }
      var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
      warning(noComponentDidUnmount, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
      var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
      warning(noComponentDidReceiveProps, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name);
      var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
      warning(noComponentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
      var hasMutatedProps = instance.props !== workInProgress.pendingProps;
      warning(instance.props === undefined || !hasMutatedProps, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
      var noInstanceDefaultProps = !instance.defaultProps;
      warning(noInstanceDefaultProps, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
    }

    var state = instance.state;
    if (state && (typeof state !== 'object' || isArray(state))) {
      invariant(false, '%s.state: must be set to an object or null', getComponentName(workInProgress));
    }
    if (typeof instance.getChildContext === 'function') {
      !(typeof workInProgress.type.childContextTypes === 'object') ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', getComponentName(workInProgress)) : void 0;
    }
  }

  function resetInputPointers(workInProgress, instance) {
    instance.props = workInProgress.memoizedProps;
    instance.state = workInProgress.memoizedState;
  }

  function adoptClassInstance(workInProgress, instance) {
    instance.updater = updater;
    workInProgress.stateNode = instance;
    // The instance needs access to the fiber so that it can schedule updates
    set(instance, workInProgress);
    {
      instance._reactInternalInstance = fakeInternalInstance;
    }
  }

  function constructClassInstance(workInProgress, props) {
    var ctor = workInProgress.type;
    var unmaskedContext = getUnmaskedContext(workInProgress);
    var needsContext = isContextConsumer(workInProgress);
    var context = needsContext ? getMaskedContext(workInProgress, unmaskedContext) : emptyObject;
    var instance = new ctor(props, context);
    adoptClassInstance(workInProgress, instance);

    // Cache unmasked context so we can avoid recreating masked context unless necessary.
    // ReactFiberContext usually updates this cache but can't for newly-created instances.
    if (needsContext) {
      cacheContext(workInProgress, unmaskedContext, context);
    }

    return instance;
  }

  function callComponentWillMount(workInProgress, instance) {
    startPhaseTimer(workInProgress, 'componentWillMount');
    var oldState = instance.state;
    instance.componentWillMount();

    stopPhaseTimer();

    if (oldState !== instance.state) {
      {
        warning(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress));
      }
      updater.enqueueReplaceState(instance, instance.state, null);
    }
  }

  function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
    startPhaseTimer(workInProgress, 'componentWillReceiveProps');
    var oldState = instance.state;
    instance.componentWillReceiveProps(newProps, newContext);
    stopPhaseTimer();

    if (instance.state !== oldState) {
      {
        var componentName = getComponentName(workInProgress) || 'Component';
        if (!didWarnAboutStateAssignmentForComponent[componentName]) {
          warning(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
          didWarnAboutStateAssignmentForComponent[componentName] = true;
        }
      }
      updater.enqueueReplaceState(instance, instance.state, null);
    }
  }

  // Invokes the mount life-cycles on a previously never rendered instance.
  function mountClassInstance(workInProgress, renderExpirationTime) {
    var current = workInProgress.alternate;

    {
      checkClassInstance(workInProgress);
    }

    var instance = workInProgress.stateNode;
    var state = instance.state || null;

    var props = workInProgress.pendingProps;
    !props ? invariant(false, 'There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    var unmaskedContext = getUnmaskedContext(workInProgress);

    instance.props = props;
    instance.state = workInProgress.memoizedState = state;
    instance.refs = emptyObject;
    instance.context = getMaskedContext(workInProgress, unmaskedContext);

    if (enableAsyncSubtreeAPI && workInProgress.type != null && workInProgress.type.prototype != null && workInProgress.type.prototype.unstable_isAsyncReactComponent === true) {
      workInProgress.internalContextTag |= AsyncUpdates;
    }

    if (typeof instance.componentWillMount === 'function') {
      callComponentWillMount(workInProgress, instance);
      // If we had additional state updates during this life-cycle, let's
      // process them now.
      var updateQueue = workInProgress.updateQueue;
      if (updateQueue !== null) {
        instance.state = processUpdateQueue(current, workInProgress, updateQueue, instance, props, renderExpirationTime);
      }
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  }

  // Called on a preexisting class instance. Returns false if a resumed render
  // could be reused.
  // function resumeMountClassInstance(
  //   workInProgress: Fiber,
  //   priorityLevel: PriorityLevel,
  // ): boolean {
  //   const instance = workInProgress.stateNode;
  //   resetInputPointers(workInProgress, instance);

  //   let newState = workInProgress.memoizedState;
  //   let newProps = workInProgress.pendingProps;
  //   if (!newProps) {
  //     // If there isn't any new props, then we'll reuse the memoized props.
  //     // This could be from already completed work.
  //     newProps = workInProgress.memoizedProps;
  //     invariant(
  //       newProps != null,
  //       'There should always be pending or memoized props. This error is ' +
  //         'likely caused by a bug in React. Please file an issue.',
  //     );
  //   }
  //   const newUnmaskedContext = getUnmaskedContext(workInProgress);
  //   const newContext = getMaskedContext(workInProgress, newUnmaskedContext);

  //   const oldContext = instance.context;
  //   const oldProps = workInProgress.memoizedProps;

  //   if (
  //     typeof instance.componentWillReceiveProps === 'function' &&
  //     (oldProps !== newProps || oldContext !== newContext)
  //   ) {
  //     callComponentWillReceiveProps(
  //       workInProgress,
  //       instance,
  //       newProps,
  //       newContext,
  //     );
  //   }

  //   // Process the update queue before calling shouldComponentUpdate
  //   const updateQueue = workInProgress.updateQueue;
  //   if (updateQueue !== null) {
  //     newState = processUpdateQueue(
  //       workInProgress,
  //       updateQueue,
  //       instance,
  //       newState,
  //       newProps,
  //       priorityLevel,
  //     );
  //   }

  //   // TODO: Should we deal with a setState that happened after the last
  //   // componentWillMount and before this componentWillMount? Probably
  //   // unsupported anyway.

  //   if (
  //     !checkShouldComponentUpdate(
  //       workInProgress,
  //       workInProgress.memoizedProps,
  //       newProps,
  //       workInProgress.memoizedState,
  //       newState,
  //       newContext,
  //     )
  //   ) {
  //     // Update the existing instance's state, props, and context pointers even
  //     // though we're bailing out.
  //     instance.props = newProps;
  //     instance.state = newState;
  //     instance.context = newContext;
  //     return false;
  //   }

  //   // Update the input pointers now so that they are correct when we call
  //   // componentWillMount
  //   instance.props = newProps;
  //   instance.state = newState;
  //   instance.context = newContext;

  //   if (typeof instance.componentWillMount === 'function') {
  //     callComponentWillMount(workInProgress, instance);
  //     // componentWillMount may have called setState. Process the update queue.
  //     const newUpdateQueue = workInProgress.updateQueue;
  //     if (newUpdateQueue !== null) {
  //       newState = processUpdateQueue(
  //         workInProgress,
  //         newUpdateQueue,
  //         instance,
  //         newState,
  //         newProps,
  //         priorityLevel,
  //       );
  //     }
  //   }

  //   if (typeof instance.componentDidMount === 'function') {
  //     workInProgress.effectTag |= Update;
  //   }

  //   instance.state = newState;

  //   return true;
  // }

  // Invokes the update life-cycles and returns false if it shouldn't rerender.
  function updateClassInstance(current, workInProgress, renderExpirationTime) {
    var instance = workInProgress.stateNode;
    resetInputPointers(workInProgress, instance);

    var oldProps = workInProgress.memoizedProps;
    var newProps = workInProgress.pendingProps;
    if (!newProps) {
      // If there aren't any new props, then we'll reuse the memoized props.
      // This could be from already completed work.
      newProps = oldProps;
      !(newProps != null) ? invariant(false, 'There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    }
    var oldContext = instance.context;
    var newUnmaskedContext = getUnmaskedContext(workInProgress);
    var newContext = getMaskedContext(workInProgress, newUnmaskedContext);

    // Note: During these life-cycles, instance.props/instance.state are what
    // ever the previously attempted to render - not the "current". However,
    // during componentDidUpdate we pass the "current" props.

    if (typeof instance.componentWillReceiveProps === 'function' && (oldProps !== newProps || oldContext !== newContext)) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
    }

    // Compute the next state using the memoized state and the update queue.
    var oldState = workInProgress.memoizedState;
    // TODO: Previous state can be null.
    var newState = void 0;
    if (workInProgress.updateQueue !== null) {
      newState = processUpdateQueue(current, workInProgress, workInProgress.updateQueue, instance, newProps, renderExpirationTime);
    } else {
      newState = oldState;
    }

    if (oldProps === newProps && oldState === newState && !hasContextChanged() && !(workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate)) {
      // If an update was already in progress, we should schedule an Update
      // effect even though we're bailing out, so that cWU/cDU are called.
      if (typeof instance.componentDidUpdate === 'function') {
        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
          workInProgress.effectTag |= Update;
        }
      }
      return false;
    }

    var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

    if (shouldUpdate) {
      if (typeof instance.componentWillUpdate === 'function') {
        startPhaseTimer(workInProgress, 'componentWillUpdate');
        instance.componentWillUpdate(newProps, newState, newContext);
        stopPhaseTimer();
      }
      if (typeof instance.componentDidUpdate === 'function') {
        workInProgress.effectTag |= Update;
      }
    } else {
      // If an update was already in progress, we should schedule an Update
      // effect even though we're bailing out, so that cWU/cDU are called.
      if (typeof instance.componentDidUpdate === 'function') {
        if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
          workInProgress.effectTag |= Update;
        }
      }

      // If shouldComponentUpdate returned false, we should still update the
      // memoized props/state to indicate that this work can be reused.
      memoizeProps(workInProgress, newProps);
      memoizeState(workInProgress, newState);
    }

    // Update the existing instance's state, props, and context pointers even
    // if shouldComponentUpdate returns false.
    instance.props = newProps;
    instance.state = newState;
    instance.context = newContext;

    return shouldUpdate;
  }

  return {
    adoptClassInstance: adoptClassInstance,
    constructClassInstance: constructClassInstance,
    mountClassInstance: mountClassInstance,
    // resumeMountClassInstance,
    updateClassInstance: updateClassInstance
  };
};

// The Symbol used to tag the special React types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_PORTAL_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.portal') || 0xeaca;

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

var getCurrentFiberStackAddendum$1 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


{
  var didWarnAboutMaps = false;
  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  var ownerHasKeyUseWarning = {};
  var ownerHasFunctionTypeWarning = {};

  var warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$1() || '');
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$1());
  };
}

var isArray$1 = Array.isArray;

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var REACT_ELEMENT_TYPE;
var REACT_CALL_TYPE;
var REACT_RETURN_TYPE;
var REACT_FRAGMENT_TYPE;
if (typeof Symbol === 'function' && Symbol['for']) {
  REACT_ELEMENT_TYPE = Symbol['for']('react.element');
  REACT_CALL_TYPE = Symbol['for']('react.call');
  REACT_RETURN_TYPE = Symbol['for']('react.return');
  REACT_FRAGMENT_TYPE = Symbol['for']('react.fragment');
} else {
  REACT_ELEMENT_TYPE = 0xeac7;
  REACT_CALL_TYPE = 0xeac8;
  REACT_RETURN_TYPE = 0xeac9;
  REACT_FRAGMENT_TYPE = 0xeacb;
}

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable === 'undefined') {
    return null;
  }
  var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
  return null;
}

function coerceRef(current, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function') {
    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
        inst = ownerFiber.stateNode;
      }
      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current !== null && current.ref !== null && current.ref._stringRef === stringRef) {
        return current.ref;
      }
      var ref = function (value) {
        var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).', mixedRef) : void 0;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$1() || '');
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + (getCurrentFiberStackAddendum$1() || '');

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$1() || '');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldClone, shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    if (!shouldClone) {
      // When we're reconciling in place we have a work in progress copy. We
      // actually want the current copy. If there is no current copy, then we
      // don't need to track deletion side-effects.
      if (childToDelete.alternate === null) {
        return;
      }
      childToDelete = childToDelete.alternate;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    if (shouldClone) {
      var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
      clone.index = 0;
      clone.sibling = null;
      return clone;
    } else {
      // We override the expiration time even if it is earlier, because if
      // we're reconciling at a later time that means that this was
      // down-prioritized.
      fiber.expirationTime = expirationTime;
      fiber.effectTag = NoEffect;
      fiber.index = 0;
      fiber.sibling = null;
      fiber.pendingProps = pendingProps;
      return fiber;
    }
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current = newFiber.alternate;
    if (current !== null) {
      var oldIndex = current.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current, textContent, expirationTime) {
    if (current === null || current.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, textContent, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current, element, expirationTime) {
    if (current !== null && current.type === element.type) {
      // Move based on index
      var existing = useFiber(current, element.props, expirationTime);
      existing.ref = coerceRef(current, element);
      existing['return'] = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.internalContextTag, expirationTime);
      created.ref = coerceRef(current, element);
      created['return'] = returnFiber;
      return created;
    }
  }

  function updateCall(returnFiber, current, call, expirationTime) {
    // TODO: Should this also compare handler to determine whether to reuse?
    if (current === null || current.tag !== CallComponent) {
      // Insert
      var created = createFiberFromCall(call, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    } else {
      // Move based on index
      var existing = useFiber(current, call, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updateReturn(returnFiber, current, returnNode, expirationTime) {
    if (current === null || current.tag !== ReturnComponent) {
      // Insert
      var created = createFiberFromReturn(returnNode, returnFiber.internalContextTag, expirationTime);
      created.type = returnNode.value;
      created['return'] = returnFiber;
      return created;
    } else {
      // Move based on index
      var existing = useFiber(current, null, expirationTime);
      existing.type = returnNode.value;
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updatePortal(returnFiber, current, portal, expirationTime) {
    if (current === null || current.tag !== HostPortal || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, portal.children || [], expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current, fragment, expirationTime, key) {
    if (current === null || current.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.internalContextTag, expirationTime, key);
      created['return'] = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current, fragment, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.internalContextTag, expirationTime);
      created['return'] = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              var _created = createFiberFromFragment(newChild.props.children, returnFiber.internalContextTag, expirationTime, newChild.key);
              _created['return'] = returnFiber;
              return _created;
            } else {
              var _created2 = createFiberFromElement(newChild, returnFiber.internalContextTag, expirationTime);
              _created2.ref = coerceRef(null, newChild);
              _created2['return'] = returnFiber;
              return _created2;
            }
          }

        case REACT_CALL_TYPE:
          {
            var _created3 = createFiberFromCall(newChild, returnFiber.internalContextTag, expirationTime);
            _created3['return'] = returnFiber;
            return _created3;
          }

        case REACT_RETURN_TYPE:
          {
            var _created4 = createFiberFromReturn(newChild, returnFiber.internalContextTag, expirationTime);
            _created4.type = newChild.value;
            _created4['return'] = returnFiber;
            return _created4;
          }

        case REACT_PORTAL_TYPE:
          {
            var _created5 = createFiberFromPortal(newChild, returnFiber.internalContextTag, expirationTime);
            _created5['return'] = returnFiber;
            return _created5;
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _created6 = createFiberFromFragment(newChild, returnFiber.internalContextTag, expirationTime, null);
        _created6['return'] = returnFiber;
        return _created6;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_CALL_TYPE:
          {
            if (newChild.key === key) {
              return updateCall(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_RETURN_TYPE:
          {
            // Returns don't have keys. If the previous node is implicitly keyed
            // we can continue to replace it without aborting even if it is not a
            // yield.
            if (key === null) {
              return updateReturn(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }

        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }

        case REACT_CALL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updateCall(returnFiber, _matchedFiber2, newChild, expirationTime);
          }

        case REACT_RETURN_TYPE:
          {
            // Returns don't have keys, so we neither have to check the old nor
            // new node for the key. If both are returns, they match.
            var _matchedFiber3 = existingChildren.get(newIdx) || null;
            return updateReturn(returnFiber, _matchedFiber3, newChild, expirationTime);
          }

        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber4 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber4, newChild, expirationTime);
          }
      }

      if (isArray$1(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber5 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber5, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_CALL_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$1());
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from boths ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren['delete'](_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    {
      // Warn about using Maps as children
      if (typeof newChildrenIterable.entries === 'function') {
        var possibleMap = newChildrenIterable;
        if (possibleMap.entries === iteratorFn) {
          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$1());
          didWarnAboutMaps = true;
        }
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren['delete'](_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing['return'] = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.internalContextTag, expirationTime);
    created['return'] = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.type === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(child, element);
          existing['return'] = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.internalContextTag, expirationTime, element.key);
      created['return'] = returnFiber;
      return created;
    } else {
      var _created7 = createFiberFromElement(element, returnFiber.internalContextTag, expirationTime);
      _created7.ref = coerceRef(currentFirstChild, element);
      _created7['return'] = returnFiber;
      return _created7;
    }
  }

  function reconcileSingleCall(returnFiber, currentFirstChild, call, expirationTime) {
    var key = call.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === CallComponent) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, call, expirationTime);
          existing['return'] = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromCall(call, returnFiber.internalContextTag, expirationTime);
    created['return'] = returnFiber;
    return created;
  }

  function reconcileSingleReturn(returnFiber, currentFirstChild, returnNode, expirationTime) {
    // There's no need to check for keys on yields since they're stateless.
    var child = currentFirstChild;
    if (child !== null) {
      if (child.tag === ReturnComponent) {
        deleteRemainingChildren(returnFiber, child.sibling);
        var existing = useFiber(child, null, expirationTime);
        existing.type = returnNode.value;
        existing['return'] = returnFiber;
        return existing;
      } else {
        deleteRemainingChildren(returnFiber, child);
      }
    }

    var created = createFiberFromReturn(returnNode, returnFiber.internalContextTag, expirationTime);
    created.type = returnNode.value;
    created['return'] = returnFiber;
    return created;
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing['return'] = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.internalContextTag, expirationTime);
    created['return'] = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    if (enableReactFragment && typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

        case REACT_CALL_TYPE:
          return placeSingleChild(reconcileSingleCall(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_RETURN_TYPE:
          return placeSingleChild(reconcileSingleReturn(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray$1(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined') {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionalComponent:
          {
            var Component = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true, true);

var reconcileChildFibersInPlace = ChildReconciler(false, true);

var mountChildFibersInPlace = ChildReconciler(false, false);

function cloneChildFibers(current, workInProgress) {
  !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild['return'] = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild['return'] = workInProgress;
  }
  newChild.sibling = null;
}

{
  var warnedAboutStatelessRefs = {};
}

var ReactFiberBeginWork = function (config, hostContext, hydrationContext, scheduleWork, computeExpirationForFiber) {
  var shouldSetTextContent = config.shouldSetTextContent,
      useSyncScheduling = config.useSyncScheduling,
      shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
  var pushHostContext = hostContext.pushHostContext,
      pushHostContainer = hostContext.pushHostContainer;
  var enterHydrationState = hydrationContext.enterHydrationState,
      resetHydrationState = hydrationContext.resetHydrationState,
      tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance;

  var _ReactFiberClassCompo = ReactFiberClassComponent(scheduleWork, computeExpirationForFiber, memoizeProps, memoizeState),
      adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
      constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
      mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
      updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

  // TODO: Remove this and use reconcileChildrenAtExpirationTime directly.


  function reconcileChildren(current, workInProgress, nextChildren) {
    reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, workInProgress.expirationTime);
  }

  function reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime) {
    if (current === null) {
      // If this is a fresh new component that hasn't been rendered yet, we
      // won't update its child set by applying minimal side-effects. Instead,
      // we will add them all to the child before it gets rendered. That means
      // we can optimize this reconciliation pass by not tracking side-effects.
      workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, renderExpirationTime);
    } else if (current.child === workInProgress.child) {
      // If the current child is the same as the work in progress, it means that
      // we haven't yet started any work on these children. Therefore, we use
      // the clone algorithm to create a copy of all the current children.

      // If we had any progressed work already, that is invalid at this point so
      // let's throw it out.
      workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, renderExpirationTime);
    } else {
      // If, on the other hand, it is already using a clone, that means we've
      // already begun some work on this tree and we can continue where we left
      // off by reconciling against the existing children.
      workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, renderExpirationTime);
    }
  }

  function updateFragment(current, workInProgress) {
    var nextChildren = workInProgress.pendingProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextChildren === null) {
        nextChildren = workInProgress.memoizedProps;
      }
    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextChildren);
    return workInProgress.child;
  }

  function markRef(current, workInProgress) {
    var ref = workInProgress.ref;
    if (ref !== null && (!current || current.ref !== ref)) {
      // Schedule a Ref effect
      workInProgress.effectTag |= Ref;
    }
  }

  function updateFunctionalComponent(current, workInProgress) {
    var fn = workInProgress.type;
    var nextProps = workInProgress.pendingProps;

    var memoizedProps = workInProgress.memoizedProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextProps === null) {
        nextProps = memoizedProps;
      }
    } else {
      if (nextProps === null || memoizedProps === nextProps) {
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      // TODO: consider bringing fn.shouldComponentUpdate() back.
      // It used to be here.
    }

    var unmaskedContext = getUnmaskedContext(workInProgress);
    var context = getMaskedContext(workInProgress, unmaskedContext);

    var nextChildren;

    {
      ReactCurrentOwner.current = workInProgress;
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = fn(nextProps, context);
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
    // React DevTools reads this flag.
    workInProgress.effectTag |= PerformedWork;
    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextProps);
    return workInProgress.child;
  }

  function updateClassComponent(current, workInProgress, renderExpirationTime) {
    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = pushContextProvider(workInProgress);

    var shouldUpdate = void 0;
    if (current === null) {
      if (!workInProgress.stateNode) {
        // In the initial pass we might need to construct the instance.
        constructClassInstance(workInProgress, workInProgress.pendingProps);
        mountClassInstance(workInProgress, renderExpirationTime);
        shouldUpdate = true;
      } else {
        invariant(false, 'Resuming work not yet implemented.');
        // In a resume, we'll already have an instance we can reuse.
        // shouldUpdate = resumeMountClassInstance(workInProgress, renderExpirationTime);
      }
    } else {
      shouldUpdate = updateClassInstance(current, workInProgress, renderExpirationTime);
    }
    return finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
  }

  function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
    // Refs should update even if shouldComponentUpdate returns false
    markRef(current, workInProgress);

    if (!shouldUpdate) {
      // Context providers should defer to sCU for rendering
      if (hasContext) {
        invalidateContextProvider(workInProgress, false);
      }

      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var instance = workInProgress.stateNode;

    // Rerender
    ReactCurrentOwner.current = workInProgress;
    var nextChildren = void 0;
    {
      ReactDebugCurrentFiber.setCurrentPhase('render');
      nextChildren = instance.render();
      ReactDebugCurrentFiber.setCurrentPhase(null);
    }
    // React DevTools reads this flag.
    workInProgress.effectTag |= PerformedWork;
    reconcileChildren(current, workInProgress, nextChildren);
    // Memoize props and state using the values we just used to render.
    // TODO: Restructure so we never read values from the instance.
    memoizeState(workInProgress, instance.state);
    memoizeProps(workInProgress, instance.props);

    // The context might have changed so we need to recalculate it.
    if (hasContext) {
      invalidateContextProvider(workInProgress, true);
    }

    return workInProgress.child;
  }

  function pushHostRootContext(workInProgress) {
    var root = workInProgress.stateNode;
    if (root.pendingContext) {
      pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
    } else if (root.context) {
      // Should always be set
      pushTopLevelContextObject(workInProgress, root.context, false);
    }
    pushHostContainer(workInProgress, root.containerInfo);
  }

  function updateHostRoot(current, workInProgress, renderExpirationTime) {
    pushHostRootContext(workInProgress);
    var updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      var prevState = workInProgress.memoizedState;
      var state = processUpdateQueue(current, workInProgress, updateQueue, null, null, renderExpirationTime);
      if (prevState === state) {
        // If the state is the same as before, that's a bailout because we had
        // no work that expires at this time.
        resetHydrationState();
        return bailoutOnAlreadyFinishedWork(current, workInProgress);
      }
      var element = state.element;
      var root = workInProgress.stateNode;
      if ((current === null || current.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
        // If we don't have any current children this might be the first pass.
        // We always try to hydrate. If this isn't a hydration pass there won't
        // be any children to hydrate which is effectively the same thing as
        // not hydrating.

        // This is a bit of a hack. We track the host root as a placement to
        // know that we're currently in a mounting state. That way isMounted
        // works as expected. We must reset this before committing.
        // TODO: Delete this when we delete isMounted and findDOMNode.
        workInProgress.effectTag |= Placement;

        // Ensure that children mount into this root without tracking
        // side-effects. This ensures that we don't store Placement effects on
        // nodes that will be hydrated.
        workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, renderExpirationTime);
      } else {
        // Otherwise reset hydration state in case we aborted and resumed another
        // root.
        resetHydrationState();
        reconcileChildren(current, workInProgress, element);
      }
      memoizeState(workInProgress, state);
      return workInProgress.child;
    }
    resetHydrationState();
    // If there is no update queue, that's a bailout because the root has no props.
    return bailoutOnAlreadyFinishedWork(current, workInProgress);
  }

  function updateHostComponent(current, workInProgress, renderExpirationTime) {
    pushHostContext(workInProgress);

    if (current === null) {
      tryToClaimNextHydratableInstance(workInProgress);
    }

    var type = workInProgress.type;
    var memoizedProps = workInProgress.memoizedProps;
    var nextProps = workInProgress.pendingProps;
    if (nextProps === null) {
      nextProps = memoizedProps;
      !(nextProps !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    }
    var prevProps = current !== null ? current.memoizedProps : null;

    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
    } else if (nextProps === null || memoizedProps === nextProps) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var nextChildren = nextProps.children;
    var isDirectTextChild = shouldSetTextContent(type, nextProps);

    if (isDirectTextChild) {
      // We special case a direct text child of a host node. This is a common
      // case. We won't handle it as a reified child. We will instead handle
      // this in the host environment that also have access to this prop. That
      // avoids allocating another HostText fiber and traversing it.
      nextChildren = null;
    } else if (prevProps && shouldSetTextContent(type, prevProps)) {
      // If we're switching from a direct text child to a normal child, or to
      // empty, we need to schedule the text content to be reset.
      workInProgress.effectTag |= ContentReset;
    }

    markRef(current, workInProgress);

    // Check the host config to see if the children are offscreen/hidden.
    if (renderExpirationTime !== Never && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps)) {
      // Down-prioritize the children.
      workInProgress.expirationTime = Never;
      // Bailout and come back to this fiber later.
      return null;
    }

    reconcileChildren(current, workInProgress, nextChildren);
    memoizeProps(workInProgress, nextProps);
    return workInProgress.child;
  }

  function updateHostText(current, workInProgress) {
    if (current === null) {
      tryToClaimNextHydratableInstance(workInProgress);
    }
    var nextProps = workInProgress.pendingProps;
    if (nextProps === null) {
      nextProps = workInProgress.memoizedProps;
    }
    memoizeProps(workInProgress, nextProps);
    // Nothing to do here. This is terminal. We'll do the completion step
    // immediately after.
    return null;
  }

  function mountIndeterminateComponent(current, workInProgress, renderExpirationTime) {
    !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    var fn = workInProgress.type;
    var props = workInProgress.pendingProps;
    var unmaskedContext = getUnmaskedContext(workInProgress);
    var context = getMaskedContext(workInProgress, unmaskedContext);

    var value;

    {
      if (fn.prototype && typeof fn.prototype.render === 'function') {
        var componentName = getComponentName(workInProgress);
        warning(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
      }
      ReactCurrentOwner.current = workInProgress;
      value = fn(props, context);
    }
    // React DevTools reads this flag.
    workInProgress.effectTag |= PerformedWork;

    if (typeof value === 'object' && value !== null && typeof value.render === 'function') {
      // Proceed under the assumption that this is a class instance
      workInProgress.tag = ClassComponent;

      // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.
      var hasContext = pushContextProvider(workInProgress);
      adoptClassInstance(workInProgress, value);
      mountClassInstance(workInProgress, renderExpirationTime);
      return finishClassComponent(current, workInProgress, true, hasContext);
    } else {
      // Proceed under the assumption that this is a functional component
      workInProgress.tag = FunctionalComponent;
      {
        var Component = workInProgress.type;

        if (Component) {
          warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
        }
        if (workInProgress.ref !== null) {
          var info = '';
          var ownerName = ReactDebugCurrentFiber.getCurrentFiberOwnerName();
          if (ownerName) {
            info += '\n\nCheck the render method of `' + ownerName + '`.';
          }

          var warningKey = ownerName || workInProgress._debugID || '';
          var debugSource = workInProgress._debugSource;
          if (debugSource) {
            warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
          }
          if (!warnedAboutStatelessRefs[warningKey]) {
            warnedAboutStatelessRefs[warningKey] = true;
            warning(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber.getCurrentFiberStackAddendum());
          }
        }
      }
      reconcileChildren(current, workInProgress, value);
      memoizeProps(workInProgress, props);
      return workInProgress.child;
    }
  }

  function updateCallComponent(current, workInProgress, renderExpirationTime) {
    var nextCall = workInProgress.pendingProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextCall === null) {
        nextCall = current && current.memoizedProps;
        !(nextCall !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      }
    } else if (nextCall === null || workInProgress.memoizedProps === nextCall) {
      nextCall = workInProgress.memoizedProps;
      // TODO: When bailing out, we might need to return the stateNode instead
      // of the child. To check it for work.
      // return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    var nextChildren = nextCall.children;

    // The following is a fork of reconcileChildrenAtExpirationTime but using
    // stateNode to store the child.
    if (current === null) {
      workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
    } else if (current.child === workInProgress.child) {
      workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
    } else {
      workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, renderExpirationTime);
    }

    memoizeProps(workInProgress, nextCall);
    // This doesn't take arbitrary time so we could synchronously just begin
    // eagerly do the work of workInProgress.child as an optimization.
    return workInProgress.stateNode;
  }

  function updatePortalComponent(current, workInProgress, renderExpirationTime) {
    pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
    var nextChildren = workInProgress.pendingProps;
    if (hasContextChanged()) {
      // Normally we can bail out on props equality but if context has changed
      // we don't do the bailout and we have to reuse existing props instead.
      if (nextChildren === null) {
        nextChildren = current && current.memoizedProps;
        !(nextChildren != null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      }
    } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
      return bailoutOnAlreadyFinishedWork(current, workInProgress);
    }

    if (current === null) {
      // Portals are special because we don't append the children during mount
      // but at commit. Therefore we need to track insertions which the normal
      // flow doesn't do during mount. This doesn't happen at the root because
      // the root always starts with a "current" with a null child.
      // TODO: Consider unifying this with how the root works.
      workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, renderExpirationTime);
      memoizeProps(workInProgress, nextChildren);
    } else {
      reconcileChildren(current, workInProgress, nextChildren);
      memoizeProps(workInProgress, nextChildren);
    }
    return workInProgress.child;
  }

  /*
  function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
    let child = firstChild;
    do {
      // Ensure that the first and last effect of the parent corresponds
      // to the children's first and last effect.
      if (!returnFiber.firstEffect) {
        returnFiber.firstEffect = child.firstEffect;
      }
      if (child.lastEffect) {
        if (returnFiber.lastEffect) {
          returnFiber.lastEffect.nextEffect = child.firstEffect;
        }
        returnFiber.lastEffect = child.lastEffect;
      }
    } while (child = child.sibling);
  }
  */

  function bailoutOnAlreadyFinishedWork(current, workInProgress) {
    cancelWorkTimer(workInProgress);

    // TODO: We should ideally be able to bail out early if the children have no
    // more work to do. However, since we don't have a separation of this
    // Fiber's priority and its children yet - we don't know without doing lots
    // of the same work we do anyway. Once we have that separation we can just
    // bail out here if the children has no more work at this priority level.
    // if (workInProgress.priorityOfChildren <= priorityLevel) {
    //   // If there are side-effects in these children that have not yet been
    //   // committed we need to ensure that they get properly transferred up.
    //   if (current && current.child !== workInProgress.child) {
    //     reuseChildrenEffects(workInProgress, child);
    //   }
    //   return null;
    // }

    cloneChildFibers(current, workInProgress);
    return workInProgress.child;
  }

  function bailoutOnLowPriority(current, workInProgress) {
    cancelWorkTimer(workInProgress);

    // TODO: Handle HostComponent tags here as well and call pushHostContext()?
    // See PR 8590 discussion for context
    switch (workInProgress.tag) {
      case HostRoot:
        pushHostRootContext(workInProgress);
        break;
      case ClassComponent:
        pushContextProvider(workInProgress);
        break;
      case HostPortal:
        pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
        break;
    }
    // TODO: What if this is currently in progress?
    // How can that happen? How is this not being cloned?
    return null;
  }

  // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
  function memoizeProps(workInProgress, nextProps) {
    workInProgress.memoizedProps = nextProps;
  }

  function memoizeState(workInProgress, nextState) {
    workInProgress.memoizedState = nextState;
    // Don't reset the updateQueue, in case there are pending updates. Resetting
    // is handled by processUpdateQueue.
  }

  function beginWork(current, workInProgress, renderExpirationTime) {
    if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
      return bailoutOnLowPriority(current, workInProgress);
    }

    switch (workInProgress.tag) {
      case IndeterminateComponent:
        return mountIndeterminateComponent(current, workInProgress, renderExpirationTime);
      case FunctionalComponent:
        return updateFunctionalComponent(current, workInProgress);
      case ClassComponent:
        return updateClassComponent(current, workInProgress, renderExpirationTime);
      case HostRoot:
        return updateHostRoot(current, workInProgress, renderExpirationTime);
      case HostComponent:
        return updateHostComponent(current, workInProgress, renderExpirationTime);
      case HostText:
        return updateHostText(current, workInProgress);
      case CallHandlerPhase:
        // This is a restart. Reset the tag to the initial phase.
        workInProgress.tag = CallComponent;
      // Intentionally fall through since this is now the same.
      case CallComponent:
        return updateCallComponent(current, workInProgress, renderExpirationTime);
      case ReturnComponent:
        // A return component is just a placeholder, we can just run through the
        // next one immediately.
        return null;
      case HostPortal:
        return updatePortalComponent(current, workInProgress, renderExpirationTime);
      case Fragment:
        return updateFragment(current, workInProgress);
      default:
        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
    }
  }

  function beginFailedWork(current, workInProgress, renderExpirationTime) {
    // Push context providers here to avoid a push/pop context mismatch.
    switch (workInProgress.tag) {
      case ClassComponent:
        pushContextProvider(workInProgress);
        break;
      case HostRoot:
        pushHostRootContext(workInProgress);
        break;
      default:
        invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
    }

    // Add an error effect so we can handle the error during the commit phase
    workInProgress.effectTag |= Err;

    // This is a weird case where we do "resume" work — work that failed on
    // our first attempt. Because we no longer have a notion of "progressed
    // deletions," reset the child to the current child to make sure we delete
    // it again. TODO: Find a better way to handle this, perhaps during a more
    // general overhaul of error handling.
    if (current === null) {
      workInProgress.child = null;
    } else if (workInProgress.child !== current.child) {
      workInProgress.child = current.child;
    }

    if (workInProgress.expirationTime === NoWork || workInProgress.expirationTime > renderExpirationTime) {
      return bailoutOnLowPriority(current, workInProgress);
    }

    // If we don't bail out, we're going be recomputing our children so we need
    // to drop our effect list.
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    // Unmount the current children as if the component rendered null
    var nextChildren = null;
    reconcileChildrenAtExpirationTime(current, workInProgress, nextChildren, renderExpirationTime);

    if (workInProgress.tag === ClassComponent) {
      var instance = workInProgress.stateNode;
      workInProgress.memoizedProps = instance.props;
      workInProgress.memoizedState = instance.state;
    }

    return workInProgress.child;
  }

  return {
    beginWork: beginWork,
    beginFailedWork: beginFailedWork
  };
};

var ReactFiberCompleteWork = function (config, hostContext, hydrationContext) {
  var createInstance = config.createInstance,
      createTextInstance = config.createTextInstance,
      appendInitialChild = config.appendInitialChild,
      finalizeInitialChildren = config.finalizeInitialChildren,
      prepareUpdate = config.prepareUpdate,
      mutation = config.mutation,
      persistence = config.persistence;
  var getRootHostContainer = hostContext.getRootHostContainer,
      popHostContext = hostContext.popHostContext,
      getHostContext = hostContext.getHostContext,
      popHostContainer = hostContext.popHostContainer;
  var prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
      prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
      popHydrationState = hydrationContext.popHydrationState;


  function markUpdate(workInProgress) {
    // Tag the fiber with an update effect. This turns a Placement into
    // an UpdateAndPlacement.
    workInProgress.effectTag |= Update;
  }

  function markRef(workInProgress) {
    workInProgress.effectTag |= Ref;
  }

  function appendAllReturns(returns, workInProgress) {
    var node = workInProgress.stateNode;
    if (node) {
      node['return'] = workInProgress;
    }
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText || node.tag === HostPortal) {
        invariant(false, 'A call cannot have host component children.');
      } else if (node.tag === ReturnComponent) {
        returns.push(node.type);
      } else if (node.child !== null) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === workInProgress) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function moveCallToHandlerPhase(current, workInProgress, renderExpirationTime) {
    var call = workInProgress.memoizedProps;
    !call ? invariant(false, 'Should be resolved by now. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    // First step of the call has completed. Now we need to do the second.
    // TODO: It would be nice to have a multi stage call represented by a
    // single component, or at least tail call optimize nested ones. Currently
    // that requires additional fields that we don't want to add to the fiber.
    // So this requires nested handlers.
    // Note: This doesn't mutate the alternate node. I don't think it needs to
    // since this stage is reset for every pass.
    workInProgress.tag = CallHandlerPhase;

    // Build up the returns.
    // TODO: Compare this to a generator or opaque helpers like Children.
    var returns = [];
    appendAllReturns(returns, workInProgress);
    var fn = call.handler;
    var props = call.props;
    var nextChildren = fn(props, returns);

    var currentFirstChild = current !== null ? current.child : null;
    workInProgress.child = reconcileChildFibers(workInProgress, currentFirstChild, nextChildren, renderExpirationTime);
    return workInProgress.child;
  }

  function appendAllChildren(parent, workInProgress) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === workInProgress) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  var updateHostContainer = void 0;
  var updateHostComponent = void 0;
  var updateHostText = void 0;
  if (mutation) {
    if (enableMutatingReconciler) {
      // Mutation mode
      updateHostContainer = function (workInProgress) {
        // Noop
      };
      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
        // TODO: Type this specific to this type of component.
        workInProgress.updateQueue = updatePayload;
        // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.
        if (updatePayload) {
          markUpdate(workInProgress);
        }
      };
      updateHostText = function (current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) {
          markUpdate(workInProgress);
        }
      };
    } else {
      invariant(false, 'Mutating reconciler is disabled.');
    }
  } else if (persistence) {
    if (enablePersistentReconciler) {
      // Persistent host tree mode
      var cloneInstance = persistence.cloneInstance,
          createContainerChildSet = persistence.createContainerChildSet,
          appendChildToContainerChildSet = persistence.appendChildToContainerChildSet,
          finalizeContainerChildren = persistence.finalizeContainerChildren;

      // An unfortunate fork of appendAllChildren because we have two different parent types.

      var appendAllChildrenToContainer = function (containerChildSet, workInProgress) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;
        while (node !== null) {
          if (node.tag === HostComponent || node.tag === HostText) {
            appendChildToContainerChildSet(containerChildSet, node.stateNode);
          } else if (node.tag === HostPortal) {
            // If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.child !== null) {
            node.child['return'] = node;
            node = node.child;
            continue;
          }
          if (node === workInProgress) {
            return;
          }
          while (node.sibling === null) {
            if (node['return'] === null || node['return'] === workInProgress) {
              return;
            }
            node = node['return'];
          }
          node.sibling['return'] = node['return'];
          node = node.sibling;
        }
      };
      updateHostContainer = function (workInProgress) {
        var portalOrRoot = workInProgress.stateNode;
        var childrenUnchanged = workInProgress.firstEffect === null;
        if (childrenUnchanged) {
          // No changes, just reuse the existing instance.
        } else {
          var container = portalOrRoot.containerInfo;
          var newChildSet = createContainerChildSet(container);
          if (finalizeContainerChildren(container, newChildSet)) {
            markUpdate(workInProgress);
          }
          portalOrRoot.pendingChildren = newChildSet;
          // If children might have changed, we have to add them all to the set.
          appendAllChildrenToContainer(newChildSet, workInProgress);
          // Schedule an update on the container to swap out the container.
          markUpdate(workInProgress);
        }
      };
      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
        // If there are no effects associated with this node, then none of our children had any updates.
        // This guarantees that we can reuse all of them.
        var childrenUnchanged = workInProgress.firstEffect === null;
        var currentInstance = current.stateNode;
        if (childrenUnchanged && updatePayload === null) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
        } else {
          var recyclableInstance = workInProgress.stateNode;
          var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
          if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance)) {
            markUpdate(workInProgress);
          }
          workInProgress.stateNode = newInstance;
          if (childrenUnchanged) {
            // If there are no other effects in this tree, we need to flag this node as having one.
            // Even though we're not going to use it for anything.
            // Otherwise parents won't know that there are new children to propagate upwards.
            markUpdate(workInProgress);
          } else {
            // If children might have changed, we have to add them all to the set.
            appendAllChildren(newInstance, workInProgress);
          }
        }
      };
      updateHostText = function (current, workInProgress, oldText, newText) {
        if (oldText !== newText) {
          // If the text content differs, we'll create a new text instance for it.
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
          // We'll have to mark it as having an effect, even though we won't use the effect for anything.
          // This lets the parents know that at least one of their children has changed.
          markUpdate(workInProgress);
        }
      };
    } else {
      invariant(false, 'Persistent reconciler is disabled.');
    }
  } else {
    if (enableNoopReconciler) {
      // No host operations
      updateHostContainer = function (workInProgress) {
        // Noop
      };
      updateHostComponent = function (current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance) {
        // Noop
      };
      updateHostText = function (current, workInProgress, oldText, newText) {
        // Noop
      };
    } else {
      invariant(false, 'Noop reconciler is disabled.');
    }
  }

  function completeWork(current, workInProgress, renderExpirationTime) {
    // Get the latest props.
    var newProps = workInProgress.pendingProps;
    if (newProps === null) {
      newProps = workInProgress.memoizedProps;
    } else if (workInProgress.expirationTime !== Never || renderExpirationTime === Never) {
      // Reset the pending props, unless this was a down-prioritization.
      workInProgress.pendingProps = null;
    }

    switch (workInProgress.tag) {
      case FunctionalComponent:
        return null;
      case ClassComponent:
        {
          // We are leaving this subtree, so pop context if any.
          popContextProvider(workInProgress);
          return null;
        }
      case HostRoot:
        {
          popHostContainer(workInProgress);
          popTopLevelContextObject(workInProgress);
          var fiberRoot = workInProgress.stateNode;
          if (fiberRoot.pendingContext) {
            fiberRoot.context = fiberRoot.pendingContext;
            fiberRoot.pendingContext = null;
          }

          if (current === null || current.child === null) {
            // If we hydrated, pop so that we can delete any remaining children
            // that weren't hydrated.
            popHydrationState(workInProgress);
            // This resets the hacky state to fix isMounted before committing.
            // TODO: Delete this when we delete isMounted and findDOMNode.
            workInProgress.effectTag &= ~Placement;
          }
          updateHostContainer(workInProgress);
          return null;
        }
      case HostComponent:
        {
          popHostContext(workInProgress);
          var rootContainerInstance = getRootHostContainer();
          var type = workInProgress.type;
          if (current !== null && workInProgress.stateNode != null) {
            // If we have an alternate, that means this is an update and we need to
            // schedule a side-effect to do the updates.
            var oldProps = current.memoizedProps;
            // If we get updated because one of our children updated, we don't
            // have newProps so we'll have to reuse them.
            // TODO: Split the update API as separate for the props vs. children.
            // Even better would be if children weren't special cased at all tho.
            var instance = workInProgress.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

            updateHostComponent(current, workInProgress, updatePayload, type, oldProps, newProps, rootContainerInstance);

            if (current.ref !== workInProgress.ref) {
              markRef(workInProgress);
            }
          } else {
            if (!newProps) {
              !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              // This can happen when we abort work.
              return null;
            }

            var _currentHostContext = getHostContext();
            // TODO: Move createInstance to beginWork and keep it on a context
            // "stack" as the parent. Then append children as we go in beginWork
            // or completeWork depending on we want to add then top->down or
            // bottom->up. Top->down is faster in IE11.
            var wasHydrated = popHydrationState(workInProgress);
            if (wasHydrated) {
              // TODO: Move this and createInstance step into the beginPhase
              // to consolidate.
              if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
                // If changes to the hydrated node needs to be applied at the
                // commit-phase we mark this as such.
                markUpdate(workInProgress);
              }
            } else {
              var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

              appendAllChildren(_instance, workInProgress);

              // Certain renderers require commit-time effects for initial mount.
              // (eg DOM renderer supports auto-focus for certain elements).
              // Make sure such renderers get scheduled for later work.
              if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance)) {
                markUpdate(workInProgress);
              }
              workInProgress.stateNode = _instance;
            }

            if (workInProgress.ref !== null) {
              // If there is a ref on a host node we need to schedule a callback
              markRef(workInProgress);
            }
          }
          return null;
        }
      case HostText:
        {
          var newText = newProps;
          if (current && workInProgress.stateNode != null) {
            var oldText = current.memoizedProps;
            // If we have an alternate, that means this is an update and we need
            // to schedule a side-effect to do the updates.
            updateHostText(current, workInProgress, oldText, newText);
          } else {
            if (typeof newText !== 'string') {
              !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              // This can happen when we abort work.
              return null;
            }
            var _rootContainerInstance = getRootHostContainer();
            var _currentHostContext2 = getHostContext();
            var _wasHydrated = popHydrationState(workInProgress);
            if (_wasHydrated) {
              if (prepareToHydrateHostTextInstance(workInProgress)) {
                markUpdate(workInProgress);
              }
            } else {
              workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
            }
          }
          return null;
        }
      case CallComponent:
        return moveCallToHandlerPhase(current, workInProgress, renderExpirationTime);
      case CallHandlerPhase:
        // Reset the tag to now be a first phase call.
        workInProgress.tag = CallComponent;
        return null;
      case ReturnComponent:
        // Does nothing.
        return null;
      case Fragment:
        return null;
      case HostPortal:
        popHostContainer(workInProgress);
        updateHostContainer(workInProgress);
        return null;
      // Error cases
      case IndeterminateComponent:
        invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
      // eslint-disable-next-line no-fallthrough
      default:
        invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
    }
  }

  return {
    completeWork: completeWork
  };
};

var invokeGuardedCallback$2 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError$1 = ReactErrorUtils.hasCaughtError;
var clearCaughtError$1 = ReactErrorUtils.clearCaughtError;


var ReactFiberCommitWork = function (config, captureError) {
  var getPublicInstance = config.getPublicInstance,
      mutation = config.mutation,
      persistence = config.persistence;


  var callComponentWillUnmountWithTimer = function (current, instance) {
    startPhaseTimer(current, 'componentWillUnmount');
    instance.props = current.memoizedProps;
    instance.state = current.memoizedState;
    instance.componentWillUnmount();
    stopPhaseTimer();
  };

  // Capture errors so they don't interrupt unmounting.
  function safelyCallComponentWillUnmount(current, instance) {
    {
      invokeGuardedCallback$2(null, callComponentWillUnmountWithTimer, null, current, instance);
      if (hasCaughtError$1()) {
        var unmountError = clearCaughtError$1();
        captureError(current, unmountError);
      }
    }
  }

  function safelyDetachRef(current) {
    var ref = current.ref;
    if (ref !== null) {
      {
        invokeGuardedCallback$2(null, ref, null, null);
        if (hasCaughtError$1()) {
          var refError = clearCaughtError$1();
          captureError(current, refError);
        }
      }
    }
  }

  function commitLifeCycles(current, finishedWork) {
    switch (finishedWork.tag) {
      case ClassComponent:
        {
          var instance = finishedWork.stateNode;
          if (finishedWork.effectTag & Update) {
            if (current === null) {
              startPhaseTimer(finishedWork, 'componentDidMount');
              instance.props = finishedWork.memoizedProps;
              instance.state = finishedWork.memoizedState;
              instance.componentDidMount();
              stopPhaseTimer();
            } else {
              var prevProps = current.memoizedProps;
              var prevState = current.memoizedState;
              startPhaseTimer(finishedWork, 'componentDidUpdate');
              instance.props = finishedWork.memoizedProps;
              instance.state = finishedWork.memoizedState;
              instance.componentDidUpdate(prevProps, prevState);
              stopPhaseTimer();
            }
          }
          var updateQueue = finishedWork.updateQueue;
          if (updateQueue !== null) {
            commitCallbacks(updateQueue, instance);
          }
          return;
        }
      case HostRoot:
        {
          var _updateQueue = finishedWork.updateQueue;
          if (_updateQueue !== null) {
            var _instance = finishedWork.child !== null ? finishedWork.child.stateNode : null;
            commitCallbacks(_updateQueue, _instance);
          }
          return;
        }
      case HostComponent:
        {
          var _instance2 = finishedWork.stateNode;

          // Renderers may schedule work to be done after host components are mounted
          // (eg DOM renderer may schedule auto-focus for inputs and form controls).
          // These effects should only be committed when components are first mounted,
          // aka when there is no current/alternate.
          if (current === null && finishedWork.effectTag & Update) {
            var type = finishedWork.type;
            var props = finishedWork.memoizedProps;
            commitMount(_instance2, type, props, finishedWork);
          }

          return;
        }
      case HostText:
        {
          // We have no life-cycles associated with text.
          return;
        }
      case HostPortal:
        {
          // We have no life-cycles associated with portals.
          return;
        }
      default:
        {
          invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
        }
    }
  }

  function commitAttachRef(finishedWork) {
    var ref = finishedWork.ref;
    if (ref !== null) {
      var instance = finishedWork.stateNode;
      switch (finishedWork.tag) {
        case HostComponent:
          ref(getPublicInstance(instance));
          break;
        default:
          ref(instance);
      }
    }
  }

  function commitDetachRef(current) {
    var currentRef = current.ref;
    if (currentRef !== null) {
      currentRef(null);
    }
  }

  // User-originating errors (lifecycles and refs) should not interrupt
  // deletion, so don't let them throw. Host-originating errors should
  // interrupt deletion, so it's okay
  function commitUnmount(current) {
    if (typeof onCommitUnmount === 'function') {
      onCommitUnmount(current);
    }

    switch (current.tag) {
      case ClassComponent:
        {
          safelyDetachRef(current);
          var instance = current.stateNode;
          if (typeof instance.componentWillUnmount === 'function') {
            safelyCallComponentWillUnmount(current, instance);
          }
          return;
        }
      case HostComponent:
        {
          safelyDetachRef(current);
          return;
        }
      case CallComponent:
        {
          commitNestedUnmounts(current.stateNode);
          return;
        }
      case HostPortal:
        {
          // TODO: this is recursive.
          // We are also not using this parent because
          // the portal will get pushed immediately.
          if (enableMutatingReconciler && mutation) {
            unmountHostComponents(current);
          } else if (enablePersistentReconciler && persistence) {
            emptyPortalContainer(current);
          }
          return;
        }
    }
  }

  function commitNestedUnmounts(root) {
    // While we're inside a removed host node we don't want to call
    // removeChild on the inner nodes because they're removed by the top
    // call anyway. We also want to call componentWillUnmount on all
    // composites before this host node is removed from the tree. Therefore
    var node = root;
    while (true) {
      commitUnmount(node);
      // Visit children because they may contain more composite or host nodes.
      // Skip portals because commitUnmount() currently visits them recursively.
      if (node.child !== null && (
      // If we use mutation we drill down into portals using commitUnmount above.
      // If we don't use mutation we drill down into portals here instead.
      !mutation || node.tag !== HostPortal)) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      if (node === root) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === root) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function detachFiber(current) {
    // Cut off the return pointers to disconnect it from the tree. Ideally, we
    // should clear the child pointer of the parent alternate to let this
    // get GC:ed but we don't know which for sure which parent is the current
    // one so we'll settle for GC:ing the subtree of this child. This child
    // itself will be GC:ed when the parent updates the next time.
    current['return'] = null;
    current.child = null;
    if (current.alternate) {
      current.alternate.child = null;
      current.alternate['return'] = null;
    }
  }

  if (!mutation) {
    var commitContainer = void 0;
    if (persistence) {
      var replaceContainerChildren = persistence.replaceContainerChildren,
          createContainerChildSet = persistence.createContainerChildSet;

      var emptyPortalContainer = function (current) {
        var portal = current.stateNode;
        var containerInfo = portal.containerInfo;

        var emptyChildSet = createContainerChildSet(containerInfo);
        replaceContainerChildren(containerInfo, emptyChildSet);
      };
      commitContainer = function (finishedWork) {
        switch (finishedWork.tag) {
          case ClassComponent:
            {
              return;
            }
          case HostComponent:
            {
              return;
            }
          case HostText:
            {
              return;
            }
          case HostRoot:
          case HostPortal:
            {
              var portalOrRoot = finishedWork.stateNode;
              var containerInfo = portalOrRoot.containerInfo,
                  _pendingChildren = portalOrRoot.pendingChildren;

              replaceContainerChildren(containerInfo, _pendingChildren);
              return;
            }
          default:
            {
              invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
            }
        }
      };
    } else {
      commitContainer = function (finishedWork) {
        // Noop
      };
    }
    if (enablePersistentReconciler || enableNoopReconciler) {
      return {
        commitResetTextContent: function (finishedWork) {},
        commitPlacement: function (finishedWork) {},
        commitDeletion: function (current) {
          // Detach refs and call componentWillUnmount() on the whole subtree.
          commitNestedUnmounts(current);
          detachFiber(current);
        },
        commitWork: function (current, finishedWork) {
          commitContainer(finishedWork);
        },

        commitLifeCycles: commitLifeCycles,
        commitAttachRef: commitAttachRef,
        commitDetachRef: commitDetachRef
      };
    } else if (persistence) {
      invariant(false, 'Persistent reconciler is disabled.');
    } else {
      invariant(false, 'Noop reconciler is disabled.');
    }
  }
  var commitMount = mutation.commitMount,
      commitUpdate = mutation.commitUpdate,
      resetTextContent = mutation.resetTextContent,
      commitTextUpdate = mutation.commitTextUpdate,
      appendChild = mutation.appendChild,
      appendChildToContainer = mutation.appendChildToContainer,
      insertBefore = mutation.insertBefore,
      insertInContainerBefore = mutation.insertInContainerBefore,
      removeChild = mutation.removeChild,
      removeChildFromContainer = mutation.removeChildFromContainer;


  function getHostParentFiber(fiber) {
    var parent = fiber['return'];
    while (parent !== null) {
      if (isHostParent(parent)) {
        return parent;
      }
      parent = parent['return'];
    }
    invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
  }

  function isHostParent(fiber) {
    return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
  }

  function getHostSibling(fiber) {
    // We're going to search forward into the tree until we find a sibling host
    // node. Unfortunately, if multiple insertions are done in a row we have to
    // search past them. This leads to exponential search for the next sibling.
    var node = fiber;
    siblings: while (true) {
      // If we didn't find anything, let's try the next sibling.
      while (node.sibling === null) {
        if (node['return'] === null || isHostParent(node['return'])) {
          // If we pop out of the root or hit the parent the fiber we are the
          // last sibling.
          return null;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
      while (node.tag !== HostComponent && node.tag !== HostText) {
        // If it is not host node and, we might have a host node inside it.
        // Try to search down until we find one.
        if (node.effectTag & Placement) {
          // If we don't have a child, try the siblings instead.
          continue siblings;
        }
        // If we don't have a child, try the siblings instead.
        // We also skip portals because they are not part of this host tree.
        if (node.child === null || node.tag === HostPortal) {
          continue siblings;
        } else {
          node.child['return'] = node;
          node = node.child;
        }
      }
      // Check if this host node is stable or about to be placed.
      if (!(node.effectTag & Placement)) {
        // Found it!
        return node.stateNode;
      }
    }
  }

  function commitPlacement(finishedWork) {
    // Recursively insert all host nodes into the parent.
    var parentFiber = getHostParentFiber(finishedWork);
    var parent = void 0;
    var isContainer = void 0;
    switch (parentFiber.tag) {
      case HostComponent:
        parent = parentFiber.stateNode;
        isContainer = false;
        break;
      case HostRoot:
        parent = parentFiber.stateNode.containerInfo;
        isContainer = true;
        break;
      case HostPortal:
        parent = parentFiber.stateNode.containerInfo;
        isContainer = true;
        break;
      default:
        invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
    }
    if (parentFiber.effectTag & ContentReset) {
      // Reset the text content of the parent before doing any insertions
      resetTextContent(parent);
      // Clear ContentReset from the effect tag
      parentFiber.effectTag &= ~ContentReset;
    }

    var before = getHostSibling(finishedWork);
    // We only have the top Fiber that was inserted but we need recurse down its
    // children to find all the terminal nodes.
    var node = finishedWork;
    while (true) {
      if (node.tag === HostComponent || node.tag === HostText) {
        if (before) {
          if (isContainer) {
            insertInContainerBefore(parent, node.stateNode, before);
          } else {
            insertBefore(parent, node.stateNode, before);
          }
        } else {
          if (isContainer) {
            appendChildToContainer(parent, node.stateNode);
          } else {
            appendChild(parent, node.stateNode);
          }
        }
      } else if (node.tag === HostPortal) {
        // If the insertion itself is a portal, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child['return'] = node;
        node = node.child;
        continue;
      }
      if (node === finishedWork) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === finishedWork) {
          return;
        }
        node = node['return'];
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function unmountHostComponents(current) {
    // We only have the top Fiber that was inserted but we need recurse down its
    var node = current;

    // Each iteration, currentParent is populated with node's host parent if not
    // currentParentIsValid.
    var currentParentIsValid = false;
    var currentParent = void 0;
    var currentParentIsContainer = void 0;

    while (true) {
      if (!currentParentIsValid) {
        var parent = node['return'];
        findParent: while (true) {
          !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          switch (parent.tag) {
            case HostComponent:
              currentParent = parent.stateNode;
              currentParentIsContainer = false;
              break findParent;
            case HostRoot:
              currentParent = parent.stateNode.containerInfo;
              currentParentIsContainer = true;
              break findParent;
            case HostPortal:
              currentParent = parent.stateNode.containerInfo;
              currentParentIsContainer = true;
              break findParent;
          }
          parent = parent['return'];
        }
        currentParentIsValid = true;
      }

      if (node.tag === HostComponent || node.tag === HostText) {
        commitNestedUnmounts(node);
        // After all the children have unmounted, it is now safe to remove the
        // node from the tree.
        if (currentParentIsContainer) {
          removeChildFromContainer(currentParent, node.stateNode);
        } else {
          removeChild(currentParent, node.stateNode);
        }
        // Don't visit children because we already visited them.
      } else if (node.tag === HostPortal) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        // Visit children because portals might contain host components.
        if (node.child !== null) {
          node.child['return'] = node;
          node = node.child;
          continue;
        }
      } else {
        commitUnmount(node);
        // Visit children because we may find more host components below.
        if (node.child !== null) {
          node.child['return'] = node;
          node = node.child;
          continue;
        }
      }
      if (node === current) {
        return;
      }
      while (node.sibling === null) {
        if (node['return'] === null || node['return'] === current) {
          return;
        }
        node = node['return'];
        if (node.tag === HostPortal) {
          // When we go out of the portal, we need to restore the parent.
          // Since we don't keep a stack of them, we will search for it.
          currentParentIsValid = false;
        }
      }
      node.sibling['return'] = node['return'];
      node = node.sibling;
    }
  }

  function commitDeletion(current) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current);
    detachFiber(current);
  }

  function commitWork(current, finishedWork) {
    switch (finishedWork.tag) {
      case ClassComponent:
        {
          return;
        }
      case HostComponent:
        {
          var instance = finishedWork.stateNode;
          if (instance != null) {
            // Commit the work prepared earlier.
            var newProps = finishedWork.memoizedProps;
            // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.
            var oldProps = current !== null ? current.memoizedProps : newProps;
            var type = finishedWork.type;
            // TODO: Type the updateQueue to be specific to host components.
            var updatePayload = finishedWork.updateQueue;
            finishedWork.updateQueue = null;
            if (updatePayload !== null) {
              commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
            }
          }
          return;
        }
      case HostText:
        {
          !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          var textInstance = finishedWork.stateNode;
          var newText = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldText = current !== null ? current.memoizedProps : newText;
          commitTextUpdate(textInstance, oldText, newText);
          return;
        }
      case HostRoot:
        {
          return;
        }
      default:
        {
          invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
        }
    }
  }

  function commitResetTextContent(current) {
    resetTextContent(current.stateNode);
  }

  if (enableMutatingReconciler) {
    return {
      commitResetTextContent: commitResetTextContent,
      commitPlacement: commitPlacement,
      commitDeletion: commitDeletion,
      commitWork: commitWork,
      commitLifeCycles: commitLifeCycles,
      commitAttachRef: commitAttachRef,
      commitDetachRef: commitDetachRef
    };
  } else {
    invariant(false, 'Mutating reconciler is disabled.');
  }
};

var NO_CONTEXT = {};

var ReactFiberHostContext = function (config) {
  var getChildHostContext = config.getChildHostContext,
      getRootHostContext = config.getRootHostContext;


  var contextStackCursor = createCursor(NO_CONTEXT);
  var contextFiberStackCursor = createCursor(NO_CONTEXT);
  var rootInstanceStackCursor = createCursor(NO_CONTEXT);

  function requiredContext(c) {
    !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    return c;
  }

  function getRootHostContainer() {
    var rootInstance = requiredContext(rootInstanceStackCursor.current);
    return rootInstance;
  }

  function pushHostContainer(fiber, nextRootInstance) {
    // Push current root instance onto the stack;
    // This allows us to reset root when portals are popped.
    push(rootInstanceStackCursor, nextRootInstance, fiber);

    var nextRootContext = getRootHostContext(nextRootInstance);

    // Track the context and the Fiber that provided it.
    // This enables us to pop only Fibers that provide unique contexts.
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor, nextRootContext, fiber);
  }

  function popHostContainer(fiber) {
    pop(contextStackCursor, fiber);
    pop(contextFiberStackCursor, fiber);
    pop(rootInstanceStackCursor, fiber);
  }

  function getHostContext() {
    var context = requiredContext(contextStackCursor.current);
    return context;
  }

  function pushHostContext(fiber) {
    var rootInstance = requiredContext(rootInstanceStackCursor.current);
    var context = requiredContext(contextStackCursor.current);
    var nextContext = getChildHostContext(context, fiber.type, rootInstance);

    // Don't push this Fiber's context unless it's unique.
    if (context === nextContext) {
      return;
    }

    // Track the context and the Fiber that provided it.
    // This enables us to pop only Fibers that provide unique contexts.
    push(contextFiberStackCursor, fiber, fiber);
    push(contextStackCursor, nextContext, fiber);
  }

  function popHostContext(fiber) {
    // Do not pop unless this Fiber provided the current context.
    // pushHostContext() only pushes Fibers that provide unique contexts.
    if (contextFiberStackCursor.current !== fiber) {
      return;
    }

    pop(contextStackCursor, fiber);
    pop(contextFiberStackCursor, fiber);
  }

  function resetHostContainer() {
    contextStackCursor.current = NO_CONTEXT;
    rootInstanceStackCursor.current = NO_CONTEXT;
  }

  return {
    getHostContext: getHostContext,
    getRootHostContainer: getRootHostContainer,
    popHostContainer: popHostContainer,
    popHostContext: popHostContext,
    pushHostContainer: pushHostContainer,
    pushHostContext: pushHostContext,
    resetHostContainer: resetHostContainer
  };
};

var ReactFiberHydrationContext = function (config) {
  var shouldSetTextContent = config.shouldSetTextContent,
      hydration = config.hydration;

  // If this doesn't have hydration mode.

  if (!hydration) {
    return {
      enterHydrationState: function () {
        return false;
      },
      resetHydrationState: function () {},
      tryToClaimNextHydratableInstance: function () {},
      prepareToHydrateHostInstance: function () {
        invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      },
      prepareToHydrateHostTextInstance: function () {
        invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
      },
      popHydrationState: function (fiber) {
        return false;
      }
    };
  }

  var canHydrateInstance = hydration.canHydrateInstance,
      canHydrateTextInstance = hydration.canHydrateTextInstance,
      getNextHydratableSibling = hydration.getNextHydratableSibling,
      getFirstHydratableChild = hydration.getFirstHydratableChild,
      hydrateInstance = hydration.hydrateInstance,
      hydrateTextInstance = hydration.hydrateTextInstance,
      didNotMatchHydratedContainerTextInstance = hydration.didNotMatchHydratedContainerTextInstance,
      didNotMatchHydratedTextInstance = hydration.didNotMatchHydratedTextInstance,
      didNotHydrateContainerInstance = hydration.didNotHydrateContainerInstance,
      didNotHydrateInstance = hydration.didNotHydrateInstance,
      didNotFindHydratableContainerInstance = hydration.didNotFindHydratableContainerInstance,
      didNotFindHydratableContainerTextInstance = hydration.didNotFindHydratableContainerTextInstance,
      didNotFindHydratableInstance = hydration.didNotFindHydratableInstance,
      didNotFindHydratableTextInstance = hydration.didNotFindHydratableTextInstance;

  // The deepest Fiber on the stack involved in a hydration context.
  // This may have been an insertion or a hydration.

  var hydrationParentFiber = null;
  var nextHydratableInstance = null;
  var isHydrating = false;

  function enterHydrationState(fiber) {
    var parentInstance = fiber.stateNode.containerInfo;
    nextHydratableInstance = getFirstHydratableChild(parentInstance);
    hydrationParentFiber = fiber;
    isHydrating = true;
    return true;
  }

  function deleteHydratableInstance(returnFiber, instance) {
    {
      switch (returnFiber.tag) {
        case HostRoot:
          didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
          break;
        case HostComponent:
          didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
          break;
      }
    }

    var childToDelete = createFiberFromHostInstanceForDeletion();
    childToDelete.stateNode = instance;
    childToDelete['return'] = returnFiber;
    childToDelete.effectTag = Deletion;

    // This might seem like it belongs on progressedFirstDeletion. However,
    // these children are not part of the reconciliation list of children.
    // Even if we abort and rereconcile the children, that will try to hydrate
    // again and the nodes are still in the host tree so these will be
    // recreated.
    if (returnFiber.lastEffect !== null) {
      returnFiber.lastEffect.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
  }

  function insertNonHydratedInstance(returnFiber, fiber) {
    fiber.effectTag |= Placement;
    {
      switch (returnFiber.tag) {
        case HostRoot:
          {
            var parentContainer = returnFiber.stateNode.containerInfo;
            switch (fiber.tag) {
              case HostComponent:
                var type = fiber.type;
                var props = fiber.pendingProps;
                didNotFindHydratableContainerInstance(parentContainer, type, props);
                break;
              case HostText:
                var text = fiber.pendingProps;
                didNotFindHydratableContainerTextInstance(parentContainer, text);
                break;
            }
            break;
          }
        case HostComponent:
          {
            var parentType = returnFiber.type;
            var parentProps = returnFiber.memoizedProps;
            var parentInstance = returnFiber.stateNode;
            switch (fiber.tag) {
              case HostComponent:
                var _type = fiber.type;
                var _props = fiber.pendingProps;
                didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                break;
              case HostText:
                var _text = fiber.pendingProps;
                didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                break;
            }
            break;
          }
        default:
          return;
      }
    }
  }

  function tryHydrate(fiber, nextInstance) {
    switch (fiber.tag) {
      case HostComponent:
        {
          var type = fiber.type;
          var props = fiber.pendingProps;
          var instance = canHydrateInstance(nextInstance, type, props);
          if (instance !== null) {
            fiber.stateNode = instance;
            return true;
          }
          return false;
        }
      case HostText:
        {
          var text = fiber.pendingProps;
          var textInstance = canHydrateTextInstance(nextInstance, text);
          if (textInstance !== null) {
            fiber.stateNode = textInstance;
            return true;
          }
          return false;
        }
      default:
        return false;
    }
  }

  function tryToClaimNextHydratableInstance(fiber) {
    if (!isHydrating) {
      return;
    }
    var nextInstance = nextHydratableInstance;
    if (!nextInstance) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    if (!tryHydrate(fiber, nextInstance)) {
      // If we can't hydrate this instance let's try the next one.
      // We use this as a heuristic. It's based on intuition and not data so it
      // might be flawed or unnecessary.
      nextInstance = getNextHydratableSibling(nextInstance);
      if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
        // Nothing to hydrate. Make it an insertion.
        insertNonHydratedInstance(hydrationParentFiber, fiber);
        isHydrating = false;
        hydrationParentFiber = fiber;
        return;
      }
      // We matched the next one, we'll now assume that the first one was
      // superfluous and we'll delete it. Since we can't eagerly delete it
      // we'll have to schedule a deletion. To do that, this node needs a dummy
      // fiber associated with it.
      deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
    }
    hydrationParentFiber = fiber;
    nextHydratableInstance = getFirstHydratableChild(nextInstance);
  }

  function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
    var instance = fiber.stateNode;
    var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
    // TODO: Type this specific to this type of component.
    fiber.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update.
    if (updatePayload !== null) {
      return true;
    }
    return false;
  }

  function prepareToHydrateHostTextInstance(fiber) {
    var textInstance = fiber.stateNode;
    var textContent = fiber.memoizedProps;
    var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
    {
      if (shouldUpdate) {
        // We assume that prepareToHydrateHostTextInstance is called in a context where the
        // hydration parent is the parent host component of this host text.
        var returnFiber = hydrationParentFiber;
        if (returnFiber !== null) {
          switch (returnFiber.tag) {
            case HostRoot:
              {
                var parentContainer = returnFiber.stateNode.containerInfo;
                didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                break;
              }
            case HostComponent:
              {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                break;
              }
          }
        }
      }
    }
    return shouldUpdate;
  }

  function popToNextHostParent(fiber) {
    var parent = fiber['return'];
    while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot) {
      parent = parent['return'];
    }
    hydrationParentFiber = parent;
  }

  function popHydrationState(fiber) {
    if (fiber !== hydrationParentFiber) {
      // We're deeper than the current hydration context, inside an inserted
      // tree.
      return false;
    }
    if (!isHydrating) {
      // If we're not currently hydrating but we're in a hydration context, then
      // we were an insertion and now need to pop up reenter hydration of our
      // siblings.
      popToNextHostParent(fiber);
      isHydrating = true;
      return false;
    }

    var type = fiber.type;

    // If we have any remaining hydratable nodes, we need to delete them now.
    // We only do this deeper than head and body since they tend to have random
    // other nodes in them. We also ignore components with pure text content in
    // side of them.
    // TODO: Better heuristic.
    if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
      var nextInstance = nextHydratableInstance;
      while (nextInstance) {
        deleteHydratableInstance(fiber, nextInstance);
        nextInstance = getNextHydratableSibling(nextInstance);
      }
    }

    popToNextHostParent(fiber);
    nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
    return true;
  }

  function resetHydrationState() {
    hydrationParentFiber = null;
    nextHydratableInstance = null;
    isHydrating = false;
  }

  return {
    enterHydrationState: enterHydrationState,
    resetHydrationState: resetHydrationState,
    tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
    prepareToHydrateHostInstance: prepareToHydrateHostInstance,
    prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
    popHydrationState: popHydrationState
  };
};

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

var defaultShowDialog = function (capturedError) {
  return true;
};

var showDialog = defaultShowDialog;

function logCapturedError(capturedError) {
  var logError = showDialog(capturedError);

  // Allow injected showDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;


    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var invokeGuardedCallback$1 = ReactErrorUtils.invokeGuardedCallback;
var hasCaughtError = ReactErrorUtils.hasCaughtError;
var clearCaughtError = ReactErrorUtils.clearCaughtError;


{
  var didWarnAboutStateTransition = false;
  var didWarnSetStateChildContext = false;
  var didWarnStateUpdateForUnmountedComponent = {};

  var warnAboutUpdateOnUnmounted = function (fiber) {
    var componentName = getComponentName(fiber) || 'ReactClass';
    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
      return;
    }
    warning(false, 'Can only update a mounted or mounting ' + 'component. This usually means you called setState, replaceState, ' + 'or forceUpdate on an unmounted component. This is a no-op.\n\nPlease ' + 'check the code for the %s component.', componentName);
    didWarnStateUpdateForUnmountedComponent[componentName] = true;
  };

  var warnAboutInvalidUpdates = function (instance) {
    switch (ReactDebugCurrentFiber.phase) {
      case 'getChildContext':
        if (didWarnSetStateChildContext) {
          return;
        }
        warning(false, 'setState(...): Cannot call setState() inside getChildContext()');
        didWarnSetStateChildContext = true;
        break;
      case 'render':
        if (didWarnAboutStateTransition) {
          return;
        }
        warning(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
        didWarnAboutStateTransition = true;
        break;
    }
  };
}

var ReactFiberScheduler = function (config) {
  var hostContext = ReactFiberHostContext(config);
  var hydrationContext = ReactFiberHydrationContext(config);
  var popHostContainer = hostContext.popHostContainer,
      popHostContext = hostContext.popHostContext,
      resetHostContainer = hostContext.resetHostContainer;

  var _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleWork, computeExpirationForFiber),
      beginWork = _ReactFiberBeginWork.beginWork,
      beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

  var _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
      completeWork = _ReactFiberCompleteWo.completeWork;

  var _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
      commitResetTextContent = _ReactFiberCommitWork.commitResetTextContent,
      commitPlacement = _ReactFiberCommitWork.commitPlacement,
      commitDeletion = _ReactFiberCommitWork.commitDeletion,
      commitWork = _ReactFiberCommitWork.commitWork,
      commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
      commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
      commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

  var now = config.now,
      scheduleDeferredCallback = config.scheduleDeferredCallback,
      useSyncScheduling = config.useSyncScheduling,
      prepareForCommit = config.prepareForCommit,
      resetAfterCommit = config.resetAfterCommit;

  // Represents the current time in ms.

  var startTime = now();
  var mostRecentCurrentTime = msToExpirationTime(0);

  // Represents the expiration time that incoming updates should use. (If this
  // is NoWork, use the default strategy: async updates in async mode, sync
  // updates in sync mode.)
  var expirationContext = NoWork;

  var isWorking = false;

  // The next work in progress fiber that we're currently working on.
  var nextUnitOfWork = null;
  var nextRoot = null;
  // The time at which we're currently rendering work.
  var nextRenderExpirationTime = NoWork;

  // The next fiber with an effect that we're currently committing.
  var nextEffect = null;

  // Keep track of which fibers have captured an error that need to be handled.
  // Work is removed from this collection after componentDidCatch is called.
  var capturedErrors = null;
  // Keep track of which fibers have failed during the current batch of work.
  // This is a different set than capturedErrors, because it is not reset until
  // the end of the batch. This is needed to propagate errors correctly if a
  // subtree fails more than once.
  var failedBoundaries = null;
  // Error boundaries that captured an error during the current commit.
  var commitPhaseBoundaries = null;
  var firstUncaughtError = null;
  var didFatal = false;

  var isCommitting = false;
  var isUnmounting = false;

  // Used for performance tracking.
  var interruptedBy = null;

  function resetContextStack() {
    // Reset the stack
    reset$1();
    // Reset the cursors
    resetContext();
    resetHostContainer();
  }

  function commitAllHostEffects() {
    while (nextEffect !== null) {
      {
        ReactDebugCurrentFiber.setCurrentFiber(nextEffect);
      }
      recordEffect();

      var effectTag = nextEffect.effectTag;
      if (effectTag & ContentReset) {
        commitResetTextContent(nextEffect);
      }

      if (effectTag & Ref) {
        var current = nextEffect.alternate;
        if (current !== null) {
          commitDetachRef(current);
        }
      }

      // The following switch statement is only concerned about placement,
      // updates, and deletions. To avoid needing to add a case for every
      // possible bitmap value, we remove the secondary effects from the
      // effect tag and switch on that value.
      var primaryEffectTag = effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork);
      switch (primaryEffectTag) {
        case Placement:
          {
            commitPlacement(nextEffect);
            // Clear the "placement" from effect tag so that we know that this is inserted, before
            // any life-cycles like componentDidMount gets called.
            // TODO: findDOMNode doesn't rely on this any more but isMounted
            // does and isMounted is deprecated anyway so we should be able
            // to kill this.
            nextEffect.effectTag &= ~Placement;
            break;
          }
        case PlacementAndUpdate:
          {
            // Placement
            commitPlacement(nextEffect);
            // Clear the "placement" from effect tag so that we know that this is inserted, before
            // any life-cycles like componentDidMount gets called.
            nextEffect.effectTag &= ~Placement;

            // Update
            var _current = nextEffect.alternate;
            commitWork(_current, nextEffect);
            break;
          }
        case Update:
          {
            var _current2 = nextEffect.alternate;
            commitWork(_current2, nextEffect);
            break;
          }
        case Deletion:
          {
            isUnmounting = true;
            commitDeletion(nextEffect);
            isUnmounting = false;
            break;
          }
      }
      nextEffect = nextEffect.nextEffect;
    }

    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }
  }

  function commitAllLifeCycles() {
    while (nextEffect !== null) {
      var effectTag = nextEffect.effectTag;

      if (effectTag & (Update | Callback)) {
        recordEffect();
        var current = nextEffect.alternate;
        commitLifeCycles(current, nextEffect);
      }

      if (effectTag & Ref) {
        recordEffect();
        commitAttachRef(nextEffect);
      }

      if (effectTag & Err) {
        recordEffect();
        commitErrorHandling(nextEffect);
      }

      var next = nextEffect.nextEffect;
      // Ensure that we clean these up so that we don't accidentally keep them.
      // I'm not actually sure this matters because we can't reset firstEffect
      // and lastEffect since they're on every node, not just the effectful
      // ones. So we have to clean everything as we reuse nodes anyway.
      nextEffect.nextEffect = null;
      // Ensure that we reset the effectTag here so that we can rely on effect
      // tags to reason about the current life-cycle.
      nextEffect = next;
    }
  }

  function commitRoot(finishedWork) {
    // We keep track of this so that captureError can collect any boundaries
    // that capture an error during the commit phase. The reason these aren't
    // local to this function is because errors that occur during cWU are
    // captured elsewhere, to prevent the unmount from being interrupted.
    isWorking = true;
    isCommitting = true;
    startCommitTimer();

    var root = finishedWork.stateNode;
    !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    root.isReadyForCommit = false;

    // Reset this to null before calling lifecycles
    ReactCurrentOwner.current = null;

    var firstEffect = void 0;
    if (finishedWork.effectTag > PerformedWork) {
      // A fiber's effect list consists only of its children, not itself. So if
      // the root has an effect, we need to add it to the end of the list. The
      // resulting list is the set that would belong to the root's parent, if
      // it had one; that is, all the effects in the tree including the root.
      if (finishedWork.lastEffect !== null) {
        finishedWork.lastEffect.nextEffect = finishedWork;
        firstEffect = finishedWork.firstEffect;
      } else {
        firstEffect = finishedWork;
      }
    } else {
      // There is no effect on the root.
      firstEffect = finishedWork.firstEffect;
    }

    prepareForCommit();

    // Commit all the side-effects within a tree. We'll do this in two passes.
    // The first pass performs all the host insertions, updates, deletions and
    // ref unmounts.
    nextEffect = firstEffect;
    startCommitHostEffectsTimer();
    while (nextEffect !== null) {
      var didError = false;
      var _error = void 0;
      {
        invokeGuardedCallback$1(null, commitAllHostEffects, null);
        if (hasCaughtError()) {
          didError = true;
          _error = clearCaughtError();
        }
      }
      if (didError) {
        !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        captureError(nextEffect, _error);
        // Clean-up
        if (nextEffect !== null) {
          nextEffect = nextEffect.nextEffect;
        }
      }
    }
    stopCommitHostEffectsTimer();

    resetAfterCommit();

    // The work-in-progress tree is now the current tree. This must come after
    // the first pass of the commit phase, so that the previous tree is still
    // current during componentWillUnmount, but before the second pass, so that
    // the finished work is current during componentDidMount/Update.
    root.current = finishedWork;

    // In the second pass we'll perform all life-cycles and ref callbacks.
    // Life-cycles happen as a separate pass so that all placements, updates,
    // and deletions in the entire tree have already been invoked.
    // This pass also triggers any renderer-specific initial effects.
    nextEffect = firstEffect;
    startCommitLifeCyclesTimer();
    while (nextEffect !== null) {
      var _didError = false;
      var _error2 = void 0;
      {
        invokeGuardedCallback$1(null, commitAllLifeCycles, null);
        if (hasCaughtError()) {
          _didError = true;
          _error2 = clearCaughtError();
        }
      }
      if (_didError) {
        !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        captureError(nextEffect, _error2);
        if (nextEffect !== null) {
          nextEffect = nextEffect.nextEffect;
        }
      }
    }

    isCommitting = false;
    isWorking = false;
    stopCommitLifeCyclesTimer();
    stopCommitTimer();
    if (typeof onCommitRoot === 'function') {
      onCommitRoot(finishedWork.stateNode);
    }
    if (true && ReactFiberInstrumentation_1.debugTool) {
      ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
    }

    // If we caught any errors during this commit, schedule their boundaries
    // to update.
    if (commitPhaseBoundaries) {
      commitPhaseBoundaries.forEach(scheduleErrorRecovery);
      commitPhaseBoundaries = null;
    }

    if (firstUncaughtError !== null) {
      var _error3 = firstUncaughtError;
      firstUncaughtError = null;
      onUncaughtError(_error3);
    }

    var remainingTime = root.current.expirationTime;

    if (remainingTime === NoWork) {
      capturedErrors = null;
      failedBoundaries = null;
    }

    return remainingTime;
  }

  function resetExpirationTime(workInProgress, renderTime) {
    if (renderTime !== Never && workInProgress.expirationTime === Never) {
      // The children of this component are hidden. Don't bubble their
      // expiration times.
      return;
    }

    // Check for pending updates.
    var newExpirationTime = getUpdateExpirationTime(workInProgress);

    // TODO: Calls need to visit stateNode

    // Bubble up the earliest expiration time.
    var child = workInProgress.child;
    while (child !== null) {
      if (child.expirationTime !== NoWork && (newExpirationTime === NoWork || newExpirationTime > child.expirationTime)) {
        newExpirationTime = child.expirationTime;
      }
      child = child.sibling;
    }
    workInProgress.expirationTime = newExpirationTime;
  }

  function completeUnitOfWork(workInProgress) {
    while (true) {
      // The current, flushed, state of this fiber is the alternate.
      // Ideally nothing should rely on this, but relying on it here
      // means that we don't need an additional field on the work in
      // progress.
      var current = workInProgress.alternate;
      {
        ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
      }
      var next = completeWork(current, workInProgress, nextRenderExpirationTime);
      {
        ReactDebugCurrentFiber.resetCurrentFiber();
      }

      var returnFiber = workInProgress['return'];
      var siblingFiber = workInProgress.sibling;

      resetExpirationTime(workInProgress, nextRenderExpirationTime);

      if (next !== null) {
        stopWorkTimer(workInProgress);
        if (true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }
        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        return next;
      }

      if (returnFiber !== null) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if
        // needed, by doing multiple passes over the effect list. We don't want
        // to schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;
        // Skip both NoWork and PerformedWork tags when creating the effect list.
        // PerformedWork effect is read by React DevTools but shouldn't be committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      stopWorkTimer(workInProgress);
      if (true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        // We've reached the root.
        var root = workInProgress.stateNode;
        root.isReadyForCommit = true;
        return null;
      }
    }

    // Without this explicit null return Flow complains of invalid return type
    // TODO Remove the above while(true) loop
    // eslint-disable-next-line no-unreachable
    return null;
  }

  function performUnitOfWork(workInProgress) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;

    // See if beginning this work spawns more work.
    startWorkTimer(workInProgress);
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }
    var next = beginWork(current, workInProgress, nextRenderExpirationTime);
    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }
    if (true && ReactFiberInstrumentation_1.debugTool) {
      ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
    }

    if (next === null) {
      // If this doesn't spawn new work, complete the current work.
      next = completeUnitOfWork(workInProgress);
    }

    ReactCurrentOwner.current = null;

    return next;
  }

  function performFailedUnitOfWork(workInProgress) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current = workInProgress.alternate;

    // See if beginning this work spawns more work.
    startWorkTimer(workInProgress);
    {
      ReactDebugCurrentFiber.setCurrentFiber(workInProgress);
    }
    var next = beginFailedWork(current, workInProgress, nextRenderExpirationTime);
    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }
    if (true && ReactFiberInstrumentation_1.debugTool) {
      ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
    }

    if (next === null) {
      // If this doesn't spawn new work, complete the current work.
      next = completeUnitOfWork(workInProgress);
    }

    ReactCurrentOwner.current = null;

    return next;
  }

  function workLoop(expirationTime) {
    if (capturedErrors !== null) {
      // If there are unhandled errors, switch to the slow work loop.
      // TODO: How to avoid this check in the fast path? Maybe the renderer
      // could keep track of which roots have unhandled errors and call a
      // forked version of renderRoot.
      slowWorkLoopThatChecksForFailedWork(expirationTime);
      return;
    }
    if (nextRenderExpirationTime === NoWork || nextRenderExpirationTime > expirationTime) {
      return;
    }

    if (nextRenderExpirationTime <= mostRecentCurrentTime) {
      // Flush all expired work.
      while (nextUnitOfWork !== null) {
        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
      }
    } else {
      // Flush asynchronous work until the deadline runs out of time.
      while (nextUnitOfWork !== null && !shouldYield()) {
        nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
      }
    }
  }

  function slowWorkLoopThatChecksForFailedWork(expirationTime) {
    if (nextRenderExpirationTime === NoWork || nextRenderExpirationTime > expirationTime) {
      return;
    }

    if (nextRenderExpirationTime <= mostRecentCurrentTime) {
      // Flush all expired work.
      while (nextUnitOfWork !== null) {
        if (hasCapturedError(nextUnitOfWork)) {
          // Use a forked version of performUnitOfWork
          nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
        } else {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      }
    } else {
      // Flush asynchronous work until the deadline runs out of time.
      while (nextUnitOfWork !== null && !shouldYield()) {
        if (hasCapturedError(nextUnitOfWork)) {
          // Use a forked version of performUnitOfWork
          nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
        } else {
          nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
        }
      }
    }
  }

  function renderRootCatchBlock(root, failedWork, boundary, expirationTime) {
    // We're going to restart the error boundary that captured the error.
    // Conceptually, we're unwinding the stack. We need to unwind the
    // context stack, too.
    unwindContexts(failedWork, boundary);

    // Restart the error boundary using a forked version of
    // performUnitOfWork that deletes the boundary's children. The entire
    // failed subree will be unmounted. During the commit phase, a special
    // lifecycle method is called on the error boundary, which triggers
    // a re-render.
    nextUnitOfWork = performFailedUnitOfWork(boundary);

    // Continue working.
    workLoop(expirationTime);
  }

  function renderRoot(root, expirationTime) {
    !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    isWorking = true;

    // We're about to mutate the work-in-progress tree. If the root was pending
    // commit, it no longer is: we'll need to complete it again.
    root.isReadyForCommit = false;

    // Check if we're starting from a fresh stack, or if we're resuming from
    // previously yielded work.
    if (root !== nextRoot || expirationTime !== nextRenderExpirationTime || nextUnitOfWork === null) {
      // Reset the stack and start working from the root.
      resetContextStack();
      nextRoot = root;
      nextRenderExpirationTime = expirationTime;
      nextUnitOfWork = createWorkInProgress(nextRoot.current, null, expirationTime);
    }

    startWorkLoopTimer(nextUnitOfWork);

    var didError = false;
    var error = null;
    {
      invokeGuardedCallback$1(null, workLoop, null, expirationTime);
      if (hasCaughtError()) {
        didError = true;
        error = clearCaughtError();
      }
    }

    // An error was thrown during the render phase.
    while (didError) {
      if (didFatal) {
        // This was a fatal error. Don't attempt to recover from it.
        firstUncaughtError = error;
        break;
      }

      var failedWork = nextUnitOfWork;
      if (failedWork === null) {
        // An error was thrown but there's no current unit of work. This can
        // happen during the commit phase if there's a bug in the renderer.
        didFatal = true;
        continue;
      }

      // "Capture" the error by finding the nearest boundary. If there is no
      // error boundary, we use the root.
      var boundary = captureError(failedWork, error);
      !(boundary !== null) ? invariant(false, 'Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue.') : void 0;

      if (didFatal) {
        // The error we just captured was a fatal error. This happens
        // when the error propagates to the root more than once.
        continue;
      }

      didError = false;
      error = null;
      {
        invokeGuardedCallback$1(null, renderRootCatchBlock, null, root, failedWork, boundary, expirationTime);
        if (hasCaughtError()) {
          didError = true;
          error = clearCaughtError();
          continue;
        }
      }
      // We're finished working. Exit the error loop.
      break;
    }

    var uncaughtError = firstUncaughtError;

    // We're done performing work. Time to clean up.
    stopWorkLoopTimer(interruptedBy);
    interruptedBy = null;
    isWorking = false;
    didFatal = false;
    firstUncaughtError = null;

    if (uncaughtError !== null) {
      onUncaughtError(uncaughtError);
    }

    return root.isReadyForCommit ? root.current.alternate : null;
  }

  // Returns the boundary that captured the error, or null if the error is ignored
  function captureError(failedWork, error) {
    // It is no longer valid because we exited the user code.
    ReactCurrentOwner.current = null;
    {
      ReactDebugCurrentFiber.resetCurrentFiber();
    }

    // Search for the nearest error boundary.
    var boundary = null;

    // Passed to logCapturedError()
    var errorBoundaryFound = false;
    var willRetry = false;
    var errorBoundaryName = null;

    // Host containers are a special case. If the failed work itself is a host
    // container, then it acts as its own boundary. In all other cases, we
    // ignore the work itself and only search through the parents.
    if (failedWork.tag === HostRoot) {
      boundary = failedWork;

      if (isFailedBoundary(failedWork)) {
        // If this root already failed, there must have been an error when
        // attempting to unmount it. This is a worst-case scenario and
        // should only be possible if there's a bug in the renderer.
        didFatal = true;
      }
    } else {
      var node = failedWork['return'];
      while (node !== null && boundary === null) {
        if (node.tag === ClassComponent) {
          var instance = node.stateNode;
          if (typeof instance.componentDidCatch === 'function') {
            errorBoundaryFound = true;
            errorBoundaryName = getComponentName(node);

            // Found an error boundary!
            boundary = node;
            willRetry = true;
          }
        } else if (node.tag === HostRoot) {
          // Treat the root like a no-op error boundary
          boundary = node;
        }

        if (isFailedBoundary(node)) {
          // This boundary is already in a failed state.

          // If we're currently unmounting, that means this error was
          // thrown while unmounting a failed subtree. We should ignore
          // the error.
          if (isUnmounting) {
            return null;
          }

          // If we're in the commit phase, we should check to see if
          // this boundary already captured an error during this commit.
          // This case exists because multiple errors can be thrown during
          // a single commit without interruption.
          if (commitPhaseBoundaries !== null && (commitPhaseBoundaries.has(node) || node.alternate !== null && commitPhaseBoundaries.has(node.alternate))) {
            // If so, we should ignore this error.
            return null;
          }

          // The error should propagate to the next boundary -— we keep looking.
          boundary = null;
          willRetry = false;
        }

        node = node['return'];
      }
    }

    if (boundary !== null) {
      // Add to the collection of failed boundaries. This lets us know that
      // subsequent errors in this subtree should propagate to the next boundary.
      if (failedBoundaries === null) {
        failedBoundaries = new Set();
      }
      failedBoundaries.add(boundary);

      // This method is unsafe outside of the begin and complete phases.
      // We might be in the commit phase when an error is captured.
      // The risk is that the return path from this Fiber may not be accurate.
      // That risk is acceptable given the benefit of providing users more context.
      var _componentStack = getStackAddendumByWorkInProgressFiber(failedWork);
      var _componentName = getComponentName(failedWork);

      // Add to the collection of captured errors. This is stored as a global
      // map of errors and their component stack location keyed by the boundaries
      // that capture them. We mostly use this Map as a Set; it's a Map only to
      // avoid adding a field to Fiber to store the error.
      if (capturedErrors === null) {
        capturedErrors = new Map();
      }

      var capturedError = {
        componentName: _componentName,
        componentStack: _componentStack,
        error: error,
        errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
        errorBoundaryFound: errorBoundaryFound,
        errorBoundaryName: errorBoundaryName,
        willRetry: willRetry
      };

      capturedErrors.set(boundary, capturedError);

      try {
        logCapturedError(capturedError);
      } catch (e) {
        // Prevent cycle if logCapturedError() throws.
        // A cycle may still occur if logCapturedError renders a component that throws.
        console.error(e);
      }

      // If we're in the commit phase, defer scheduling an update on the
      // boundary until after the commit is complete
      if (isCommitting) {
        if (commitPhaseBoundaries === null) {
          commitPhaseBoundaries = new Set();
        }
        commitPhaseBoundaries.add(boundary);
      } else {
        // Otherwise, schedule an update now.
        // TODO: Is this actually necessary during the render phase? Is it
        // possible to unwind and continue rendering at the same priority,
        // without corrupting internal state?
        scheduleErrorRecovery(boundary);
      }
      return boundary;
    } else if (firstUncaughtError === null) {
      // If no boundary is found, we'll need to throw the error
      firstUncaughtError = error;
    }
    return null;
  }

  function hasCapturedError(fiber) {
    // TODO: capturedErrors should store the boundary instance, to avoid needing
    // to check the alternate.
    return capturedErrors !== null && (capturedErrors.has(fiber) || fiber.alternate !== null && capturedErrors.has(fiber.alternate));
  }

  function isFailedBoundary(fiber) {
    // TODO: failedBoundaries should store the boundary instance, to avoid
    // needing to check the alternate.
    return failedBoundaries !== null && (failedBoundaries.has(fiber) || fiber.alternate !== null && failedBoundaries.has(fiber.alternate));
  }

  function commitErrorHandling(effectfulFiber) {
    var capturedError = void 0;
    if (capturedErrors !== null) {
      capturedError = capturedErrors.get(effectfulFiber);
      capturedErrors['delete'](effectfulFiber);
      if (capturedError == null) {
        if (effectfulFiber.alternate !== null) {
          effectfulFiber = effectfulFiber.alternate;
          capturedError = capturedErrors.get(effectfulFiber);
          capturedErrors['delete'](effectfulFiber);
        }
      }
    }

    !(capturedError != null) ? invariant(false, 'No error for given unit of work. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    switch (effectfulFiber.tag) {
      case ClassComponent:
        var instance = effectfulFiber.stateNode;

        var info = {
          componentStack: capturedError.componentStack
        };

        // Allow the boundary to handle the error, usually by scheduling
        // an update to itself
        instance.componentDidCatch(capturedError.error, info);
        return;
      case HostRoot:
        if (firstUncaughtError === null) {
          firstUncaughtError = capturedError.error;
        }
        return;
      default:
        invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
    }
  }

  function unwindContexts(from, to) {
    var node = from;
    while (node !== null) {
      switch (node.tag) {
        case ClassComponent:
          popContextProvider(node);
          break;
        case HostComponent:
          popHostContext(node);
          break;
        case HostRoot:
          popHostContainer(node);
          break;
        case HostPortal:
          popHostContainer(node);
          break;
      }
      if (node === to || node.alternate === to) {
        stopFailedWorkTimer(node);
        break;
      } else {
        stopWorkTimer(node);
      }
      node = node['return'];
    }
  }

  function computeAsyncExpiration() {
    // Given the current clock time, returns an expiration time. We use rounding
    // to batch like updates together.
    // Should complete within ~1000ms. 1200ms max.
    var currentTime = recalculateCurrentTime();
    var expirationMs = 1000;
    var bucketSizeMs = 200;
    return computeExpirationBucket(currentTime, expirationMs, bucketSizeMs);
  }

  function computeExpirationForFiber(fiber) {
    var expirationTime = void 0;
    if (expirationContext !== NoWork) {
      // An explicit expiration context was set;
      expirationTime = expirationContext;
    } else if (isWorking) {
      if (isCommitting) {
        // Updates that occur during the commit phase should have sync priority
        // by default.
        expirationTime = Sync;
      } else {
        // Updates during the render phase should expire at the same time as
        // the work that is being rendered.
        expirationTime = nextRenderExpirationTime;
      }
    } else {
      // No explicit expiration context was set, and we're not currently
      // performing work. Calculate a new expiration time.
      if (useSyncScheduling && !(fiber.internalContextTag & AsyncUpdates)) {
        // This is a sync update
        expirationTime = Sync;
      } else {
        // This is an async update
        expirationTime = computeAsyncExpiration();
      }
    }
    return expirationTime;
  }

  function scheduleWork(fiber, expirationTime) {
    return scheduleWorkImpl(fiber, expirationTime, false);
  }

  function scheduleWorkImpl(fiber, expirationTime, isErrorRecovery) {
    recordScheduleUpdate();

    {
      if (!isErrorRecovery && fiber.tag === ClassComponent) {
        var instance = fiber.stateNode;
        warnAboutInvalidUpdates(instance);
      }
    }

    var node = fiber;
    while (node !== null) {
      // Walk the parent path to the root and update each node's
      // expiration time.
      if (node.expirationTime === NoWork || node.expirationTime > expirationTime) {
        node.expirationTime = expirationTime;
      }
      if (node.alternate !== null) {
        if (node.alternate.expirationTime === NoWork || node.alternate.expirationTime > expirationTime) {
          node.alternate.expirationTime = expirationTime;
        }
      }
      if (node['return'] === null) {
        if (node.tag === HostRoot) {
          var root = node.stateNode;
          if (!isWorking && root === nextRoot && expirationTime <= nextRenderExpirationTime) {
            // Restart the root from the top.
            if (nextUnitOfWork !== null) {
              // This is an interruption. (Used for performance tracking.)
              interruptedBy = fiber;
            }
            nextRoot = null;
            nextUnitOfWork = null;
            nextRenderExpirationTime = NoWork;
          }
          requestWork(root, expirationTime);
        } else {
          {
            if (!isErrorRecovery && fiber.tag === ClassComponent) {
              warnAboutUpdateOnUnmounted(fiber);
            }
          }
          return;
        }
      }
      node = node['return'];
    }
  }

  function scheduleErrorRecovery(fiber) {
    scheduleWorkImpl(fiber, Sync, true);
  }

  function recalculateCurrentTime() {
    // Subtract initial time so it fits inside 32bits
    var ms = now() - startTime;
    mostRecentCurrentTime = msToExpirationTime(ms);
    return mostRecentCurrentTime;
  }

  function deferredUpdates(fn) {
    var previousExpirationContext = expirationContext;
    expirationContext = computeAsyncExpiration();
    try {
      return fn();
    } finally {
      expirationContext = previousExpirationContext;
    }
  }

  function syncUpdates(fn) {
    var previousExpirationContext = expirationContext;
    expirationContext = Sync;
    try {
      return fn();
    } finally {
      expirationContext = previousExpirationContext;
    }
  }

  // TODO: Everything below this is written as if it has been lifted to the
  // renderers. I'll do this in a follow-up.

  // Linked-list of roots
  var firstScheduledRoot = null;
  var lastScheduledRoot = null;

  var isCallbackScheduled = false;
  var isRendering = false;
  var nextFlushedRoot = null;
  var nextFlushedExpirationTime = NoWork;
  var deadlineDidExpire = false;
  var hasUnhandledError = false;
  var unhandledError = null;
  var deadline = null;

  var isBatchingUpdates = false;
  var isUnbatchingUpdates = false;

  // Use these to prevent an infinite loop of nested updates
  var NESTED_UPDATE_LIMIT = 1000;
  var nestedUpdateCount = 0;

  var timeHeuristicForUnitOfWork = 1;

  // requestWork is called by the scheduler whenever a root receives an update.
  // It's up to the renderer to call renderRoot at some point in the future.
  function requestWork(root, expirationTime) {
    if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
      invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
    }

    // Add the root to the schedule.
    // Check if this root is already part of the schedule.
    if (root.nextScheduledRoot === null) {
      // This root is not already scheduled. Add it.
      root.remainingExpirationTime = expirationTime;
      if (lastScheduledRoot === null) {
        firstScheduledRoot = lastScheduledRoot = root;
        root.nextScheduledRoot = root;
      } else {
        lastScheduledRoot.nextScheduledRoot = root;
        lastScheduledRoot = root;
        lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
      }
    } else {
      // This root is already scheduled, but its priority may have increased.
      var remainingExpirationTime = root.remainingExpirationTime;
      if (remainingExpirationTime === NoWork || expirationTime < remainingExpirationTime) {
        // Update the priority.
        root.remainingExpirationTime = expirationTime;
      }
    }

    if (isRendering) {
      // Prevent reentrancy. Remaining work will be scheduled at the end of
      // the currently rendering batch.
      return;
    }

    if (isBatchingUpdates) {
      // Flush work at the end of the batch.
      if (isUnbatchingUpdates) {
        // ...unless we're inside unbatchedUpdates, in which case we should
        // flush it now.
        performWorkOnRoot(root, Sync);
      }
      return;
    }

    // TODO: Get rid of Sync and use current time?
    if (expirationTime === Sync) {
      performWork(Sync, null);
    } else if (!isCallbackScheduled) {
      isCallbackScheduled = true;
      startRequestCallbackTimer();
      scheduleDeferredCallback(performAsyncWork);
    }
  }

  function findHighestPriorityRoot() {
    var highestPriorityWork = NoWork;
    var highestPriorityRoot = null;

    if (lastScheduledRoot !== null) {
      var previousScheduledRoot = lastScheduledRoot;
      var root = firstScheduledRoot;
      while (root !== null) {
        var remainingExpirationTime = root.remainingExpirationTime;
        if (remainingExpirationTime === NoWork) {
          // This root no longer has work. Remove it from the scheduler.

          // TODO: This check is redudant, but Flow is confused by the branch
          // below where we set lastScheduledRoot to null, even though we break
          // from the loop right after.
          !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          if (root === root.nextScheduledRoot) {
            // This is the only root in the list.
            root.nextScheduledRoot = null;
            firstScheduledRoot = lastScheduledRoot = null;
            break;
          } else if (root === firstScheduledRoot) {
            // This is the first root in the list.
            var next = root.nextScheduledRoot;
            firstScheduledRoot = next;
            lastScheduledRoot.nextScheduledRoot = next;
            root.nextScheduledRoot = null;
          } else if (root === lastScheduledRoot) {
            // This is the last root in the list.
            lastScheduledRoot = previousScheduledRoot;
            lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
            root.nextScheduledRoot = null;
            break;
          } else {
            previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
            root.nextScheduledRoot = null;
          }
          root = previousScheduledRoot.nextScheduledRoot;
        } else {
          if (highestPriorityWork === NoWork || remainingExpirationTime < highestPriorityWork) {
            // Update the priority, if it's higher
            highestPriorityWork = remainingExpirationTime;
            highestPriorityRoot = root;
          }
          if (root === lastScheduledRoot) {
            break;
          }
          previousScheduledRoot = root;
          root = root.nextScheduledRoot;
        }
      }
    }

    // If the next root is the same as the previous root, this is a nested
    // update. To prevent an infinite loop, increment the nested update count.
    var previousFlushedRoot = nextFlushedRoot;
    if (previousFlushedRoot !== null && previousFlushedRoot === highestPriorityRoot) {
      nestedUpdateCount++;
    } else {
      // Reset whenever we switch roots.
      nestedUpdateCount = 0;
    }
    nextFlushedRoot = highestPriorityRoot;
    nextFlushedExpirationTime = highestPriorityWork;
  }

  function performAsyncWork(dl) {
    performWork(NoWork, dl);
  }

  function performWork(minExpirationTime, dl) {
    deadline = dl;

    // Keep working on roots until there's no more work, or until the we reach
    // the deadline.
    findHighestPriorityRoot();

    if (enableUserTimingAPI && deadline !== null) {
      var didExpire = nextFlushedExpirationTime < recalculateCurrentTime();
      stopRequestCallbackTimer(didExpire);
    }

    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && (minExpirationTime === NoWork || nextFlushedExpirationTime <= minExpirationTime) && !deadlineDidExpire) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime);
      // Find the next highest priority work.
      findHighestPriorityRoot();
    }

    // We're done flushing work. Either we ran out of time in this callback,
    // or there's no more work left with sufficient priority.

    // If we're inside a callback, set this to false since we just completed it.
    if (deadline !== null) {
      isCallbackScheduled = false;
    }
    // If there's work left over, schedule a new callback.
    if (nextFlushedRoot !== null && !isCallbackScheduled) {
      isCallbackScheduled = true;
      startRequestCallbackTimer();
      scheduleDeferredCallback(performAsyncWork);
    }

    // Clean-up.
    deadline = null;
    deadlineDidExpire = false;
    nestedUpdateCount = 0;

    if (hasUnhandledError) {
      var _error4 = unhandledError;
      unhandledError = null;
      hasUnhandledError = false;
      throw _error4;
    }
  }

  function performWorkOnRoot(root, expirationTime) {
    !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    isRendering = true;

    // Check if this is async work or sync/expired work.
    // TODO: Pass current time as argument to renderRoot, commitRoot
    if (expirationTime <= recalculateCurrentTime()) {
      // Flush sync work.
      var finishedWork = root.finishedWork;
      if (finishedWork !== null) {
        // This root is already complete. We can commit it.
        root.finishedWork = null;
        root.remainingExpirationTime = commitRoot(finishedWork);
      } else {
        root.finishedWork = null;
        finishedWork = renderRoot(root, expirationTime);
        if (finishedWork !== null) {
          // We've completed the root. Commit it.
          root.remainingExpirationTime = commitRoot(finishedWork);
        }
      }
    } else {
      // Flush async work.
      var _finishedWork = root.finishedWork;
      if (_finishedWork !== null) {
        // This root is already complete. We can commit it.
        root.finishedWork = null;
        root.remainingExpirationTime = commitRoot(_finishedWork);
      } else {
        root.finishedWork = null;
        _finishedWork = renderRoot(root, expirationTime);
        if (_finishedWork !== null) {
          // We've completed the root. Check the deadline one more time
          // before committing.
          if (!shouldYield()) {
            // Still time left. Commit the root.
            root.remainingExpirationTime = commitRoot(_finishedWork);
          } else {
            // There's no time left. Mark this root as complete. We'll come
            // back and commit it later.
            root.finishedWork = _finishedWork;
          }
        }
      }
    }

    isRendering = false;
  }

  // When working on async work, the reconciler asks the renderer if it should
  // yield execution. For DOM, we implement this with requestIdleCallback.
  function shouldYield() {
    if (deadline === null) {
      return false;
    }
    if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
      return false;
    }
    deadlineDidExpire = true;
    return true;
  }

  // TODO: Not happy about this hook. Conceptually, renderRoot should return a
  // tuple of (isReadyForCommit, didError, error)
  function onUncaughtError(error) {
    !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    // Unschedule this root so we don't work on it again until there's
    // another update.
    nextFlushedRoot.remainingExpirationTime = NoWork;
    if (!hasUnhandledError) {
      hasUnhandledError = true;
      unhandledError = error;
    }
  }

  // TODO: Batching should be implemented at the renderer level, not inside
  // the reconciler.
  function batchedUpdates(fn, a) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isBatchingUpdates = previousIsBatchingUpdates;
      if (!isBatchingUpdates && !isRendering) {
        performWork(Sync, null);
      }
    }
  }

  // TODO: Batching should be implemented at the renderer level, not inside
  // the reconciler.
  function unbatchedUpdates(fn) {
    if (isBatchingUpdates && !isUnbatchingUpdates) {
      isUnbatchingUpdates = true;
      try {
        return fn();
      } finally {
        isUnbatchingUpdates = false;
      }
    }
    return fn();
  }

  // TODO: Batching should be implemented at the renderer level, not within
  // the reconciler.
  function flushSync(fn) {
    var previousIsBatchingUpdates = isBatchingUpdates;
    isBatchingUpdates = true;
    try {
      return syncUpdates(fn);
    } finally {
      isBatchingUpdates = previousIsBatchingUpdates;
      !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
      performWork(Sync, null);
    }
  }

  return {
    computeAsyncExpiration: computeAsyncExpiration,
    computeExpirationForFiber: computeExpirationForFiber,
    scheduleWork: scheduleWork,
    batchedUpdates: batchedUpdates,
    unbatchedUpdates: unbatchedUpdates,
    flushSync: flushSync,
    deferredUpdates: deferredUpdates
  };
};

{
  var didWarnAboutNestedUpdates = false;
}

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);
  return isContextProvider(fiber) ? processChildContext(fiber, parentContext) : parentContext;
}

var ReactFiberReconciler$1 = function (config) {
  var getPublicInstance = config.getPublicInstance;

  var _ReactFiberScheduler = ReactFiberScheduler(config),
      computeAsyncExpiration = _ReactFiberScheduler.computeAsyncExpiration,
      computeExpirationForFiber = _ReactFiberScheduler.computeExpirationForFiber,
      scheduleWork = _ReactFiberScheduler.scheduleWork,
      batchedUpdates = _ReactFiberScheduler.batchedUpdates,
      unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
      flushSync = _ReactFiberScheduler.flushSync,
      deferredUpdates = _ReactFiberScheduler.deferredUpdates;

  function scheduleTopLevelUpdate(current, element, callback) {
    {
      if (ReactDebugCurrentFiber.phase === 'render' && ReactDebugCurrentFiber.current !== null && !didWarnAboutNestedUpdates) {
        didWarnAboutNestedUpdates = true;
        warning(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(ReactDebugCurrentFiber.current) || 'Unknown');
      }
    }

    callback = callback === undefined ? null : callback;
    {
      warning(callback === null || typeof callback === 'function', 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
    }

    var expirationTime = void 0;
    // Check if the top-level element is an async wrapper component. If so,
    // treat updates to the root as async. This is a bit weird but lets us
    // avoid a separate `renderAsync` API.
    if (enableAsyncSubtreeAPI && element != null && element.type != null && element.type.prototype != null && element.type.prototype.unstable_isAsyncReactComponent === true) {
      expirationTime = computeAsyncExpiration();
    } else {
      expirationTime = computeExpirationForFiber(current);
    }

    var update = {
      expirationTime: expirationTime,
      partialState: { element: element },
      callback: callback,
      isReplace: false,
      isForced: false,
      nextCallback: null,
      next: null
    };
    insertUpdateIntoFiber(current, update);
    scheduleWork(current, expirationTime);
  }

  function findHostInstance(fiber) {
    var hostFiber = findCurrentHostFiber(fiber);
    if (hostFiber === null) {
      return null;
    }
    return hostFiber.stateNode;
  }

  return {
    createContainer: function (containerInfo, hydrate) {
      return createFiberRoot(containerInfo, hydrate);
    },
    updateContainer: function (element, container, parentComponent, callback) {
      // TODO: If this is a nested container, this won't be the root.
      var current = container.current;

      {
        if (ReactFiberInstrumentation_1.debugTool) {
          if (current.alternate === null) {
            ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
          } else if (element === null) {
            ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
          } else {
            ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
          }
        }
      }

      var context = getContextForSubtree(parentComponent);
      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      scheduleTopLevelUpdate(current, element, callback);
    },


    batchedUpdates: batchedUpdates,

    unbatchedUpdates: unbatchedUpdates,

    deferredUpdates: deferredUpdates,

    flushSync: flushSync,

    getPublicRootInstance: function (container) {
      var containerFiber = container.current;
      if (!containerFiber.child) {
        return null;
      }
      switch (containerFiber.child.tag) {
        case HostComponent:
          return getPublicInstance(containerFiber.child.stateNode);
        default:
          return containerFiber.child.stateNode;
      }
    },


    findHostInstance: findHostInstance,

    findHostInstanceWithNoPortals: function (fiber) {
      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    injectIntoDevTools: function (devToolsConfig) {
      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;

      return injectInternals(_assign({}, devToolsConfig, {
        findHostInstanceByFiber: function (fiber) {
          return findHostInstance(fiber);
        },
        findFiberByHostInstance: function (instance) {
          if (!findFiberByHostInstance) {
            // Might not be implemented by the renderer.
            return null;
          }
          return findFiberByHostInstance(instance);
        }
      }));
    }
  };
};

var ReactFiberReconciler$2 = Object.freeze({
	default: ReactFiberReconciler$1
});

var ReactFiberReconciler$3 = ( ReactFiberReconciler$2 && ReactFiberReconciler$1 ) || ReactFiberReconciler$2;

// TODO: bundle Flow types with the package.



// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactReconciler = ReactFiberReconciler$3['default'] ? ReactFiberReconciler$3['default'] : ReactFiberReconciler$3;

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.1.1';

// a requestAnimationFrame, storing the time for the start of the frame, then
// scheduling a postMessage which gets scheduled after paint. Within the
// postMessage handler do as much work as possible until time + frame rate.
// By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

{
  if (ExecutionEnvironment.canUseDOM && typeof requestAnimationFrame !== 'function') {
    warning(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
  }
}

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

var now = void 0;
if (hasNativePerformanceNow) {
  now = function () {
    return performance.now();
  };
} else {
  now = function () {
    return Date.now();
  };
}

// TODO: There's no way to cancel, because Fiber doesn't atm.
var rIC = void 0;

if (!ExecutionEnvironment.canUseDOM) {
  rIC = function (frameCallback) {
    setTimeout(function () {
      frameCallback({
        timeRemaining: function () {
          return Infinity;
        }
      });
    });
    return 0;
  };
} else if (typeof requestIdleCallback !== 'function') {
  // Polyfill requestIdleCallback.

  var scheduledRICCallback = null;

  var isIdleScheduled = false;
  var isAnimationFrameScheduled = false;

  var frameDeadline = 0;
  // We start out assuming that we run at 30fps but then the heuristic tracking
  // will adjust this value to a faster fps if we get more frequent animation
  // frames.
  var previousFrameTime = 33;
  var activeFrameTime = 33;

  var frameDeadlineObject;
  if (hasNativePerformanceNow) {
    frameDeadlineObject = {
      timeRemaining: function () {
        // We assume that if we have a performance timer that the rAF callback
        // gets a performance timer value. Not sure if this is always true.
        return frameDeadline - performance.now();
      }
    };
  } else {
    frameDeadlineObject = {
      timeRemaining: function () {
        // Fallback to Date.now()
        return frameDeadline - Date.now();
      }
    };
  }

  // We use the postMessage trick to defer idle work until after the repaint.
  var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
  var idleTick = function (event) {
    if (event.source !== window || event.data !== messageKey) {
      return;
    }
    isIdleScheduled = false;
    var callback = scheduledRICCallback;
    scheduledRICCallback = null;
    if (callback !== null) {
      callback(frameDeadlineObject);
    }
  };
  // Assumes that we have addEventListener in this environment. Might need
  // something better for old IE.
  window.addEventListener('message', idleTick, false);

  var animationTick = function (rafTime) {
    isAnimationFrameScheduled = false;
    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
      if (nextFrameTime < 8) {
        // Defensive coding. We don't support higher frame rates than 120hz.
        // If we get lower than that, it is probably a bug.
        nextFrameTime = 8;
      }
      // If one frame goes long, then the next one can be short to catch up.
      // If two frames are short in a row, then that's an indication that we
      // actually have a higher frame rate than what we're currently optimizing.
      // We adjust our heuristic dynamically accordingly. For example, if we're
      // running on 120hz display or 90hz VR display.
      // Take the max of the two in case one of them was an anomaly due to
      // missed frame deadlines.
      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
    } else {
      previousFrameTime = nextFrameTime;
    }
    frameDeadline = rafTime + activeFrameTime;
    if (!isIdleScheduled) {
      isIdleScheduled = true;
      window.postMessage(messageKey, '*');
    }
  };

  rIC = function (callback) {
    // This assumes that we only schedule one callback at a time because that's
    // how Fiber uses it.
    scheduledRICCallback = callback;
    if (!isAnimationFrameScheduled) {
      // If rAF didn't already schedule one, we need to schedule a frame.
      // TODO: If this rAF doesn't materialize because the browser throttles, we
      // might want to still have setTimeout trigger rIC as a backup to ensure
      // that we keep performing work.
      isAnimationFrameScheduled = true;
      requestAnimationFrame(animationTick);
    }
    return 0;
  };
} else {
  rIC = requestIdleCallback;
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

// isAttributeNameSafe() is currently duplicated in DOMMarkupOperations.
// TODO: Find a better place for this.
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};
function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

// shouldIgnoreValue() is currently duplicated in DOMMarkupOperations.
// TODO: Find a better place for this.
function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */





/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected) {
  {
    var propertyInfo = getPropertyInfo(name);
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod || propertyInfo.mustUseProperty) {
        return node[propertyInfo.propertyName];
      } else {
        var attributeName = propertyInfo.attributeName;

        var stringValue = null;

        if (propertyInfo.hasOverloadedBooleanValue) {
          if (node.hasAttribute(attributeName)) {
            var value = node.getAttribute(attributeName);
            if (value === '') {
              return true;
            }
            if (shouldIgnoreValue(propertyInfo, expected)) {
              return value;
            }
            if (value === '' + expected) {
              return expected;
            }
            return value;
          }
        } else if (node.hasAttribute(attributeName)) {
          if (shouldIgnoreValue(propertyInfo, expected)) {
            // We had an attribute but shouldn't have had one, so read it
            // for the error message.
            return node.getAttribute(attributeName);
          }
          if (propertyInfo.hasBooleanValue) {
            // If this was a boolean, it doesn't matter what the value is
            // the fact that we have it is the same as the expected.
            return expected;
          }
          // Even if this property uses a namespace we use getAttribute
          // because we assume its namespaced name is the same as our config.
          // To use getAttributeNS we need the local name which we don't have
          // in our config atm.
          stringValue = node.getAttribute(attributeName);
        }

        if (shouldIgnoreValue(propertyInfo, expected)) {
          return stringValue === null ? expected : stringValue;
        } else if (stringValue === '' + expected) {
          return expected;
        } else {
          return stringValue;
        }
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value) {
  var propertyInfo = getPropertyInfo(name);

  if (propertyInfo && shouldSetAttribute(name, value)) {
    var mutationMethod = propertyInfo.mutationMethod;
    if (mutationMethod) {
      mutationMethod(node, value);
    } else if (shouldIgnoreValue(propertyInfo, value)) {
      deleteValueForProperty(node, name);
      return;
    } else if (propertyInfo.mustUseProperty) {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyInfo.propertyName] = value;
    } else {
      var attributeName = propertyInfo.attributeName;
      var namespace = propertyInfo.attributeNamespace;
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      if (namespace) {
        node.setAttributeNS(namespace, attributeName, '' + value);
      } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        node.setAttribute(attributeName, '');
      } else {
        node.setAttribute(attributeName, '' + value);
      }
    }
  } else {
    setValueForAttribute(node, name, shouldSetAttribute(name, value) ? value : null);
    return;
  }

  {
    
  }
}

function setValueForAttribute(node, name, value) {
  if (!isAttributeNameSafe(name)) {
    return;
  }
  if (value == null) {
    node.removeAttribute(name);
  } else {
    node.setAttribute(name, '' + value);
  }

  {
    
  }
}

/**
 * Deletes an attributes from a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 */
function deleteValueForAttribute(node, name) {
  node.removeAttribute(name);
}

/**
 * Deletes the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 */
function deleteValueForProperty(node, name) {
  var propertyInfo = getPropertyInfo(name);
  if (propertyInfo) {
    var mutationMethod = propertyInfo.mutationMethod;
    if (mutationMethod) {
      mutationMethod(node, undefined);
    } else if (propertyInfo.mustUseProperty) {
      var propName = propertyInfo.propertyName;
      if (propertyInfo.hasBooleanValue) {
        node[propName] = false;
      } else {
        node[propName] = '';
      }
    } else {
      node.removeAttribute(propertyInfo.attributeName);
    }
  } else {
    node.removeAttribute(name);
  }
}

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
    checkPropTypes(propTypes, props, 'prop', tagName, getStack);
  };
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$2 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$3 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var value = props.value;
  var checked = props.checked;

  var hostProps = _assign({
    // Make sure we set .type before any other properties (setting .value
    // before .type means .value is lost in IE11 and below)
    type: undefined,
    // Make sure we set .step before .value (setting .value before .step
    // means .value is rounded on mount, based upon step precision)
    step: undefined,
    // Make sure we set .min & .max before .value (to ensure proper order
    // in corner cases such as min or max deriving from value, e.g. Issue #7170)
    min: undefined,
    max: undefined
  }, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: value != null ? value : node._wrapperState.initialValue,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props, getCurrentFiberStackAddendum$3);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$2() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$2() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var defaultValue = props.defaultValue;
  var node = element;
  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: props.value != null ? props.value : defaultValue,
    controlled: isControlled(props)
  };
}

function updateWrapper(element, props) {
  var node = element;
  {
    var controlled = isControlled(props);

    if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
      warning(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$3());
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
      warning(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$3());
      didWarnControlledToUncontrolled = true;
    }
  }

  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked || false);
  }

  var value = props.value;
  if (value != null) {
    if (value === 0 && node.value === '') {
      node.value = '0';
      // Note: IE9 reports a number inputs as 'text', so check props instead.
    } else if (props.type === 'number') {
      // Simulate `input.valueAsNumber`. IE9 does not support it
      var valueAsNumber = parseFloat(node.value) || 0;

      if (
      // eslint-disable-next-line
      value != valueAsNumber ||
      // eslint-disable-next-line
      value == valueAsNumber && node.value != value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else if (node.value !== '' + value) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      node.value = '' + value;
    }
  } else {
    if (props.value == null && props.defaultValue != null) {
      // In Chrome, assigning defaultValue to certain input types triggers input validation.
      // For number inputs, the display value loses trailing decimal points. For email inputs,
      // Chrome raises "The specified value <x> is not a valid email address".
      //
      // Here we check to see if the defaultValue has actually changed, avoiding these problems
      // when the user is inputting text
      //
      // https://github.com/facebook/react/issues/7253
      if (node.defaultValue !== '' + props.defaultValue) {
        node.defaultValue = '' + props.defaultValue;
      }
    }
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}

function postMountWrapper(element, props) {
  var node = element;

  // Detach value from defaultValue. We won't do anything if we're working on
  // submit or reset inputs as those values & defaultValues are linked. They
  // are not resetable nodes so this operation doesn't matter and actually
  // removes browser-default values (eg "Submit Query") when no value is
  // provided.

  switch (props.type) {
    case 'submit':
    case 'reset':
      break;
    case 'color':
    case 'date':
    case 'datetime':
    case 'datetime-local':
    case 'month':
    case 'time':
    case 'week':
      // This fixes the no-show issue on iOS Safari and Android Chrome:
      // https://github.com/facebook/react/issues/7233
      node.value = '';
      node.value = node.defaultValue;
      break;
    default:
      node.value = node.value;
      break;
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }
  node.defaultChecked = !node.defaultChecked;
  node.defaultChecked = !node.defaultChecked;
  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState$1(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  // We can silently skip them because invalid DOM nesting warning
  // catches these cases in Fiber.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  // TODO (yungsters): Remove support for `selected` in <option>.
  {
    warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', props.value);
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);

  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$4 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;


{
  var didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerName$3();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props, getCurrentFiberStackAddendum$4);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = '' + propValue;
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  var value = props.value;
  node._wrapperState = {
    initialValue: value != null ? value : props.defaultValue,
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  // After the initial mount, we control selected-ness manually so don't pass
  // this value down
  node._wrapperState.initialValue = undefined;

  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$5 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: '' + node._wrapperState.initialValue
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$5);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValDefaultVal = true;
    }
  }

  var value = props.value;
  var initialValue = value;

  // Only bother fetching default value if we're going to use it
  if (value == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: '' + initialValue
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = props.value;
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = '' + value;

    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null) {
      node.defaultValue = newValue;
    }
  }
  if (props.defaultValue != null) {
    node.defaultValue = props.defaultValue;
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === TEXT_NODE) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

var setTextContent$1 = setTextContent;

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var warnValidStyle = emptyFunction$1;

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var warnHyphenatedStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), getStack());
  };

  var warnBadVendoredStyleName = function (name, getStack) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), getStack());
  };

  var warnStyleValueWithSemicolon = function (name, value, getStack) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.%s', name, value.replace(badStyleValueWithSemicolonPattern, ''), getStack());
  };

  var warnStyleValueIsNaN = function (name, value, getStack) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  var warnStyleValueIsInfinity = function (name, value, getStack) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, getStack());
  };

  warnValidStyle = function (name, value, getStack) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, getStack);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, getStack);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, getStack);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value, getStack);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value, getStack);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + hyphenateStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles, getStack) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName], getStack);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

var HTML$1 = '__html';

function assertValidProps(tag, props, getStack) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getStack()) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
  }
  {
    warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.%s', getStack());
  }
  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getStack()) : void 0;
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;

function getStackAddendum() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperty(tagName, name) {
  if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum());
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  } else if (invalidProps.length > 1) {
    warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum());
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function getStackAddendum$1() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.%s', type, getStackAddendum$1());
    } else {
      warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1());
    }
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  'class': 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  'default': 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  'for': 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  'in': 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  'typeof': 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

function getStackAddendum$2() {
  var stack = ReactDebugCurrentFrame.getStackAddendum();
  return stack != null ? stack : '';
}

{
  var warnedProperties$1 = {};
  var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on[A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  var validateProperty$1 = function (tagName, name, value) {
    if (hasOwnProperty$1.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    if (registrationNameModules.hasOwnProperty(name)) {
      return true;
    }

    if (plugins.length === 0 && EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we might be in a server environment.
      // Don't check events in this case.
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

    if (registrationName != null) {
      warning(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName.indexOf('on') === 0 && lowerCasedName.length > 2) {
      warning(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    var isReserved = isReservedProp(name);

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2());
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2());
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && !shouldAttributeAcceptBooleanValue(name)) {
      if (value) {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.%s', value, name, name, value, name, getStackAddendum$2());
      } else {
        warning(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', value, name, name, value, name, name, name, getStackAddendum$2());
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (!shouldSetAttribute(name, value)) {
      warnedProperties$1[name] = true;
      return false;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key]);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  } else if (unknownProps.length > 1) {
    warning(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2());
  }
};

function validateProperties$2(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberOwnerName$1 = ReactDebugCurrentFiber.getCurrentFiberOwnerName;
var getCurrentFiberStackAddendum$2 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE = 'style';
var HTML = '__html';

var HTML_NAMESPACE = Namespaces.html;


var getStack = emptyFunction$1.thatReturns('');

{
  getStack = getCurrentFiberStackAddendum$2;

  var warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true
  };

  var validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props);
  };

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  var normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  var warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  var warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  var warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warning(false, 'Extra attributes from the server: %s', names);
  };

  var warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.%s', registrationName, registrationName, registrationName, getCurrentFiberStackAddendum$2());
    } else {
      warning(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener, getCurrentFiberStackAddendum$2());
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  var normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = emptyFunction$1;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent$1(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent$1(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We blacklist it here rather than in the property list because we emit it in SSR.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (isCustomComponentTag) {
      setValueForAttribute(domElement, propKey, nextProp);
    } else if (nextProp != null) {
      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertently setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      setValueForProperty(domElement, propKey, nextProp);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE) {
      setValueForStyles(domElement, propValue, getStack);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent$1(domElement, propValue);
    } else if (isCustomComponentTag) {
      if (propValue != null) {
        setValueForAttribute(domElement, propKey, propValue);
      } else {
        deleteValueForAttribute(domElement, propKey);
      }
    } else if (propValue != null) {
      setValueForProperty(domElement, propKey, propValue);
    } else {
      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertently setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      deleteValueForProperty(domElement, propKey);
    }
  }
}

function createElement$1(type, props, rootContainerElement, parentNamespace) {
  // We create tags in the namespace of their parent container, except HTML
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      var isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      warning(isCustomComponentTag || type === type.toLowerCase(), '<%s /> is using uppercase HTML. Always use lowercase HTML tags ' + 'in React.', type);
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode$1(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties$1(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$1() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props;
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent('topLoad', 'load', domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          trapBubbledEvent(event, mediaEvents[event], domElement);
        }
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent('topError', 'error', domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
      trapBubbledEvent('topError', 'error', domElement);
      trapBubbledEvent('topLoad', 'load', domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent('topReset', 'reset', domElement);
      trapBubbledEvent('topSubmit', 'submit', domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent('topToggle', 'toggle', domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props, getStack);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties$1(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps;
  var nextProps;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps, getStack);

  var propKey;
  var styleName;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties$1(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);

      // We also check that we haven't missed a value update, such as a
      // Radio group shifting the checked value to another named radio input.
      updateValueIfChanged(domElement);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function diffHydratedProperties$1(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  {
    var suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    var isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName$1() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent('topLoad', 'load', domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          trapBubbledEvent(event, mediaEvents[event], domElement);
        }
      }
      break;
    case 'source':
      trapBubbledEvent('topError', 'error', domElement);
      break;
    case 'img':
    case 'image':
      trapBubbledEvent('topError', 'error', domElement);
      trapBubbledEvent('topLoad', 'load', domElement);
      break;
    case 'form':
      trapBubbledEvent('topReset', 'reset', domElement);
      trapBubbledEvent('topSubmit', 'submit', domElement);
      break;
    case 'details':
      trapBubbledEvent('topToggle', 'toggle', domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent('topInvalid', 'invalid', domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps, getStack);

  {
    var extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var i = 0; i < attributes.length; i++) {
      var name = attributes[i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if (true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if (true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else {
      // Validate that the properties correspond to their expected values.
      var serverValue;
      var propertyInfo;
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var rawHtml = nextProp ? nextProp[HTML] || '' : '';
        var serverHTML = domElement.innerHTML;
        var expectedHTML = normalizeHTML(domElement, rawHtml);
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames['delete'](propKey);
        var expectedStyle = createDangerousStringForStyles(nextProp);
        serverValue = domElement.getAttribute('style');
        if (expectedStyle !== serverValue) {
          warnForPropDifference(propKey, serverValue, expectedStyle);
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames['delete'](propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (shouldSetAttribute(propKey, nextProp)) {
        if (propertyInfo = getPropertyInfo(propKey)) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames['delete'](propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames['delete'](propKey.toLowerCase());
          } else {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames['delete'](propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText$1(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText$1(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText$1(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement$1(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText$1(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warning(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState$1(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

var ReactDOMFiberComponent = Object.freeze({
	createElement: createElement$1,
	createTextNode: createTextNode$1,
	setInitialProperties: setInitialProperties$1,
	diffProperties: diffProperties$1,
	updateProperties: updateProperties$1,
	diffHydratedProperties: diffHydratedProperties$1,
	diffHydratedText: diffHydratedText$1,
	warnForUnmatchedText: warnForUnmatchedText$1,
	warnForDeletedHydratableElement: warnForDeletedHydratableElement$1,
	warnForDeletedHydratableText: warnForDeletedHydratableText$1,
	warnForInsertedHydratedElement: warnForInsertedHydratedElement$1,
	warnForInsertedHydratedText: warnForInsertedHydratedText$1,
	restoreControlledState: restoreControlledState
});

// TODO: direct imports like some-package/src/* are bad. Fix me.
var getCurrentFiberStackAddendum$6 = ReactDebugCurrentFiber.getCurrentFiberStackAddendum;

var validateDOMNesting = emptyFunction$1;

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo$1 = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null');
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackAddendum$6();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn[warnKey]) {
      return;
    }
    didWarn[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };

  // TODO: turn this into a named export
  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo$1;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

var validateDOMNesting$1 = validateDOMNesting;

// TODO: direct imports like some-package/src/* are bad. Fix me.
var createElement = createElement$1;
var createTextNode = createTextNode$1;
var setInitialProperties = setInitialProperties$1;
var diffProperties = diffProperties$1;
var updateProperties = updateProperties$1;
var diffHydratedProperties = diffHydratedProperties$1;
var diffHydratedText = diffHydratedText$1;
var warnForUnmatchedText = warnForUnmatchedText$1;
var warnForDeletedHydratableElement = warnForDeletedHydratableElement$1;
var warnForDeletedHydratableText = warnForDeletedHydratableText$1;
var warnForInsertedHydratedElement = warnForInsertedHydratedElement$1;
var warnForInsertedHydratedText = warnForInsertedHydratedText$1;
var updatedAncestorInfo = validateDOMNesting$1.updatedAncestorInfo;
var precacheFiberNode = precacheFiberNode$1;
var updateFiberProps = updateFiberProps$1;


{
  var SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
  if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
  }
}

injection$3.injectFiberControlledHostComponent(ReactDOMFiberComponent);

var eventsEnabled = null;
var selectionInformation = null;

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

var DOMRenderer = reactReconciler({
  getRootHostContext: function (rootContainerInstance) {
    var type = void 0;
    var namespace = void 0;
    var nodeType = rootContainerInstance.nodeType;
    switch (nodeType) {
      case DOCUMENT_NODE:
      case DOCUMENT_FRAGMENT_NODE:
        {
          type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
          var root = rootContainerInstance.documentElement;
          namespace = root ? root.namespaceURI : getChildNamespace(null, '');
          break;
        }
      default:
        {
          var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
          var ownNamespace = container.namespaceURI || null;
          type = container.tagName;
          namespace = getChildNamespace(ownNamespace, type);
          break;
        }
    }
    {
      var validatedTag = type.toLowerCase();
      var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
      return { namespace: namespace, ancestorInfo: _ancestorInfo };
    }
    return namespace;
  },
  getChildHostContext: function (parentHostContext, type) {
    {
      var parentHostContextDev = parentHostContext;
      var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
      var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
      return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
    }
    var parentNamespace = parentHostContext;
    return getChildNamespace(parentNamespace, type);
  },
  getPublicInstance: function (instance) {
    return instance;
  },
  prepareForCommit: function () {
    eventsEnabled = isEnabled();
    selectionInformation = getSelectionInformation();
    setEnabled(false);
  },
  resetAfterCommit: function () {
    restoreSelection(selectionInformation);
    selectionInformation = null;
    setEnabled(eventsEnabled);
    eventsEnabled = null;
  },
  createInstance: function (type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
    var parentNamespace = void 0;
    {
      // TODO: take namespace into account when validating.
      var hostContextDev = hostContext;
      validateDOMNesting$1(type, null, hostContextDev.ancestorInfo);
      if (typeof props.children === 'string' || typeof props.children === 'number') {
        var string = '' + props.children;
        var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
        validateDOMNesting$1(null, string, ownAncestorInfo);
      }
      parentNamespace = hostContextDev.namespace;
    }
    var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
    precacheFiberNode(internalInstanceHandle, domElement);
    updateFiberProps(domElement, props);
    return domElement;
  },
  appendInitialChild: function (parentInstance, child) {
    parentInstance.appendChild(child);
  },
  finalizeInitialChildren: function (domElement, type, props, rootContainerInstance) {
    setInitialProperties(domElement, type, props, rootContainerInstance);
    return shouldAutoFocusHostComponent(type, props);
  },
  prepareUpdate: function (domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
    {
      var hostContextDev = hostContext;
      if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
        var string = '' + newProps.children;
        var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
        validateDOMNesting$1(null, string, ownAncestorInfo);
      }
    }
    return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
  },
  shouldSetTextContent: function (type, props) {
    return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
  },
  shouldDeprioritizeSubtree: function (type, props) {
    return !!props.hidden;
  },
  createTextInstance: function (text, rootContainerInstance, hostContext, internalInstanceHandle) {
    {
      var hostContextDev = hostContext;
      validateDOMNesting$1(null, text, hostContextDev.ancestorInfo);
    }
    var textNode = createTextNode(text, rootContainerInstance);
    precacheFiberNode(internalInstanceHandle, textNode);
    return textNode;
  },


  now: now,

  mutation: {
    commitMount: function (domElement, type, newProps, internalInstanceHandle) {
      domElement.focus();
    },
    commitUpdate: function (domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
      // Update the props handle so that we know which props are the ones with
      // with current event handlers.
      updateFiberProps(domElement, newProps);
      // Apply the diff to the DOM node.
      updateProperties(domElement, updatePayload, type, oldProps, newProps);
    },
    resetTextContent: function (domElement) {
      domElement.textContent = '';
    },
    commitTextUpdate: function (textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    },
    appendChild: function (parentInstance, child) {
      parentInstance.appendChild(child);
    },
    appendChildToContainer: function (container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, container);
      } else {
        container.appendChild(child);
      }
    },
    insertBefore: function (parentInstance, child, beforeChild) {
      parentInstance.insertBefore(child, beforeChild);
    },
    insertInContainerBefore: function (container, child, beforeChild) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, beforeChild);
      } else {
        container.insertBefore(child, beforeChild);
      }
    },
    removeChild: function (parentInstance, child) {
      parentInstance.removeChild(child);
    },
    removeChildFromContainer: function (container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.removeChild(child);
      } else {
        container.removeChild(child);
      }
    }
  },

  hydration: {
    canHydrateInstance: function (instance, type, props) {
      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
        return null;
      }
      // This has now been refined to an element node.
      return instance;
    },
    canHydrateTextInstance: function (instance, text) {
      if (text === '' || instance.nodeType !== TEXT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      }
      // This has now been refined to a text node.
      return instance;
    },
    getNextHydratableSibling: function (instance) {
      var node = instance.nextSibling;
      // Skip non-hydratable nodes.
      while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
        node = node.nextSibling;
      }
      return node;
    },
    getFirstHydratableChild: function (parentInstance) {
      var next = parentInstance.firstChild;
      // Skip non-hydratable nodes.
      while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
        next = next.nextSibling;
      }
      return next;
    },
    hydrateInstance: function (instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, instance);
      // TODO: Possibly defer this until the commit phase where all the events
      // get attached.
      updateFiberProps(instance, props);
      var parentNamespace = void 0;
      {
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
      }
      return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
    },
    hydrateTextInstance: function (textInstance, text, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, textInstance);
      return diffHydratedText(textInstance, text);
    },
    didNotMatchHydratedContainerTextInstance: function (parentContainer, textInstance, text) {
      {
        warnForUnmatchedText(textInstance, text);
      }
    },
    didNotMatchHydratedTextInstance: function (parentType, parentProps, parentInstance, textInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForUnmatchedText(textInstance, text);
      }
    },
    didNotHydrateContainerInstance: function (parentContainer, instance) {
      {
        if (instance.nodeType === 1) {
          warnForDeletedHydratableElement(parentContainer, instance);
        } else {
          warnForDeletedHydratableText(parentContainer, instance);
        }
      }
    },
    didNotHydrateInstance: function (parentType, parentProps, parentInstance, instance) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        if (instance.nodeType === 1) {
          warnForDeletedHydratableElement(parentInstance, instance);
        } else {
          warnForDeletedHydratableText(parentInstance, instance);
        }
      }
    },
    didNotFindHydratableContainerInstance: function (parentContainer, type, props) {
      {
        warnForInsertedHydratedElement(parentContainer, type, props);
      }
    },
    didNotFindHydratableContainerTextInstance: function (parentContainer, text) {
      {
        warnForInsertedHydratedText(parentContainer, text);
      }
    },
    didNotFindHydratableInstance: function (parentType, parentProps, parentInstance, type, props) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedElement(parentInstance, type, props);
      }
    },
    didNotFindHydratableTextInstance: function (parentType, parentProps, parentInstance, text) {
      if (true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedText(parentInstance, text);
      }
    }
  },

  scheduleDeferredCallback: rIC,

  useSyncScheduling: !enableAsyncSchedulingByDefaultInReactDOM
});

injection$4.injectFiberBatchedUpdates(DOMRenderer.batchedUpdates);

var warnedAboutHydrateAPI = false;

function renderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

  {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = DOMRenderer.findHostInstanceWithNoPortals(container._reactRootContainer.current);
      if (hostInstance) {
        warning(hostInstance.parentNode === container, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    warning(!hasNonRootReactChild || isRootRenderedBySomeReact, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');

    warning(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
  }

  var root = container._reactRootContainer;
  if (!root) {
    var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
    // First clear any existing content.
    if (!shouldHydrate) {
      var warned = false;
      var rootSibling = void 0;
      while (rootSibling = container.lastChild) {
        {
          if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
            warned = true;
            warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
          }
        }
        container.removeChild(rootSibling);
      }
    }
    {
      if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
        warnedAboutHydrateAPI = true;
        lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
      }
    }
    var newRoot = DOMRenderer.createContainer(container, shouldHydrate);
    root = container._reactRootContainer = newRoot;
    // Initial mount should not be batched.
    DOMRenderer.unbatchedUpdates(function () {
      DOMRenderer.updateContainer(children, newRoot, parentComponent, callback);
    });
  } else {
    DOMRenderer.updateContainer(children, root, parentComponent, callback);
  }
  return DOMRenderer.getPublicRootInstance(root);
}

function createPortal(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

function ReactRoot(container, hydrate) {
  var root = DOMRenderer.createContainer(container, hydrate);
  this._reactRootContainer = root;
}
ReactRoot.prototype.render = function (children, callback) {
  var root = this._reactRootContainer;
  DOMRenderer.updateContainer(children, root, null, callback);
};
ReactRoot.prototype.unmount = function (callback) {
  var root = this._reactRootContainer;
  DOMRenderer.updateContainer(null, root, null, callback);
};

var ReactDOM = {
  createPortal: createPortal,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        warning(warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner) || 'A component');
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }

    var inst = get(componentOrElement);
    if (inst) {
      return DOMRenderer.findHostInstance(inst);
    }

    if (typeof componentOrElement.render === 'function') {
      invariant(false, 'Unable to find node on an unmounted component.');
    } else {
      invariant(false, 'Element appears to be neither ReactComponent nor DOMNode. Keys: %s', Object.keys(componentOrElement));
    }
  },
  hydrate: function (element, container, callback) {
    // TODO: throw or warn if we couldn't hydrate?
    return renderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    return renderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
    return renderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        warning(!renderedByDifferentReact, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
      }

      // Unmount should not be batched.
      DOMRenderer.unbatchedUpdates(function () {
        renderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        warning(!hasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: createPortal,

  unstable_batchedUpdates: batchedUpdates,

  unstable_deferredUpdates: DOMRenderer.deferredUpdates,

  flushSync: DOMRenderer.flushSync,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // For TapEventPlugin which is popular in open source
    EventPluginHub: EventPluginHub,
    // Used by test-utils
    EventPluginRegistry: EventPluginRegistry,
    EventPropagators: EventPropagators,
    ReactControlledComponent: ReactControlledComponent,
    ReactDOMComponentTree: ReactDOMComponentTree,
    ReactDOMEventListener: ReactDOMEventListener
  }
};

if (enableCreateRoot) {
  ReactDOM.createRoot = function createRoot(container, options) {
    var hydrate = options != null && options.hydrate === true;
    return new ReactRoot(container, hydrate);
  };
}

var foundDevTools = DOMRenderer.injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3['default'] ? ReactDOM$3['default'] : ReactDOM$3;

module.exports = reactDom;
  })();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(26);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */



var camelize = __webpack_require__(28);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(9);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactAddonsUpdate = __webpack_require__(30);

var _reactAddonsUpdate2 = _interopRequireDefault(_reactAddonsUpdate);

var _propTypes = __webpack_require__(10);

var _LolSearch = __webpack_require__(33);

var _LolSearch2 = _interopRequireDefault(_LolSearch);

var _LolChracter = __webpack_require__(35);

var _LolChracter2 = _interopRequireDefault(_LolChracter);

var _LolReport = __webpack_require__(37);

var _LolReport2 = _interopRequireDefault(_LolReport);

var _Test = __webpack_require__(44);

var _Test2 = _interopRequireDefault(_Test);

var _lolChampions = __webpack_require__(45);

var _lolChampions2 = _interopRequireDefault(_lolChampions);

var _stats = __webpack_require__(46);

var _stats2 = _interopRequireDefault(_stats);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var App = function (_React$Component) {
	_inherits(App, _React$Component);

	function App(props) {
		_classCallCheck(this, App);

		var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

		_this.state = {
			selectedReportComponent: 0,
			selectedCount: 0,
			selectedFocusState: 0,
			thisCount: 1,
			selectedCharacter: [],
			searchInput: '',
			statsInput: 'attackdamage',
			image: "test image",
			name: "Albatros",
			chracterstate: _lolChampions2.default,
			chracterjson: _stats2.default,
			nameArray: []
		};
		_this.clickCharacter = _this.clickCharacter.bind(_this);
		_this.clickBadge = _this.clickBadge.bind(_this);
		_this.clickStatsBadge = _this.clickStatsBadge.bind(_this);
		_this.typeSearchInput = _this.typeSearchInput.bind(_this);
		_this.onFocusSearchInput = _this.onFocusSearchInput.bind(_this);
		_this.outFocusSearchInput = _this.outFocusSearchInput.bind(_this);
		return _this;
	}

	_createClass(App, [{
		key: 'clickBadge',
		value: function clickBadge(e) {
			// console.log("active clickBadge")
			// console.log(e.target.firstElementChild.value)
			this.setState({
				searchInput: e.target.firstElementChild.value
			});
		}
	}, {
		key: 'typeSearchInput',
		value: function typeSearchInput(e) {
			this.setState({
				searchInput: e.target.value
			});
		}
	}, {
		key: 'onFocusSearchInput',
		value: function onFocusSearchInput(e) {
			// console.log("onFocusSearchInput event");
			this.setState(function (prevState, props) {
				return { selectedFocusState: !prevState.selectedFocusState };
			});
		}
	}, {
		key: 'outFocusSearchInput',
		value: function outFocusSearchInput(e) {
			// console.log("outFocusSearchInput event");
			this.setState(function (prevState, props) {
				return { selectedFocusState: 0 };
			});
		}
	}, {
		key: 'clickCharacter',
		value: function clickCharacter(e) {
			{} /*console.log(e.target.textContent);
      	console.log(this.state.selectedReportComponent);
      	console.log(this.state.selectedCharacter);*/

			/* LolReport1&2 공통 사용하던 기능 */
			this.setState({
				selectedReportComponent: 1
			});

			// console.log("clickevent length test : ");
			// console.log(this.state.selectedCharacter.length)
			// console.log(this.state.selectedCharacter)

			/* LolReport2 Component에서 사용하는 기능 : 토글 처리문*/
			if (this.state.selectedCharacter.length > 0) {
				// console.log("check please : ")
				for (var i = 0; i < this.state.selectedCharacter.length; i++) {
					if (this.state.selectedCharacter[i].name === e.target.textContent) {
						console.log("crush error !!!");
						this.setState({
							selectedCharacter: (0, _reactAddonsUpdate2.default)(this.state.selectedCharacter, {
								$splice: [[i, 1]]
							})
						});
						this.setState(function (prevState, props) {
							return {
								selectedCount: prevState.selectedCount - 1,
								thisCount: (2 - prevState.thisCount - 1) % 2
							};
						});
						return;
					}
				}
			}

			/* LolReport2 Component에서 사용하는 기능 : 해당 캐릭터 정보 저장*/
			if (this.state.chracterjson.data[e.target.textContent] && this.state.selectedCount < 2) {
				// console.log("click event clear")
				// console.log(this.state.chracterjson.data[e.target.textContent])
				this.setState({
					selectedCharacter: this.state.selectedCharacter.concat(this.state.chracterjson.data[e.target.textContent])
				});
				/* LolReport2 Component에서 사용하던 기능 */
				this.setState(function (prevState, props) {
					return {
						selectedCount: prevState.selectedCount + 1,
						thisCount: (prevState.thisCount + 1) % 2
					};
				});
				// console.log("click character event")
				// console.log(this.state.selectedCharacter)
			}

			/*카드 선택시 쿠키 입력*/
			var x = void 0,
			    y = void 0,
			    result = '';
			var val = document.cookie.split(';');
			for (var _i = 0; _i < val.length; _i++) {
				x = val[_i].substr(0, val[_i].indexOf('='));
				y = val[_i].substr(val[_i].indexOf('=') + 1);
				x = x.replace(/^\s+|\s+$/g, '');
				if (x === 'character') {
					result += y + '/';
				}
			}
			var exdate = new Date();
			exdate.setDate(exdate.getDate() + 1);
			var cookieValue = 'character=' + result + e.target.textContent + '; expires=' + exdate.toUTCString();
			// console.log("cookie value insert")
			// console.log(cookieValue)
			document.cookie = cookieValue;
		}
	}, {
		key: 'clickStatsBadge',
		value: function clickStatsBadge(e) {
			// console.log("this is clickStatsBadge")
			// console.log(e.target.firstElementChild.value)
			this.setState({
				statsInput: e.target.firstElementChild.value
			});
		}
	}, {
		key: 'componentWillMount',
		value: function componentWillMount() {
			var tempNameArray = [];
			// console.log(ChracterJson);
			for (var i in _stats2.default.keys) {
				tempNameArray.push(_stats2.default.keys[i]);
			}
			tempNameArray.sort();
			this.setState({ nameArray: this.state.nameArray.concat(tempNameArray) });
			// console.log(tempNameArray)
		}
	}, {
		key: 'shouldComponentUpdate',
		value: function shouldComponentUpdate(nextProps, nextState) {
			// console.log("now : "+this.state.searchInput+" / next : "+nextState.searchInput);


			return true;
		}
	}, {
		key: 'render',
		value: function render() {
			{/*console.log(ChracterState);*/}
			var viewReport = _react2.default.createElement(_LolReport2.default, {
				selectedCharacter: this.state.selectedCharacter,
				selectedCount: this.state.selectedCount,
				thisCount: this.state.thisCount,
				clickStatsBadge: this.clickStatsBadge,
				statsInput: this.state.statsInput
			});
			var viewBlank = _react2.default.createElement('div', null);

			var tempNameArray = [];
			for (var i in _stats2.default.keys) {
				tempNameArray.push(_stats2.default.keys[i]);
			}
			tempNameArray.sort();
			// console.log("this is App render");
			// console.log(tempNameArray);
			// console.log("selectedCount event : " + this.state.selectedCount)
			// console.log("thisCount event : " + this.state.thisCount)
			// console.log("this is App render cookie");
			// console.log(document.cookie)


			return _react2.default.createElement(
				'div',
				{ className: 'container' },
				_react2.default.createElement('br', null),
				_react2.default.createElement(_LolSearch2.default, {
					typeSearchInput: this.typeSearchInput,
					searchInput: this.state.searchInput,
					onFocusSearchInput: this.onFocusSearchInput,
					outFocusSearchInput: this.outFocusSearchInput,
					selectedFocusState: this.state.selectedFocusState,
					clickCharacter: this.clickCharacter
				}),
				_react2.default.createElement('hr', null),
				_react2.default.createElement(_LolChracter2.default, {
					image: this.state.image,
					chracterstate: this.state.nameArray,
					clickCharacter: this.clickCharacter,
					searchInput: this.state.searchInput,
					clickBadge: this.clickBadge
				}),
				_react2.default.createElement('hr', null),
				this.state.selectedReportComponent ? viewReport : viewBlank
			);
		}
	}]);

	return App;
}(_react2.default.Component);

exports.default = App;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var _assign = __webpack_require__(3);
var invariant = __webpack_require__(4);
var hasOwnProperty = {}.hasOwnProperty;

function shallowCopy(x) {
  if (Array.isArray(x)) {
    return x.concat();
  } else if (x && typeof x === 'object') {
    return _assign(new x.constructor(), x);
  } else {
    return x;
  }
}

var COMMAND_PUSH = '$push';
var COMMAND_UNSHIFT = '$unshift';
var COMMAND_SPLICE = '$splice';
var COMMAND_SET = '$set';
var COMMAND_MERGE = '$merge';
var COMMAND_APPLY = '$apply';

var ALL_COMMANDS_LIST = [
  COMMAND_PUSH,
  COMMAND_UNSHIFT,
  COMMAND_SPLICE,
  COMMAND_SET,
  COMMAND_MERGE,
  COMMAND_APPLY
];

var ALL_COMMANDS_SET = {};

ALL_COMMANDS_LIST.forEach(function(command) {
  ALL_COMMANDS_SET[command] = true;
});

function invariantArrayCase(value, spec, command) {
  invariant(
    Array.isArray(value),
    'update(): expected target of %s to be an array; got %s.',
    command,
    value
  );
  var specValue = spec[command];
  invariant(
    Array.isArray(specValue),
    'update(): expected spec of %s to be an array; got %s. ' +
      'Did you forget to wrap your parameter in an array?',
    command,
    specValue
  );
}

/**
 * Returns a updated shallow copy of an object without mutating the original.
 * See https://facebook.github.io/react/docs/update.html for details.
 */
function update(value, spec) {
  invariant(
    typeof spec === 'object',
    'update(): You provided a key path to update() that did not contain one ' +
      'of %s. Did you forget to include {%s: ...}?',
    ALL_COMMANDS_LIST.join(', '),
    COMMAND_SET
  );

  if (hasOwnProperty.call(spec, COMMAND_SET)) {
    invariant(
      Object.keys(spec).length === 1,
      'Cannot have more than one key in an object with %s',
      COMMAND_SET
    );

    return spec[COMMAND_SET];
  }

  var nextValue = shallowCopy(value);

  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {
    var mergeObj = spec[COMMAND_MERGE];
    invariant(
      mergeObj && typeof mergeObj === 'object',
      "update(): %s expects a spec of type 'object'; got %s",
      COMMAND_MERGE,
      mergeObj
    );
    invariant(
      nextValue && typeof nextValue === 'object',
      "update(): %s expects a target of type 'object'; got %s",
      COMMAND_MERGE,
      nextValue
    );
    _assign(nextValue, spec[COMMAND_MERGE]);
  }

  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {
    invariantArrayCase(value, spec, COMMAND_PUSH);
    spec[COMMAND_PUSH].forEach(function(item) {
      nextValue.push(item);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {
    invariantArrayCase(value, spec, COMMAND_UNSHIFT);
    spec[COMMAND_UNSHIFT].forEach(function(item) {
      nextValue.unshift(item);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {
    invariant(
      Array.isArray(value),
      'Expected %s target to be an array; got %s',
      COMMAND_SPLICE,
      value
    );
    invariant(
      Array.isArray(spec[COMMAND_SPLICE]),
      'update(): expected spec of %s to be an array of arrays; got %s. ' +
        'Did you forget to wrap your parameters in an array?',
      COMMAND_SPLICE,
      spec[COMMAND_SPLICE]
    );
    spec[COMMAND_SPLICE].forEach(function(args) {
      invariant(
        Array.isArray(args),
        'update(): expected spec of %s to be an array of arrays; got %s. ' +
          'Did you forget to wrap your parameters in an array?',
        COMMAND_SPLICE,
        spec[COMMAND_SPLICE]
      );
      nextValue.splice.apply(nextValue, args);
    });
  }

  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {
    invariant(
      typeof spec[COMMAND_APPLY] === 'function',
      'update(): expected spec of %s to be a function; got %s.',
      COMMAND_APPLY,
      spec[COMMAND_APPLY]
    );
    nextValue = spec[COMMAND_APPLY](nextValue);
  }

  for (var k in spec) {
    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {
      nextValue[k] = update(value[k], spec[k]);
    }
  }

  return nextValue;
}

module.exports = update;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var emptyFunction = __webpack_require__(2);
var invariant = __webpack_require__(4);
var warning = __webpack_require__(6);
var assign = __webpack_require__(3);

var ReactPropTypesSecret = __webpack_require__(8);
var checkPropTypes = __webpack_require__(7);

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(
          false,
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var emptyFunction = __webpack_require__(2);
var invariant = __webpack_require__(4);
var ReactPropTypesSecret = __webpack_require__(8);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim,
    exact: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(10);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _HistoryContent = __webpack_require__(34);

var _HistoryContent2 = _interopRequireDefault(_HistoryContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LolSearch = function (_React$Component) {
	_inherits(LolSearch, _React$Component);

	function LolSearch(props) {
		_classCallCheck(this, LolSearch);

		var _this = _possibleConstructorReturn(this, (LolSearch.__proto__ || Object.getPrototypeOf(LolSearch)).call(this, props));

		_this.state = {
			cookieCharacter: []
		};
		return _this;
	}

	_createClass(LolSearch, [{
		key: 'componentWillMount',
		value: function componentWillMount() {
			var cookieCharacter = [];
			var x = void 0,
			    y = void 0;
			var value = document.cookie.split(';');
			for (var i = 0; i < value.length; i++) {
				x = value[i].substr(0, value[i].indexOf('='));
				x = x.replace(/^\s+|\s+$/g, '');
				y = value[i].substr(value[i].indexOf('=') + 1);
				if (x === 'character') {
					var temp = y.split('/');
					temp = temp.slice(temp.length - 5);
					this.setState({
						cookieCharacter: this.state.cookieCharacter.concat(temp)
					});
				}
			}
		}
	}, {
		key: 'render',
		value: function render() {
			var _this2 = this;

			// let cookieCharacter = [];
			// let x, y;
			// let value = document.cookie.split(';');
			// for(let i = 0; i < value.length; i++){
			// 	x = value[i].substr(0, value[i].indexOf('='))
			// 	x = x.replace(/^\s+|\s+$/g, '');
			// 	y = value[i].substr(value[i].indexOf('=')+1)
			// 	if(x === 'character'){
			// 		cookieCharacter = y.split('/');
			// 	}
			// }
			// console.log("this is LolSearch component : ")
			// console.log(cookieCharacter)


			// (cookieCharacter.length !== 0 ? <div class="card">
			// 									<ul class="menu" role="menu" aria-labelledby="dropdownMenu">
			// 									  {mapToHistoryContent(cookieCharacter)}
			// 									</ul>
			// 								</div>
			// 				 : viewBlank);
			// const preview = (this.state.cookieCharacter.length !== 0 
			// 	? (<div class="card">
			// 			<ul class="menu">{mapToHistoryContent(this.state.cookieCharacter)}
			// 			</ul>
			// 		</div>)
			// 	: viewBlank);

			var mapToHistoryContent = function mapToHistoryContent(data) {
				return data.map(function (v, i) {
					return _react2.default.createElement(_HistoryContent2.default, { data: v, key: i, clickCharacter: _this2.props.clickCharacter });
				});
			};

			var preview = _react2.default.createElement(
				'div',
				{ className: 'card' },
				_react2.default.createElement(
					'ul',
					{ className: 'menu' },
					mapToHistoryContent(this.state.cookieCharacter)
				)
			);
			var viewBlank = _react2.default.createElement('div', null);

			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(
					'h2',
					null,
					'LolSearch'
				),
				_react2.default.createElement(
					'div',
					{ className: 'card' },
					_react2.default.createElement(
						'div',
						{ className: 'card-body bg-light',
							onMouseLeave: function onMouseLeave(e) {
								return _this2.props.outFocusSearchInput(e);
							}
						},
						_react2.default.createElement(
							'div',
							{ className: 'input-group' },
							_react2.default.createElement('input', {
								className: 'form-control',
								type: 'text',
								onChange: function onChange(e) {
									_this2.props.typeSearchInput(e);
								},
								value: this.props.searchInput,
								onFocus: function onFocus(e) {
									return _this2.props.onFocusSearchInput(e);
								}
							}),
							_react2.default.createElement(
								'span',
								{ className: 'input-group-btn' },
								_react2.default.createElement(
									'button',
									{ className: 'btn btn-secondary', type: 'button' },
									'Report'
								)
							),
							_react2.default.createElement(
								'span',
								{ className: 'input-group-btn' },
								_react2.default.createElement(
									'button',
									{ className: 'btn btn-secondary', type: 'button' },
									'Erase'
								)
							)
						),
						this.props.selectedFocusState && this.state.cookieCharacter.length ? preview : viewBlank
					)
				)
			);
		}
	}]);

	return LolSearch;
}(_react2.default.Component);

LolSearch.defaultProps = {
	typeSearchInput: function typeSearchInput() {
		console.error('typeSearchInput not defined');
	},
	searchInput: ''
};
LolSearch.propTypes = {
	typeSearchInput: _propTypes2.default.func,
	searchInput: _propTypes2.default.string
};

exports.default = LolSearch;

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HistoryContent = function (_React$Component) {
    _inherits(HistoryContent, _React$Component);

    function HistoryContent(props) {
        _classCallCheck(this, HistoryContent);

        return _possibleConstructorReturn(this, (HistoryContent.__proto__ || Object.getPrototypeOf(HistoryContent)).call(this, props));
    }

    _createClass(HistoryContent, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            // console.log("HistoryContent component : " + this.props.data);
            return _react2.default.createElement(
                'li',
                { onClick: function onClick(e) {
                        _this2.props.clickCharacter(e);
                    } },
                this.props.data
            );
        }
    }]);

    return HistoryContent;
}(_react2.default.Component);

exports.default = HistoryContent;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ChracterCard = __webpack_require__(17);

var _ChracterCard2 = _interopRequireDefault(_ChracterCard);

var _Alphabet = __webpack_require__(36);

var _Alphabet2 = _interopRequireDefault(_Alphabet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LolChracter = function (_React$Component) {
	_inherits(LolChracter, _React$Component);

	function LolChracter(props) {
		_classCallCheck(this, LolChracter);

		return _possibleConstructorReturn(this, (LolChracter.__proto__ || Object.getPrototypeOf(LolChracter)).call(this, props));
	}

	_createClass(LolChracter, [{
		key: 'render',
		value: function render() {
			var _this2 = this;

			var mapToCharacterCard = function mapToCharacterCard(data) {
				return data.map(function (data, i) {
					{/*입력값이 없는 경우, 입력값중 배열에 일치하는 값이 있는 경우 */}
					if (_this2.props.searchInput === '') {
						return _react2.default.createElement(_ChracterCard2.default, {
							data: data,
							key: i,
							clickCharacter: _this2.props.clickCharacter,
							searchInput: _this2.props.searchInput });
					} else if (data.toLowerCase().indexOf(_this2.props.searchInput) === 0) {
						return _react2.default.createElement(_ChracterCard2.default, {
							data: data,
							key: i,
							clickCharacter: _this2.props.clickCharacter,
							searchInput: _this2.props.searchInput });
					}
				});
			};

			return _react2.default.createElement(
				'div',
				null,
				_react2.default.createElement(_Alphabet2.default, {
					clickBadge: this.props.clickBadge
				}),
				_react2.default.createElement('h1', null),
				_react2.default.createElement(
					'div',
					{ className: 'card-columns' },
					_react2.default.createElement(
						'div',
						null,
						mapToCharacterCard(this.props.chracterstate)
					)
				)
			);
		}
	}]);

	return LolChracter;
}(_react2.default.Component);

exports.default = LolChracter;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Alphabet = function (_React$Component) {
	_inherits(Alphabet, _React$Component);

	function Alphabet(props) {
		_classCallCheck(this, Alphabet);

		return _possibleConstructorReturn(this, (Alphabet.__proto__ || Object.getPrototypeOf(Alphabet)).call(this, props));
	}

	_createClass(Alphabet, [{
		key: "render",
		value: function render() {
			var _this2 = this;

			return _react2.default.createElement(
				"div",
				{ className: "btn-group", "data-toggle": "buttons", onClick: function onClick(e) {
						_this2.props.clickBadge(e);
					} },
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "a" }),
					"A"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "b" }),
					"B"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "c" }),
					"C"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "d" }),
					"D"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "e" }),
					"E"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "f" }),
					"F"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "g" }),
					"G"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "h" }),
					"H"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "i" }),
					"I"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "j" }),
					"J"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "k" }),
					"K"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "l" }),
					"L"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "m" }),
					"M"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "n" }),
					"N"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "o" }),
					"O"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "p" }),
					"P"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "q" }),
					"Q"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "r" }),
					"R"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "s" }),
					"S"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "t" }),
					"T"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "u" }),
					"U"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "v" }),
					"V"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "w" }),
					"W"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "x" }),
					"X"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "y" }),
					"Y"
				),
				_react2.default.createElement(
					"label",
					{ className: "btn btn-light" },
					_react2.default.createElement("input", { type: "radio", name: "searchOptions", id: "aOptions", autoComplete: "off", value: "z" }),
					"Z"
				)
			);
		}
	}]);

	return Alphabet;
}(_react2.default.Component);

exports.default = Alphabet;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _propTypes = __webpack_require__(10);

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ReportChart = __webpack_require__(38);

var _TableHead = __webpack_require__(39);

var _TableHead2 = _interopRequireDefault(_TableHead);

var _StatsBadge = __webpack_require__(40);

var _StatsBadge2 = _interopRequireDefault(_StatsBadge);

var _CharacterHead = __webpack_require__(41);

var _CharacterHead2 = _interopRequireDefault(_CharacterHead);

var _CharacterContent = __webpack_require__(42);

var _CharacterContent2 = _interopRequireDefault(_CharacterContent);

var _CharacterStats = __webpack_require__(43);

var _CharacterStats2 = _interopRequireDefault(_CharacterStats);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LolReport2 = function (_React$Component) {
	_inherits(LolReport2, _React$Component);

	function LolReport2(props) {
		_classCallCheck(this, LolReport2);

		return _possibleConstructorReturn(this, (LolReport2.__proto__ || Object.getPrototypeOf(LolReport2)).call(this, props));
	}

	_createClass(LolReport2, [{
		key: 'render',
		value: function render() {
			function formula(b, g, level) {
				return Math.round(b + g * level * (0.685 + 0.0175 * (level + 1)));
			}
			console.log("LolReport2 Component selectedCharacter : ");
			console.log(this.props.selectedCharacter);
			console.log("LolReport2 Component statsInput : ");
			console.log(this.props.statsInput);

			/* 레벨 숫자값 부분 */
			var levelArray = [];
			for (var i = 1; i < 19; i++) {
				levelArray.push(i);
			}

			var tempStatsInput = this.props.statsInput + "perlevel";
			console.log("LolReport2 Component tempStatsInput : ");
			console.log(tempStatsInput);

			/* 능력치 연산 부분 */
			var stats = [];
			for (var j = 0; j < this.props.selectedCharacter.length; j++) {
				stats[j] = new Array();
				var base = this.props.selectedCharacter[j].stats[this.props.statsInput];
				stats[j][1] = Math.round(base);
				var growth = this.props.selectedCharacter[j].stats[tempStatsInput];
				stats[j][0] = this.props.selectedCharacter[j].name;
				for (var k = 2; k < 19; k++) {
					stats[j][k] = formula(base, growth, k);
				}
				if (this.props.selectedCharacter.length === 2 && j === 1) {
					console.log("enter check");
					stats[2] = new Array();
					stats[2][0] = stats[0][0] + " - " + stats[1][0];
					for (var _k = 1; _k < 19; _k++) {
						stats[2][_k] = Math.round(stats[0][_k] - stats[1][_k]);
					}
				}
			}

			var viewBlank = _react2.default.createElement('div', null);

			var head = function head(data) {
				return data.map(function (v, i) {
					return _react2.default.createElement(_TableHead2.default, { data: v, key: i });
				});
			};

			var chracterHead = function chracterHead(data) {
				return data.map(function (v, i) {
					return _react2.default.createElement(_CharacterHead2.default, { data: v, key: i });
				});
			};

			var chracterContent = function chracterContent(data) {
				return data.map(function (data2, i) {
					return data2.map(function (v, i) {
						return _react2.default.createElement(_CharacterStats2.default, { data: v, key: i });
					});
				});
			};

			var chracterStats = function chracterStats(data, index) {
				for (var _i = index; _i < data.length; _i++) {
					return data[_i].map(function (v, i) {
						return _react2.default.createElement(_CharacterStats2.default, { data: v, key: i });
					});
				}
			};

			return _react2.default.createElement(
				'div',
				{ className: '' },
				this.props.selectedCharacter.length > 0 ? _react2.default.createElement(
					'div',
					null,
					_react2.default.createElement(
						'h2',
						null,
						'LolReport'
					),
					_react2.default.createElement(_StatsBadge2.default, {
						clickStatsBadge: this.props.clickStatsBadge
					}),
					_react2.default.createElement('h1', null),
					_react2.default.createElement(
						'table',
						{ className: 'table' },
						_react2.default.createElement(
							'thead',
							null,
							_react2.default.createElement(
								'tr',
								null,
								_react2.default.createElement(
									'th',
									{ scope: 'col' },
									'Lv.'
								),
								head(levelArray)
							)
						),
						_react2.default.createElement(
							'tbody',
							null,
							_react2.default.createElement(
								'tr',
								null,
								chracterStats(stats, 0)
							),
							_react2.default.createElement(
								'tr',
								null,
								chracterStats(stats, 1)
							),
							_react2.default.createElement(
								'tr',
								null,
								chracterStats(stats, 2)
							)
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'row' },
						_react2.default.createElement(
							'div',
							{ className: 'col-sm-3' },
							_react2.default.createElement(
								'div',
								{ className: 'card bg-light' },
								this.props.selectedCharacter[0].name
							)
						),
						_react2.default.createElement(
							'div',
							{ className: 'col-sm-9' },
							_react2.default.createElement(
								'div',
								{ className: 'card bg-light' },
								_react2.default.createElement(
									'div',
									null,
									' Title : ',
									this.props.selectedCharacter[0].title
								),
								_react2.default.createElement(
									'div',
									null,
									' AttackDamage : ',
									this.props.selectedCharacter[0].stats.attackdamage,
									' / Armor : ',
									this.props.selectedCharacter[0].stats.armor,
									' / HP : ',
									this.props.selectedCharacter[0].stats.hp,
									' / Spellblock : ',
									this.props.selectedCharacter[0].stats.spellblock
								)
							)
						)
					)
				) : viewBlank,
				this.props.thisCount === 1 && this.props.selectedCharacter.length > 1 ? _react2.default.createElement(
					'div',
					{ className: 'row' },
					_react2.default.createElement(
						'div',
						{ className: 'col-sm-3' },
						_react2.default.createElement(
							'div',
							{ className: 'card bg-light' },
							this.props.selectedCharacter[1].name
						)
					),
					_react2.default.createElement(
						'div',
						{ className: 'col-sm-9' },
						_react2.default.createElement(
							'div',
							{ className: 'card bg-light' },
							_react2.default.createElement(
								'div',
								null,
								' Title : ',
								this.props.selectedCharacter[1].title
							),
							_react2.default.createElement(
								'div',
								null,
								' AttackDamage : ',
								this.props.selectedCharacter[1].stats.attackdamage,
								' / Armor : ',
								this.props.selectedCharacter[0].stats.armor,
								' / HP : ',
								this.props.selectedCharacter[0].stats.hp,
								' / Spellblock : ',
								this.props.selectedCharacter[0].stats.spellblock
							)
						)
					)
				) : viewBlank
			);
		}
	}]);

	return LolReport2;
}(_react2.default.Component);

LolReport2.propTypes = {
	thisCount: _propTypes2.default.number,
	selectedCount: _propTypes2.default.number,
	statsInput: _propTypes2.default.string
};
LolReport2.defaultProps = {
	thisCount: 0,
	selectedCount: 0,
	statsInput: 'attackdamage'
};

exports.default = LolReport2;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ReportChart = exports.LineChart = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _reactDom = __webpack_require__(9);

var _reactDom2 = _interopRequireDefault(_reactDom);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LineChart = exports.LineChart = function (_React$Component) {
    _inherits(LineChart, _React$Component);

    function LineChart() {
        _classCallCheck(this, LineChart);

        return _possibleConstructorReturn(this, (LineChart.__proto__ || Object.getPrototypeOf(LineChart)).apply(this, arguments));
    }

    _createClass(LineChart, [{
        key: 'propTypes',
        value: function propTypes() {
            width = _react2.default.PropTypes.number, height = _react2.default.PropTypes.number, chartId = _react2.default.PropTypes.string;
        }
    }, {
        key: 'getDefaultProps',
        value: function getDefaultProps() {
            return {
                width: 600,
                height: 300,
                chartId: 'v1_chart'
            };
        }
    }, {
        key: 'render',
        value: function render() {
            console.log("helloworld");

            var data = [{ "x": 1, "y": 5 }, { "x": 20, "y": 20 }, { "x": 400, "y": 100 }, { "x": 60, "y": 40 }, { "x": 80, "y": 5 }, { "x": 200, "y": 60 }];

            var margin = { top: 5, right: 50, bottom: 20, left: 50 },
                w = this.props.width - (margin.left + margin.right),
                h = this.props.height - (margin.top + margin.bottom);

            console.log(data);

            var x = d3.time.scale().domain(d3.extent(data, function (d) {
                return d.date;
            })).rangeRound([0, w]);

            var y = d3.scale.linear().domain([0, d3.max(data, function (d) {
                return d.count + 100;
            })]).range([h, 0]);

            var line = d3.svg.line().x(function (d, i) {
                return d.x;
            }).y(function (d) {
                return d.y;
            });

            console.log(data[0].x);
            console.log(data[0].y);

            var transform = 'translate(' + margin.left + ',' + margin.top + ')';

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(
                    'svg',
                    { width: this.props.width, height: this.props.height },
                    _react2.default.createElement(
                        'g',
                        { transform: transform },
                        _react2.default.createElement('path', { className: 'line shadow', d: line(data), strokeLinecap: 'round' })
                    )
                )
            );
        }
    }]);

    return LineChart;
}(_react2.default.Component);

var ReportChart = exports.ReportChart = function (_React$Component2) {
    _inherits(ReportChart, _React$Component2);

    function ReportChart(props) {
        _classCallCheck(this, ReportChart);

        return _possibleConstructorReturn(this, (ReportChart.__proto__ || Object.getPrototypeOf(ReportChart)).call(this, props));
    }

    _createClass(ReportChart, [{
        key: 'renderBubbles',
        value: function renderBubbles(data) {
            d3.select('svg').append('h1').text("Hello World");
        }
    }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
            // we have to handle the DOM ourselves now
            if (nextProps.data !== this.props.data) {
                this.renderBubbles(nextProps.data);
            }
        }
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            return false;
        }
    }, {
        key: 'render',
        value: function render() {
            var _props = this.props,
                width = _props.width,
                height = _props.height;

            return _react2.default.createElement(
                'div',
                null,
                _react2.default.createElement(LineChart, null),
                _react2.default.createElement(
                    'svg',
                    null,
                    _react2.default.createElement(
                        'g',
                        { id: 'xG', transform: 'translate(0,20)', fill: 'none', 'font-size': '10', 'font-family': 'sans-serif', 'text-anchor': 'middle' },
                        _react2.default.createElement('path', { 'class': 'domain', stroke: '#000', d: 'M50.5,160V0.5H950.5V160' }),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(50.5,0)' },
                            _react2.default.createElement('line', { stroke: '#000', y2: '160' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', y: '163', dy: '0.71em' },
                                '0'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(300.5,0)' },
                            _react2.default.createElement('line', { stroke: '#000', y2: '160' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', y: '163', dy: '0.71em' },
                                '5'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(550.5,0)' },
                            _react2.default.createElement('line', { stroke: '#000', y2: '160' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', y: '163', dy: '0.71em' },
                                '10'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(800.5,0)' },
                            _react2.default.createElement('line', { stroke: '#000', y2: '160' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', y: '163', dy: '0.71em' },
                                '15'
                            )
                        )
                    ),
                    _react2.default.createElement(
                        'g',
                        { id: 'yG', transform: 'translate(950,0)', fill: 'none', 'font-size': '10', 'font-family': 'sans-serif', 'text-anchor': 'end' },
                        _react2.default.createElement('path', { 'class': 'domain', stroke: '#000', d: 'M-900,180.5H0.5V20.5H-900' }),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,180.5)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '0'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,159.55951025429607)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '20'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,138.61902050859214)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '40'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,117.67853076288822)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '60'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,96.73804101718429)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '80'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,75.79755127148036)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '100'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,54.85706152577643)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '120'
                            )
                        ),
                        _react2.default.createElement(
                            'g',
                            { 'class': 'tick', opacity: '1', transform: 'translate(0,33.9165717800725)' },
                            _react2.default.createElement('line', { stroke: '#000', x2: '-900' }),
                            _react2.default.createElement(
                                'text',
                                { fill: '#000', x: '-903', dy: '0.32em' },
                                '140'
                            )
                        )
                    ),
                    _react2.default.createElement('circle', { r: '5', cx: '100', cy: '106.7396966246548', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '150', cy: '104.19542712055177', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '200', cy: '101.52747784888818', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '250', cy: '98.73584880966403', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '300', cy: '95.82054000287931', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '350', cy: '92.78155142853404', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '400', cy: '89.61888308662819', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '450', cy: '86.33253497716177', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '500', cy: '82.9225071001348', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '550', cy: '79.38879945554726', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '600', cy: '75.73141204339917', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '650', cy: '71.9503448636905', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '700', cy: '68.04559791642126', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '750', cy: '64.01717120159147', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '800', cy: '59.865064719201115', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '850', cy: '55.58927846925019', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '900', cy: '51.1898124517387', fill: 'lightgray' }),
                    _react2.default.createElement('circle', { r: '5', cx: '950', cy: '46.66666666666666', fill: 'lightgray' }),
                    _react2.default.createElement('path', { d: 'M100,106.7396966246548L150,104.19542712055177L200,101.52747784888818L250,98.73584880966403L300,95.82054000287931L350,92.78155142853404L400,89.61888308662819L450,86.33253497716177L500,82.9225071001348L550,79.38879945554726L600,75.73141204339917L650,71.9503448636905L700,68.04559791642126L750,64.01717120159147L800,59.865064719201115L850,55.58927846925019L900,51.1898124517387L950,46.66666666666666', fill: 'none', stroke: 'lightblue', 'stroke-width': '2' })
                )
            );
        }
    }]);

    return ReportChart;
}(_react2.default.Component);

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TableHead = function (_React$Component) {
    _inherits(TableHead, _React$Component);

    function TableHead(props) {
        _classCallCheck(this, TableHead);

        return _possibleConstructorReturn(this, (TableHead.__proto__ || Object.getPrototypeOf(TableHead)).call(this, props));
    }

    _createClass(TableHead, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'th',
                { scope: 'col' },
                this.props.data
            );
        }
    }]);

    return TableHead;
}(_react2.default.Component);

exports.default = TableHead;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
				value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var StatsBadge = function (_React$Component) {
				_inherits(StatsBadge, _React$Component);

				function StatsBadge(props) {
								_classCallCheck(this, StatsBadge);

								return _possibleConstructorReturn(this, (StatsBadge.__proto__ || Object.getPrototypeOf(StatsBadge)).call(this, props));
				}

				_createClass(StatsBadge, [{
								key: "render",
								value: function render() {
												return _react2.default.createElement(
																"div",
																{ className: "btn-group", "data-toggle": "buttons" },
																_react2.default.createElement(
																				"label",
																				{ className: "btn btn-secondary active", onClick: this.props.clickStatsBadge },
																				_react2.default.createElement("input", { type: "radio", defaultChecked: true, autoComplete: "off", value: "attackdamage" }),
																				"attackdamage"
																),
																_react2.default.createElement(
																				"label",
																				{ className: "btn btn-secondary", onClick: this.props.clickStatsBadge },
																				_react2.default.createElement("input", { type: "radio", autoComplete: "off", value: "armor" }),
																				"armor"
																),
																_react2.default.createElement(
																				"label",
																				{ className: "btn btn-secondary", onClick: this.props.clickStatsBadge },
																				_react2.default.createElement("input", { type: "radio", autoComplete: "off", value: "hp" }),
																				"hp"
																),
																_react2.default.createElement(
																				"label",
																				{ className: "btn btn-secondary", onClick: this.props.clickStatsBadge },
																				_react2.default.createElement("input", { type: "radio", autoComplete: "off", value: "spellblock" }),
																				"spellblock"
																)
												);
								}
				}]);

				return StatsBadge;
}(_react2.default.Component);

exports.default = StatsBadge;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CharacterHead = function (_React$Component) {
    _inherits(CharacterHead, _React$Component);

    function CharacterHead(props) {
        _classCallCheck(this, CharacterHead);

        return _possibleConstructorReturn(this, (CharacterHead.__proto__ || Object.getPrototypeOf(CharacterHead)).call(this, props));
    }

    _createClass(CharacterHead, [{
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "th",
                { scope: "row" },
                this.props.data.name
            );
        }
    }]);

    return CharacterHead;
}(_react2.default.Component);

exports.default = CharacterHead;

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
   value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CharacterContent = function (_React$Component) {
   _inherits(CharacterContent, _React$Component);

   function CharacterContent(props) {
      _classCallCheck(this, CharacterContent);

      return _possibleConstructorReturn(this, (CharacterContent.__proto__ || Object.getPrototypeOf(CharacterContent)).call(this, props));
   }

   _createClass(CharacterContent, [{
      key: 'render',
      value: function render() {
         return _react2.default.createElement(
            'td',
            null,
            this.props.data.stats.attackdamage
         );
      }
   }]);

   return CharacterContent;
}(_react2.default.Component);

exports.default = CharacterContent;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CharacterStats = function (_React$Component) {
    _inherits(CharacterStats, _React$Component);

    function CharacterStats(props) {
        _classCallCheck(this, CharacterStats);

        return _possibleConstructorReturn(this, (CharacterStats.__proto__ || Object.getPrototypeOf(CharacterStats)).call(this, props));
    }

    _createClass(CharacterStats, [{
        key: 'render',
        value: function render() {
            return _react2.default.createElement(
                'td',
                null,
                this.props.data
            );
        }
    }]);

    return CharacterStats;
}(_react2.default.Component);

exports.default = CharacterStats;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(0);

var _react2 = _interopRequireDefault(_react);

var _ChracterCard = __webpack_require__(17);

var _ChracterCard2 = _interopRequireDefault(_ChracterCard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Test = function (_React$Component) {
  _inherits(Test, _React$Component);

  function Test(props) {
    _classCallCheck(this, Test);

    return _possibleConstructorReturn(this, (Test.__proto__ || Object.getPrototypeOf(Test)).call(this, props));
  }

  _createClass(Test, [{
    key: 'propTypes',
    value: function propTypes() {}
  }, {
    key: 'render',
    value: function render() {
      console.log("this is Test Component render : ");
      console.log(this.props.tempNameArray);

      var mapToCharacterCard = function mapToCharacterCard(data) {
        return data.map(function (data, i) {
          return _react2.default.createElement(
            'div',
            {
              'class': 'card bg-light',
              data: data,
              key: i
            },
            _react2.default.createElement(
              'div',
              {
                'class': 'card-img-overlay' },
              data
            )
          );
        });
      };

      return _react2.default.createElement(
        'div',
        null,
        mapToCharacterCard(this.props.nameArray)
      );
    }
  }]);

  return Test;
}(_react2.default.Component);

Test.propTypes = {};
Test.defaultProps = {
  nameArray: [],
  testString: "this is Test props"
};
exports.default = Test;

/***/ }),
/* 45 */
/***/ (function(module, exports) {

module.exports = [{"desc":"Unlike other foxes that roamed the woods of southern Ionia, Ahri had always felt a strange connection to the magical world around her; a connection that was somehow incomplete. Deep inside, she felt the skin she had been born into was an ill fit for her and dreamt of one day...","id":103,"name":"Ahri","tags":["assassin","mage","ranged"]},{"desc":"There exists an ancient order originating in the Ionian Isles dedicated to the preservation of balance. Order, chaos, light, darkness -- all things must exist in perfect harmony for such is the way of the universe. This order is known as the Kinkou and it employs a triumvirate...","id":84,"name":"Akali","tags":["assassin","melee","stealth"]},{"desc":"As the mightiest warrior to ever emerge from the Minotaur tribes of the Great Barrier, Alistar defended his tribe from Valoran's many dangers; that is, until the coming of the Noxian army. Alistar was lured from his village by the machinations of Keiran Darkwill, General Boram...","id":12,"name":"Alistar","tags":["tank","pusher","melee"]},{"desc":"Perhaps one of the oddest champions in the League of Legends is the yordle known as Amumu. His life before joining the League remains unknown... especially to Amumu. All he remembers is that he woke up alone inside a pyramid within the Shurima Desert. He was entwined in mummy...","id":32,"name":"Amumu","tags":["tank","melee"]},{"desc":"In most lore, the phoenix is a creature of fire that rises from its own ashes. What few know, however, is that phoenixes are elemental beings, formed by the eternal essences of their native world. Anivia was conceived on a world such as this - a being of the coldest winter, a...","id":34,"name":"Anivia","tags":["mage","ranged"]},{"desc":"In the time shortly before the League, there were those within the sinister city-state of Noxus who did not agree with the evils perpetrated by the Noxian High Command. The High Command had just put down a coup attempt from the self-proclaimed Crown Prince Raschallion, and a...","id":1,"name":"Annie","tags":["mage","ranged","recommended"]},{"desc":"One of the perennial favorites of summoners in the League of Legends is the Freljordian beauty known as Ashe. She is a direct descendant of Avarosa - one of three legendary sisters who each claimed dominion over the scattered tribes dwelling in the icy tundra of northern Valoran....","id":22,"name":"Ashe","tags":["carry","ranged","recommended"]},{"desc":"The city of Zaun is a place where both magic and science have gone awry. The unchecked nature of experimentation has taken its toll on the city.  However, Zaun's lenient restrictions allow their researchers and inventors the leeway to push the bounds of science at an accelerated...","id":53,"name":"Blitzcrank","tags":["fighter","melee"]},{"desc":"In a faraway place known as Lokfar there was a seafaring marauder called Kegan Rodhe. As was his people's way, Kegan sailed far and wide with his fellows, stealing treasures from those unlucky enough to catch their attention. To some, he was a monster; to others, just a man....","id":63,"name":"Brand","tags":["mage","ranged"]},{"desc":"One of the reasons Piltover is known as the City of Progress is because it has an extraordinarily low crime rate. This hasn't always been the case; brigands and thieves of all sorts used to find the city-state an ideal mark for plunder, primarily due to the valuable resources...","id":51,"name":"Caitlyn","tags":["carry","ranged"]},{"desc":"While her sister Katarina has always been the most celebrated member of the household, the Du Couteau family has a long history of service to Noxus. It has often been said that no soldier has ever been as fortunate as General Du Couteau to have been graced with daughters. His...","id":69,"name":"Cassiopeia","tags":["mage","ranged"]},{"desc":"There is a place between dimensions, between worlds.  To some it is known as the Outside, to others it is the Unknown.  To those that truly know, however, it is called the Void.  Despite its name, the Void is not an empty place, but rather the home of unspeakable things - horrors...","id":31,"name":"Cho'Gath","tags":["fighter","mage","melee"]},{"desc":"When Heimerdinger and his yordle colleagues migrated to Piltover, they embraced science as a way of life, and they immediately made several groundbreaking contributions to the techmaturgical community.  What yordles lack in stature, they make up for with industriousness.  Corki,...","id":42,"name":"Corki","tags":["ranged","carry"]},{"desc":"It is said that the man now known as Dr. Mundo was born without any sort of conscience.  Instead, he had an unquenchable desire to inflict pain through experimentation. By the time he was five, most of the pets in the Zaun neighborhood where Mundo grew up had gone missing. By...","id":36,"name":"Dr. Mundo","tags":["fighter","melee"]},{"desc":"Evelynn's origins are shrouded in mystery - a mystery she herself helps to perpetuate.  What everyone does know about Evelynn, however, is that she is one of the most skilled assassins in Valoran.  It is clear upon first meeting her that she is not quite human.  Some theorize...","id":28,"name":"Evelynn","tags":["assassin","stealth","melee"]},{"desc":"Ezreal was born with the gift of magic flowing through his veins. Ezreal, however, was also born with a much stronger sense of wanderlust. Put into school to become a skilled techmaturgist, Ezreal quickly became bored with magical studies. By the time the boy genius was eight...","id":81,"name":"Ezreal","tags":["carry","ranged"]},{"desc":"For nearly twenty years, Fiddlesticks has stood alone in the easternmost summoning chamber of the Institute of War.  Only the burning emerald light of his unearthly gaze pierces the musty darkness of his dust-covered home.  It is here that the Harbinger of Doom keeps a silent...","id":9,"name":"Fiddlesticks","tags":["mage","jungler","ranged"]},{"desc":"Centuries ago, an ancient water-dwelling race built a hidden city beneath a mountain in the sea. Though these creatures had their enemies, the city was an impenetrable fortress, and, in the safety it provided, they grew complacent. Fizz, however, harbored a curious spirit that...","id":105,"name":"Fizz","tags":["fighter","assassin","melee"]},{"desc":"Long before the League's regulation of such magic, mages experimented with the creation of artificial life.  Now forbidden, instilling golems with reason was once not so uncommon a practice amongst the more expert of craftsmen.  One such visionary was the Demacian artificer,...","id":3,"name":"Galio","tags":["tank","support","melee"]},{"desc":"Gangplank was born the son of the dread pirate captain Vincent the Shadow - one of the most wealthy and feared pirates in all of Blue Flame Island.  One might think this would have spoiled the boy with a cushioned life of privilege, but the truth is quite the opposite.  Growing...","id":41,"name":"Gangplank","tags":["carry","melee"]},{"desc":"Throughout Valoran, the resolve of Demacia's military is alternately celebrated or despised, but always respected.  Their ''zero tolerance'' moral code is strictly upheld by civilians and soldiers alike.  In combat, this means Demacian troops may not make excuses, flee, or surrender...","id":86,"name":"Garen","tags":["fighter","melee","recommended"]},{"desc":"The foothills of the Great Barrier are home to the hardiest people found anywhere on Valoran. Only those with great fortitude and endurance dwell in what is perhaps the most rugged and unforgiving environment anywhere on the face of Runeterra. It is here that the mighty Gragas...","id":79,"name":"Gragas","tags":["fighter","melee"]},{"desc":"Malcolm Graves was born in the back of a Bilgewater tavern and left there with a bottle of spiked milk.  He survived a childhood in the pirate-run slums using every dirty trick in the book.  Intent on building a new life for himself, he stowed away on the first ship to the mainland...","id":104,"name":"Graves","tags":["carry","ranged"]},{"desc":"It is unusual to see yordles outside of Bandle City, but the lure of science was something Heimerdinger could not resist.  By the time he'd completed his third doctorate, he had already become the greatest of all yordle scientists and there was little his home could still offer...","id":74,"name":"Heimerdinger","tags":["mage","pusher","ranged"]},{"desc":"The Ionians have developed some of the most breathtaking and deadly martial arts on all of Runeterra - just one manifestation of their pursuit of enlightenment. The most remarkable blade style to emerge, however, was the unusual byproduct of foreign intervention. Master Lito...","id":39,"name":"Irelia","tags":["assassin","melee"]},{"desc":"There are those sorcerers who give themselves over to the primal powers of nature, forgoing the learned practice of magic. Such a sorceress is Janna, who first learned magic as an orphan growing up admist the chaos that is the city-state of Zaun. Janna eked out what living she...","id":40,"name":"Janna","tags":["support","ranged"]},{"desc":"As the royal family of Demacia for centuries, members of the Lightshield line have spent their lives waging war against any who opposed Demacian ethics. It is said that every Lightshield is born with anti-Noxian sentiment in his blood. Jarvan IV is no exception, even though he...","id":59,"name":"Jarvan IV","tags":["fighter","melee"]},{"desc":"It is seldom the case where a champion is defined by his actions after joining the League of Legends rather than before. Such is the case with Jax, for whom the argument could be made that he is the most prolific tournament fighter currently at the Institute of War. Before joining...","id":24,"name":"Jax","tags":["fighter","melee"]},{"desc":"Even in her youth, Karma exhibited almost superhuman composure. While her peers explored the torrent of emotions that came with adolescence, Karma meditated in the Lotus Gardens. She was convinced that the true path to enlightenment was a journey inward, to a place within the...","id":43,"name":"Karma","tags":["support","ranged"]},{"desc":"The vast quantities of physical magic that were consumed and destroyed during Valoran's numerous Rune Wars have scarred much of Valoran.  Many locations far from civilization have been morphed into hazardous and dangerous locales.  The Howling Marsh is one of these places, and...","id":30,"name":"Karthus","tags":["mage","ranged"]},{"desc":"There is a place between dimensions and between worlds. To some it is known as the Outside, to others it is the Unknown. To most, however, it is called the Void. Despite its name, the Void is not an empty place, but rather the home of unspeakable things, horrors not meant for...","id":38,"name":"Kassadin","tags":["assassin","mage","melee"]},{"desc":"As a militaristic state, it would perhaps come as no surprise that the primary responsibilities of Noxian women are raising strong children and providing succor for husbands who walk the path of soldiery. There are some, however, for whom nurture is not nature, and Katarina is...","id":55,"name":"Katarina","tags":["assassin","melee","recommended"]},{"desc":"In a world far away where an ancient war still rages, Kayle was a great hero - the strongest of an immortal race committed to destroying evil wherever it could be found.  For ten thousand years, Kayle fought tirelessly for her people, wielding her flaming sword forged before...","id":10,"name":"Kayle","tags":["fighter","support"]},{"desc":"There exists an ancient order originating in the Ionian Isles dedicated to the preservation of balance. Order, chaos, light, darkness -- all things must exist in perfect harmony for such is the way of the universe. This order is known as the Kinkou and it employs a triumvirate...","id":85,"name":"Kennen","tags":["mage","ranged"]},{"desc":"When the prophet Malzahar was reborn in Icathia, he was led there by an ominous voice which thereafter anchored itself to his psyche. From within, this voice bestowed upon him terrible purpose, and though Malzahar was no longer tormented by its call, the voice did not cease its...","id":96,"name":"Kog'Maw","tags":["ranged","carry"]},{"desc":"Every city has its dark side, even one whose reputation is already of a questionable hue. Noxus - though its name is already invoked with a mixture of reverence and revulsion - is no exception to this simple truth. Deep within the winding dungeons that honeycomb the earth beneath...","id":7,"name":"LeBlanc","tags":["assassin","mage","ranged"]},{"desc":"As a young teen, Lee Sin was intent on becoming a summoner. His will and dedication were unmatched by any of his peers, and his skill drew the attention of Reginald Ashram, the League's High Councilor at the time. While studying at the Arcanum Majoris, Lee Sin became frustrated...","id":64,"name":"Lee Sin","tags":["assassin","melee"]},{"desc":"On the upper slopes of Mount Targon, the warriors of Rakkor live and breathe only for war.  However, Targon's peak is reserved for a special group of Rakkoran who answer to a ''higher'' calling.  Members of this group, called the Solari, retire their mantles of war, choosing...","id":89,"name":"Leona","tags":["tank","melee"]},{"desc":"Born to the prestigious Crownguards,  the paragon family of Demacian service, Luxanna was destined for greatness.  She grew up as the family's only daughter, and she immediately took to the advanced education and lavish parties required of families as high profile as the Crownguards....","id":99,"name":"Lux","tags":["mage","support","ranged"]},{"desc":"There is a world of perfect harmony, where all are part of the whole. The Monolith is the essence of all creation, and its denizens are but singular pieces of it. It is beautiful in its symmetry, and in its almost complete lack of uncertainty. The rocky beings that live there...","id":54,"name":"Malphite","tags":["fighter","melee"]},{"desc":"Many men have gone mad beneath the glare of the Shurima sun, but it was during the night's chilling embrace that Malzahar relinquished his sanity.  Malzahar was born a seer, blessed with the gift of prophecy.  His talent, though unrefined, promised to be one of Runeterra's greatest...","id":90,"name":"Malzahar","tags":["mage","ranged"]},{"desc":"The twisting magical energies unleashed by mages during the Rune Wars caused an incredible amount of devastation to the natural world.  The League was established to control the use of this magic by confining it to the Fields of Justice.  By limiting its use to there, they thought...","id":57,"name":"Maokai","tags":["tank","pusher","melee"]},{"desc":"Keeper of the ancient art of Wuju, Master Yi is a mystical warrior from the isle of Ionia.  He descended from one of the few tribes dedicated to the preservation of Wuju, a martial art founded with the principles of absolute spiritual awareness of one's self and one's enemy....","id":11,"name":"Master Yi","tags":["carry","melee","recommended"]},{"desc":"For those who brave the harsh seas of Runeterra, attaining one's own ship and crew is the pinnacle of success. Sarah Fortune, a well-respected (some would say legendary) bounty hunter from Bilgewater, was able to achieve this feat just after her sixteenth birthday, etching out...","id":21,"name":"Miss Fortune","tags":["ranged","carry"]},{"desc":"During the most recent winter solstice - when no other night during the year is longer - a being like no other emerged from the forgotten alleyways of Noxus. Standing eight feet tall, and concealed within a razor-sharp armored shell, he came to be known only as Mordekaiser. The...","id":82,"name":"Mordekaiser","tags":["fighter","pusher","melee"]},{"desc":"There is a world far away populated by graceful and beautiful winged beings gifted with immortality, where an ancient conflict still rages. Like so many conflicts, this war split families. One side proclaimed themselves as beings of perfect order and justice, fighting to unite...","id":25,"name":"Morgana","tags":["mage","support","ranged"]},{"desc":"The enigmatic creature known as Nasus came to the League from a faraway world, and served as part of a vast and learned desert empire. There he was a respected and enlightened individual, having been made the Keeper of the Great Library. However, he was also part of a race of...","id":75,"name":"Nasus","tags":["fighter","pusher","melee","recommended"]},{"desc":"There are few dwellers, let alone champions, residing in the blasted and dangerous lands that lie south of the Great Barrier. Much of that world still bears the scars of past Runes Wars, especially the mysterious Kumungu Jungle. There are long-forgotten treasures in these strange...","id":76,"name":"Nidalee","tags":["support","pusher"]},{"desc":"Before Nocturne, people believed that dreams were figments of their imagination, meaningless images that flashed through the mind when one slept. This belief was put to the test when a rash of sleep-related incidents started afflicting summoners of the League. Some would wake...","id":56,"name":"Nocturne","tags":["assassin","melee"]},{"desc":"Freljord is an unforgiving land covered in snow and ice. Travel, especially in the winter, can be very dangerous. The elements often claim even those who have spent their entire lives there. The boy known as Nunu is defined by such tragedy. One day when he was a young child,...","id":20,"name":"Nunu","tags":["fighter","melee","jungler","recommended"]},{"desc":"On an uncharted continent beyond Valoran's grasping clutches, the conqueror named Olaf was born to a long tradition of soldiers unlike most others.  Berserkers, as they tout themselves, are warriors who channel fury deep from their cores, unleashing pure and savage wrath upon...","id":2,"name":"Olaf","tags":["fighter","melee"]},{"desc":"There once was a Piltovian man named Corin Reveck who had a daughter named Orianna, whom he loved more than anything else in the world. Though Orianna had incredible talent for dancing, she was deeply fascinated by the champions of the League of Legends. This fascination compelled...","id":61,"name":"Orianna","tags":["mage","ranged"]},{"desc":"Far above the clouds on Mount Targon resides a stalwart tribe of people known as the Rakkor who still revere combat and war as ultimate artforms. They remember the Rune Wars of Runeterra and know that the League of Legends can only repress the rising tides of violence for so...","id":80,"name":"Pantheon","tags":["assassin","melee"]},{"desc":"While other young yordle girls played skip-step and braided wreathes out of posies, Poppy spent her youth earning calluses and grease stains in her father's armor shop.  Blomgrun, her father, was Bandle City's finest smith.  The only thing he loved as much as his work was his...","id":78,"name":"Poppy","tags":["fighter","assassin","melee"]},{"desc":"Ravaged by Rune Wars long past, the lands south of the Great Barrier are wrecked by chaotic magical storms, leaving the grasp of nature's rule tenuous at best. While abnormal flora or fauna are the norm rather than the exception in these ruined areas, perhaps none is more curious...","id":33,"name":"Rammus","tags":["tank","melee","recommended"]},{"desc":"On a faraway world, Renekton was born a member of a race of bestial guardians created to serve as the rulers and protectors of their people. Alongside his brother Nasus, Renekton oversaw the upkeep of the Great Library, which served as both a vault of ancient knowledge and the...","id":58,"name":"Renekton","tags":["fighter","melee"]},{"desc":"In Noxus, any citizen may rise to power regardless of race, gender, or social standing - strength is all that matters. It was with committed faith in this ideal that Riven strove to greatness. She showed early potential as a soldier, forcing herself to master the weight of a...","id":92,"name":"Riven","tags":["fighter","melee"]},{"desc":"Even amongst yordles, Rumble was always the runt of the litter. As such, he was used to being bullied. In order to survive, he had to be scrappier and more resourceful than his peers. He developed a quick temper and a reputation for getting even, no matter who crossed him. This...","id":68,"name":"Rumble","tags":["mage","melee","pusher"]},{"desc":"There are many on Runeterra who are attracted to the study of magic or, in recent times, the emerging field of techmaturgy. For most, pursuit of such knowledge is formalized in a college or university. The halls of traditional study were never for Ryze, however, who felt a more...","id":13,"name":"Ryze","tags":["mage","ranged","recommended"]},{"desc":"When Sejuani was born, the mystics of her tribe foretold that she would be the one to unite and lead the divided territories of Freljord.  Her people had suffered for centuries, as a losing war on the frozen tundra pushed them farther and farther from Freljord's limited food...","id":113,"name":"Sejuani","tags":["tank","jungler","melee"]},{"desc":"Most would say that death isn't funny. It isn't, unless you're Shaco - then it's hysterical. He is Valoran's first fully functioning homicidal comic; he jests until someone dies, and then he laughs. The figure that has come to be known as the Demon Jester is an enigma. No one...","id":35,"name":"Shaco","tags":["assassin","stealth","melee"]},{"desc":"There exists an ancient order originating in the Ionian Isles dedicated to the preservation of balance.  Order, chaos, light, darkness -- all things must exist in perfect harmony for such is the way of the universe.  This order is known as the Kinkou and it employs a triumvirate...","id":98,"name":"Shen","tags":["tank","support","melee"]},{"desc":"Half-Dragons are the forbidden scions of humans and shape-shifting dragons. There have been few in the world, as they are typically hunted down by their draconian relatives. The scarce and reclusive dragons left on Runeterra find it disgusting to mix their blood with the frivolous...","id":102,"name":"Shyvana","tags":["fighter","melee"]},{"desc":"Singed descended from a long line of Zaun's revered chemists. Even in his youth, his talent for concocting potions far outstripped that of his peers, and he quickly distinguished himself from his less extraordinary chemist compatriots. It came as no surprise to anyone when he...","id":27,"name":"Singed","tags":["fighter","melee"]},{"desc":"Prior to the creation of the League of Legends, the city-states of Demacia and Noxus were locked in a brutal series of on-again-off-again wars that spanned the course of centuries.  Both powers sought an advantage over the other, but Noxus was the city-state willing to forego...","id":14,"name":"Sion","tags":["fighter","melee"]},{"desc":"The beautiful and deadly champion known as Sivir has been a favorite of League summoners for close to a decade.  A soldier-for-hire outside of the Fields of Justice, she is the embodiment of a highly successful mercenary on modern day Runeterra.  Sivir has little interest in...","id":15,"name":"Sivir","tags":["carry","pusher","ranged","recommended"]},{"desc":"Centuries ago, there lived a race of creatures as ferocious as they were wise. The brackern were unusual beings blessed with the earth's primal magic, embodied in the form of crystals. Their kind knew of an arcane ritual to bind their life's essence to a crystal, communing with...","id":72,"name":"Skarner","tags":["fighter","jungler","melee"]},{"desc":"Sona has no memories of her true parents. As an infant, she was found abandoned on the doorstep of an Ionian adoption house, nestled atop an ancient instrument in an exquisite case of unknown origins. She was an unusually well-behaved child, always quiet and content. Her caretakers...","id":37,"name":"Sona","tags":["support","ranged","recommended"]},{"desc":"Soraka, the Starchild of Ionia, was the first of her kind. While there are many who tap into the rich magical energies of Valoran, she was the first to tap into the magic of the cosmos itself - the celestial sea in which it is theorized that Runeterra swims among other like bodies....","id":16,"name":"Soraka","tags":["support","ranged","recommended"]},{"desc":"The earliest account of Swain's existence comes from a Noxian infirmary doctor's notes. According to them, Swain limped into the ward without cry or complaint; his right leg was snapped in half, with bone protruding from the skin. A small, scowling bird seemed affixed to his...","id":50,"name":"Swain","tags":["mage","ranged"]},{"desc":"Talon's earliest memories are the darkness of Noxus' underground passages and the reassuring steel of a blade. He remembers no family, warmth, or kindness. Instead, the clink of stolen gold and the security of a wall at his back are all the kinship he has ever craved. Kept alive...","id":91,"name":"Talon","tags":["assassin","melee"]},{"desc":"There is a form of magic unknown to many Runeterrans and discredited by the few who are even aware of its existence. It is the magic of the earth, drawing power from the resonance of crystals and gems. Taric, the Gem Knight, is Runeterra's sole practitioner of this form of magic,...","id":44,"name":"Taric","tags":["tank","support","melee","recommended"]},{"desc":"Teemo is a legend among his yordle brothers and sisters in Bandle City. As far as yordles are concerned, there is something just slightly off about him. While Teemo enjoys the companionship of other yordles, he also insists on frequent solo missions in the ongoing defense of...","id":17,"name":"Teemo","tags":["support","stealth","ranged"]},{"desc":"The Megling Commandos are something of a legend in Bandle City. They have a history that spans centuries, and they remain the oldest yordle military unit still in service. They are renowned for their courage, deadliness, and ruthlessness, making them the most respected and feared...","id":18,"name":"Tristana","tags":["carry","ranged","recommended"]},{"desc":"Trolls have never been well-regarded beings of Valoran. Generally speaking, they are barbaric, cannibalistic, and sneaky. They are creatures relegated to the murky recesses of the world, hidden away from most intelligent beings. Despite their maleficent natures, however, the...","id":48,"name":"Trundle","tags":["fighter","melee"]},{"desc":"There are those who choose not to live in one of the great city-states of Valoran. Instead, they live in remote locales, often as part of a nomad or barbarian tribe. While perils abound in these untamed lands, there is also great freedom in being removed from the politics of...","id":23,"name":"Tryndamere","tags":["carry","melee"]},{"desc":"Although born to poor gypsy parents, the champion known as Twisted Fate was able to gamble his way to prosperity as a card shark in the seedy underground gambling circuits of Demacia and Noxus.  No matter how close the authorities came to catching him, the rogue always found...","id":4,"name":"Twisted Fate","tags":["assassin","pusher","ranged"]},{"desc":"The city-state of Zaun is a twisted realm of science, mercantilism, and magic run amok.  While the young science of techmaturgy does much to advance civilization, its research and use in Zaun pushes the boundaries of morality on a daily basis.  Zaun, choked with pollution from...","id":29,"name":"Twitch","tags":["carry","stealth","ranged"]},{"desc":"The mystics of Ionia delve into the deepest mysteries of Valoran, pioneering the most inner depths of spirituality.  Their adepts are some of the most devout proponents of enlightenment and harmony...but as is always the case, there are those who follow a very different path....","id":77,"name":"Udyr","tags":["fighter","melee"]},{"desc":"There are warriors who become great for their strength, cunning, or skill with arms.  Others simply refuse to die.  Urgot, once a great soldier of Noxus, may constitute a case in support of the latter.  Prone to diving headlong into enemy battle lines, Urgot sewed chaos throughout...","id":6,"name":"Urgot","tags":["fighter","ranged"]},{"desc":"The world is not always as civilized as people might think. There are still those who would follow the blackest paths of magic and become corrupted by the darker powers that flow through Runeterra. Shauna Vayne knows this fact well. As a young privileged girl in the heart of...","id":67,"name":"Vayne","tags":["carry","ranged","assassin","stealth"]},{"desc":"To most, thoughts of yordles do not conjure images to be feared. The easygoing half-pint race, though fierce, is often regarded with some degree of joviality. Their high-pitched voices and naturally cute forms inspire something of a protective instinct in the larger races, or...","id":45,"name":"Veigar","tags":["mage","ranged"]},{"desc":"Early in life, Viktor discovered his passion for science and invention, particularly in the field of mechanical automation.  He attended Zaun's prestigious College of Techmaturgy and led the team that constructed Blitzcrank – a scientific breakthrough that he expected to vault...","id":112,"name":"Viktor","tags":["mage","ranged","pusher"]},{"desc":"There is a temple hidden in the mountains between Noxus and the Tempest Flats, where the secrets of an ancient and terrifying sorcery are kept.  The area surrounding the temple is littered with the exsanguinated corpses of those who have mistakenly wandered too close.  These...","id":8,"name":"Vladimir","tags":["fighter","mage","ranged"]},{"desc":"Though the northern reaches of Freljord are some of the most unforgiving lands in Valoran, the Ursine have survived upon the region's barren, stormy tundra for centuries. As a fierce and respected warrior of the Ursine, Volibear devoted his life to the protection of his people...","id":106,"name":"Volibear","tags":["tank","fighter","jungler","melee"]},{"desc":"Warwick counted himself amongst the most powerful and revered men in his home city-state of Zaun.  Over the course of his infamous career as an alchemist, Warwick won many honors for his craft, not the least of which was a lucrative offer for service in the Noxian military during...","id":19,"name":"Warwick","tags":["fighter","jungler","melee","recommended"]},{"desc":"During the chaos of the Rune Wars, an enormous runestone was lost deep within the Plague Jungles. It remained there, untouched for centuries, emanating a potent magic which infused nearby wildlife with sentience and vitality. A group of monkeys who were particularly empowered...","id":62,"name":"Wukong","tags":["fighter","melee","stealth"]},{"desc":"In the ancient civilization of Shurima, the mage called Xerath practiced magic with undying passion. He believed that with enough magical power, he could gaze into the heart of Runeterra to know the secrets of history and the universe beyond. Such magic was beyond the limitations...","id":101,"name":"Xerath","tags":["mage","ranged"]},{"desc":"Whenever Jarvan III, the king of Demacia, delivers one of his rallying speeches from the glinting marble balcony atop the Royal Palace, Xin Zhao is at his side. Coined the Seneschal of Demacia, Xin Zhao is the personal steward of the Lightshield Dynasty. His enigmatic, silent...","id":5,"name":"Xin Zhao","tags":["fighter","assassin","melee"]},{"desc":"The work of gravediggers is essential amongst the living, but invaluable in the Shadow Isles. There are many shades of death there, and each is embraced rather than feared or reviled. One can only ascend from one state to the next with the magical aid of a skilled professional....","id":83,"name":"Yorick","tags":["fighter","pusher","melee"]},{"desc":"In the wastelands of Urtistan, there was once a great city. It perished long ago in a terrible Rune War, like most of the lands below the Great Barrier. Nevertheless, one man survived: a sorcerer named Zilean. Being obsessed with time, it was only fitting that he dwelled in the...","id":26,"name":"Zilean","tags":["mage","support","ranged"]}]

/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = {"data":{"Jax":{"id":24,"key":"Jax","name":"잭스","title":"무기의 달인","image":{"full":"Jax.png","sprite":"champion1.png","group":"champion","x":144,"y":48,"w":48,"h":48},"skins":[{"id":24000,"name":"default","num":0},{"id":24001,"name":"아이스하키 잭스","num":1},{"id":24002,"name":"파괴단 잭스","num":2},{"id":24003,"name":"낚시꾼 잭스","num":3},{"id":24004,"name":"PAX 잭스","num":4},{"id":24005,"name":"잭시무스","num":5},{"id":24006,"name":"소림사 잭스","num":6},{"id":24007,"name":"응징자 잭스","num":7},{"id":24008,"name":"SKT T1 잭스","num":8},{"id":24012,"name":"심판자 잭스","num":12}],"lore":"독특한 무기와 날카로운 독설 모두 따라올 자가 없는 잭스는 이케시아에서 마지막으로 알려진 무기의 달인이다. 풀려난 공허의 잔해로 조국이 기울자, 잭스와 그 무리는 조국의 남은 부분이나마 수호하기로 맹세했다. 마법이 강해지고 잠재하는 위협이 다시금 태동하자, 잭스는 발로란을 떠돌며 만나는 모든 전사에게 이케시아의 마지막 불빛을 휘두른다. 그와 견줄 수 있을 정도로 강한지 시험하기 위해.","blurb":"독특한 무기와 날카로운 독설 모두 따라올 자가 없는 잭스는 이케시아에서 마지막으로 알려진 무기의 달인이다. 풀려난 공허의 잔해로 조국이 기울자, 잭스와 그 무리는 조국의 남은 부분이나마 수호하기로 맹세했다. 마법이 강해지고 잠재하는 위협이 다시금 태동하자, 잭스는 발로란을 떠돌며 만나는 모든 전사에게 이케시아의 마지막 불빛을 휘두른다. 그와 견줄 수 있을 정도로 강한지 시험하기 위해.","allytips":["- 잭스는 와드를 포함한 아군 유닛에 도약 공격을 사용할 수 있습니다. 이를 활용하여 전투에서 탈출하십시오.","- 잭스는 구인수의 격노검이나 마법공학 총검처럼 주문력과 공격력을 겸비한 아이템을 착용할 시 큰 이득을 볼 수 있습니다."],"enemytips":["- 잭스와 정면으로 맞서기 보다는 치고 빠지는 작전을 사용하는 편이 좋습니다. 잭스의 연속 공격을 차단하면 공격력이 현저하게 떨어집니다.","- 잭스는 짧은 시간동안 모든 공격을 회피할 수 있습니다. 회피 후에는 근처에 있는 모든 적을 기절시킵니다. 회피 효과가 사라질 때까지 기다리세요."],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":7,"defense":5,"magic":7,"difficulty":5},"stats":{"armor":36,"armorperlevel":3,"attackdamage":69.97,"attackdamageperlevel":3.375,"attackrange":125,"attackspeedoffset":-0.02,"attackspeedperlevel":3.4,"crit":0,"critperlevel":0,"hp":592.8,"hpperlevel":85,"hpregen":8.374,"hpregenperlevel":0.55,"movespeed":350,"mp":338.8,"mpperlevel":32,"mpregen":7.576,"mpregenperlevel":0.7,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"도약 공격","description":"잭스가 목표 유닛을 향해 뛰어오릅니다. 대상이 적일 경우 무기로 내려칩니다.","sanitizedDescription":"잭스가 목표 유닛을 향해 뛰어오릅니다. 대상이 적일 경우 무기로 내려칩니다.","tooltip":"잭스가 목표를 향해 도약하여, 적인 경우 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.","sanitizedTooltip":"잭스가 목표를 향해 도약하여, 적인 경우 {{ e1 }} (+{{ f1 }}) (+{{ a1 }})의 물리 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JaxLeapStrike.png","sprite":"spell4.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,65,65,65,65],"costBurn":"65","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[80,120,160,200,240],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"JaxLeapStrike"},{"name":"무기 강화","description":"잭스가 무기에 힘을 모아 다음 번 적을 공격할 때 강력한 추가 피해를 입힙니다.","sanitizedDescription":"잭스가 무기에 힘을 모아 다음 번 적을 공격할 때 강력한 추가 피해를 입힙니다.","tooltip":"잭스가 무기에 힘을 모아 다음 기본 공격이나 도약 공격 시 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }}) </span>의 추가 마법 피해를 입힙니다.","sanitizedTooltip":"잭스가 무기에 힘을 모아 다음 기본 공격이나 도약 공격 시 {{ e1 }} (+{{ a1 }}) 의 추가 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JaxEmpowerTwo.png","sprite":"spell4.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[7,6,5,4,3],"cooldownBurn":"7/6/5/4/3","effect":[null,[40,75,110,145,180],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/75/110/145/180","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"JaxEmpowerTwo"},{"name":"반격","description":"잭스가 뛰어난 전투 실력으로 짧은 시간동안 적의 공격을 모두 피할 수 있게 됩니다. 공격을 피한 뒤에는 재빨리 반격해 주변의 적을 모두 기절시킵니다.","sanitizedDescription":"잭스가 뛰어난 전투 실력으로 짧은 시간동안 적의 공격을 모두 피할 수 있게 됩니다. 공격을 피한 뒤에는 재빨리 반격해 주변의 적을 모두 기절시킵니다.","tooltip":"잭스가 {{ e6 }}초간 방어 태세에 들어가 모든 기본 공격을 회피하고, 광역 스킬로부터 받는 피해가 {{ e3 }}% 감소합니다.<br /><br />2초가 지나거나 스킬을 다시 사용하면, 잭스가 주위 적을 {{ e2 }}초간 기절시키며 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>의 물리 피해를 줍니다.<br /><br /><span class=\"color99FF99\">반격은 잭스가 회피한 공격당 추가로 {{ e5 }}%의 피해를 입힙니다 (최대 {{ e4 }}% 증가).</span>","sanitizedTooltip":"잭스가 {{ e6 }}초간 방어 태세에 들어가 모든 기본 공격을 회피하고, 광역 스킬로부터 받는 피해가 {{ e3 }}% 감소합니다. 2초가 지나거나 스킬을 다시 사용하면, 잭스가 주위 적을 {{ e2 }}초간 기절시키며 {{ e1 }} (+{{ f2 }})의 물리 피해를 줍니다. 반격은 잭스가 회피한 공격당 추가로 {{ e5 }}%의 피해를 입힙니다 (최대 {{ e4 }}% 증가).","leveltip":{"label":["재사용 대기시간","피해량","마나 소모량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }} "]},"image":{"full":"JaxCounterStrike.png","sprite":"spell4.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[16,14,12,10,8],"cooldownBurn":"16/14/12/10/8","effect":[null,[55,80,105,130,155],[1,1,1,1,1],[25,25,25,25,25],[100,100,100,100,100],[20,20,20,20,20],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/80/105/130/155","1","25","100","20","2","0","0","0","0"],"vars":[{"key":"f2","link":"bonusattackdamage","coeff":[0.5]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"JaxCounterStrike"},{"name":"달인의 저력","description":"매 세 번째 연속 공격마다 추가 마법 피해를 줍니다. 또 잭스는 이 스킬을 통해 결의를 다져, 잠깐 동안 방어력과 마법 저항력이 상승합니다.","sanitizedDescription":"매 세 번째 연속 공격마다 추가 마법 피해를 줍니다. 또 잭스는 이 스킬을 통해 결의를 다져, 잠깐 동안 방어력과 마법 저항력이 상승합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 잭스는 매 세 번째 공격마다 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }}) </span>의 추가 마법 피해를 줍니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 잭스가 결의를 다져, {{ e5 }}초 동안 방어력이 <span class=\"colorFF8C00\">{{ f2 }}</span>, 마법 저항력이 <span class=\"color99FF99\">{{ f1 }}</span> 상승합니다.<span class=\"colorFF8C00\"><br /><br />추가 방어력: {{ e3 }} + 추가 공격력의 {{ e6 }}%</span><span class=\"color99FF99\"><br />추가 마법 저항력: {{ e3 }} + 주문력의 {{ e7 }}%</span>","sanitizedTooltip":"기본 지속 효과: 잭스는 매 세 번째 공격마다 {{ e1 }} (+{{ a1 }}) 의 추가 마법 피해를 줍니다. 사용 시: 잭스가 결의를 다져, {{ e5 }}초 동안 방어력이 {{ f2 }}, 마법 저항력이 {{ f1 }} 상승합니다. 추가 방어력: {{ e3 }} + 추가 공격력의 {{ e6 }}% 추가 마법 저항력: {{ e3 }} + 주문력의 {{ e7 }}%","leveltip":{"label":["기본 피해량","추가 방어력","추가 마법 저항력"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"JaxRelentlessAssault.png","sprite":"spell4.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[80,80,80],"cooldownBurn":"80","effect":[null,[100,160,220],[3,3,3],[30,50,70],[6,8,10],[8,8,8],[50,50,50],[20,20,20],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/160/220","3","30/50/70","6/8/10","8","50","20","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"f2","link":"@special.jaxrarmor","coeff":[0.3]},{"key":"f1","link":"@special.jaxrmr","coeff":[0.2]}],"range":[100,100,100],"rangeBurn":"100","key":"JaxRelentlessAssault"}],"passive":{"name":"가차없는 맹공","description":"잭스가 연속해서 기본 공격을 가하면 공격 속도가 상승합니다.","sanitizedDescription":"잭스가 연속해서 기본 공격을 가하면 공격 속도가 상승합니다.","image":{"full":"Armsmaster_MasterOfArms.png","sprite":"passive1.png","group":"passive","x":144,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Jax","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3022,"count":1},{"id":3124,"count":1},{"id":3072,"count":1},{"id":3083,"count":1}]}]},{"champion":"Jax","title":"JaxARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3146,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jax","title":"JaxCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1001,"count":1},{"id":3057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3146,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3053,"count":1},{"id":3124,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jax","title":"JaxFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3111,"count":1},{"id":3078,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3047,"count":1},{"id":3153,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3143,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":3361,"count":1}]}]},{"champion":"Jax","title":"JaxKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":2},{"id":3184,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3146,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3053,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Jax","title":"JaxSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3146,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3053,"count":1},{"id":3124,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]}]},{"champion":"Jax","title":"JaxSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1001,"count":1},{"id":3057,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3146,"count":1},{"id":3078,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3111,"count":1},{"id":3146,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3053,"count":1},{"id":3124,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3156,"count":1},{"id":3124,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3026,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jax","title":"JaxTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3044,"count":1},{"id":3144,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3146,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3143,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Sona":{"id":37,"key":"Sona","name":"소나","title":"현의 명인","image":{"full":"Sona.png","sprite":"champion3.png","group":"champion","x":96,"y":48,"w":48,"h":48},"skins":[{"id":37000,"name":"default","num":0},{"id":37001,"name":"음악의 여신 소나","num":1},{"id":37002,"name":"펜타킬 소나","num":2},{"id":37003,"name":"고요한 밤 소나","num":3},{"id":37004,"name":"칠현금 소나","num":4},{"id":37005,"name":"아케이드 소나","num":5},{"id":37006,"name":"DJ 소나","num":6},{"id":37007,"name":"사랑의 소나","num":7}],"lore":"소나는 현악기 에트왈의 데마시아 최고 거장으로, 오로지 우아한 화음과 심금을 울리는 아리아로만 말한다. 소나는 그 특유의 고상한 태도 때문에 상류층의 사랑을 차지했지만 소나의 마법과도 같은 선율이 실제로 데마시아의 금기 중 하나인 마법의 일종이라고 의심하는 이들도 있었다. 소나는 낯선 이들에게는 침묵하고 있는 것으로 보이지만 가까운 지인들은 그녀를 이해하고 있다. 소나는 아군의 상처를 어루만지기 위해서 뿐 아니라 방심하고 있는 적을 공격하기 위해서 현을 튕겨 화음을 낸다.","blurb":"소나는 현악기 에트왈의 데마시아 최고 거장으로, 오로지 우아한 화음과 심금을 울리는 아리아로만 말한다. 소나는 그 특유의 고상한 태도 때문에 상류층의 사랑을 차지했지만 소나의 마법과도 같은 선율이 실제로 데마시아의 금기 중 하나인 마법의 일종이라고 의심하는 이들도 있었다. 소나는 낯선 이들에게는 침묵하고 있는 것으로 보이지만 가까운 지인들은 그녀를 이해하고 있다. 소나는 아군의 상처를 어루만지기 위해서 뿐 아니라 방심하고 있는 적을 공격하기 위해서...","allytips":["- 소나의 오오라가 활성화되어 있을 때 아군에게 가까이 가서 적용해 주되, 적에게 잡히지 않게 주의하세요.","- 크레센도는 중요한 순간을 위해 아껴두십시오.","- 인내의 아리아를 잘 사용하면 생존력을 극대화할 수 있습니다."],"enemytips":["- 소나를 만나면 산개해야 합니다. 단체로 춤을 추는 일이 없도록 하십시오.","- 소나는 내버려두면 동료를 치료하기 때문에 가장 먼저 해치워야 합니다."],"tags":["Support","Mage"],"partype":"마나","info":{"attack":5,"defense":2,"magic":8,"difficulty":4},"stats":{"armor":28,"armorperlevel":3.3,"attackdamage":46,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":-0.03,"attackspeedperlevel":2.3,"crit":0,"critperlevel":0,"hp":482.36,"hpperlevel":77,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":325,"mp":340.6,"mpperlevel":45,"mpregen":11.5,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"용맹의 찬가","description":"소나가 용맹의 찬가를 연주하여 강렬한 선율을 발사하여 주변에 있는 두 명의 적에게 마법 피해를 입힙니다. 이 때 챔피언과 몬스터를 우선 공격합니다. 또한 이 스킬을 사용하면 잠시동안 오오라가 생겨서 효과 범위 안에 있는 아군의 다음번 적 공격 시 추가 피해를 입힙니다.","sanitizedDescription":"소나가 용맹의 찬가를 연주하여 강렬한 선율을 발사하여 주변에 있는 두 명의 적에게 마법 피해를 입힙니다. 이 때 챔피언과 몬스터를 우선 공격합니다. 또한 이 스킬을 사용하면 잠시동안 오오라가 생겨서 효과 범위 안에 있는 아군의 다음번 적 공격 시 추가 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">사용 시:</span> 근처의 적 두 명(챔피언 우선)에게  {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 <span class=\"colorEEEEEE\">파워 코드</span> 효과를 <span class=\"color4477FF\">스타카토</span>로 바꿉니다.<br /><br /><span class=\"colorFF9900\">멜로디:</span> {{ e3 }}초 동안 주위에 오오라가 생깁니다. 오오라에 닿은 아군 챔피언은 다음 공격 시 {{ e4 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입힙니다.","sanitizedTooltip":"사용 시: 근처의 적 두 명(챔피언 우선)에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 파워 코드 효과를 스타카토로 바꿉니다. 멜로디: {{ e3 }}초 동안 주위에 오오라가 생깁니다. 오오라에 닿은 아군 챔피언은 다음 공격 시 {{ e4 }} (+{{ a2 }})의 추가 마법 피해를 입힙니다.","leveltip":{"label":["피해량 (사용 시)","피해량 (멜로디)","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SonaQ.png","sprite":"spell10.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[40,70,100,130,160],[400,400,400,400,400],[3,3,3,3,3],[10,15,20,25,30],[5,5,5,5,5],[0.4,0.4,0.4,0.4,0.4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/70/100/130/160","400","3","10/15/20/25/30","5","0.4","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[825,825,825,825,825],"rangeBurn":"825","key":"SonaQ"},{"name":"인내의 아리아","description":"소나가 인내의 아리아를 연주하여 보호의 음률을 내보내 자신과 주변 부상 당한 아군을 치유합니다. 또한 이 스킬을 사용하면 잠시동안 오오라가 생겨서 효과 범위 안의 아군에게 일시적으로 보호막을 씌워줍니다.","sanitizedDescription":"소나가 인내의 아리아를 연주하여 보호의 음률을 내보내 자신과 주변 부상 당한 아군을 치유합니다. 또한 이 스킬을 사용하면 잠시동안 오오라가 생겨서 효과 범위 안의 아군에게 일시적으로 보호막을 씌워줍니다.","tooltip":"<span class=\"colorFF9900\">사용 시:</span> 소나와 근처 아군 챔피언 한 명(가장 피해를 많이 입은 챔피언)의 체력이 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>만큼 회복되며, <span class=\"colorEEEEEE\">파워 코드</span> 효과가 <span class=\"color44FF77\">디미누엔도</span>로 바뀝니다.<br /><br /><span class=\"colorFF9900\">멜로디:</span> {{ e3 }}초 동안 주위에 오오라가 생깁니다. 오오라에 닿은 아군 챔피언은 {{ e5 }}초 동안 최대 {{ e4 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 피해를 막아 주는 보호막을 얻습니다.","sanitizedTooltip":"사용 시: 소나와 근처 아군 챔피언 한 명(가장 피해를 많이 입은 챔피언)의 체력이 {{ e1 }} (+{{ a1 }})만큼 회복되며, 파워 코드 효과가 디미누엔도로 바뀝니다. 멜로디: {{ e3 }}초 동안 주위에 오오라가 생깁니다. 오오라에 닿은 아군 챔피언은 {{ e5 }}초 동안 최대 {{ e4 }} (+{{ a2 }})의 피해를 막아 주는 보호막을 얻습니다.","leveltip":{"label":["회복량 (사용 시)","보호막 (멜로디)","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SonaW.png","sprite":"spell10.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,85,90,95,100],"costBurn":"80/85/90/95/100","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[30,50,70,90,110],[400,400,400,400,400],[3,3,3,3,3],[25,50,75,100,125],[1.5,1.5,1.5,1.5,1.5],[0.25,0.25,0.25,0.25,0.25],[0.04,0.04,0.04,0.04,0.04],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","400","3","25/50/75/100/125","1.5","0.25","0.04","3","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.25]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"SonaW"},{"name":"기민함의 노래","description":"소나가 기민함의 노래를 연주하여 주변 아군의 이동 속도를 증가시키고 잠시동안 오오라를 생성합니다. 오오라에 닿은 아군 챔피언은 다음 공격 시 추가 이동 속도를 얻습니다.","sanitizedDescription":"소나가 기민함의 노래를 연주하여 주변 아군의 이동 속도를 증가시키고 잠시동안 오오라를 생성합니다. 오오라에 닿은 아군 챔피언은 다음 공격 시 추가 이동 속도를 얻습니다.","tooltip":"<span class=\"colorFF9900\">사용 시:</span> 소나의 이동 속도가 {{ e9 }}초 동안 <span class=\"color99FF99\">{{ f1*100 }}%</span> [{{ e1 }}% + 주문력 100당 {{ f2*100 }}%] 상승합니다. 또한 <span class=\"colorEEEEEE\">파워 코드</span>효과가 <span class=\"colorDD5599\">템포</span>로 바뀝니다.<br /><br /><span class=\"colorFF9900\">멜로디:</span> {{ e3 }}초 동안 주위에 오오라가 생깁니다. 오오라에 닿은 아군은 {{ e5 }}초 동안 이동 속도가 <span class=\"color99FF99\">{{ f3*100 }}%</span> 상승합니다.<br /><br /><span class=\"color919191\"><i>소나 본인의 이동 속도 상승은 최소 {{ e5 }}초 동안 유지됩니다.</i></span>","sanitizedTooltip":"사용 시: 소나의 이동 속도가 {{ e9 }}초 동안 {{ f1*100 }}% [{{ e1 }}% + 주문력 100당 {{ f2*100 }}%] 상승합니다. 또한 파워 코드효과가 템포로 바뀝니다. 멜로디: {{ e3 }}초 동안 주위에 오오라가 생깁니다. 오오라에 닿은 아군은 {{ e5 }}초 동안 이동 속도가 {{ f3*100 }}% 상승합니다. 소나 본인의 이동 속도 상승은 최소 {{ e5 }}초 동안 유지됩니다.","leveltip":{"label":["이동 속도"],"effect":["{{ e1 }}% -> {{ e1NL }}%"]},"image":{"full":"SonaE.png","sprite":"spell10.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,65,65,65,65],"costBurn":"65","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[10,11,12,13,14],[400,400,400,400,400],[3,3,3,3,3],[0.1,0.11,0.12,0.13,0.14],[3,3,3,3,3],[0.4,0.4,0.4,0.4,0.4],[0.04,0.04,0.04,0.04,0.04],[2,2,2,2,2],[7,7,7,7,7],[0,0,0,0,0]],"effectBurn":["","10/11/12/13/14","400","3","0.1/0.11/0.12/0.13/0.14","3","0.4","0.04","2","7","0"],"range":[430,430,430,430,430],"rangeBurn":"430","key":"SonaE"},{"name":"크레센도","description":"소나가 궁극의 선율을 연주하여 적 챔피언들을 기절시키며 춤을 추게 만들고, 마법 피해를 입힙니다. 크레센도의 레벨이 오를 때마다 소나 스킬의 기본 재사용 대기시간이 줄어듭니다.","sanitizedDescription":"소나가 궁극의 선율을 연주하여 적 챔피언들을 기절시키며 춤을 추게 만들고, 마법 피해를 입힙니다. 크레센도의 레벨이 오를 때마다 소나 스킬의 기본 재사용 대기시간이 줄어듭니다.","tooltip":"<span class=\"colorFF9900\">사용 시: </span>저항할 수 없는 선율을 연주하여 적 챔피언을 기절시키며 {{ e2 }}초 동안 춤추게 만들고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">기본 지속 효과: </span>스킬의 기본 재사용 대기 시간이 {{ e3 }}% 줄어듭니다.","sanitizedTooltip":"사용 시: 저항할 수 없는 선율을 연주하여 적 챔피언을 기절시키며 {{ e2 }}초 동안 춤추게 만들고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 기본 지속 효과: 스킬의 기본 재사용 대기 시간이 {{ e3 }}% 줄어듭니다.","leveltip":{"label":["피해량","재사용 대기시간","용맹의 찬가 재사용 대기시간","인내의 아리아 재사용 대기시간","기민함의 노래 재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ f1 }} -> {{ f2 }}","{{ f3 }} -> {{ f4 }}","{{ f5 }} -> {{ f6 }}"]},"image":{"full":"SonaR.png","sprite":"spell10.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,120,100],"cooldownBurn":"140/120/100","effect":[null,[150,250,350],[1.5,1.5,1.5],[10,25,40],[-0.1,-0.25,-0.4],[-0.1,-0.25,-0.4],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","1.5","10/25/40","-0.1/-0.25/-0.4","-0.1/-0.25/-0.4","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[900,900,900],"rangeBurn":"900","key":"SonaR"}],"passive":{"name":"파워 코드","description":"소나가 스킬을 3번 시전하고 나면 다음 공격에서 마지막으로 연주한 음악에 따라 추가 효과에 더불어 추가 마법 피해를 줍니다.","sanitizedDescription":"소나가 스킬을 3번 시전하고 나면 다음 공격에서 마지막으로 연주한 음악에 따라 추가 효과에 더불어 추가 마법 피해를 줍니다.","image":{"full":"Sona_Passive_Charged.png","sprite":"passive3.png","group":"passive","x":96,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Sona","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Sona","title":"SonaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3100,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3050,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Sona","title":"SonaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3020,"count":1}]},{"type":"ability_scaling","recMath":false,"items":[{"id":3174,"count":1},{"id":3285,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3110,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Sona","title":"SonaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3020,"count":1}]},{"type":"ability_scaling","recMath":false,"items":[{"id":3174,"count":1},{"id":3285,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3110,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Sona","title":"SonaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3092,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3050,"count":1},{"id":3190,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Sona","title":"SonaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3020,"count":1}]},{"type":"ability_scaling","recMath":false,"items":[{"id":3174,"count":1},{"id":3285,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3110,"count":1},{"id":3060,"count":1}]}]},{"champion":"Sona","title":"SonaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3114,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3020,"count":1},{"id":3107,"count":1}]},{"type":"ability_scaling","recMath":false,"items":[{"id":3174,"count":1},{"id":3100,"count":1},{"id":3504,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3050,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Sona","title":"SonaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3020,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3116,"count":1},{"id":3001,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Tristana":{"id":18,"key":"Tristana","name":"트리스타나","title":"요들 사수","image":{"full":"Tristana.png","sprite":"champion3.png","group":"champion","x":96,"y":96,"w":48,"h":48},"skins":[{"id":18000,"name":"default","num":0},{"id":18001,"name":"라이엇걸 트리스타나","num":1},{"id":18002,"name":"성실한 엘프 트리스타나","num":2},{"id":18003,"name":"소방수 트리스타나","num":3},{"id":18004,"name":"게릴라 트리스타나","num":4},{"id":18005,"name":"해적 트리스타나","num":5},{"id":18006,"name":"로켓걸 트리스타나","num":6},{"id":18010,"name":"용 조련사 트리스타나","num":10},{"id":18011,"name":"마녀 트리스타나","num":11},{"id":18012,"name":"오메가 분대 트리스타나","num":12}],"lore":"다른 많은 요들이 발견, 발명, 또는 그저 장난에 기력을 쏟지만, 트리스타나는 언제나 위대한 전사가 되기 위해 모험을 떠나는 꿈을 꿨다. 트리스타나는 룬테라, 룬테라의 파벌, 그리고 전쟁 이야기를 즐겨 들었고, 요들도 얼마든지 전설이 될 수 있다고 생각했다. 트리스타나는 이제 세계에 첫 발을 내딛으며, 든든한 대포 '부머'를 들고 변함없는 용기와 낙관적 성격으로 전장에 뛰어 든다.","blurb":"다른 많은 요들이 발견, 발명, 또는 그저 장난에 기력을 쏟지만, 트리스타나는 언제나 위대한 전사가 되기 위해 모험을 떠나는 꿈을 꿨다. 트리스타나는 룬테라, 룬테라의 파벌, 그리고 전쟁 이야기를 즐겨 들었고, 요들도 얼마든지 전설이 될 수 있다고 생각했다. 트리스타나는 이제 세계에 첫 발을 내딛으며, 든든한 대포 '부머'를 들고 변함없는 용기와 낙관적 성격으로 전장에 뛰어 든다.","allytips":["- 트리스타나는 큰 대포를 사용해 먼 거리에서 적을 공격할 수 있습니다. 사거리를 최대로 활용하여 적이 다가오지 못하게 하십시오.","- 적 하나를 노려 폭발 화약의 중첩을 쌓은 다음 로켓 점프를 연계하면 엄청난 화력으로 적을 끝장낼 수 있습니다.","- 속사 스킬을 이용해 적 챔피언에게 폭발 화약의 중첩을 빠르게 누적시키세요."],"enemytips":["- 트리스타나가 전투 도중 속사 스킬을 사용할 경우, 트리스타나를 바로 기절시키고 스킬 효과가 없어질 때까지 물러나는 전술을 사용해 보십시오.","- 아군 미니언에서 물러나 있으면 폭발 화약의 피해를 피할 수 있습니다."],"tags":["Marksman","Assassin"],"partype":"마나","info":{"attack":9,"defense":3,"magic":5,"difficulty":4},"stats":{"armor":31,"armorperlevel":3,"attackdamage":65,"attackdamageperlevel":2.41,"attackrange":550,"attackspeedoffset":-0.0473,"attackspeedperlevel":1.5,"crit":0,"critperlevel":0,"hp":542.76,"hpperlevel":82,"hpregen":6.192,"hpregenperlevel":0.65,"movespeed":325,"mp":246.76,"mpperlevel":32,"mpregen":7.206,"mpregenperlevel":0.45,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"속사","description":"트리스타나가 짧은 시간 동안 공격 속도를 높이며 빠르게 탄환을 발사합니다.","sanitizedDescription":"트리스타나가 짧은 시간 동안 공격 속도를 높이며 빠르게 탄환을 발사합니다.","tooltip":"<span class=\"colorFF9900\">사용 시: </span>{{ e2 }}초 동안 트리스타나의 공격 속도가 {{ e1 }}% 상승합니다.","sanitizedTooltip":"사용 시: {{ e2 }}초 동안 트리스타나의 공격 속도가 {{ e1 }}% 상승합니다.","leveltip":{"label":["공격 속도","재사용 대기시간"],"effect":[" {{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}</postScriptRight>"]},"image":{"full":"TristanaQ.png","sprite":"spell11.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[20,19,18,17,16],"cooldownBurn":"20/19/18/17/16","effect":[null,[30,50,70,90,110],[7,7,7,7,7],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","7","0","0","0","0","0","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"TristanaQ"},{"name":"로켓 점프","description":"트리스타나가 땅에 대포를 쏴 추진력을 얻어 먼 곳으로 이동합니다. 착륙한 지점 근처의 적 유닛에게 피해를 주며 잠깐 동안 이동 속도를 느리게 합니다.","sanitizedDescription":"트리스타나가 땅에 대포를 쏴 추진력을 얻어 먼 곳으로 이동합니다. 착륙한 지점 근처의 적 유닛에게 피해를 주며 잠깐 동안 이동 속도를 느리게 합니다.","tooltip":"트리스타나가 자기 자신을 대상 지역으로 발사해 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 주변 적들의 속도를 {{ e3 }}% 늦춥니다.<br /><br />적 챔피언을 처치하거나 어시스트를 올릴 경우, 혹은 적 챔피언에게 쌓인 최대 중첩 폭발 화약이 터질 경우 로켓 점프의 재사용 대기시간이 초기화됩니다.","sanitizedTooltip":"트리스타나가 자기 자신을 대상 지역으로 발사해 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 주변 적들의 속도를 {{ e3 }}% 늦춥니다. 적 챔피언을 처치하거나 어시스트를 올릴 경우, 혹은 적 챔피언에게 쌓인 최대 중첩 폭발 화약이 터질 경우 로켓 점프의 재사용 대기시간이 초기화됩니다.","leveltip":{"label":["피해량","둔화 지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TristanaW.png","sprite":"spell11.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[22,20,18,16,14],"cooldownBurn":"22/20/18/16/14","effect":[null,[60,110,160,210,260],[1,1.5,2,2.5,3],[60,60,60,60,60],[350,350,350,350,350],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/110/160/210/260","1/1.5/2/2.5/3","60","350","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"TristanaW"},{"name":"폭발 화약","description":"트리스타나가 적을 처치할 때마다 대포알이 조각 조각 터지면서 주변 적에게 피해를 입힙니다. 스킬을 활성화하면 대상 적에게 폭탄을 부착하여, 잠시 후 터지면서 주위 유닛들에게도 피해를 입힙니다.","sanitizedDescription":"트리스타나가 적을 처치할 때마다 대포알이 조각 조각 터지면서 주변 적에게 피해를 입힙니다. 스킬을 활성화하면 대상 적에게 폭탄을 부착하여, 잠시 후 터지면서 주위 유닛들에게도 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>트리스타나가 기본 공격으로 처치한 적이 폭발하면서 주변 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>적이나 포탑에 폭탄을 설치하면 4초 후 폭발하면서 {{ e4 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 트리스타나의 공격과 스킬로 폭탄의 피해량이 +{{ e6 }}%씩 충전됩니다.<br /><br />4번 충전되면 폭탄이 즉시 폭발하며, 포탑에 사용할 경우 폭발 반경이 두 배로 늘어납니다.","sanitizedTooltip":"기본 지속 효과: 트리스타나가 기본 공격으로 처치한 적이 폭발하면서 주변 적에게 {{ e1 }} (+{{ a2 }})의 마법 피해를 입힙니다. 사용 시: 적이나 포탑에 폭탄을 설치하면 4초 후 폭발하면서 {{ e4 }} (+{{ f1 }}) (+{{ a1 }})의 물리 피해를 입힙니다. 트리스타나의 공격과 스킬로 폭탄의 피해량이 +{{ e6 }}%씩 충전됩니다. 4번 충전되면 폭탄이 즉시 폭발하며, 포탑에 사용할 경우 폭발 반경이 두 배로 늘어납니다.","leveltip":{"label":["기본 지속 효과 폭발 피해량","기본 화약 피해량","마나 소모량","추가 공격력"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}","{{ e5 }}% -> {{ e5NL }}%"]},"image":{"full":"TristanaE.png","sprite":"spell11.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[16,15.5,15,14.5,14],"cooldownBurn":"16/15.5/15/14.5/14","effect":[null,[55,80,105,130,155],[4,4,4,4,4],[300,300,300,300,300],[60,70,80,90,100],[50,60,70,80,90],[30,30,30,30,30],[500,500,500,500,500],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/80/105/130/155","4","300","60/70/80/90/100","50/60/70/80/90","30","500","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.25]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"TristanaE"},{"name":"대구경 탄환","description":"트리스타나가 무기에 거대한 대포알을 장착하여 적 유닛에게 발사합니다. 이 스킬은 마법 피해를 입히고 적을 뒤로 밀어냅니다. 대상에게 폭발 화약이 붙어 있을 경우 폭발 범위가 두 배로 늘어납니다.","sanitizedDescription":"트리스타나가 무기에 거대한 대포알을 장착하여 적 유닛에게 발사합니다. 이 스킬은 마법 피해를 입히고 적을 뒤로 밀어냅니다. 대상에게 폭발 화약이 붙어 있을 경우 폭발 범위가 두 배로 늘어납니다.","tooltip":"트리스타나가 적에게 거대한 대포를 발사하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 적을 {{ e2 }}만큼 뒤로 밀어냅니다.","sanitizedTooltip":"트리스타나가 적에게 거대한 대포를 발사하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 적을 {{ e2 }}만큼 뒤로 밀어냅니다.","leveltip":{"label":["피해량","밀려나는 거리","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TristanaR.png","sprite":"spell11.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,85,70],"cooldownBurn":"100/85/70","effect":[null,[300,400,500],[600,800,1000],[200,200,200],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","300/400/500","600/800/1000","200","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[550,550,550],"rangeBurn":"550","key":"TristanaR"}],"passive":{"name":"정조준","description":"레벨이 올라갈수록 트리스타나의 공격 사거리도 올라갑니다.","sanitizedDescription":"레벨이 올라갈수록 트리스타나의 공격 사거리도 올라갑니다.","image":{"full":"Tristana_Passive.png","sprite":"passive3.png","group":"passive","x":96,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Tristana","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3026,"count":1}]}]},{"champion":"Tristana","title":"TristanaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3087,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3046,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tristana","title":"TristanaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3153,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3036,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tristana","title":"TristanaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3087,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3036,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Tristana","title":"TristanaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3087,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3046,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tristana","title":"TristanaPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3153,"count":1}]}]},{"champion":"Tristana","title":"TristanaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3153,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3036,"count":1},{"id":3026,"count":1}]}]},{"champion":"Tristana","title":"TristanaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3153,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3036,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tristana","title":"TristanaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3072,"count":1},{"id":3087,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3156,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Varus":{"id":110,"key":"Varus","name":"바루스","title":"응징의 화살","image":{"full":"Varus.png","sprite":"champion3.png","group":"champion","x":432,"y":96,"w":48,"h":48},"skins":[{"id":110000,"name":"default","num":0},{"id":110001,"name":"역병 수정 바루스","num":1},{"id":110002,"name":"빛의 바루스","num":2},{"id":110003,"name":"설원 특공대 바루스","num":3},{"id":110004,"name":"사랑의 추적자 바루스","num":4},{"id":110005,"name":"날쌘 화살 바루스","num":5},{"id":110006,"name":"암흑의 별 바루스","num":6}],"lore":"바루스는 고대 종족 다르킨 중 한 명으로, 적이 거의 미쳐 버릴 정도로 고통을 준 뒤에야 화살을 날려 숨통을 끊는 것을 즐기는 치명적인 암살자이다. 바루스는 다르킨 전쟁이 끝날 때 감옥에 갇혔지만 몇 세기 후 아이오니아 사냥꾼 두 명이 무심코 바루스를 풀어 주게 된다. 이 때 사냥꾼들은 바루스의 정수가 담긴 활을 들어 저주를 받게 되고 바루스는 이들의 몸을 빌어 다시 살아나 도망쳤다. 바루스는 이제 잔인한 복수를 위해 자신을 가둔 자를 찾아 다니지만, 내면에 있는 필멸자의 영혼이 바루스에게 끈질기게 저항한다.","blurb":"바루스는 고대 종족 다르킨 중 한 명으로, 적이 거의 미쳐 버릴 정도로 고통을 준 뒤에야 화살을 날려 숨통을 끊는 것을 즐기는 치명적인 암살자이다. 바루스는 다르킨 전쟁이 끝날 때 감옥에 갇혔지만 몇 세기 후 아이오니아 사냥꾼 두 명이 무심코 바루스를 풀어 주게 된다. 이 때 사냥꾼들은 바루스의 정수가 담긴 활을 들어 저주를 받게 되고 바루스는 이들의 몸을 빌어 다시 살아나 도망쳤다. 바루스는 이제 잔인한 복수를 위해 자신을 가둔 자를 찾아 다니지만...","allytips":["- 초반에 역병 화살에 투자하면 적 챔피언을 견제하고 미니언에게 최후의 일격을 가하기 쉽습니다.","- 단거리 교전 시 꿰뚫는 화살을 사용하려면, 시간을 들여 위력을 높이기보다 빠르게 발사하는 편이 좋습니다.","- 꿰뚫는 화살은 사거리가 매우 길기 때문에, 교전 시작 전에 적 챔피언들을 저격하거나 달아나는 적을 처리하는 데 활용하세요."],"enemytips":["- 역병에 감염된 경우 바루스의 스킬 공격으로 추가 피해를 입을 수 있습니다.","- 적을 처치하거나 어시스트를 올리면 잠시 바루스의 공격 속도가 상승해 훨씬 위협적이 됩니다.","- 바루스의 궁극기 부패의 사슬에 닿으면 그 자리에 속박됩니다. 하지만 멀리 달아나면 촉수는 죽습니다."],"tags":["Marksman","Mage"],"partype":"마나","info":{"attack":7,"defense":3,"magic":4,"difficulty":2},"stats":{"armor":32,"armorperlevel":3.4,"attackdamage":63,"attackdamageperlevel":2.41,"attackrange":575,"attackspeedoffset":-0.05,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":537.76,"hpperlevel":82,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":330,"mp":360.48,"mpperlevel":33,"mpregen":7.34,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"꿰뚫는 화살","description":"바루스가 조준한 다음 강화된 화살을 발사하면, 조준한 시간에 비례하여 사거리와 피해량이 늘어납니다.","sanitizedDescription":"바루스가 조준한 다음 강화된 화살을 발사하면, 조준한 시간에 비례하여 사거리와 피해량이 늘어납니다.","tooltip":"<span class=\"colorFF9900\">최초 시전 시:</span> 바루스가 다음 화살을 조준하여 점차 사거리와 피해량이 증가합니다. 조준하는 동안 바루스의 이동 속도가 {{ e7 }}% 감소합니다. {{ e5 }}초가 경과하면 꿰뚫는 화살이 발사되지 못하고 소모된 마나의 {{ e4 }}%가 회복됩니다.<br /><br /><span class=\"colorFF9900\">두 번째 시전 시:</span> 바루스가 화살을 발사하여 {{ e1 }}<span class=\"colorFF8C00\"> (+{{ a1 }})</span>에서 {{ e2 }}<span class=\"colorFF8C00\"> (+{{ a2 }})</span>의 물리 피해를 입힙니다. 관통 당한 적 하나당 {{ e3 }}%씩 피해량이 감소합니다. (최소 {{ e9 }}%)<br /><br />꿰뚫는 화살이 최소 한 명의 적 챔피언에게서 <span class=\"colorB829FF\">역병</span> 중첩을 폭발시킬 경우 재사용 대기시간이 {{ f1 }}초 감소합니다.","sanitizedTooltip":"최초 시전 시: 바루스가 다음 화살을 조준하여 점차 사거리와 피해량이 증가합니다. 조준하는 동안 바루스의 이동 속도가 {{ e7 }}% 감소합니다. {{ e5 }}초가 경과하면 꿰뚫는 화살이 발사되지 못하고 소모된 마나의 {{ e4 }}%가 회복됩니다. 두 번째 시전 시: 바루스가 화살을 발사하여 {{ e1 }} (+{{ a1 }})에서 {{ e2 }} (+{{ a2 }})의 물리 피해를 입힙니다. 관통 당한 적 하나당 {{ e3 }}%씩 피해량이 감소합니다. (최소 {{ e9 }}%) 꿰뚫는 화살이 최소 한 명의 적 챔피언에게서 역병 중첩을 폭발시킬 경우 재사용 대기시간이 {{ f1 }}초 감소합니다.","leveltip":{"label":["최대 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VarusQ.png","sprite":"spell12.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[20,18,16,14,12],"cooldownBurn":"20/18/16/14/12","effect":[null,[10,47,84,120,157],[15,70,125,180,235],[15,15,15,15,15],[50,50,50,50,50],[4,4,4,4,4],[4,4,4,4,4],[20,20,20,20,20],[0,0,0,0,0],[33,33,33,33,33],[0,0,0,0,0]],"effectBurn":["","10/47/84/120/157","15/70/125/180/235","15","50","4","4","20","0","33","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]},{"key":"a2","link":"attackdamage","coeff":[1.5]},{"key":"f1","link":"attackdamage","coeff":[1]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"VarusQ"},{"name":"역병 화살","description":"바루스의 기본 공격이 추가 마법 피해를 입히고 역병을 붙입니다. 바루스가 이 대상을 다른 스킬로 공격하면 역병이 폭발하며 대상의 최대 체력에 비례한 마법 피해를 입힙니다.","sanitizedDescription":"바루스의 기본 공격이 추가 마법 피해를 입히고 역병을 붙입니다. 바루스가 이 대상을 다른 스킬로 공격하면 역병이 폭발하며 대상의 최대 체력에 비례한 마법 피해를 입힙니다.","tooltip":"바루스의 기본 공격이 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입히고 {{ e3 }}초 동안 <span class=\"colorB829FF\">역병</span>을 붙입니다 ({{ e4 }}번 중첩 가능).<br /><br />바루스가 다른 스킬을 사용해 <span class=\"colorB829FF\">역병</span>을 폭발시키면 중첩 횟수당 대상 최대 체력의 {{ e2 }}% <span class=\"color99FF99\">(+{{ a2 }}%)</span>에 해당하는 마법 피해를 입힙니다. 몬스터 대상 최대 피해량: 중첩당 {{ e5 }}","sanitizedTooltip":"바루스의 기본 공격이 {{ e1 }} (+{{ a1 }})의 추가 마법 피해를 입히고 {{ e3 }}초 동안 역병을 붙입니다 ({{ e4 }}번 중첩 가능). 바루스가 다른 스킬을 사용해 역병을 폭발시키면 중첩 횟수당 대상 최대 체력의 {{ e2 }}% (+{{ a2 }}%)에 해당하는 마법 피해를 입힙니다. 몬스터 대상 최대 피해량: 중첩당 {{ e5 }}","leveltip":{"label":["최초 피해량","최대 체력 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"VarusW.png","sprite":"spell12.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"기본 지속 효과","maxrank":5,"cost":[0,0,0,0,0],"costType":"기본 지속 효과","costBurn":"0","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[10,14,18,22,26],[2,2.75,3.5,4.25,5],[6,6,6,6,6],[3,3,3,3,3],[120,120,120,120,120],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/14/18/22/26","2/2.75/3.5/4.25/5","6","3","120","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.25]},{"key":"a2","link":"spelldamage","coeff":[0.02]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"VarusW"},{"name":"퍼붓는 화살","description":"바루스가 화살을 비처럼 쏟아부어 물리 피해를 주고 지면을 오염시킵니다. 오염된 지면은 적의 이동 속도를 늦추며, 자신에 대한 체력 회복 및 재생 효과를 감소시킵니다.","sanitizedDescription":"바루스가 화살을 비처럼 쏟아부어 물리 피해를 주고 지면을 오염시킵니다. 오염된 지면은 적의 이동 속도를 늦추며, 자신에 대한 체력 회복 및 재생 효과를 감소시킵니다.","tooltip":"바루스가 화살을 비처럼 쏟아부어 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e3 }}초 동안 지면을 오염시킵니다.<br /><br />오염된 지면은 적의 이동 속도를 {{ e2 }}% 늦추고 회복 효과를 {{ e4 }}% 감소시킵니다.","sanitizedTooltip":"바루스가 화살을 비처럼 쏟아부어 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e3 }}초 동안 지면을 오염시킵니다. 오염된 지면은 적의 이동 속도를 {{ e2 }}% 늦추고 회복 효과를 {{ e4 }}% 감소시킵니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VarusE.png","sprite":"spell12.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[70,105,140,175,210],[25,30,35,40,45],[4,4,4,4,4],[40,40,40,40,40],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/105/140/175/210","25/30/35/40/45","4","40","300","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.6]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"VarusE"},{"name":"부패의 사슬","description":"바루스가 부패의 촉수를 발사하여 처음 맞은 적 챔피언의 이동을 차단합니다. 촉수는 주변의 감염되지 않은 챔피언들에게 계속 뻗어나가 닿은 적들을 모두 이동 불가 상태로 만듭니다. ","sanitizedDescription":"바루스가 부패의 촉수를 발사하여 처음 맞은 적 챔피언의 이동을 차단합니다. 촉수는 주변의 감염되지 않은 챔피언들에게 계속 뻗어나가 닿은 적들을 모두 이동 불가 상태로 만듭니다.","tooltip":"바루스가 부패의 촉수를 발사해 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고, 처음 맞은 적의 이동을 {{ e2 }}초간 막습니다.<br /><br />이후 근처의 감염되지 않은 적 챔피언에게 촉수가 뻗어나가, 닿은 적에게 동일한 양의 피해를 입히고 이동 불가 상태로 만듭니다. 이동 불가 상태가 된 적은 일정 시간에 걸쳐 <span class=\"colorB829FF\">역병</span> 중첩이 {{ e4 }}회 쌓입니다.","sanitizedTooltip":"바루스가 부패의 촉수를 발사해 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고, 처음 맞은 적의 이동을 {{ e2 }}초간 막습니다. 이후 근처의 감염되지 않은 적 챔피언에게 촉수가 뻗어나가, 닿은 적에게 동일한 양의 피해를 입히고 이동 불가 상태로 만듭니다. 이동 불가 상태가 된 적은 일정 시간에 걸쳐 역병 중첩이 {{ e4 }}회 쌓입니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VarusR.png","sprite":"spell12.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,90,70],"cooldownBurn":"110/90/70","effect":[null,[100,175,250],[2,2,2],[650,650,650],[3,3,3],[0.5,0.5,0.5],[600,600,600],[1.75,1.75,1.75],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/175/250","2","650","3","0.5","600","1.75","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[1200,1200,1200],"rangeBurn":"1200","key":"VarusR"}],"passive":{"name":"죽지 않는 복수심","description":"적을 처치하거나 어시스트를 올리면 잠시 바루스의 공격 속도가 상승합니다. 챔피언을 처치한 경우 공격 속도가 더 큰 폭으로 상승합니다.","sanitizedDescription":"적을 처치하거나 어시스트를 올리면 잠시 바루스의 공격 속도가 상승합니다. 챔피언을 처치한 경우 공격 속도가 더 큰 폭으로 상승합니다.","image":{"full":"VarusPassive.png","sprite":"passive3.png","group":"passive","x":432,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Varus","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Varus","title":"VarusARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1001,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3008,"count":1},{"id":3072,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3036,"count":1},{"id":3508,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Varus","title":"VarusCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1},{"id":3153,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Varus","title":"VarusFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1},{"id":3153,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Varus","title":"VarusKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":2033,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3004,"count":1},{"id":3158,"count":1},{"id":3072,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3036,"count":1},{"id":3508,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Varus","title":"VarusPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3508,"count":1},{"id":3094,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3142,"count":1},{"id":3147,"count":1},{"id":3153,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3814,"count":1},{"id":3124,"count":1},{"id":3072,"count":1}]}]},{"champion":"Varus","title":"VarusSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1},{"id":3153,"count":1}]}]},{"champion":"Varus","title":"VarusSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1},{"id":3153,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Varus","title":"VarusTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3004,"count":1},{"id":3072,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3071,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Fiora":{"id":114,"key":"Fiora","name":"피오라","title":"결투의 대가","image":{"full":"Fiora.png","sprite":"champion0.png","group":"champion","x":384,"y":96,"w":48,"h":48},"skins":[{"id":114000,"name":"default","num":0},{"id":114001,"name":"근위대 피오라","num":1},{"id":114002,"name":"밤까마귀 피오라","num":2},{"id":114003,"name":"피오라 선생님","num":3},{"id":114004,"name":"프로젝트: 피오라","num":4},{"id":114005,"name":"수영장 파티 피오라","num":5},{"id":114022,"name":"불멸의 영웅 피오라","num":22}],"lore":"피오라는 푸른 강철 레이피어를 다루는 솜씨 만큼이나 가차없는 태도와 재빠른 머리 회전으로 유명한 발로란 최고의 결투가다. 데마시아의 로렌트 가문 출신인 피오라는 아버지가 일으킨 스캔들로 집안의 명성이 땅에 떨어진 후 가문의 지배권을 차지했다. 로렌트 가문의 명성은 더럽혀진 지 오래지만, 피오라는 가문의 명예를 되찾고 데마시아의 위대한 가문으로 일궈온 자리를 되찾기 위해 온 힘을 다하고 있다.","blurb":"피오라는 푸른 강철 레이피어를 다루는 솜씨 만큼이나 가차없는 태도와 재빠른 머리 회전으로 유명한 발로란 최고의 결투가다. 데마시아의 로렌트 가문 출신인 피오라는 아버지가 일으킨 스캔들로 집안의 명성이 땅에 떨어진 후 가문의 지배권을 차지했다. 로렌트 가문의 명성은 더럽혀진 지 오래지만, 피오라는 가문의 명예를 되찾고 데마시아의 위대한 가문으로 일궈온 자리를 되찾기 위해 온 힘을 다하고 있다.","allytips":["- 치명적인 검무 기본 지속 효과 덕분에 피오라는 딜 교환이 빠릅니다. 급소를 가격하여 이동 속도를 높여서 안전하게 빠져나오거나, 다음 급소 공격을 노리세요.","- 대결투 스킬을 사용하면 튼튼한 적 탱커도 쓰러뜨릴 수 있으며, 처치에 성공하면 체력을 회복할 수 있습니다. 따라서 적 최전방 챔피언을 노리는 것도 좋습니다."],"enemytips":["- 치명적인 검무는 피오라가 공격하려는 곳을 드러내주므로, 이 때 반격할 준비를 갖추세요.","- 피오라에게 이동 불가 효과를 걸 때는 주의하세요. 응수 스킬을 사용할 수 있다면 이를 막아내며 역공을 가할 겁니다."],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":10,"defense":4,"magic":2,"difficulty":3},"stats":{"armor":33,"armorperlevel":3.5,"attackdamage":68,"attackdamageperlevel":3.3,"attackrange":150,"attackspeedoffset":0,"attackspeedperlevel":3.2,"crit":0,"critperlevel":0,"hp":550,"hpperlevel":85,"hpregen":8.25,"hpregenperlevel":0.55,"movespeed":345,"mp":300,"mpperlevel":40,"mpregen":8,"mpregenperlevel":0.7,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"찌르기","description":"피오라가 한 방향으로 돌진하며 근처 적 하나를 찔러 물리 피해를 입히고 적중 시 효과를 적용합니다.","sanitizedDescription":"피오라가 한 방향으로 돌진하며 근처 적 하나를 찔러 물리 피해를 입히고 적중 시 효과를 적용합니다.","tooltip":"피오라가 한 방향으로 돌진하며, 근처 적 하나를 찔러 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 적중 시 효과를 적용합니다. 이 공격은 <span class=\"colorD4BD22\">급소</span>와 처치 가능한 적을 우선 가격합니다.<br /><br />이 스킬로 적을 맞히면 재사용 대기시간이 {{ e4 }}%만큼 감소합니다. ","sanitizedTooltip":"피오라가 한 방향으로 돌진하며, 근처 적 하나를 찔러 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 적중 시 효과를 적용합니다. 이 공격은 급소와 처치 가능한 적을 우선 가격합니다. 이 스킬로 적을 맞히면 재사용 대기시간이 {{ e4 }}%만큼 감소합니다.","leveltip":{"label":["피해량","추가 공격력 %","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"FioraQ.png","sprite":"spell3.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,25,30,35,40],"costBurn":"20/25/30/35/40","cooldown":[16,14,12,10,8],"cooldownBurn":"16/14/12/10/8","effect":[null,[70,80,90,100,110],[0.95,1,1.05,1.1,1.15],[50,50,50,50,50],[60,60,60,60,60],[2.5,2.5,2.5,2.5,2.5],[2,2,2,2,2],[90,120,150,180,210],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/80/90/100/110","0.95/1/1.05/1.1/1.15","50","60","2.5","2","90/120/150/180/210","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.6]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"FioraQ"},{"name":"응수","description":"피오라가 잠시 동안 받는 모든 공격과 이동 불가 효과를 막아낸 다음 대상이 있는 방향으로 검을 찌릅니다. 이 공격은 처음 맞은 적 챔피언을 둔화시키고, 피오라가 이동 불가 효과를 막아낼 경우 공격한 상대를 기절시킵니다.","sanitizedDescription":"피오라가 잠시 동안 받는 모든 공격과 이동 불가 효과를 막아낸 다음 대상이 있는 방향으로 검을 찌릅니다. 이 공격은 처음 맞은 적 챔피언을 둔화시키고, 피오라가 이동 불가 효과를 막아낼 경우 공격한 상대를 기절시킵니다.","tooltip":"피오라가 다음 {{ e2 }}초 동안 받는 모든 공격과 해로운 효과, 이동 불가 효과를 막아낸 다음 대상이 있는 방향으로 검을 찌릅니다.<br /><br />이 공격은 처음 맞은 적 챔피언에게 {{ e1 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 마법 피해를 입히고, {{ e3 }}초 동안 이동과 공격 속도를 {{ e4 }}%만큼 둔화시킵니다.<br /><br />피오라가 이동 불가 효과를 막아낼 경우, 응수로 둔화시키는 대신 기절시킵니다.","sanitizedTooltip":"피오라가 다음 {{ e2 }}초 동안 받는 모든 공격과 해로운 효과, 이동 불가 효과를 막아낸 다음 대상이 있는 방향으로 검을 찌릅니다. 이 공격은 처음 맞은 적 챔피언에게 {{ e1 }} (+{{ f1 }})의 마법 피해를 입히고, {{ e3 }}초 동안 이동과 공격 속도를 {{ e4 }}%만큼 둔화시킵니다. 피오라가 이동 불가 효과를 막아낼 경우, 응수로 둔화시키는 대신 기절시킵니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f2 }} -> {{ f3 }}"]},"image":{"full":"FioraW.png","sprite":"spell3.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[90,130,170,210,250],[0.75,0.75,0.75,0.75,0.75],[1.5,1.5,1.5,1.5,1.5],[50,50,50,50,50],[0.03,0.03,0.03,0.03,0.03],[0.15,0.15,0.15,0.15,0.25],[24,22,20,18,16],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","90/130/170/210/250","0.75","1.5","50","0.03","0.15/0.15/0.15/0.15/0.25","24/22/20/18/16","0","0","0"],"range":[750,750,750,750,750],"rangeBurn":"750","key":"FioraW"},{"name":"대가의 검술","description":"피오라는 다음 두 번의 공격에 대해 공격 속도가 상승합니다. 첫 번째 공격은 대상을 둔화시키고, 두 번째 공격은 치명타가 됩니다.","sanitizedDescription":"피오라는 다음 두 번의 공격에 대해 공격 속도가 상승합니다. 첫 번째 공격은 대상을 둔화시키고, 두 번째 공격은 치명타가 됩니다.","tooltip":"피오라는 다음 두 번의 공격에 대해 공격 속도가 {{ e4 }}% 상승합니다. 첫 번째 공격은 치명타가 될 수 없지만, 대신 {{ e2 }}초 동안 {{ e3 }}% 둔화를 적용합니다. 두 번째 공격은 100% 치명타가 되어 {{ f4 }}%의 피해 <span class=\"colorFF8C00\">({{ f3 }})</span>를 입힙니다.","sanitizedTooltip":"피오라는 다음 두 번의 공격에 대해 공격 속도가 {{ e4 }}% 상승합니다. 첫 번째 공격은 치명타가 될 수 없지만, 대신 {{ e2 }}초 동안 {{ e3 }}% 둔화를 적용합니다. 두 번째 공격은 100% 치명타가 되어 {{ f4 }}%의 피해 ({{ f3 }})를 입힙니다.","leveltip":{"label":["치명타 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ f4 }}% -> {{ f5 }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"FioraE.png","sprite":"spell3.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[13,11,9,7,5],"cooldownBurn":"13/11/9/7/5","effect":[null,[3,3,3,3,3],[1,1,1,1,1],[30,30,30,30,30],[50,50,50,50,50],[100,100,100,100,100],[140,155,170,185,200],[5,10,15,20,25],[40,50,60,70,80],[10,12.5,15,17.5,20],[20,20,20,20,20]],"effectBurn":["","3","1","30","50","100","140/155/170/185/200","5/10/15/20/25","40/50/60/70/80","10/12.5/15/17.5/20","20"],"range":[425,425,425,425,425],"rangeBurn":"425","key":"FioraE"},{"name":"대결투","description":"피오라가 적 챔피언의 급소 네 군데를 모두 드러내고 해당 적 근처에서 이동 속도가 증가합니다. 피오라가 급소 네 군데를 모두 가격하거나 한 군데라도 가격한 후 대상이 죽으면 다음 몇 초 동안 피오라와 주변 지역에 있는 아군이 치유됩니다.","sanitizedDescription":"피오라가 적 챔피언의 급소 네 군데를 모두 드러내고 해당 적 근처에서 이동 속도가 증가합니다. 피오라가 급소 네 군데를 모두 가격하거나 한 군데라도 가격한 후 대상이 죽으면 다음 몇 초 동안 피오라와 주변 지역에 있는 아군이 치유됩니다.","tooltip":"피오라가 대상 챔피언의 <span class=\"colorD4BD22\">급소</span> 네 군데를 다 드러내, 최대 체력의 <span class=\"colorFFFFFF\">{{ f8 }}%</span>에 해당하는 고정 피해를 입힐 수 있게 됩니다. 또한 대상 근처에서 치명적인 검무의 이동 속도 상승 효과<span class=\"colorFFFFFF\">({{ f6 }}%)</span>를 얻습니다.<br /><br />피오라가 {{ e1 }}초 내에 <span class=\"colorD4BD22\">급소</span> 네 군데를 모두 공격하거나 한 번이라도 급소를 공격한 뒤 대상이 사망할 경우, 피오라와 범위 내 아군은 급소 공격 횟수에 따라 {{ e9 }}~{{ e6 }}초 동안 {{ e7 }} <span class=\"colorFF8C00\">(+{{ f9 }})</span>만큼 체력을 회복합니다.","sanitizedTooltip":"피오라가 대상 챔피언의 급소 네 군데를 다 드러내, 최대 체력의 {{ f8 }}%에 해당하는 고정 피해를 입힐 수 있게 됩니다. 또한 대상 근처에서 치명적인 검무의 이동 속도 상승 효과({{ f6 }}%)를 얻습니다. 피오라가 {{ e1 }}초 내에 급소 네 군데를 모두 공격하거나 한 번이라도 급소를 공격한 뒤 대상이 사망할 경우, 피오라와 범위 내 아군은 급소 공격 횟수에 따라 {{ e9 }}~{{ e6 }}초 동안 {{ e7 }} (+{{ f9 }})만큼 체력을 회복합니다.","leveltip":{"label":["재사용 대기시간","검무 이동 속도","초당 치유량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e7 }} -> {{ e7NL }}"]},"image":{"full":"FioraR.png","sprite":"spell3.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,90,70],"cooldownBurn":"110/90/70","effect":[null,[8,8,8],[30,40,50],[0,0,0],[30,45,60],[500,500,500],[5,5,5],[80,110,140],[550,550,550],[2,2,2],[1,1,1]],"effectBurn":["","8","30/40/50","0","30/45/60","500","5","80/110/140","550","2","1"],"range":[500,500,500],"rangeBurn":"500","key":"FioraR"}],"passive":{"name":"치명적인 검무","description":"피오라가 근처 적 챔피언에게 공격을 회피해 보도록 도전합니다. 가격할 급소를 선언하며, 도전을 완료하면 작은 보너스 효과를 얻고, 새로운 급소를 선언합니다.","sanitizedDescription":"피오라가 근처 적 챔피언에게 공격을 회피해 보도록 도전합니다. 가격할 급소를 선언하며, 도전을 완료하면 작은 보너스 효과를 얻고, 새로운 급소를 선언합니다.","image":{"full":"Fiora_P.png","sprite":"passive0.png","group":"passive","x":384,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Fiora","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3072,"count":1}]}]},{"champion":"Fiora","title":"FioraARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3047,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Fiora","title":"FioraCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3072,"count":1},{"id":3156,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Fiora","title":"FioraFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Fiora","title":"FioraKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3047,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Fiora","title":"FioraSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3072,"count":1},{"id":3156,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3139,"count":1}]}]},{"champion":"Fiora","title":"FioraSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3072,"count":1},{"id":3156,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Fiora","title":"FioraTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Singed":{"id":27,"key":"Singed","name":"신지드","title":"미친 화학자","image":{"full":"Singed.png","sprite":"champion3.png","group":"champion","x":384,"y":0,"w":48,"h":48},"skins":[{"id":27000,"name":"default","num":0},{"id":27001,"name":"라이엇 전경 신지드","num":1},{"id":27002,"name":"마법공학 신지드","num":2},{"id":27003,"name":"서퍼 신지드","num":3},{"id":27004,"name":"미친 과학자 신지드","num":4},{"id":27005,"name":"강화형 신지드","num":5},{"id":27006,"name":"눈싸움 달인 신지드","num":6},{"id":27007,"name":"삼성 화이트 신지드","num":7},{"id":27008,"name":"암흑의 무법자 신지드","num":8},{"id":27009,"name":"벌 수호자 신지드","num":9}],"lore":"신지드는 자운에서 견줄 데 없이 뛰어난 지성을 가진 화학자로, 지식의 한계를 돌파하는 데에 자신의 삶을 바쳤지만, 그 대가는 엄청났다. 바로 정신이 나가 버린 것이다. 신지드는 광기를 얻는 방법이라도 알아낸 것일까? 신지드의 혼합물은 실패하는 법이 거의 없지만, 많은 이들이 보기에 신지드는 이미 인간성을 모두 잃고, 그저 나타나기만 하면 고통과 공포의 독극물 자취를 남기는 인물일 뿐이다.","blurb":"신지드는 자운에서 견줄 데 없이 뛰어난 지성을 가진 화학자로, 지식의 한계를 돌파하는 데에 자신의 삶을 바쳤지만, 그 대가는 엄청났다. 바로 정신이 나가 버린 것이다. 신지드는 광기를 얻는 방법이라도 알아낸 것일까? 신지드의 혼합물은 실패하는 법이 거의 없지만, 많은 이들이 보기에 신지드는 이미 인간성을 모두 잃고, 그저 나타나기만 하면 고통과 공포의 독극물 자취를 남기는 인물일 뿐이다.","allytips":["- 신지드는 맹독의 자취를 사용하여 효과적으로 미니언을 제거하거나 적에게 피해를 가할 수 있습니다. 이는 공격로 관리에 매우 유용합니다.","- 광기의 물약을 사용하여 적을 유인한 뒤 맹독의 자취를 사용하십시오.","- 적에게 던져넘기기를 사용하여 아군 포탑 쪽으로 던져버리면 큰 피해를 입힐 수 있습니다. "],"enemytips":["- 신지드의 동료가 있는 지역으로 내던져지지 않도록 거리를 유지하십시오.","- 신지드는 플레이어의 팀에 접근해야 위력을 발휘합니다. 신지드의 이런 약점을 이용해서 신지드가 아군을 공격할 때 그에게 군중 제어 효과를 걸고 신지드의 동료를 공격하십시오.","- 신지드는 제거하기가 어려울뿐더러 추격자에게 피해를 주기 위해 독의 길을 사용하기도 하므로 조심해야 합니다."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":4,"defense":8,"magic":7,"difficulty":5},"stats":{"armor":37,"armorperlevel":3.5,"attackdamage":62.32,"attackdamageperlevel":3.375,"attackrange":125,"attackspeedoffset":0.02,"attackspeedperlevel":1.81,"crit":0,"critperlevel":0,"hp":580,"hpperlevel":85,"hpregen":8.024,"hpregenperlevel":0.55,"movespeed":345,"mp":290.6,"mpperlevel":45,"mpregen":7.524,"mpregenperlevel":0.55,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"맹독의 자취","description":"신지드 뒤로 독구름을 남겨 구름에 들어가는 적에게 피해를 입힙니다.","sanitizedDescription":"신지드 뒤로 독구름을 남겨 구름에 들어가는 적에게 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">활성화/비활성화: </span>신지드가 맹독의 자취를 남겨 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ charabilitypower*4 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"활성화/비활성화: 신지드가 맹독의 자취를 남겨 초당 {{ e1 }} (+{{ charabilitypower*4 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"PoisonTrail.png","sprite":"spell10.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"초당 마나 {{ cost }}","maxrank":5,"cost":[13,13,13,13,13],"costBurn":"13","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[20,30,40,50,60],[1,1,1,1,1],[3.25,3.25,3.25,3.25,3.25],[2.1,2.1,2.1,2.1,2.1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/30/40/50/60","1","3.25","2.1","0","0","0","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"PoisonTrail"},{"name":"초강력 접착제","description":"초강력 접착제가 든 시험관을 바닥에 던져 그 위를 지나가는 적을 둔화시키고 이동 스킬을 사용할 수 없게 합니다.","sanitizedDescription":"초강력 접착제가 든 시험관을 바닥에 던져 그 위를 지나가는 적을 둔화시키고 이동 스킬을 사용할 수 없게 합니다.","tooltip":"신지드가 땅에 강력한 접착제를 뿌립니다. 접착제는 {{ e2 }}초 동안 유지됩니다. 접착제를 밟은 적들은 {{ e1 }}%만큼 느려지고 이동 스킬을 사용할 수 없습니다.<br /><br />신지드가 대상을 이 지역 안으로 던져넘기면 속박됩니다.","sanitizedTooltip":"신지드가 땅에 강력한 접착제를 뿌립니다. 접착제는 {{ e2 }}초 동안 유지됩니다. 접착제를 밟은 적들은 {{ e1 }}%만큼 느려지고 이동 스킬을 사용할 수 없습니다. 신지드가 대상을 이 지역 안으로 던져넘기면 속박됩니다.","leveltip":{"label":["재사용 대기시간","마나 소모량 "],"effect":["{{ cooldown }} -> {{ cooldownNL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"MegaAdhesive.png","sprite":"spell10.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[17,16,15,14,13],"cooldownBurn":"17/16/15/14/13","effect":[null,[40,40,40,40,40],[3,3,3,3,3],[0,0,0,0,0],[265,265,265,265,265],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40","3","0","265","0","0","0","0","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"MegaAdhesive"},{"name":"던져넘기기","description":"적을 신지드 뒤편으로 높이 던지며 피해를 줍니다. 신지드가 뒤로 던진 대상이 초강력 접착제 위에 착지하면 속박 효과가 적용됩니다.","sanitizedDescription":"적을 신지드 뒤편으로 높이 던지며 피해를 줍니다. 신지드가 뒤로 던진 대상이 초강력 접착제 위에 착지하면 속박 효과가 적용됩니다.","tooltip":"신지드가 적을 어깨 너머로 던져버리며 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> + 대상의 최대 체력의 {{ e3 }}%에 해당하는 마법 피해를 입힙니다. (미니언과 몬스터 상대로는 최대 300의 추가 피해)<br /><br />신지드가 던져넘긴 대상이 초강력 접착제 위에 착지하면 {{ e2 }}초 동안 속박됩니다.","sanitizedTooltip":"신지드가 적을 어깨 너머로 던져버리며 {{ e1 }} (+{{ a1 }}) + 대상의 최대 체력의 {{ e3 }}%에 해당하는 마법 피해를 입힙니다. (미니언과 몬스터 상대로는 최대 300의 추가 피해) 신지드가 던져넘긴 대상이 초강력 접착제 위에 착지하면 {{ e2 }}초 동안 속박됩니다.","leveltip":{"label":["피해량","최대 체력 비례 피해량","속박 지속시간","마나 소모량 "],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"Fling.png","sprite":"spell10.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,95,110,125,140],"costBurn":"80/95/110/125/140","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[50,65,80,95,110],[1,1.25,1.5,1.75,2],[6,6.5,7,7.5,8],[420,420,420,420,420],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/65/80/95/110","1/1.25/1.5/1.75/2","6/6.5/7/7.5/8","420","300","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[125,125,125,125,125],"rangeBurn":"125","key":"Fling"},{"name":"광기의 물약","description":"신지드가 조합된 화학 물질을 마시고 향상된 전투 능력을 얻습니다.","sanitizedDescription":"신지드가 조합된 화학 물질을 마시고 향상된 전투 능력을 얻습니다.","tooltip":"신지드가 화학 약품을 마셔 {{ e2 }}초 동안 주문력, 방어력, 마법 저항력, 이동 속도, 체력 재생력, 마나 재생력이 {{ e1 }} 증가합니다.","sanitizedTooltip":"신지드가 화학 약품을 마셔 {{ e2 }}초 동안 주문력, 방어력, 마법 저항력, 이동 속도, 체력 재생력, 마나 재생력이 {{ e1 }} 증가합니다.","leveltip":{"label":["추가 능력치","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"InsanityPotion.png","sprite":"spell10.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[35,60,85],[25,25,25],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","35/60/85","25","0","0","0","0","0","0","0","0"],"range":[20,20,20],"rangeBurn":"20","key":"InsanityPotion"}],"passive":{"name":"독성 급류","description":"신지드가 근처 챔피언을 회피하며 일시적으로 이동 속도가 증가합니다.","sanitizedDescription":"신지드가 근처 챔피언을 회피하며 일시적으로 이동 속도가 증가합니다.","image":{"full":"Singed_Passive.png","sprite":"passive3.png","group":"passive","x":384,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Singed","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1028,"count":1},{"id":2003,"count":2}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1028,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3065,"count":1}]}]},{"champion":"Singed","title":"SingedARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":2031,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3800,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3151,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Singed","title":"SingedCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1082,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3801,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3800,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3512,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Singed","title":"SingedFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1027,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3070,"count":1},{"id":3027,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3102,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":3361,"count":1},{"id":2138,"count":1}]}]},{"champion":"Singed","title":"SingedKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3800,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3143,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Singed","title":"SingedSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3800,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3512,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]}]},{"champion":"Singed","title":"SingedSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1082,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1026,"count":1},{"id":3801,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3116,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3512,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Singed","title":"SingedTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1027,"count":1},{"id":1028,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3800,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3110,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"TahmKench":{"id":223,"key":"TahmKench","name":"탐 켄치","title":"강의 폭군","image":{"full":"TahmKench.png","sprite":"champion3.png","group":"champion","x":288,"y":48,"w":48,"h":48},"skins":[{"id":223000,"name":"default","num":0},{"id":223001,"name":"마스터 셰프 탐 켄치","num":1},{"id":223002,"name":"우르프 켄치","num":2}],"lore":"역사 속에서 여러 이름으로 알려져 있는 악마 탐 켄치는 룬테라의 물길을 따라 이동하며 끝없는 식욕을 다른 이들의 고통으로 채운다. 탐 켄치를 매우 매력적이고 자신만만한 존재로 생각하는 이들도 있지만, 탐 켄치는 방심한 먹잇감을 찾아 현실 세계를 활보하는 방랑자일 뿐이다. 탐 켄치의 채찍 같은 혓바닥은 수십 걸음 떨어진 중무장한 전사도 기절시킬 수 있으며, 탐 켄치의 꾸르륵 대는 뱃속으로 들어가는 것은 다시 돌아올 희망이 거의 없는 심연에 떨어지는 것과도 같다.","blurb":"역사 속에서 여러 이름으로 알려져 있는 악마 탐 켄치는 룬테라의 물길을 따라 이동하며 끝없는 식욕을 다른 이들의 고통으로 채운다. 탐 켄치를 매우 매력적이고 자신만만한 존재로 생각하는 이들도 있지만, 탐 켄치는 방심한 먹잇감을 찾아 현실 세계를 활보하는 방랑자일 뿐이다. 탐 켄치의 채찍 같은 혓바닥은 수십 걸음 떨어진 중무장한 전사도 기절시킬 수 있으며, 탐 켄치의 꾸르륵 대는 뱃속으로 들어가는 것은 다시 돌아올 희망이 거의 없는 심연에 떨어지는...","allytips":["- 서포터로서 가장 중요한 역할은 약한 아군을 안전하게 지키는 것입니다. 집어삼키기의 재사용 대기시간과 사거리를 잘 생각해서 위치를 잡으세요!","- 두꺼운 피부 사용 효과는 언제 쓸지 잘 생각해야 합니다. 미리 보호막을 사용하여 추가 피해를 막는 편이 나을 때도 있지만, 치유 효과를 활용하는 것이 훨씬 이득이 될 수도 있습니다."],"enemytips":["- 탐 켄치가 두꺼운 피부 보호막을 사용하면, 상당한 치유 효과를 포기한 것입니다. 게다가 두꺼운 피부 스킬이 재사용 대기에 들어가면 새로 회색 체력이 오르지 않으니 이 때를 놓치지 말고 공격해 보세요!","- 탐 켄치가 미니언을 뱉어서 견제할 때는 내뱉은 직후에 맞서 공격해 보세요. 집어삼키기 스킬이 재사용 대기에 접어들었을 때는 삼켜질 염려 없이 공정한 전투를 벌일 수 있습니다."],"tags":["Support","Tank"],"partype":"마나","info":{"attack":3,"defense":9,"magic":6,"difficulty":5},"stats":{"armor":47,"armorperlevel":3.5,"attackdamage":56,"attackdamageperlevel":3.2,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":610,"hpperlevel":95,"hpregen":6.5,"hpregenperlevel":0.55,"movespeed":335,"mp":325,"mpperlevel":40,"mpregen":8,"mpregenperlevel":1,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"혀 채찍","description":"탐 켄치가 혀를 채찍처럼 휘둘러 처음 맞는 유닛에 피해를 입히고 속도를 늦춥니다. 절대 미각 중첩이 3이 쌓인 유닛은 기절합니다.","sanitizedDescription":"탐 켄치가 혀를 채찍처럼 휘둘러 처음 맞는 유닛에 피해를 입히고 속도를 늦춥니다. 절대 미각 중첩이 3이 쌓인 유닛은 기절합니다.","tooltip":"첫 번째로 맞힌 적에게 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e5 }}초 동안 {{ e4 }}%만큼 둔화시킵니다. 절대 미각 중첩이 3이 된 챔피언은 추가로 {{ e6 }}초 동안 기절합니다.<br /><br />혀가 공중에 떠 있는 동안 <span class=\"color0bf7de\">집어삼키기</span>를 시전하면 멀리에서 몬스터/미니언을 삼킵니다.","sanitizedTooltip":"첫 번째로 맞힌 적에게 {{ e3 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e5 }}초 동안 {{ e4 }}%만큼 둔화시킵니다. 절대 미각 중첩이 3이 된 챔피언은 추가로 {{ e6 }}초 동안 기절합니다. 혀가 공중에 떠 있는 동안 집어삼키기를 시전하면 멀리에서 몬스터/미니언을 삼킵니다.","leveltip":{"label":["기본 피해량","둔화"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e4 }}% -> {{ e4NL }}%"]},"image":{"full":"TahmKenchQ.png","sprite":"spell11.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[875,875,875,875,875],[1000,1000,1000,1000,1000],[80,130,180,230,280],[30,40,50,60,70],[2,2,2,2,2],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","875","1000","80/130/180/230/280","30/40/50/60/70","2","1.5","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"TahmKenchQ"},{"name":"집어삼키기","description":"탐 켄치가 대상을 집어삼켜 대상 최대 체력의 일부에 해당하는 마법 피해를 입힙니다. 집어삼킨 미니언과 몬스터를 탄도체처럼 내뱉어, 충돌한 지역에 마법 피해를 입힐 수 있습니다.","sanitizedDescription":"탐 켄치가 대상을 집어삼켜 대상 최대 체력의 일부에 해당하는 마법 피해를 입힙니다. 집어삼킨 미니언과 몬스터를 탄도체처럼 내뱉어, 충돌한 지역에 마법 피해를 입힐 수 있습니다.","tooltip":"대상 하나를 {{ e1 }}초 동안 집어삼킵니다. (적 챔피언을 삼키면 절반의 지속 시간) 적들은 자기 최대 체력의 {{ e3 }}% <span class=\"color99FF99\">(+{{ a1 }}%)</span>에 해당하는 마법 피해를 입습니다. (중립 몬스터 상대로는 최대 {{ e2 }})<br /><br /><span class=\"colorFF9900\">적 챔피언:</span> 절대 미각 3 중첩이 쌓여야만 삼켜집니다. 탐 켄치는 적 챔피언을 삼키고 있는 동안 이동 속도가 95% 느려집니다.<br /><br /><span class=\"colorFF9900\">아군 챔피언:</span> 탐 켄치는 아군 챔피언을 삼키고 있는 동안 적 챔피언 쪽으로 갈 때  이동 속도가 {{ e4 }}% 상승합니다.<br /><br /><span class=\"colorFF9900\">미니언과 몬스터:</span> 다시 시전하면 내뱉어, 여기에 맞는 대상에게 {{ e7 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"대상 하나를 {{ e1 }}초 동안 집어삼킵니다. (적 챔피언을 삼키면 절반의 지속 시간) 적들은 자기 최대 체력의 {{ e3 }}% (+{{ a1 }}%)에 해당하는 마법 피해를 입습니다. (중립 몬스터 상대로는 최대 {{ e2 }}) 적 챔피언: 절대 미각 3 중첩이 쌓여야만 삼켜집니다. 탐 켄치는 적 챔피언을 삼키고 있는 동안 이동 속도가 95% 느려집니다. 아군 챔피언: 탐 켄치는 아군 챔피언을 삼키고 있는 동안 적 챔피언 쪽으로 갈 때 이동 속도가 {{ e4 }}% 상승합니다. 미니언과 몬스터: 다시 시전하면 내뱉어, 여기에 맞는 대상에게 {{ e7 }} (+{{ a2 }})의 마법 피해를 입힙니다.","leveltip":{"label":["집어삼키기 지속 시간","최대 체력 피해량","몬스터에 대한 최대 피해량","미니언 내뱉기 피해량","재사용 대기시간"],"effect":["{{ e1 }}초 -> {{ e1NL }}초","{{ e3 }}% -> {{ e3NL }}%","{{ e2 }} -> {{ e2NL }}","{{ e7 }} -> {{ e7NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초"]},"image":{"full":"TahmKenchW.png","sprite":"spell11.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,90,90,90,90],"costBurn":"90","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[4,4.5,5,5.5,6],[400,450,500,550,600],[20,23,26,29,32],[30,35,40,45,50],[0,0,0,0,0],[0,0,0,0,0],[100,150,200,250,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4/4.5/5/5.5/6","400/450/500/550/600","20/23/26/29/32","30/35/40/45/50","0","0","100/150/200/250/300","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.02]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[250,250,250,250,250],"rangeBurn":"250","key":"TahmKenchW"},{"name":"두꺼운 피부","description":"탐 켄치가 받는 피해를 회색 체력으로 전환합니다. 회색 체력이 줄어들면서 탐 켄치는 회색 체력의 일정 비율만큼 체력을 회복합니다. 스킬을 활성화하면 회색 체력이 전부 보호막으로 변합니다.","sanitizedDescription":"탐 켄치가 받는 피해를 회색 체력으로 전환합니다. 회색 체력이 줄어들면서 탐 켄치는 회색 체력의 일정 비율만큼 체력을 회복합니다. 스킬을 활성화하면 회색 체력이 전부 보호막으로 변합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 이 스킬이 재사용 대기 중이 아닐 때 입은 피해의 {{ e3 }}%가 회색 체력으로 전환됩니다. 줄어들 때까지 기다리면 회색 체력의 {{ e2 }}%가 체력으로 회복됩니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 회색 체력 전부를 {{ e1 }}초 동안 유지되는 보호막으로 전환합니다.","sanitizedTooltip":"기본 지속 효과: 이 스킬이 재사용 대기 중이 아닐 때 입은 피해의 {{ e3 }}%가 회색 체력으로 전환됩니다. 줄어들 때까지 기다리면 회색 체력의 {{ e2 }}%가 체력으로 회복됩니다. 사용 시: 회색 체력 전부를 {{ e1 }}초 동안 유지되는 보호막으로 전환합니다.","leveltip":{"label":["회색 체력 전환율","회색 체력 회복률"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"TahmKenchE.png","sprite":"spell11.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[3,3,3,3,3],[25,30,35,40,45],[70,75,80,85,90],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","3","25/30/35/40/45","70/75/80/85/90","0","0","0","0","0","0","0"],"range":[1,1,1,1,1],"rangeBurn":"1","key":"TahmKenchE"},{"name":"심연의 통로","description":"탐 켄치가 맵을 가로질러 이동하며, 아군 챔피언 하나를 데리고 갈 수도 있습니다.","sanitizedDescription":"탐 켄치가 맵을 가로질러 이동하며, 아군 챔피언 하나를 데리고 갈 수도 있습니다.","tooltip":"최대 6초까지 정신 집중을 시작합니다. 이 동안 아군 챔피언 하나가 탐 켄치를 우클릭하여 뱃속에 들어갈 수 있습니다. 아니면 이 스킬을 한 번 더 시전하여 혼자 이동할 수 있습니다. 스킬을 다시 사용하거나 아군이 입 속으로 들어오고 나면 탐 켄치가 대상 위치로 이동합니다. 적 챔피언의 공격으로 피해를 입으면 정신 집중이 끊깁니다.<br /><br /><span class=\"colorcccccc\"><i>'세상은 한 줄기 강이고 내가 강의 왕이지. 내가 가보지 않은 곳은 없고, 돌아갈 수 없는 곳도 없다.'</i></span>","sanitizedTooltip":"최대 6초까지 정신 집중을 시작합니다. 이 동안 아군 챔피언 하나가 탐 켄치를 우클릭하여 뱃속에 들어갈 수 있습니다. 아니면 이 스킬을 한 번 더 시전하여 혼자 이동할 수 있습니다. 스킬을 다시 사용하거나 아군이 입 속으로 들어오고 나면 탐 켄치가 대상 위치로 이동합니다. 적 챔피언의 공격으로 피해를 입으면 정신 집중이 끊깁니다. '세상은 한 줄기 강이고 내가 강의 왕이지. 내가 가보지 않은 곳은 없고, 돌아갈 수 없는 곳도 없다.'","leveltip":{"label":["재사용 대기시간","사거리"],"effect":["{{ cooldown }}초 -> {{ cooldownNL }}초","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"TahmKenchNewR.png","sprite":"spell11.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[4500,5500,6500],[0.02,0.04,0.06],[20,20,20],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","4500/5500/6500","0.02/0.04/0.06","20","0","0","0","0","0","0","0"],"range":[4500,5500,6500],"rangeBurn":"4500/5500/6500","key":"TahmKenchNewR"}],"passive":{"name":"절대 미각","description":"탐 켄치가 어마어마한 체구를 이용해 기본 공격과 스킬 사용 시 총 체력에 기반해 추가 피해를 입힙니다. 적 챔피언에게 피해를 입히면 이들에게 절대 미각 중첩이 쌓입니다. 3 중첩 시 집어삼키기 스킬을 사용하여 적 챔피언을 집어삼킬 수 있습니다.","sanitizedDescription":"탐 켄치가 어마어마한 체구를 이용해 기본 공격과 스킬 사용 시 총 체력에 기반해 추가 피해를 입힙니다. 적 챔피언에게 피해를 입히면 이들에게 절대 미각 중첩이 쌓입니다. 3 중첩 시 집어삼키기 스킬을 사용하여 적 챔피언을 집어삼킬 수 있습니다.","image":{"full":"TahmKench_P.png","sprite":"passive3.png","group":"passive","x":288,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Maokai","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3067,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3067,"count":1},{"id":3211,"count":1},{"id":3065,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3025,"count":1},{"id":3068,"count":1},{"id":3001,"count":1},{"id":3105,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3190,"count":1},{"id":3109,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3083,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3097,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3401,"count":1},{"id":3190,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3097,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3401,"count":1},{"id":3190,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3748,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3075,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3748,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1},{"id":3364,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3047,"count":1},{"id":3190,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3068,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3401,"count":1},{"id":3190,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3109,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3097,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3401,"count":1},{"id":3190,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3109,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3110,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"TahmKench","title":"TahmKenchTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1028,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3105,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Leblanc":{"id":7,"key":"Leblanc","name":"르블랑","title":"환술사","image":{"full":"Leblanc.png","sprite":"champion1.png","group":"champion","x":432,"y":96,"w":48,"h":48},"skins":[{"id":7000,"name":"default","num":0},{"id":7001,"name":"사악한 르블랑","num":1},{"id":7002,"name":"마술사 르블랑","num":2},{"id":7003,"name":"산타 르블랑","num":3},{"id":7004,"name":"까마귀 환영 르블랑","num":4},{"id":7005,"name":"나무정령 르블랑","num":5}],"lore":"르블랑은 검은 장미단의 다른 구성원에 비해서도 신비로운 인물이지만, 그 이름은 그저 녹서스 건국 초기부터 사람을 조정하고 사건을 조작하던, 안색이 창백한 여인들의 이름 중 하나이다. 르블랑은 마법을 사용해 자신의 상을 복제할 수 있으며, 누구에게든, 어디에든 나타날 수 있고, 심지어 여러 장소에 동시에 존재할 수도 있다. 언제나 시야 밖으로 사라지는 르블랑의 진정한 동기는 끊임없이 이동하는 존재만큼이나 불확실하다.","blurb":"르블랑은 검은 장미단의 다른 구성원에 비해서도 신비로운 인물이지만, 그 이름은 그저 녹서스 건국 초기부터 사람을 조정하고 사건을 조작하던, 안색이 창백한 여인들의 이름 중 하나이다. 르블랑은 마법을 사용해 자신의 상을 복제할 수 있으며, 누구에게든, 어디에든 나타날 수 있고, 심지어 여러 장소에 동시에 존재할 수도 있다. 언제나 시야 밖으로 사라지는 르블랑의 진정한 동기는 끊임없이 이동하는 존재만큼이나 불확실하다.","allytips":["- 왜곡을 다른 스킬과 함께 사용하면 공격적인 플레이 후에 안전한 위치로 돌아올 수 있습니다.","- 왜곡을 사용하면 환영 사슬을 보다 쉽게 맞힐 수 있습니다.","- 악의의 인장과 환영 사슬을 연계하여 최대 4초 동안 점멸 주문이 있는 적 챔피언이 탈출할 수 없도록 막을 수 있습니다."],"enemytips":["- 르블랑은 궁극기로 옆에 환영을 불러내 함께 스킬을 사용할 수도 있고, 멀리 떨어진 곳에 환영을 소환할 수도 있습니다.","- 멀리 떨어진 곳에 환영이 나타난다면 가장 가까운 챔피언에게 다가가 스킬을 사용한 뒤 바로 사라집니다. 이 경우 스킬은 피해를 입히지 않습니다.","- 르블랑이 돌진 스킬인 왜곡을 이미 사용한 후 공격하면 위험한 상황을 피할 수 있습니다.","- 르블랑에게 기절 혹은 침묵 스킬을 사용하면 왜곡 스킬을 재사용해 돌아가지 못하게 할 수 있습니다."],"tags":["Assassin","Mage"],"partype":"마나","info":{"attack":1,"defense":4,"magic":10,"difficulty":9},"stats":{"armor":21.88,"armorperlevel":3.5,"attackdamage":54.88,"attackdamageperlevel":3.5,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":1.4,"crit":0,"critperlevel":0,"hp":528,"hpperlevel":92,"hpregen":7.4,"hpregenperlevel":0.55,"movespeed":340,"mp":334,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"파괴의 보주","description":"르블랑이 대상 쪽으로 구체를 발사해 마법 피해를 입힙니다. 파괴의 보주로 악의의 인장을 파괴하면 인장이 자주색으로 변한 유닛 중 가장 가까운 대상에게 같은 양의 피해를 입힙니다. (대상이 미니언일 경우 피해량이 감소합니다.)","sanitizedDescription":"르블랑이 대상 쪽으로 구체를 발사해 마법 피해를 입힙니다. 파괴의 보주로 악의의 인장을 파괴하면 인장이 자주색으로 변한 유닛 중 가장 가까운 대상에게 같은 양의 피해를 입힙니다. (대상이 미니언일 경우 피해량이 감소합니다.)","tooltip":"{{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 파괴의 보주로 악의의 인장을 파괴하면, 인장이 자주색으로 변한 유닛 중 가장 가까운 대상에게 같은 양의 피해를 입힙니다. (대상이 미니언일 경우 {{ e7 }}%의 피해를 입힙니다.)","sanitizedTooltip":"{{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 파괴의 보주로 악의의 인장을 파괴하면, 인장이 자주색으로 변한 유닛 중 가장 가까운 대상에게 같은 양의 피해를 입힙니다. (대상이 미니언일 경우 {{ e7 }}%의 피해를 입힙니다.)","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LeblancQ.png","sprite":"spell6.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[55,90,125,160,195],[25,25,25,25,25],[3.5,3.5,3.5,3.5,3.5],[6,6,6,6,6],[60,90,120,150,180],[0,0,0,0,0],[60,60,60,60,60],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/90/125/160/195","25","3.5","6","60/90/120/150/180","0","60","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"LeblancQ"},{"name":"왜곡","description":"르블랑이 빠르게 지정 위치로 돌진하여 주변의 유닛들에게 마법 피해를 입힙니다. 그리고 다음 4초 안에 스킬을 다시 사용하여 처음 위치로 돌아올 수 있습니다.","sanitizedDescription":"르블랑이 빠르게 지정 위치로 돌진하여 주변의 유닛들에게 마법 피해를 입힙니다. 그리고 다음 4초 안에 스킬을 다시 사용하여 처음 위치로 돌아올 수 있습니다.","tooltip":"르블랑이 빠르게 지정 위치로 돌진하여 범위 내의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />4초 안에 왜곡을 다시 사용하면 처음 위치로 돌아올 수 있습니다.","sanitizedTooltip":"르블랑이 빠르게 지정 위치로 돌진하여 범위 내의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 4초 안에 왜곡을 다시 사용하면 처음 위치로 돌아올 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LeblancW.png","sprite":"spell6.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[40,55,70,85,100],[2,2,2,2,2],[4,4,4,4,4],[600,600,600,600,600],[0.85,0.85,0.85,0.85,0.85],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/55/70/85/100","2","4","600","0.85","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"LeblancW"},{"name":"환영 사슬","description":"르블랑이 지정한 위치로 환영의 사슬을 던집니다. 적 유닛에게 명중 시 마법 피해를 입히고 적을 묶습니다. 대상이 1.5초 동안 사슬에 묶일 경우 추가 마법 피해를 받고 이동할 수 없게 됩니다.","sanitizedDescription":"르블랑이 지정한 위치로 환영의 사슬을 던집니다. 적 유닛에게 명중 시 마법 피해를 입히고 적을 묶습니다. 대상이 1.5초 동안 사슬에 묶일 경우 추가 마법 피해를 받고 이동할 수 없게 됩니다.","tooltip":"처음 명중한 적을 옭아매는 사슬을 던져 대상에 대한 <span class=\"coloree91d7\">절대 시야</span>를 얻고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />대상이 {{ e2 }}초간 사슬에 묶여 있으면 추가로 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고, {{ e2 }}초간 움직일 수 없게 됩니다.","sanitizedTooltip":"처음 명중한 적을 옭아매는 사슬을 던져 대상에 대한 절대 시야를 얻고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 대상이 {{ e2 }}초간 사슬에 묶여 있으면 추가로 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고, {{ e2 }}초간 움직일 수 없게 됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f1 }} -> {{ f2 }}"]},"image":{"full":"LeblancE.png","sprite":"spell6.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[40,60,80,100,120],[1.5,1.5,1.5,1.5,1.5],[1.5,1.5,1.5,1.5,1.5],[25,25,25,25,25],[885,885,885,885,885],[14,13.25,12.5,11.75,11],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/60/80/100/120","1.5","1.5","25","885","14/13.25/12.5/11.75/11","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"LeblancE"},{"name":"모방","description":"르블랑이 환영을 남기고 기본 스킬 중 하나를 모방해서 사용합니다. 이때 환영도 해당 스킬을 가짜로 사용합니다. 혹은 대상 지점에 환영을 소환해 자신이 마지막으로 썼던 스킬을 가짜로 사용하게 할 수도 있습니다.","sanitizedDescription":"르블랑이 환영을 남기고 기본 스킬 중 하나를 모방해서 사용합니다. 이때 환영도 해당 스킬을 가짜로 사용합니다. 혹은 대상 지점에 환영을 소환해 자신이 마지막으로 썼던 스킬을 가짜로 사용하게 할 수도 있습니다.","tooltip":"르블랑이 <span class=\"colorCC00FF\">환영</span>을 남겨 기본 스킬 중 하나를 모방해서 사용하게 합니다. <span class=\"colorCC00FF\">환영</span>은 {{ e7 }}초간 유지됩니다.<br /><br /><li>파괴의 보주는 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.<br />왜곡은 {{ e5 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 마법 피해를 입힙니다.<br />환영 사슬은 매번 {{ e4 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br />모방 스킬을 모방할 경우 <span class=\"colorDDDD77\">장미의 그림자</span>가 발동됩니다.</li><br /><span class=\"colorDDDD77\">장미의 그림자</span><br /><span class=\"colorCC00FF\">환영</span>이 대상 지점에 소환되어 시야에 보이는 적 챔피언 중 가장 가까운 챔피언에게 걸어가 르블랑이 마지막으로 썼던 스킬을 모방해 사용합니다.<br /><br /><span class=\"colorFFFFFF\">{{ f2 }}초</span>의 별도 재사용 대기시간이 있습니다. 이 <span class=\"colorCC00FF\">환영</span>은 더 오래 유지되지만 직접 통제할 수 없습니다.","sanitizedTooltip":"르블랑이 환영을 남겨 기본 스킬 중 하나를 모방해서 사용하게 합니다. 환영은 {{ e7 }}초간 유지됩니다. 파괴의 보주는 {{ e3 }} (+{{ a2 }})의 마법 피해를 입힙니다. 왜곡은 {{ e5 }} (+{{ f1 }})의 마법 피해를 입힙니다. 환영 사슬은 매번 {{ e4 }} (+{{ a1 }})의 마법 피해를 입힙니다. 모방 스킬을 모방할 경우 장미의 그림자가 발동됩니다. 장미의 그림자 환영이 대상 지점에 소환되어 시야에 보이는 적 챔피언 중 가장 가까운 챔피언에게 걸어가 르블랑이 마지막으로 썼던 스킬을 모방해 사용합니다. {{ f2 }}초의 별도 재사용 대기시간이 있습니다. 이 환영은 더 오래 유지되지만 직접 통제할 수 없습니다.","leveltip":{"label":["모방한 파괴의 보주 피해량","모방한 왜곡 피해량","모방한 환영 사슬 피해량","장미의 그림자 재사용 대기시간","모방 재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e5 }} -> {{ e5NL }}","{{ e4 }} -> {{ e4NL }}","{{ f2 }} -> {{ f3 }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LeblancR.png","sprite":"spell6.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"활성화/비활성화","maxrank":3,"cost":[0,0,0],"costType":"활성화/비활성화","costBurn":"0","cooldown":[54,42,30],"cooldownBurn":"54/42/30","effect":[null,[20,40,60],[30,37.5,45],[150,275,400],[100,160,220],[60,120,180],[160,140,120],[2.5,2.5,2.5],[150,150,150],[0.3,0.3,0.3],[0.075,0.075,0.075]],"effectBurn":["","20/40/60","30/37.5/45","150/275/400","100/160/220","60/120/180","160/140/120","2.5","150","0.3","0.08"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.6]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"LeblancR"}],"passive":{"name":"악의의 인장","description":"르블랑의 스킬에 피해를 입은 적에게는 4초 동안 표식이 남습니다. 1.5초 후 르블랑의 다음 스킬 공격은 인장을 파괴하며 대상에게 마법 피해를 줍니다.<br><br>악의의 인장이 남았던 유닛에게는 5초 동안 인장이 다시 남지 않습니다.","sanitizedDescription":"르블랑의 스킬에 피해를 입은 적에게는 4초 동안 표식이 남습니다. 1.5초 후 르블랑의 다음 스킬 공격은 인장을 파괴하며 대상에게 마법 피해를 줍니다. 악의의 인장이 남았던 유닛에게는 5초 동안 인장이 다시 남지 않습니다.","image":{"full":"LeblancP.png","sprite":"passive1.png","group":"passive","x":432,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Leblanc","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":3108,"count":1},{"id":3001,"count":1},{"id":3113,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3116,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]}]},{"champion":"Leblanc","title":"LeblancARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Leblanc","title":"LeblancCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":1082,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Leblanc","title":"LeblancFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Leblanc","title":"LeblancKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3108,"count":1},{"id":1056,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Leblanc","title":"LeblancSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3152,"count":1}]}]},{"champion":"LeBlanc","title":"LeblancSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":1082,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Leblanc","title":"LeblancTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1058,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3090,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2139,"count":1}]}]}]},"Thresh":{"id":412,"key":"Thresh","name":"쓰레쉬","title":"지옥의 간수","image":{"full":"Thresh.png","sprite":"champion3.png","group":"champion","x":48,"y":96,"w":48,"h":48},"skins":[{"id":412000,"name":"default","num":0},{"id":412001,"name":"심연의 공포 쓰레쉬","num":1},{"id":412002,"name":"챔피언십 쓰레쉬","num":2},{"id":412003,"name":"불의 축제 쓰레쉬","num":3},{"id":412004,"name":"삼성 화이트 쓰레쉬","num":4},{"id":412005,"name":"암흑의 별 쓰레쉬","num":5}],"lore":"가학적이고 교활한 쓰레쉬는 높은 야망으로 끊임없이 활동하는 그림자 군도의 악령이다. 한 때 수많은 신비로운 비밀의 관리인이었던 쓰레쉬는 삶이나 죽음보다 더 거대한 힘을 추구했고, 이제는 살아있는 이들을 자신만의 기발한 방법으로 고문하여 오랫동안 엄청난 고통으로 서서히 망가뜨린다. 쓰레쉬의 손아귀에 붙잡혔다면 죽음으로도 벗어날 수 없다. 쓰레쉬가 랜턴에 영혼을 가두어 다니며 영원히 끝나지 않는 고통을 가하기 때문이다.","blurb":"가학적이고 교활한 쓰레쉬는 높은 야망으로 끊임없이 활동하는 그림자 군도의 악령이다. 한 때 수많은 신비로운 비밀의 관리인이었던 쓰레쉬는 삶이나 죽음보다 더 거대한 힘을 추구했고, 이제는 살아있는 이들을 자신만의 기발한 방법으로 고문하여 오랫동안 엄청난 고통으로 서서히 망가뜨린다. 쓰레쉬의 손아귀에 붙잡혔다면 죽음으로도 벗어날 수 없다. 쓰레쉬가 랜턴에 영혼을 가두어 다니며 영원히 끝나지 않는 고통을 가하기 때문이다.","allytips":["- 쓰레쉬의 랜턴을 사용할 때에는 원활한 의사소통이 필수입니다. 아군에게 어떻게 쓸 것인지 알려 주세요.","- 사형 선고와 사슬 채찍은 순서와 관계 없이 연계하여 시전하면 강력한 위력을 발휘합니다.","- 쓰레쉬는 직접 처치하지 않은 영혼도 흡수할 수 있습니다. 사망 일보직전의 대상 근처에 있으면 영혼 흡수 효율이 극대화됩니다."],"enemytips":["- 쓰레쉬의 사형 선고는 시전 시간이 오래 걸립니다. 스킬 시전을 시작할 때 잘 지켜보다가 피하도록 하세요.","- 체력이 약한 아군이 무사히 달아날 수 있게끔, 영혼 감옥의 벽 하나를 부숴 주세요.","- 쓰레쉬는 방어력과 공격력 강화를 위해 영혼을 수집해야만 합니다. 영혼을 수집하러 움직일 때를 노려 공격을 퍼부으세요."],"tags":["Support","Fighter"],"partype":"마나","info":{"attack":5,"defense":6,"magic":6,"difficulty":7},"stats":{"armor":28,"armorperlevel":0,"attackdamage":56,"attackdamageperlevel":2.2,"attackrange":450,"attackspeedoffset":0,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":560.52,"hpperlevel":93,"hpregen":6.924,"hpregenperlevel":0.55,"movespeed":335,"mp":273.92,"mpperlevel":44,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"사형 선고","description":"쓰레쉬가 쇠사슬로 적을 묶어 자신 쪽으로 당겨옵니다. 스킬을 다시 사용하면 쓰레쉬가 적 쪽으로 당겨집니다.","sanitizedDescription":"쓰레쉬가 쇠사슬로 적을 묶어 자신 쪽으로 당겨옵니다. 스킬을 다시 사용하면 쓰레쉬가 적 쪽으로 당겨집니다.","tooltip":"쓰레쉬가 낫을 던져 첫 번째로 맞힌 유닛에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주고 <span class=\"coloree91d7\">절대 시야</span>를 얻으며, 대상을 기절시켜 {{ e2 }}초간 자신 쪽으로 당겨 옵니다.<br /><br />이 스킬을 다시 사용하면 쓰레쉬가 잡힌 적 쪽으로 끌려갑니다.<br /><br />사형 선고로 적을 맞힐 경우 재사용 대기시간이 {{ e4 }}초 감소합니다.","sanitizedTooltip":"쓰레쉬가 낫을 던져 첫 번째로 맞힌 유닛에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 주고 절대 시야를 얻으며, 대상을 기절시켜 {{ e2 }}초간 자신 쪽으로 당겨 옵니다. 이 스킬을 다시 사용하면 쓰레쉬가 잡힌 적 쪽으로 끌려갑니다. 사형 선고로 적을 맞힐 경우 재사용 대기시간이 {{ e4 }}초 감소합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ThreshQ.png","sprite":"spell11.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[20,18,16,14,12],"cooldownBurn":"20/18/16/14/12","effect":[null,[80,120,160,200,240],[1.5,1.5,1.5,1.5,1.5],[75,75,75,75,75],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","1.5","75","3","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"ThreshQ"},{"name":"어둠의 통로","description":"쓰레쉬가 랜턴을 던져 근처의 아군 챔피언들을 피해로 부터 보호합니다. 아군이 랜턴을 클릭하면 쓰레쉬에게 질주할 수 있습니다.","sanitizedDescription":"쓰레쉬가 랜턴을 던져 근처의 아군 챔피언들을 피해로 부터 보호합니다. 아군이 랜턴을 클릭하면 쓰레쉬에게 질주할 수 있습니다.","tooltip":"쓰레쉬가 지정한 위치에 랜턴을 던집니다. 아군이 랜턴을 클릭하면 쓰레쉬가 랜턴과 아군을 함께 끌어당깁니다.<br /><br />랜턴은 쓰레쉬와 랜턴 근처로 오는 아군 하나에게 {{ e5 }}초간 최대 {{ e1 }} <span class=\"color0bf7de\">(+{{ f6 }})</span>의 피해를 흡수하는 보호막을 씌워줍니다. 보호막의 흡수량은 쓰레쉬가 흡수한 <span class=\"color0bf7de\">영혼</span>의 수에 비례합니다.","sanitizedTooltip":"쓰레쉬가 지정한 위치에 랜턴을 던집니다. 아군이 랜턴을 클릭하면 쓰레쉬가 랜턴과 아군을 함께 끌어당깁니다. 랜턴은 쓰레쉬와 랜턴 근처로 오는 아군 하나에게 {{ e5 }}초간 최대 {{ e1 }} (+{{ f6 }})의 피해를 흡수하는 보호막을 씌워줍니다. 보호막의 흡수량은 쓰레쉬가 흡수한 영혼의 수에 비례합니다.","leveltip":{"label":["보호막 피해 흡수량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ThreshW.png","sprite":"spell11.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[22,20.5,19,17.5,16],"cooldownBurn":"22/20.5/19/17.5/16","effect":[null,[60,100,140,180,220],[1,1,1,1,1],[0,0,0,0,0],[6,6,6,6,6],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/100/140/180/220","1","0","6","4","0","0","0","0","0"],"range":[950,950,950,950,950],"rangeBurn":"950","key":"ThreshW"},{"name":"사슬 채찍","description":"쓰레쉬가 공격하기 위한 힘을 모아, 다음 공격까지 대기 시간이 길수록 더 큰 피해를 가합니다. 활성화하면 쇠사슬을 휘둘러 맞은 적들을 휘두른 방향으로 밀어냅니다.","sanitizedDescription":"쓰레쉬가 공격하기 위한 힘을 모아, 다음 공격까지 대기 시간이 길수록 더 큰 피해를 가합니다. 활성화하면 쇠사슬을 휘둘러 맞은 적들을 휘두른 방향으로 밀어냅니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>기본 공격 시 <span class=\"color0bf7de\">{{ f3 }}</span> ~ <span class=\"color0bf7de\">{{ f3 }}</span> <span class=\"colorFF8C00\">(+{{ f2 }})</span>의 추가 마법 피해를 입힙니다. 공격을 하지 않고 있는 시간이 길어질수록 추가 마법 피해가 늘어납니다. (흡수한 <span class=\"color0bf7de\">영혼</span> 수 + 총 공격력의 최대 {{ e3 }}%)<br /><br /><span class=\"colorFF9900\">사용 시: </span>등 뒤에서부터 일직선 상에 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 이 스킬에 맞은 적들은 낫을 휘두른 방향으로 밀려난 다음, {{ e4 }}초간 {{ e2 }}%만큼 느려집니다.<br /><br />적 방향으로 사용하면 적을 멀리 밀쳐내고, 아군 방향으로 시전하면 적을 아군 방향으로 당겨올 수 있습니다.","sanitizedTooltip":"기본 지속 효과: 기본 공격 시 {{ f3 }} ~ {{ f3 }} (+{{ f2 }})의 추가 마법 피해를 입힙니다. 공격을 하지 않고 있는 시간이 길어질수록 추가 마법 피해가 늘어납니다. (흡수한 영혼 수 + 총 공격력의 최대 {{ e3 }}%) 사용 시: 등 뒤에서부터 일직선 상에 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이 스킬에 맞은 적들은 낫을 휘두른 방향으로 밀려난 다음, {{ e4 }}초간 {{ e2 }}%만큼 느려집니다. 적 방향으로 사용하면 적을 멀리 밀쳐내고, 아군 방향으로 시전하면 적을 아군 방향으로 당겨올 수 있습니다.","leveltip":{"label":["기본 피해량","사용 시 피해량","둔화","마나 소모량"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ThreshE.png","sprite":"spell11.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[65,95,125,155,185],[20,25,30,35,40],[80,110,140,170,200],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/95/125/155/185","20/25/30/35/40","80/110/140/170/200","1","1","1","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"ThreshE"},{"name":"영혼 감옥","description":"벽으로 된 감옥이 부서지면 둔화를 일으키며 피해를 입힙니다.","sanitizedDescription":"벽으로 된 감옥이 부서지면 둔화를 일으키며 피해를 입힙니다.","tooltip":"자신을 둘러싼 영혼 감옥을 생성합니다. 장벽을 통과하는 적 챔피언은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 {{ e2 }}초간 속도가 {{ e3 }}% 느려지는 대신, 통과한 벽은 허물어집니다.<br /><br />벽 하나가 무너지면 나머지 벽에서는 피해를 입히지 않고, 절반의 둔화 지속 시간이 적용됩니다. 적 하나 당 한 번에 한 개의 벽만 영향을 줍니다.","sanitizedTooltip":"자신을 둘러싼 영혼 감옥을 생성합니다. 장벽을 통과하는 적 챔피언은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 {{ e2 }}초간 속도가 {{ e3 }}% 느려지는 대신, 통과한 벽은 허물어집니다. 벽 하나가 무너지면 나머지 벽에서는 피해를 입히지 않고, 절반의 둔화 지속 시간이 적용됩니다. 적 하나 당 한 번에 한 개의 벽만 영향을 줍니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ThreshRPenta.png","sprite":"spell11.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,120,100],"cooldownBurn":"140/120/100","effect":[null,[250,400,550],[2,2,2],[99,99,99],[4,4,4],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","250/400/550","2","99","4","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[450,450,450],"rangeBurn":"450","key":"ThreshRPenta"}],"passive":{"name":"지옥살이","description":"쓰레쉬는 근처에서 처치된 적의 영혼을 포획해 방어력과 주문력을 영구적으로 올릴 수 있습니다.","sanitizedDescription":"쓰레쉬는 근처에서 처치된 적의 영혼을 포획해 방어력과 주문력을 영구적으로 올릴 수 있습니다.","image":{"full":"Thresh_Passive.png","sprite":"passive3.png","group":"passive","x":48,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Thresh","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3751,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3751,"count":1},{"id":1031,"count":1},{"id":3068,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3110,"count":1},{"id":3050,"count":1},{"id":3190,"count":1}]}]},{"champion":"Thresh","title":"ThreshARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3190,"count":1},{"id":3111,"count":1},{"id":3109,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3742,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3001,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Thresh","title":"ThreshCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Thresh","title":"ThreshFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3302,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Thresh","title":"ThreshKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3190,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3742,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3110,"count":1},{"id":3102,"count":1},{"id":3222,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Thresh","title":"ThreshSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]}]},{"champion":"Thresh","title":"ThreshSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Thresh","title":"ThreshTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":3302,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3105,"count":1},{"id":3401,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3025,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3190,"count":1},{"id":3110,"count":1},{"id":3068,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Karma":{"id":43,"key":"Karma","name":"카르마","title":"깨우친 자","image":{"full":"Karma.png","sprite":"champion1.png","group":"champion","x":384,"y":48,"w":48,"h":48},"skins":[{"id":43000,"name":"default","num":0},{"id":43001,"name":"태양의 여신 카르마","num":1},{"id":43002,"name":"사쿠라 카르마","num":2},{"id":43003,"name":"(구) 카르마","num":3},{"id":43004,"name":"연꽃 수도회 카르마","num":4},{"id":43005,"name":"심판자 카르마","num":5},{"id":43006,"name":"겨울 동화 카르마","num":6},{"id":43007,"name":"정복자 카르마","num":7}],"lore":"아이오니아의 영적인 전통을 카르마보다 잘 나타내는 챔피언이 있을까. 카르마는 지난 시간 동안 축적된 기억을 새로운 생명으로 온존하며 수없이 부활한 고대 영혼의 살아있는 현신이다. 이렇게 얻은 통찰력으로 카르마는 자신을 따르는 이들에게 영적인 길잡이 역할을 하며, 위기가 닥칠 때마다 끝없는 지혜와 치유를 베푼다. 극소수만이 깨우칠 수 있는 힘을 손에 넣었지만, 카르마가 파괴를 위해 마법을 사용하는 일은 거의 없다. 카르마 자신과 그녀가 그토록 아끼는 조국 모두가 상당한 대가를 치러야 하기 때문이다.","blurb":"아이오니아의 영적인 전통을 카르마보다 잘 나타내는 챔피언이 있을까. 카르마는 지난 시간 동안 축적된 기억을 새로운 생명으로 온존하며 수없이 부활한 고대 영혼의 살아있는 현신이다. 이렇게 얻은 통찰력으로 카르마는 자신을 따르는 이들에게 영적인 길잡이 역할을 하며, 위기가 닥칠 때마다 끝없는 지혜와 치유를 베푼다. 극소수만이 깨우칠 수 있는 힘을 손에 넣었지만, 카르마가 파괴를 위해 마법을 사용하는 일은 거의 없다. 카르마 자신과 그녀가 그토록 아끼는...","allytips":["- 열정 응집은 공격적인 플레이 시 빛을 발합니다. 적에게 스킬이나 기본 공격을 맞혀서 만트라의 재사용 대기시간을 줄이면서 계속 공세를 펼치세요.","- 굳은 결의를 시전할 때 적을 따라잡기 힘들 때는 내면의 열정으로 적에게 둔화를 걸거나 고무로 자신의 속도를 높여 보세요.","- 만트라는 아낄 필요가 없습니다. 열정 응집은 팀간 교전 시 위력을 발휘하며 만트라를 여러 번 재충전하게 만들어 줍니다."],"enemytips":["- 카르마의 기본 지속 효과는 스킬이나 기본 공격으로 적 챔피언을 맞힐 때마다 만트라의 재사용 대기시간을 줄여줍니다. 카르마가 쉽사리 맞힐 수 없도록 잘 피하세요.","- 카르마의 영혼의 불꽃이 터지면 해당 위치에 추가 피해를 줍니다. 빠르게 원형 범위를 벗어나도록 하세요.","- 굳은 결의는 강력한 무력화 스킬입니다. 거리를 확보하여 속박을 피한 다음 다시 접근하도록 하세요."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":1,"defense":7,"magic":8,"difficulty":5},"stats":{"armor":20.384,"armorperlevel":3.8,"attackdamage":53.544,"attackdamageperlevel":3.3,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":2.3,"crit":0,"critperlevel":0,"hp":534,"hpperlevel":95,"hpregen":5.624,"hpregenperlevel":0.55,"movespeed":335,"mp":374,"mpperlevel":50,"mpregen":8.5,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"내면의 열정","description":"카르마가 영적인 에너지의 구체를 전방으로 던져, 적 유닛에게 부딪치면 폭발하며 피해를 입힙니다.<br><br>만트라 추가 효과: 만트라가 내면의 열정의 위력을 강화하여, 구체가 폭발한 잠시 후 원형 범위 내에 피해를 가합니다.","sanitizedDescription":"카르마가 영적인 에너지의 구체를 전방으로 던져, 적 유닛에게 부딪치면 폭발하며 피해를 입힙니다. 만트라 추가 효과: 만트라가 내면의 열정의 위력을 강화하여, 구체가 폭발한 잠시 후 원형 범위 내에 피해를 가합니다.","tooltip":"에너지의 구체를 발사합니다. 구체는 적과 닿으면 폭발하며 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 {{ e2 }}% 둔화시킵니다.<br /><br /><span class=\"colorFF9900\">만트라 추가 효과 - 영혼의 불꽃:</span> {{ f1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입히고 원형의 불꽃을 남겨 적을 {{ f3 }}% 둔화시킵니다. 1.5초가 흐르면 원이 터지면서 해당 범위 안의 적에게 {{ f2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"에너지의 구체를 발사합니다. 구체는 적과 닿으면 폭발하며 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 {{ e2 }}% 둔화시킵니다. 만트라 추가 효과 - 영혼의 불꽃: {{ f1 }} (+{{ a2 }})의 추가 마법 피해를 입히고 원형의 불꽃을 남겨 적을 {{ f3 }}% 둔화시킵니다. 1.5초가 흐르면 원이 터지면서 해당 범위 안의 적에게 {{ f2 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KarmaQ.png","sprite":"spell5.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[80,125,170,215,260],[25,25,25,25,25],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/125/170/215/260","25","1.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]},{"key":"f1","link":"@text","coeff":[25,75,125,175]},{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"f2","link":"@text","coeff":[50,150,250,350]},{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[950,950,950,950,950],"rangeBurn":"950","key":"KarmaQ"},{"name":"굳은 결의","description":"카르마가 자신과 대상 적 사이에 끈을 만들어 피해를 주고 연결된 적의 위치를 드러냅니다. 끈이 끊어지지 않으면 적은 발이 묶이고 피해를 한 번 더 입습니다.<br><br>만트라 추가 효과: 카르마가 결속을 강화하여 체력을 회복하며 속박 지속 시간이 증가합니다.","sanitizedDescription":"카르마가 자신과 대상 적 사이에 끈을 만들어 피해를 주고 연결된 적의 위치를 드러냅니다. 끈이 끊어지지 않으면 적은 발이 묶이고 피해를 한 번 더 입습니다. 만트라 추가 효과: 카르마가 결속을 강화하여 체력을 회복하며 속박 지속 시간이 증가합니다.","tooltip":"카르마가 적 챔피언이나 몬스터와 연결되어 {{ effect1amount*0.5 }} <span class=\"color99FF99\">(+{{ f4 }}) </span>의 마법 피해를 입히고 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. {{ e3 }}초 동안 끈이 끊어지지 않으면 대상 적을 {{ e2 }}초 동안 제자리에 묶고 {{ effect1amount*0.5 }} <span class=\"color99FF99\">(+{{ f4 }}) </span>의 추가 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">만트라 추가 효과 - 재생:</span> 카르마가 잃은 체력의 {{ f1 }}% <span class=\"color99FF99\">(+{{ f3 }}%)</span>가 회복됩니다. 끈이 끊어지지 않거나 대상이 죽으면 속박의 지속 시간이 {{ f2 }}초 증가하고, 카르마가 잃은 체력의 {{ f1 }}% <span class=\"color99FF99\">(+{{ f3 }}%)</span>만큼 다시 치유됩니다.","sanitizedTooltip":"카르마가 적 챔피언이나 몬스터와 연결되어 {{ effect1amount*0.5 }} (+{{ f4 }}) 의 마법 피해를 입히고 절대 시야를 얻습니다. {{ e3 }}초 동안 끈이 끊어지지 않으면 대상 적을 {{ e2 }}초 동안 제자리에 묶고 {{ effect1amount*0.5 }} (+{{ f4 }}) 의 추가 마법 피해를 입힙니다. 만트라 추가 효과 - 재생: 카르마가 잃은 체력의 {{ f1 }}% (+{{ f3 }}%)가 회복됩니다. 끈이 끊어지지 않거나 대상이 죽으면 속박의 지속 시간이 {{ f2 }}초 증가하고, 카르마가 잃은 체력의 {{ f1 }}% (+{{ f3 }}%)만큼 다시 치유됩니다.","leveltip":{"label":["피해량","속박 지속 시간","마나 소모량"],"effect":["{{ effect1amount*0.5 }} -> {{ effect1amountnl*0.5 }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KarmaSpiritBind.png","sprite":"spell5.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,110,160,210,260],[1,1.25,1.5,1.75,2],[2,2,2,2,2],[2,2,2,2,2],[825,825,825,825,825],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/110/160/210/260","1/1.25/1.5/1.75/2","2","2","825","0","0","0","0","0"],"vars":[{"key":"f1","link":"@text","coeff":[75,150,225,300]},{"key":"f1","link":"@text","coeff":[75,150,225,300]}],"range":[675,675,675,675,675],"rangeBurn":"675","key":"KarmaSpiritBind"},{"name":"고무","description":"카르마가 보호막을 소환하여 적이 가하는 피해를 막아내고, 보호받는 아군은 이동 속도가 상승합니다.<br><br>만트라 추가 효과: 대상에게서 에너지가 흘러나와 보호막을 강화하고 주변 아군 챔피언들을 고무시킵니다.","sanitizedDescription":"카르마가 보호막을 소환하여 적이 가하는 피해를 막아내고, 보호받는 아군은 이동 속도가 상승합니다. 만트라 추가 효과: 대상에게서 에너지가 흘러나와 보호막을 강화하고 주변 아군 챔피언들을 고무시킵니다.","tooltip":"대상 아군에게 보호막이 씌워져 {{ e2 }}초 동안 이동 속도가 {{ e3 }}% 상승하며, {{ e4 }} 초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 흡수합니다.<br /><br /><span class=\"colorFF9900\">만트라 추가 효과 - 저항:</span> 보호막에 에너지가 흘러넘쳐, 카르마의 대상에 가해지는 {{ f1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 피해를 추가로 흡수합니다. 근처의 아군 챔피언들은 최초 대상에 대한 보호막의 {{ f2 }}%에 해당하는 피해를 흡수하는 보호막을 얻습니다. 보호막을 얻은 모든 챔피언은 {{ e2 }}초 동안 이동 속도가 {{ f3 }}% 상승합니다.","sanitizedTooltip":"대상 아군에게 보호막이 씌워져 {{ e2 }}초 동안 이동 속도가 {{ e3 }}% 상승하며, {{ e4 }} 초 동안 {{ e1 }} (+{{ a1 }})의 피해를 흡수합니다. 만트라 추가 효과 - 저항: 보호막에 에너지가 흘러넘쳐, 카르마의 대상에 가해지는 {{ f1 }} (+{{ a2 }})의 피해를 추가로 흡수합니다. 근처의 아군 챔피언들은 최초 대상에 대한 보호막의 {{ f2 }}%에 해당하는 피해를 흡수하는 보호막을 얻습니다. 보호막을 얻은 모든 챔피언은 {{ e2 }}초 동안 이동 속도가 {{ f3 }}% 상승합니다.","leveltip":{"label":["피해 흡수량","이동 속도","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KarmaSolKimShield.png","sprite":"spell5.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[10,9.5,9,8.5,8],"cooldownBurn":"10/9.5/9/8.5/8","effect":[null,[70,95,120,145,170],[1.5,1.5,1.5,1.5,1.5],[40,45,50,55,60],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/95/120/145/170","1.5","40/45/50/55/60","4","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"f1","link":"@text","coeff":[60,140,220,300]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"KarmaSolKimShield"},{"name":"만트라","description":"카르마가 다음 스킬을 강화하여 추가 효과를 부여합니다. 만트라는 레벨 1부터 사용할 수 있으며 스킬 포인트가 필요 없습니다.","sanitizedDescription":"카르마가 다음 스킬을 강화하여 추가 효과를 부여합니다. 만트라는 레벨 1부터 사용할 수 있으며 스킬 포인트가 필요 없습니다.","tooltip":"카르마가 8초 동안 다음 스킬을 강화하여 추가 효과를 부여합니다.<br /><br /><span class=\"colorFF9900\">영혼의 불꽃: </span>추가 마법 피해를 입히며 원모양의 불꽃을 남겨, 적들의 이동 속도를 대폭 늦추고 잠시 후 추가 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">재생: </span>카르마가 잃은 체력의 일부를 회복합니다. 끈이 끊어지지 않으면 속박의 지속 시간이 연장되며 카르마의 체력이 또 한 번 회복됩니다.<br /><br /><span class=\"colorFF9900\">저항: </span>카르마의 보호막이 강화됩니다. 근처의 아군 챔피언들 역시 보호막을 얻으며 이동 속도도 상승합니다.","sanitizedTooltip":"카르마가 8초 동안 다음 스킬을 강화하여 추가 효과를 부여합니다. 영혼의 불꽃: 추가 마법 피해를 입히며 원모양의 불꽃을 남겨, 적들의 이동 속도를 대폭 늦추고 잠시 후 추가 피해를 입힙니다. 재생: 카르마가 잃은 체력의 일부를 회복합니다. 끈이 끊어지지 않으면 속박의 지속 시간이 연장되며 카르마의 체력이 또 한 번 회복됩니다. 저항: 카르마의 보호막이 강화됩니다. 근처의 아군 챔피언들 역시 보호막을 얻으며 이동 속도도 상승합니다.","leveltip":{"label":["영혼의 불꽃 타격","영혼의 불꽃 피해량","재생 속박 연장","저항 보호막","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e5 }} -> {{ e5NL }}","{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KarmaMantra.png","sprite":"spell5.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":4,"cost":[0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[45,42,39,36],"cooldownBurn":"45/42/39/36","effect":[null,[25,75,125,175],[50,150,250,350],[0.5,0.5,0.5,0.5],[1.5,1.5,1.5,1.5],[0.5,0.75,1,1.25],[0.2,0.2,0.2,0.2],[30,90,150,210],[0.6,0.6,0.6,0.6],[0.3,0.3,0.3,0.3],[0.01,0.01,0.01,0.01]],"effectBurn":["","25/75/125/175","50/150/250/350","0.5","1.5","0.5/0.75/1/1.25","0.2","30/90/150/210","0.6","0.3","0.01"],"range":[1100,1100,1100,1100],"rangeBurn":"1100","key":"KarmaMantra"}],"passive":{"name":"열정 응집","description":"카르마가 스킬로 적 챔피언에게 피해를 입힐 때마다 만트라의 재사용 대기시간이 감소합니다. (기본 공격으로 피해를 입힐 때는 절반의 효과)","sanitizedDescription":"카르마가 스킬로 적 챔피언에게 피해를 입힐 때마다 만트라의 재사용 대기시간이 감소합니다. (기본 공격으로 피해를 입힐 때는 절반의 효과)","image":{"full":"Karma_Passive.png","sprite":"passive1.png","group":"passive","x":384,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Karma","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3089,"count":1}]}]},{"champion":"Karma","title":"KarmaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3504,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karma","title":"KarmaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3098,"count":1},{"id":1001,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3092,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3504,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karma","title":"KarmaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2049,"count":1},{"id":3092,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3174,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karma","title":"KarmaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3504,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karma","title":"KarmaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3092,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3504,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]}]},{"champion":"Karma","title":"KarmaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3098,"count":1},{"id":1001,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2301,"count":1},{"id":3092,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3504,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karma","title":"KarmaSRMid","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3028,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3174,"count":1},{"id":3504,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2139,"count":1},{"id":2055,"count":1}]}]},{"champion":"Karma","title":"KarmaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3090,"count":1},{"id":3136,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3170,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Jhin":{"id":202,"key":"Jhin","name":"진","title":"잔혹극의 거장","image":{"full":"Jhin.png","sprite":"champion1.png","group":"champion","x":240,"y":48,"w":48,"h":48},"skins":[{"id":202000,"name":"default","num":0},{"id":202001,"name":"하이 눈 진","num":1},{"id":202002,"name":"불의 축제 진","num":2},{"id":202003,"name":"SKT T1 진","num":3},{"id":202004,"name":"프로젝트: 진","num":4}],"lore":"진은 살인이 예술이라고 믿는 주도면밀한 사이코패스 살인범이다. 원래는 아이오니아의 감옥에 수감되어 있었는데, 아이오니아 평의회 내에서 암약하는 어두운 세력의 힘으로 풀려난 이후 그 파벌의 자객으로 일하고 있다. 진은 총을 붓 삼아 잔혹한 그림을 그리는 화가이자, 소름끼치는 작품을 무대에 올리며 쾌락을 느끼는 극작가다. 그 솜씨를 접하는 피해자와 목격자들은 모두 얼어붙을 수밖에 없다. 누군가에게 '공포'라는 강렬한 메시지를 전하고 싶다면, 진이야말로 그 일을 맡길 최고의 적임자일 것이다.","blurb":"진은 살인이 예술이라고 믿는 주도면밀한 사이코패스 살인범이다. 원래는 아이오니아의 감옥에 수감되어 있었는데, 아이오니아 평의회 내에서 암약하는 어두운 세력의 힘으로 풀려난 이후 그 파벌의 자객으로 일하고 있다. 진은 총을 붓 삼아 잔혹한 그림을 그리는 화가이자, 소름끼치는 작품을 무대에 올리며 쾌락을 느끼는 극작가다. 그 솜씨를 접하는 피해자와 목격자들은 모두 얼어붙을 수밖에 없다. 누군가에게 '공포'라는 강렬한 메시지를 전하고 싶다면, 진이야말로...","allytips":["- 살상연희 스킬은 범위가 매우 넓습니다. 전투에 참여하기 전에 미리 적을 함정에 빠뜨려 속박시킬 계획을 짜두세요.","- 대상의 체력이 가득하다면 궁극기로 입힐 수 있는 피해량이 크게 줄어듭니다. 적이 약해진 후 도망칠 때를 노려서 처치하세요.","- 재장전 중에도 스킬은 사용할 수 있습니다. 기본 공격을 할 수 없을 때는 스킬을 사용하세요."],"enemytips":["- 살상연희 스킬은 최근 4초 안에 진의 기본 공격이나 함정, 또는 진의 아군에게 공격당한 적들만을 속박시킵니다.","- 진은 맵 여기저기에 보이지 않는 함정을 설치합니다. 조심하세요!","- 진은 화력이 꽤 강력하지만, 4발을 발사하면 탄환이 떨어집니다. 이 순간을 놓치지 말고 달려들어 쓰러뜨리세요."],"tags":["Marksman","Assassin"],"partype":"마나","info":{"attack":10,"defense":2,"magic":6,"difficulty":6},"stats":{"armor":29,"armorperlevel":3.5,"attackdamage":61,"attackdamageperlevel":4,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":0,"crit":0,"critperlevel":0,"hp":540,"hpperlevel":85,"hpregen":6,"hpregenperlevel":0.55,"movespeed":330,"mp":300,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"춤추는 유탄","description":"진이 마법 폭탄을 적에게 던집니다. 최대 네 명의 대상에게 적중하며, 적을 처치할 때마다 피해량이 증가합니다.","sanitizedDescription":"진이 마법 폭탄을 적에게 던집니다. 최대 네 명의 대상에게 적중하며, 적을 처치할 때마다 피해량이 증가합니다.","tooltip":"진이 대상 적에게 폭탄을 던져 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }}) </span>의 물리 피해를 입힌 후 아직 이 폭탄에 맞지 않은 근처의 적에게 튕깁니다.<br /><br />폭탄은 최대 4번까지 적을 맞힐 수 있으며, 적을 처치할 때마다 그 다음 타격의 피해량이 {{ e2 }}%씩 늘어납니다.","sanitizedTooltip":"진이 대상 적에게 폭탄을 던져 {{ e1 }} (+{{ f1 }}) (+{{ a1 }}) 의 물리 피해를 입힌 후 아직 이 폭탄에 맞지 않은 근처의 적에게 튕깁니다. 폭탄은 최대 4번까지 적을 맞힐 수 있으며, 적을 처치할 때마다 그 다음 타격의 피해량이 {{ e2 }}%씩 늘어납니다.","leveltip":{"label":["피해량","총 공격력 계수","재사용 대기시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JhinQ.png","sprite":"spell4.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[45,70,95,120,145],[35,35,35,35,35],[0.4,0.45,0.5,0.55,0.6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","45/70/95/120/145","35","0.4/0.45/0.5/0.55/0.6","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"JhinQ"},{"name":"살상연희","description":"진이 지휘봉을 휘두르며 엄청난 사거리를 지닌 한 발의 탄환을 발사합니다. 미니언과 몬스터는 관통하지만 챔피언에 맞으면 정지합니다. 적중한 대상이 좀 전에 진의 아군이나 진의 연꽃 함정, 기본 공격에 피해를 입었다면 속박됩니다.","sanitizedDescription":"진이 지휘봉을 휘두르며 엄청난 사거리를 지닌 한 발의 탄환을 발사합니다. 미니언과 몬스터는 관통하지만 챔피언에 맞으면 정지합니다. 적중한 대상이 좀 전에 진의 아군이나 진의 연꽃 함정, 기본 공격에 피해를 입었다면 속박됩니다.","tooltip":"진이 적 챔피언에게 처음 적중하면 멈추는 탄환으로 장거리 저격을 실시해 대상에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 도중에 관통당한 미니언과 몬스터는 {{ e4 }}%의 피해를 입습니다.<br /><br />살상연희 스킬로 지난 4초 안에 진의 기본 공격, 연꽃 함정에 적중당했거나 진의 아군에게 공격당한 적을 맞히면, {{ e2 }}초간 대상을 속박시키며 <span class=\"colorFF5802\">치명타</span>를 가했을 때처럼 진의 이동 속도가 증가합니다.","sanitizedTooltip":"진이 적 챔피언에게 처음 적중하면 멈추는 탄환으로 장거리 저격을 실시해 대상에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 도중에 관통당한 미니언과 몬스터는 {{ e4 }}%의 피해를 입습니다. 살상연희 스킬로 지난 4초 안에 진의 기본 공격, 연꽃 함정에 적중당했거나 진의 아군에게 공격당한 적을 맞히면, {{ e2 }}초간 대상을 속박시키며 치명타를 가했을 때처럼 진의 이동 속도가 증가합니다.","leveltip":{"label":["피해량","속박 지속 시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JhinW.png","sprite":"spell5.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[14,14,14,14,14],"cooldownBurn":"14","effect":[null,[50,85,120,155,190],[0.75,1,1.25,1.5,1.75],[0,0,0,0,0],[75,75,75,75,75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/85/120/155/190","0.75/1/1.25/1.5/1.75","0","75","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.5]}],"range":[3000,3000,3000,3000,3000],"rangeBurn":"3000","key":"JhinW"},{"name":"강제 관람","description":"진이 은신 상태에 있다가 밟으면 작동하는 연꽃 함정을 설치합니다. 함정이 작동하면 주위 적을 둔화시킨 후 날카로운 꽃잎들이 폭발하며 피해를 입힙니다.<br><br><font color='#FFFFFF'>죽음의 미학 -</font> 진이 적 챔피언을 처치하면 사망한 챔피언 주위에 연꽃 함정이 피어납니다.","sanitizedDescription":"진이 은신 상태에 있다가 밟으면 작동하는 연꽃 함정을 설치합니다. 함정이 작동하면 주위 적을 둔화시킨 후 날카로운 꽃잎들이 폭발하며 피해를 입힙니다. 죽음의 미학 - 진이 적 챔피언을 처치하면 사망한 챔피언 주위에 연꽃 함정이 피어납니다.","tooltip":"진이 보이지 않는 연꽃 함정을 설치합니다. 연꽃 함정은 {{ e5 }}분간 지속되며 밟으면 작동하여, 주변 적을 4초간 드러냅니다.<br /><br />연꽃 함정은 그 안의 모든 적을 {{ e7 }}% 둔화시키는 영역을 생성하며, 2초 후에 폭발하여 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다. (같은 대상에 두 번 이상 적중하는 경우 및 미니언과 몬스터에겐 {{ e1 }}%의 피해를 입힙니다.)<br /><br />진은 매 <span class=\"colorFFFFFF\">{{ f1 }}</span>초마다 새 덫을 준비하며 한 번에 2개까지 소지할 수 있습니다.<br /><br /><span class=\"colorFFFFFF\">죽음의 미학 -</span> 진이 적 챔피언을 처치하면 그 위치에 연꽃 함정이 생성되어 폭발합니다.","sanitizedTooltip":"진이 보이지 않는 연꽃 함정을 설치합니다. 연꽃 함정은 {{ e5 }}분간 지속되며 밟으면 작동하여, 주변 적을 4초간 드러냅니다. 연꽃 함정은 그 안의 모든 적을 {{ e7 }}% 둔화시키는 영역을 생성하며, 2초 후에 폭발하여 {{ e2 }} (+{{ a1 }}) (+{{ a2 }})의 마법 피해를 입힙니다. (같은 대상에 두 번 이상 적중하는 경우 및 미니언과 몬스터에겐 {{ e1 }}%의 피해를 입힙니다.) 진은 매 {{ f1 }}초마다 새 덫을 준비하며 한 번에 2개까지 소지할 수 있습니다. 죽음의 미학 - 진이 적 챔피언을 처치하면 그 위치에 연꽃 함정이 생성되어 폭발합니다.","leveltip":{"label":["피해량","충전 시간","마나 소모"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ f1 }} -> {{ f2 }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JhinE.png","sprite":"spell5.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,35,40,45,50],"costBurn":"30/35/40/45/50","cooldown":[2,2,2,2,2],"cooldownBurn":"2","effect":[null,[65,65,65,65,65],[20,80,140,200,260],[0,0,0,0,0],[0.75,0.75,0.75,0.75,0.75],[2,2,2,2,2],[0,0,0,0,0],[35,35,35,35,35],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65","20/80/140/200/260","0","0.75","2","0","35","1","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.2]},{"key":"a2","link":"spelldamage","coeff":[1]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"JhinE"},{"name":"커튼 콜","description":"진이 정신 집중을 해 속삭임을 견착식 저격포로 변신시킵니다. 엄청난 사거리에서 4발의 강력한 탄환을 발사하며, 탄환은 미니언과 몬스터는 관통하지만 챔피언에 맞으면 정지합니다. 적중당한 적은 둔화되며 잃은 체력에 비례한 추가 피해를 입습니다. 특별히 완벽하게 세공된 4번째 탄환은 더욱 강력하여 항상 치명타가 적용됩니다.","sanitizedDescription":"진이 정신 집중을 해 속삭임을 견착식 저격포로 변신시킵니다. 엄청난 사거리에서 4발의 강력한 탄환을 발사하며, 탄환은 미니언과 몬스터는 관통하지만 챔피언에 맞으면 정지합니다. 적중당한 적은 둔화되며 잃은 체력에 비례한 추가 피해를 입습니다. 특별히 완벽하게 세공된 4번째 탄환은 더욱 강력하여 항상 치명타가 적용됩니다.","tooltip":"진이 자세를 잡고 정신을 집중해 4발의 강력한 탄환을 전방 부채꼴 범위로 매우 먼 거리까지 발사할 수 있게 됩니다. 이 공격은 적 챔피언에게 처음 적중하면 멈추며, 대상을 {{ e4 }}초 동안 {{ e3 }}% 둔화시키고 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 피해량은 대상의 잃은 체력 1%마다 {{ e5 }}%씩 증가해 최대 {{ f2 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span>까지 늘어납니다. 4번째 공격은 <span class=\"colorFF5802\">치명타</span>가 적용되어 <span class=\"colorFFFFFF\">{{ f1 }}%</span>의 피해를 입힙니다.","sanitizedTooltip":"진이 자세를 잡고 정신을 집중해 4발의 강력한 탄환을 전방 부채꼴 범위로 매우 먼 거리까지 발사할 수 있게 됩니다. 이 공격은 적 챔피언에게 처음 적중하면 멈추며, 대상을 {{ e4 }}초 동안 {{ e3 }}% 둔화시키고 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 피해량은 대상의 잃은 체력 1%마다 {{ e5 }}%씩 증가해 최대 {{ f2 }} (+{{ f3 }})까지 늘어납니다. 4번째 공격은 치명타가 적용되어 {{ f1 }}%의 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JhinR.png","sprite":"spell5.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[50,115,180],[200,200,200],[80,80,80],[0.5,0.5,0.5],[2.5,2.5,2.5],[1,1,1],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","50/115/180","200","80","0.5","2.5","1","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.2]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"JhinR"}],"passive":{"name":"속삭임","description":"'속삭임'이라고 불리는 진의 총은 우월한 살상력을 위해 설계된 정밀 기계입니다. 발사 속도는 고정되어 있으며 총탄은 네 발만 장전됩니다. 네 발째 총탄은 진의 어두운 마법에 물들어 항상 치명타를 입히며 잃은 체력에 비례한 피해를 추가로 입힙니다. 속삭임으로 치명타를 발동시키면, 진의 이동 속도가 잠깐 동안 크게 상승합니다.","sanitizedDescription":"'속삭임'이라고 불리는 진의 총은 우월한 살상력을 위해 설계된 정밀 기계입니다. 발사 속도는 고정되어 있으며 총탄은 네 발만 장전됩니다. 네 발째 총탄은 진의 어두운 마법에 물들어 항상 치명타를 입히며 잃은 체력에 비례한 피해를 추가로 입힙니다. 속삭임으로 치명타를 발동시키면, 진의 이동 속도가 잠깐 동안 크게 상승합니다.","image":{"full":"Jhin_P.png","sprite":"passive1.png","group":"passive","x":240,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Jhin","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3087,"count":1},{"id":3031,"count":1},{"id":3094,"count":1},{"id":3508,"count":1}]}]},{"champion":"Jhin","title":"JhinARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3508,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jhin","title":"JhinCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3009,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3036,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jhin","title":"JhinKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3508,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jhin","title":"JhinPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3009,"count":1},{"id":3508,"count":1},{"id":3094,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3147,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3814,"count":1},{"id":3031,"count":1},{"id":3139,"count":1}]}]},{"champion":"Jhin","title":"JhinSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3009,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3036,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]}]},{"champion":"Jhin","title":"JhinSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3009,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jhin","title":"JhinTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":3086,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3036,"count":1},{"id":3156,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Rumble":{"id":68,"key":"Rumble","name":"럼블","title":"기계 악동","image":{"full":"Rumble.png","sprite":"champion3.png","group":"champion","x":96,"y":0,"w":48,"h":48},"skins":[{"id":68000,"name":"default","num":0},{"id":68001,"name":"정글 속 럼블","num":1},{"id":68002,"name":"빌지워터 럼블","num":2},{"id":68003,"name":"슈퍼 갤럭시 럼블","num":3}],"lore":"럼블은 성질 급한 젊은 발명가이다. 럼블은 오로지 자신의 두 손과 고철 더미를 사용해 전기 작살과 방화기를 장착한 거대 기계 로봇을 거침없이 제작했다. 다른 이들이 고철로 만든 럼블의 작품을 비웃고 조롱할지라도 럼블은 신경 쓰지 않는다. 결국 화염방사기를 가진 사람은 자신이니까.","blurb":"럼블은 성질 급한 젊은 발명가이다. 럼블은 오로지 자신의 두 손과 고철 더미를 사용해 전기 작살과 방화기를 장착한 거대 기계 로봇을 거침없이 제작했다. 다른 이들이 고철로 만든 럼블의 작품을 비웃고 조롱할지라도 럼블은 신경 쓰지 않는다. 결국 화염방사기를 가진 사람은 자신이니까.","allytips":["- 위험 상태 효과를 유지하면 스킬의 효율을 높일 수 있습니다. 하지만 스킬을 연달아 사용하면 쉽게 과열 상태가 됩니다.","- 목표가 화염방사기 발사 거리에서 벗어나지 않도록 하십시오. 오랜 시간에 걸쳐 큰 피해를 입힐 수 있습니다.","- 전투에서 이기고 있다면 궁극기를 사용하여 적의 탈출로를 막으십시오."],"enemytips":["- 럼블의 열기 게이지를 주의 깊게 살피십시오. 과열 상태가 되어 스킬을 쓸 수 없는 상태가 되면 가까이 다가가 처치하십시오.","- 럼블의 궁극기는 영향 지역 안에 있는 유닛에게 큰 피해를 줄 수 있습니다. 미사일이 떨어지는 게 보이면 최대한 빨리 대피하십시오.","- 럼블의 스킬은 거의 대부분 마법 피해입니다. 큰 피해를 방지하려면 마법 저항력을 높이십시오."],"tags":["Fighter","Mage"],"partype":"열기","info":{"attack":3,"defense":6,"magic":8,"difficulty":10},"stats":{"armor":30.88,"armorperlevel":3.5,"attackdamage":61.036,"attackdamageperlevel":3.2,"attackrange":125,"attackspeedoffset":-0.03,"attackspeedperlevel":1.85,"crit":0,"critperlevel":0,"hp":589,"hpperlevel":85,"hpregen":8.008,"hpregenperlevel":0.6,"movespeed":345,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"화염방사기","description":"럼블이 3초 동안 정면을 향해 원뿔 형태의 공격을 가하며 적에게 불을 붙이고 마법 피해를 입힙니다. 위험 상태일 경우 피해가 증가합니다. ","sanitizedDescription":"럼블이 3초 동안 정면을 향해 원뿔 형태의 공격을 가하며 적에게 불을 붙이고 마법 피해를 입힙니다. 위험 상태일 경우 피해가 증가합니다.","tooltip":"럼블이 화염방사기를 가동하여 전방 원뿔 범위의 적에게 {{ e9 }}초 동안 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다. 미니언에게는 {{ e4 }}%의 피해를 입힙니다.<br /><br /><caution>위험 상태 추가 효과:</caution> {{ e5 }}%의 피해를 입힙니다.","sanitizedTooltip":"럼블이 화염방사기를 가동하여 전방 원뿔 범위의 적에게 {{ e9 }}초 동안 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 미니언에게는 {{ e4 }}%의 피해를 입힙니다. 위험 상태 추가 효과: {{ e5 }}%의 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RumbleFlameThrower.png","sprite":"spell9.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"열 {{ e2 }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[135,180,225,270,315],[20,20,20,20,20],[0,0,0,0,0],[75,75,75,75,75],[150,150,150,150,150],[12,12,12,12,12],[0.25,0.25,0.25,0.25,0.25],[3,3,3,3,3],[3,3,3,3,3],[0,0,0,0,0]],"effectBurn":["","135/180/225/270/315","20","0","75","150","12","0.25","3","3","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1.1]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"RumbleFlameThrower"},{"name":"고철 방패","description":"럼블이 방어막을 전개하여 피해를 입지 않도록 자신을 보호하고 순간적으로 이동 속도를 높입니다. 위험 상태에서는 방어막의 내구력과 럼블의 이동 속도 증가량이 증가합니다. ","sanitizedDescription":"럼블이 방어막을 전개하여 피해를 입지 않도록 자신을 보호하고 순간적으로 이동 속도를 높입니다. 위험 상태에서는 방어막의 내구력과 럼블의 이동 속도 증가량이 증가합니다.","tooltip":"럼블이 {{ e5 }}초 동안 고철 방패로 몸을 감싸 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 피해를 흡수합니다. 또한 {{ e6 }}초 동안 럼블의 이동 속도가 {{ e2 }}% 상승합니다.</span><br /><br /><caution>위험 상태 추가 효과:</caution> 방패의 체력과 이동 속도가 50% 증가합니다.","sanitizedTooltip":"럼블이 {{ e5 }}초 동안 고철 방패로 몸을 감싸 {{ e1 }} (+{{ a1 }})의 피해를 흡수합니다. 또한 {{ e6 }}초 동안 럼블의 이동 속도가 {{ e2 }}% 상승합니다. 위험 상태 추가 효과: 방패의 체력과 이동 속도가 50% 증가합니다.","leveltip":{"label":["피해 흡수","추가 이동 속도"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"RumbleShield.png","sprite":"spell9.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"열 {{ e3 }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[80,110,140,170,200],[10,15,20,25,30],[20,20,20,20,20],[0,0,0,0,0],[1.5,1.5,1.5,1.5,1.5],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/110/140/170/200","10/15/20/25/30","20","0","1.5","1","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[20,20,20,20,20],"rangeBurn":"20","key":"RumbleShield"},{"name":"전기 작살","description":"럼블이 전기 작살을 발사하여 대상을 감전시키고 마법 피해를 입히면서 이동 속도를 감소시킵니다. 럼블은 최대 2개의 작살을 보유할 수 있습니다. 위험 상태일 경우 피해와 적 둔화율이 증가합니다.  ","sanitizedDescription":"럼블이 전기 작살을 발사하여 대상을 감전시키고 마법 피해를 입히면서 이동 속도를 감소시킵니다. 럼블은 최대 2개의 작살을 보유할 수 있습니다. 위험 상태일 경우 피해와 적 둔화율이 증가합니다.","tooltip":"럼블이 2개의 전기 충격기를 발사하여 적에게 {{ e1 }}<scaleAP> (+{{ a1 }})</scaleAP>의 마법 피해를 입히고 {{ e7 }}초 동안 {{ e2 }}%의 둔화 효과를 중첩시킵니다.<br /><br /><caution>위험 상태 추가 효과:</caution> 피해량과 둔화 효과가 50% 증가합니다.","sanitizedTooltip":"럼블이 2개의 전기 충격기를 발사하여 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e7 }}초 동안 {{ e2 }}%의 둔화 효과를 중첩시킵니다. 위험 상태 추가 효과: 피해량과 둔화 효과가 50% 증가합니다.","leveltip":{"label":["피해량","둔화"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"RumbleGrenade.png","sprite":"spell9.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"열 {{ e3 }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[0.5,0.5,0.5,0.5,0.5],"cooldownBurn":"0.5","effect":[null,[60,85,110,135,160],[15,20,25,30,35],[10,10,10,10,10],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[2,2,2,2,2],[30,40,50,60,70],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/85/110/135/160","15/20/25/30/35","10","0","0","0","2","30/40/50/60/70","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[850,850,850,850,850],"rangeBurn":"850","key":"RumbleGrenade"},{"name":"이퀄라이저 미사일","description":"럼블이 로켓을 한꺼번에 발사하여 화염의 벽을 만들면, 해당 지점을 지나는 적은 피해를 입고 속도가 느려집니다. ","sanitizedDescription":"럼블이 로켓을 한꺼번에 발사하여 화염의 벽을 만들면, 해당 지점을 지나는 적은 피해를 입고 속도가 느려집니다.","tooltip":"럼블이 일직선으로 로켓을 발사하여 {{ e5 }}초 동안 불타는 궤적을 만듭니다. 범위 내의 적들은 이동 속도가 {{ e3 }}% 감소하고 {{ e1 }}<scaleAP> (+{{ a2 }})</scaleAP>의 마법 피해를 입습니다.<br /><br /><specialRules>마우스를 클릭 후 드래그하여 공격 위치를 지정할 수 있습니다.</specialRules>","sanitizedTooltip":"럼블이 일직선으로 로켓을 발사하여 {{ e5 }}초 동안 불타는 궤적을 만듭니다. 범위 내의 적들은 이동 속도가 {{ e3 }}% 감소하고 {{ e1 }} (+{{ a2 }})의 마법 피해를 입습니다. 마우스를 클릭 후 드래그하여 공격 위치를 지정할 수 있습니다.","leveltip":{"label":["초당 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RumbleCarpetBomb.png","sprite":"spell9.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[110,100,90],"cooldownBurn":"110/100/90","effect":[null,[130,185,240],[0,0,0],[35,35,35],[0.5,0.5,0.5],[5,5,5],[6,6,6],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","130/185/240","0","35","0.5","5","6","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[1750,1750,1750],"rangeBurn":"1750","key":"RumbleCarpetBomb"}],"passive":{"name":"고철장 거인","description":"럼블은 스킬을 사용할 때마다 열기를 얻습니다. 열기가 50%에 달하면 럼블은 위험 상태에 들어갑니다. 위험 상태가 되면 럼블의 모든 스킬은 추가 효과를 얻습니다. 열기가 100%에 달하면 과열 상태가 되어 기본 공격에 마법 피해가 추가되나 몇 초간 스킬을 사용할 수 없게 됩니다. ","sanitizedDescription":"럼블은 스킬을 사용할 때마다 열기를 얻습니다. 열기가 50%에 달하면 럼블은 위험 상태에 들어갑니다. 위험 상태가 되면 럼블의 모든 스킬은 추가 효과를 얻습니다. 열기가 100%에 달하면 과열 상태가 되어 기본 공격에 마법 피해가 추가되나 몇 초간 스킬을 사용할 수 없게 됩니다.","image":{"full":"Rumble_Junkyard Titan1.png","sprite":"passive3.png","group":"passive","x":96,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Rumble","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1052,"count":1},{"id":3136,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3136,"count":1},{"id":1026,"count":1},{"id":3151,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Rumble","title":"RumbleARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":1026,"count":1},{"id":1001,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rumble","title":"RumbleCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3136,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rumble","title":"RumbleFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1058,"count":1},{"id":3136,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3151,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rumble","title":"RumbleKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Rumble","title":"RumbleSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]}]},{"champion":"Rumble","title":"RumbleSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3136,"count":1},{"id":1026,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3020,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rumble","title":"RumbleTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3170,"count":1},{"id":3152,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Udyr":{"id":77,"key":"Udyr","name":"우디르","title":"정령 주술사","image":{"full":"Udyr.png","sprite":"champion3.png","group":"champion","x":336,"y":96,"w":48,"h":48},"skins":[{"id":77000,"name":"default","num":0},{"id":77001,"name":"검은띠 우디르","num":1},{"id":77002,"name":"태고의 우디르","num":2},{"id":77003,"name":"정령 수호자 우디르","num":3},{"id":77004,"name":"나 우디르 아니다","num":4}],"lore":"호랑이의 민첩성과 흉포함, 거북이의 생명력, 곰의 힘, 불사조의 영원히 꺼지지 않는 불꽃. 이 모든 것은 우디르의 다른 이름이다. 우디르는 고대 정령의 힘을 물려받았고, 이 야성의 힘을 자유자재로 부릴 수 있는 인간을 초월한 존재다. 그는 네 정령의 힘을 끌어내어 자연의 질서를 어지럽히려는 자들로부터 이 땅을 수호해 왔다.","blurb":"호랑이의 민첩성과 흉포함, 거북이의 생명력, 곰의 힘, 불사조의 영원히 꺼지지 않는 불꽃. 이 모든 것은 우디르의 다른 이름이다. 우디르는 고대 정령의 힘을 물려받았고, 이 야성의 힘을 자유자재로 부릴 수 있는 인간을 초월한 존재다. 그는 네 정령의 힘을 끌어내어 자연의 질서를 어지럽히려는 자들로부터 이 땅을 수호해 왔다.","allytips":["- 거북이 태세와 방어 아이템을 함께 사용하면 생존력을 크게 높일 수 있습니다.","- 우디르는 게임 내 최고의 정글 사냥꾼 중 하나입니다. 이 점을 활용하여 팀원들이 보다 많은 경험치를 얻을 수 있고 전장에 대한 지배력을 높일 수 있습니다."],"enemytips":["- 우디르는 주로 정글을 돌며 성장하며, 습격 시에만 모습을 드러냅니다. 주요 위치에 와드를 박아 우디르의 동선을 파악하세요.","- 첫 보호막 효과만 사라지면 거북이 태세는 쉽게 무너뜨릴 수 있습니다. 계속 공격을 퍼부어 우디르가 태세를 바꾸게 만들고, 체력을 재생할 수 없게 하세요.","- 상대 우디르가 탱커용 아이템을 주로 구입한다면, 다른 약한 적을 노려 보세요."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":8,"defense":7,"magic":4,"difficulty":7},"stats":{"armor":34,"armorperlevel":4,"attackdamage":66,"attackdamageperlevel":5,"attackrange":125,"attackspeedoffset":-0.05,"attackspeedperlevel":2.67,"crit":0,"critperlevel":0,"hp":593.32,"hpperlevel":99,"hpregen":6,"hpregenperlevel":0.75,"movespeed":345,"mp":270.4,"mpperlevel":30,"mpregen":7.506,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"호랑이 태세","description":"호랑이 태세: 사용 시 - 우디르의 공격 속도가 몇 초간 상승합니다. 지속 효과 - 우디르가 첫 번째 공격 시, 그리고 세 번 공격할 때마다 2초에 걸쳐 매우 높은 피해를 입힙니다.","sanitizedDescription":"호랑이 태세: 사용 시 - 우디르의 공격 속도가 몇 초간 상승합니다. 지속 효과 - 우디르가 첫 번째 공격 시, 그리고 세 번 공격할 때마다 2초에 걸쳐 매우 높은 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">지속 효과: </span>첫 번째 기본 공격 시, 그리고 세 번 공격할 때마다 호랑이의 일격을 가하며, {{ e5 }}초에 걸쳐 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>의 추가 물리 피해를 입힙니다. <br /><br />호랑이의 일격으로 공격한 적에게 다시 호랑이의 일격으로 공격하면 남은 지속 피해량을 한번에 입힐 수 있습니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> {{ e6 }}초 동안 공격 속도가 {{ e2 }}% 상승합니다.<br /><br /><rules><span class=\"color8c8c8c\">우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.</span></rules>","sanitizedTooltip":"지속 효과: 첫 번째 기본 공격 시, 그리고 세 번 공격할 때마다 호랑이의 일격을 가하며, {{ e5 }}초에 걸쳐 {{ e1 }} (+{{ f2 }})의 추가 물리 피해를 입힙니다. 호랑이의 일격으로 공격한 적에게 다시 호랑이의 일격으로 공격하면 남은 지속 피해량을 한번에 입힐 수 있습니다. 사용 시: {{ e6 }}초 동안 공격 속도가 {{ e2 }}% 상승합니다. 우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.","leveltip":{"label":["호랑이의 일격 피해량","공격 속도","호랑이의 일격 증폭"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e4 }}% -> {{ e4NL }}%"]},"image":{"full":"UdyrTigerStance.png","sprite":"spell12.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[30,60,90,120,150],[30,40,50,60,70],[0.15,0.15,0.15,0.15,0.15],[120,135,150,165,180],[2,2,2,2,2],[5,5,5,5,5],[0.5,0.5,0.5,0.5,0.5],[0.25,0.25,0.25,0.25,0.25],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/60/90/120/150","30/40/50/60/70","0.15","120/135/150/165/180","2","5","0.5","0.25","0","0"],"vars":[{"key":"f2","link":"attackdamage","coeff":[1.2,1.3,1.4,1.5,1.6]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"UdyrTigerStance"},{"name":"거북이 태세","description":"거북이 태세: 사용 시 - 우디르가 피해를 흡수하는 일시적인 보호막을 얻습니다. 지속 효과 - 첫 번째 공격 시, 그리고 세 번 공격할 때마다 우디르 최대 체력의 2.5%가 회복됩니다.","sanitizedDescription":"거북이 태세: 사용 시 - 우디르가 피해를 흡수하는 일시적인 보호막을 얻습니다. 지속 효과 - 첫 번째 공격 시, 그리고 세 번 공격할 때마다 우디르 최대 체력의 2.5%가 회복됩니다.","tooltip":"<span class=\"colorFF9900\">지속 효과: </span>첫 번째 기본 공격 시, 그리고 세 번 공격할 때마다 체력을 <span class=\"colorFF3300\">(+{{ f1 }})</span> (최대 체력의 {{ e3 }}%) 회복합니다. 우디르가 잃은 체력 1%당 체력 회복량도 1%씩 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>{{ e2 }}초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 흡수하는 보호막이 생성됩니다.<br /><br /><rules><span class=\"color8c8c8c\">우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.</span></rules>","sanitizedTooltip":"지속 효과: 첫 번째 기본 공격 시, 그리고 세 번 공격할 때마다 체력을 (+{{ f1 }}) (최대 체력의 {{ e3 }}%) 회복합니다. 우디르가 잃은 체력 1%당 체력 회복량도 1%씩 증가합니다. 사용 시: {{ e2 }}초 동안 {{ e1 }} (+{{ a1 }})의 피해를 흡수하는 보호막이 생성됩니다. 우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.","leveltip":{"label":["보호막 흡수량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"UdyrTurtleStance.png","sprite":"spell12.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[60,95,130,165,200],[5,5,5,5,5],[2.5,2.5,2.5,2.5,2.5],[0.05,0.05,0.05,0.05,0.05],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/95/130/165/200","5","2.5","0.05","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"UdyrTurtleStance"},{"name":"곰 태세","description":"곰 태세: 사용 시 - 우디르가 짧은 시간 동안 이동 속도가 상승합니다. 지속 효과 - 우디르의 기본 공격으로 대상이 1초 동안 기절합니다. 동일한 같은 효과를 일으키려면 몇 초가 경과해야 합니다.","sanitizedDescription":"곰 태세: 사용 시 - 우디르가 짧은 시간 동안 이동 속도가 상승합니다. 지속 효과 - 우디르의 기본 공격으로 대상이 1초 동안 기절합니다. 동일한 같은 효과를 일으키려면 몇 초가 경과해야 합니다.","tooltip":"<span class=\"colorFF9900\">지속 효과: </span>기본 공격 시 대상이 {{ e3 }}초 동안 기절합니다. 이 효과는 {{ e4 }}초 안에 같은 대상에게 다시 적용되지 않습니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>우디르의 이동 속도가 {{ e2 }}초 동안 {{ e1 }}% 증가하며, 이동 시 유닛을 통과합니다.<br /><br /><rules><span class=\"color8c8c8c\">우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.</span></rules>","sanitizedTooltip":"지속 효과: 기본 공격 시 대상이 {{ e3 }}초 동안 기절합니다. 이 효과는 {{ e4 }}초 안에 같은 대상에게 다시 적용되지 않습니다. 사용 시: 우디르의 이동 속도가 {{ e2 }}초 동안 {{ e1 }}% 증가하며, 이동 시 유닛을 통과합니다. 우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.","leveltip":{"label":["이동 속도 증가","이동 속도 지속시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"UdyrBearStance.png","sprite":"spell12.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[15,20,25,30,35],[2,2.25,2.5,2.75,3],[1,1,1,1,1],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/20/25/30/35","2/2.25/2.5/2.75/3","1","5","0","0","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"UdyrBearStance"},{"name":"불사조 태세","description":"불사조 태세: 사용 시 - 우디르가 요동치는 불꽃의 물결을 발사하여 주변 적에게 피해를 입힙니다. 지속 효과 - 우디르가 첫 번째 공격 시, 그리고 세 번 공격할 때마다 정면에 있는 적을 불꽃으로 휘감습니다.","sanitizedDescription":"불사조 태세: 사용 시 - 우디르가 요동치는 불꽃의 물결을 발사하여 주변 적에게 피해를 입힙니다. 지속 효과 - 우디르가 첫 번째 공격 시, 그리고 세 번 공격할 때마다 정면에 있는 적을 불꽃으로 휘감습니다.","tooltip":"<span class=\"colorFF9900\">지속 효과: </span>최초 공격 이후 세 번째 공격을 할 때마다 우디르가 정면에 있는 적을 불꽃으로 집어삼키며 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>우디르가 요동치는 불꽃을 발사해 주변 적에게 {{ e5 }}초 동안 매초마다 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.</span></rules>","sanitizedTooltip":"지속 효과: 최초 공격 이후 세 번째 공격을 할 때마다 우디르가 정면에 있는 적을 불꽃으로 집어삼키며 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 사용 시: 우디르가 요동치는 불꽃을 발사해 주변 적에게 {{ e5 }}초 동안 매초마다 {{ e1 }} (+{{ a2 }})의 마법 피해를 입힙니다. 우디르의 레벨이 오를 때마다 태세 전환에 필요한 마나 소모량이 1씩 줄어듭니다.","leveltip":{"label":["요동치는 불꽃 피해량","불꽃 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"UdyrPhoenixStance.png","sprite":"spell12.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[10,20,30,40,50],[40,80,120,160,200],[16,24,32,40,48],[1,1,1,1,1],[4,4,4,4,4],[325,325,325,325,325],[400,400,400,400,400],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/20/30/40/50","40/80/120/160/200","16/24/32/40/48","1","4","325","400","3","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]},{"key":"a2","link":"spelldamage","coeff":[0.25]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"UdyrPhoenixStance"}],"passive":{"name":"원숭이의 민첩성","description":"우디르가 태세를 변환하면 잠시 동안 공격 속도와 이동 속도가 상승합니다. 이 효과는 여러 번 중첩됩니다.","sanitizedDescription":"우디르가 태세를 변환하면 잠시 동안 공격 속도와 이동 속도가 상승합니다. 이 효과는 여러 번 중첩됩니다.","image":{"full":"Udyr_MonkeysAgility.png","sprite":"passive3.png","group":"passive","x":336,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Udyr","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3102,"count":1},{"id":3110,"count":1},{"id":3065,"count":1},{"id":3812,"count":1}]}]},{"champion":"Udyr","title":"UdyrARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3022,"count":1},{"id":3091,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Udyr","title":"UdyrCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Udyr","title":"UdyrFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3110,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2043,"count":1},{"id":2138,"count":1},{"id":2003,"count":1}]}]},{"champion":"Udyr","title":"UdyrKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3111,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3742,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Udyr","title":"UdyrSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]}]},{"champion":"Udyr","title":"UdyrSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3111,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3091,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Udyr","title":"UdyrTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3153,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3053,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"LeeSin":{"id":64,"key":"LeeSin","name":"리 신","title":"눈먼 수도승","image":{"full":"LeeSin.png","sprite":"champion2.png","group":"champion","x":0,"y":0,"w":48,"h":48},"skins":[{"id":64000,"name":"default","num":0},{"id":64001,"name":"(구) 리 신","num":1},{"id":64002,"name":"수행사제 리 신","num":2},{"id":64003,"name":"용의 권 리 신","num":3},{"id":64004,"name":"무에타이 리 신","num":4},{"id":64005,"name":"수영장 파티 리 신","num":5},{"id":64006,"name":"SKT T1 리 신","num":6},{"id":64010,"name":"K.O. 펀치 리 신","num":10},{"id":64011,"name":"신의 권 리 신","num":11}],"lore":"아이오니아의 고대 무술에 통달한 리 신은 지조 높은 전사로 용의 혼을 지녔다. 비록 수년 전에 시각을 잃었지만, 고향을 지키기로 맹세한 수도승 전사는 감히 신성한 균형을 해치려는 존재를 막아선다. 리 신의 명상적 태도를 얕본 적은 그의 불타는 주먹과 초인적인 위력의 돌려차기에 당할 것이다.","blurb":"아이오니아의 고대 무술에 통달한 리 신은 지조 높은 전사로 용의 혼을 지녔다. 비록 수년 전에 시각을 잃었지만, 고향을 지키기로 맹세한 수도승 전사는 감히 신성한 균형을 해치려는 존재를 막아선다. 리 신의 명상적 태도를 얕본 적은 그의 불타는 주먹과 초인적인 위력의 돌려차기에 당할 것이다.","allytips":["- 용의 분노를 쓰기 전에 음파를 사용하면 공명의 일격으로 대상을 쫓아갈 수 있습니다.","- 스킬을 시전하는 사이사이에 기본 공격을 끼워 넣는 방식으로 질풍격 효과를 볼 수 있습니다. 적에게 줄 수 있는 피해가 더욱 올라가는 반면 기력 소모량은 더욱 줄일 수 있습니다.","- 자신에게 방호를 시전하고 강철의 의지를 사용하면 정글에 있는 중립 몬스터를 쉽게 해치울 수 있습니다."],"enemytips":["- 리 신의 궁극기인 용의 분노로 받는 피해를 최소화하려면 유닛을 분산시키십시오.","- 리 신은 강철의 의지나 무력화 같은 강력한 스킬로 물리 피해에 대항할 수 있지만 마법 피해에는 취약합니다.","- 리 신은 연속기 의존도가 매우 높습니다. 방해 스킬을 이용해서 그가 연속으로 스킬을 사용하거나 공격하지 못하도록 하십시오."],"tags":["Fighter","Assassin"],"partype":"기력","info":{"attack":8,"defense":5,"magic":3,"difficulty":6},"stats":{"armor":33,"armorperlevel":3.7,"attackdamage":69.18,"attackdamageperlevel":3.2,"attackrange":125,"attackspeedoffset":-0.04,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":570.8,"hpperlevel":85,"hpregen":7.426,"hpregenperlevel":0.7,"movespeed":345,"mp":200,"mpperlevel":0,"mpregen":50,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"음파 / 공명의 일격","description":"음파: 리 신이 음파를 발사하여 적의 위치를 파악하며, 음파에 맞은 적에게 물리 피해를 입힙니다. 적이 음파에 명중하면 다음 3초 안에 공명의 일격을 시전할 수 있습니다.<br>공명의 일격: 리 신이 음파에 맞은 적에게 돌격해 물리 피해를 입히고, 적이 잃은 체력의 8% 만큼 추가 피해를 입힙니다.","sanitizedDescription":"음파: 리 신이 음파를 발사하여 적의 위치를 파악하며, 음파에 맞은 적에게 물리 피해를 입힙니다. 적이 음파에 명중하면 다음 3초 안에 공명의 일격을 시전할 수 있습니다. 공명의 일격: 리 신이 음파에 맞은 적에게 돌격해 물리 피해를 입히고, 적이 잃은 체력의 8% 만큼 추가 피해를 입힙니다.","tooltip":"<spellActive>음파: </spellActive>리 신이 불협화음으로 된 음파를 발사하여 적의 위치를 파악하고, 처음 명중하는 적에게 {{ e1 }} <scaleAD>(+{{ a1 }})</scaleAD>의 물리 피해를 입히며, 대상에 대한 <keyword>절대 시야</keyword>를 얻습니다. <specialRules>적이 음파에 명중하면 {{ e7 }}초 안에 공명의 일격을 시전할 수 있습니다.</specialRules><br /><br /><spellActive>공명의 일격: </spellActive>리 신이 음파를 맞은 적에게 돌진하여 {{ e2 }} <scaleAD>(+{{ a1 }})</scaleAD>의 물리 피해를 입히고, 잃은 체력의 {{ e3 }}%만큼 추가 피해를 줍니다. (몬스터에게는 최대 {{ e6 }}의 피해)","sanitizedTooltip":"음파: 리 신이 불협화음으로 된 음파를 발사하여 적의 위치를 파악하고, 처음 명중하는 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히며, 대상에 대한 절대 시야를 얻습니다. 적이 음파에 명중하면 {{ e7 }}초 안에 공명의 일격을 시전할 수 있습니다. 공명의 일격: 리 신이 음파를 맞은 적에게 돌진하여 {{ e2 }} (+{{ a1 }})의 물리 피해를 입히고, 잃은 체력의 {{ e3 }}%만큼 추가 피해를 줍니다. (몬스터에게는 최대 {{ e6 }}의 피해)","leveltip":{"label":["음파 피해","공명의 일격 기본 피해","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BlindMonkQOne.png","sprite":"spell6.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"기력 {{ cost }} / 기력 {{ e4 }}","maxrank":5,"cost":[50,50,50,50,50],"costType":" / 기력 {{ e4 }}","costBurn":"50","cooldown":[11,10,9,8,7],"cooldownBurn":"11/10/9/8/7","effect":[null,[55,85,115,145,175],[55,85,115,145,175],[8,8,8,8,8],[30,30,30,30,30],[1350,1350,1350,1350,1350],[400,400,400,400,400],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/85/115/145/175","55/85/115/145/175","8","30","1350","400","3","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.9]},{"key":"a1","link":"bonusattackdamage","coeff":[0.9]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"BlindMonkQOne"},{"name":"방호 / 강철의 의지","description":"방호: 리 신이 대상 아군에게 돌격하여 자신에게 피해를 흡수하는 보호막을 생성합니다. 해당 아군이 챔피언일 경우 아군에게도 보호막이 적용됩니다. 방호를 사용하고 난 뒤 다음 3초 동안 강철의 의지를 시전할 수 있습니다.<br>강철의 의지: 고된 수행으로 리 신이 전투에서 보다 잘 살아남을 수 있게 됩니다. 4초 동안 생명력 흡수와 주문 흡혈 효과를 얻습니다.","sanitizedDescription":"방호: 리 신이 대상 아군에게 돌격하여 자신에게 피해를 흡수하는 보호막을 생성합니다. 해당 아군이 챔피언일 경우 아군에게도 보호막이 적용됩니다. 방호를 사용하고 난 뒤 다음 3초 동안 강철의 의지를 시전할 수 있습니다. 강철의 의지: 고된 수행으로 리 신이 전투에서 보다 잘 살아남을 수 있게 됩니다. 4초 동안 생명력 흡수와 주문 흡혈 효과를 얻습니다.","tooltip":"<spellActive>방호: </spellActive>리 신이 대상 아군에게 돌격합니다. 아군이 챔피언인 경우 {{ e3 }}초 동안 아군과 자신을 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>만큼의 피해로부터 보호하고, 방호의 재사용 대기시간이 {{ e6 }}%. 감소합니다. <specialRules>방호를 사용하고 난 뒤 다음 {{ e9 }}초 동안 강철의 의지를 사용할 수 있습니다.</specialRules><br /><br /><spellActive>강철의 의지: </spellActive>{{ e8 }}초 동안 생명력 흡수,주문 흡혈률이 {{ e2 }}%만큼 증가합니다.","sanitizedTooltip":"방호: 리 신이 대상 아군에게 돌격합니다. 아군이 챔피언인 경우 {{ e3 }}초 동안 아군과 자신을 {{ e1 }} (+{{ a1 }})만큼의 피해로부터 보호하고, 방호의 재사용 대기시간이 {{ e6 }}%. 감소합니다. 방호를 사용하고 난 뒤 다음 {{ e9 }}초 동안 강철의 의지를 사용할 수 있습니다. 강철의 의지: {{ e8 }}초 동안 생명력 흡수,주문 흡혈률이 {{ e2 }}%만큼 증가합니다.","leveltip":{"label":["방호 보호막 흡수량","방호 생명력 흡수 / 주문 흡혈 %"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"BlindMonkWOne.png","sprite":"spell6.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"기력 {{ cost }} / 기력 {{ e4 }}","maxrank":5,"cost":[50,50,50,50,50],"costType":" / 기력 {{ e4 }}","costBurn":"50","cooldown":[14,14,14,14,14],"cooldownBurn":"14","effect":[null,[55,110,165,220,275],[10,15,20,25,30],[2,2,2,2,2],[30,30,30,30,30],[5,5,5,5,5],[50,50,50,50,50],[0,0,0,0,0],[4,4,4,4,4],[3,3,3,3,3],[1350,1350,1350,1350,1350]],"effectBurn":["","55/110/165/220/275","10/15/20/25/30","2","30","5","50","0","4","3","1350"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"BlindMonkWOne"},{"name":"폭풍/무력화","description":"폭풍: 리 신이 바닥을 내리쳐 마법 피해를 입히고 은신한 유닛을 드러내는 충격파를 발생시킵니다. 폭풍이 적에게 명중하면 다음 3초 안에 무력화를 시전할 수 있습니다.<br>무력화: 리 신이 폭풍에 피해를 입은 적을 4초 동안 약화시키며 이동 속도를 낮춥니다. 저하된 이동 속도는 시간이 지남에 따라 점차 회복됩니다.","sanitizedDescription":"폭풍: 리 신이 바닥을 내리쳐 마법 피해를 입히고 은신한 유닛을 드러내는 충격파를 발생시킵니다. 폭풍이 적에게 명중하면 다음 3초 안에 무력화를 시전할 수 있습니다. 무력화: 리 신이 폭풍에 피해를 입은 적을 4초 동안 약화시키며 이동 속도를 낮춥니다. 저하된 이동 속도는 시간이 지남에 따라 점차 회복됩니다.","tooltip":"<spellActive>폭풍: </spellActive>리 신이 바닥을 내리쳐 충격파를 방출하여 {{ e1 }} <scaleAD>(+{{ a1 }})</scaleAD>의 마법 피해를 가합니다.<specialRules> 폭풍이 적에게 명중하면 다음 {{ e6 }}초 안에 무력화를 사용할 수 있습니다.</specialRules><br /><br /><spellActive>무력화: </spellActive>리 신이 폭풍으로 피해를 입힌 적을 {{ e5 }}초 동안 약화시키며 이동 속도를 {{ e2 }}%만큼 느리게 합니다. 저하된 이동 속도는 시간이 지남에 따라 점차 회복됩니다.","sanitizedTooltip":"폭풍: 리 신이 바닥을 내리쳐 충격파를 방출하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 가합니다. 폭풍이 적에게 명중하면 다음 {{ e6 }}초 안에 무력화를 사용할 수 있습니다. 무력화: 리 신이 폭풍으로 피해를 입힌 적을 {{ e5 }}초 동안 약화시키며 이동 속도를 {{ e2 }}%만큼 느리게 합니다. 저하된 이동 속도는 시간이 지남에 따라 점차 회복됩니다.","leveltip":{"label":["폭풍 피해량","둔화 (무력화)"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"BlindMonkEOne.png","sprite":"spell6.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"기력 {{ cost }} / 기력 {{ e4 }}","maxrank":5,"cost":[50,50,50,50,50],"costType":" / 기력 {{ e4 }}","costBurn":"50","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[70,105,140,175,210],[20,30,40,50,60],[60,95,130,165,200],[30,30,30,30,30],[4,4,4,4,4],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/105/140/175/210","20/30/40/50/60","60/95/130/165/200","30","4","3","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1]}],"range":[425,425,425,425,425],"rangeBurn":"425","key":"BlindMonkEOne"},{"name":"용의 분노","description":"리 신이 강력한 돌려차기로 적 챔피언을 뒤로 밀어내고 공격 대상과 대상과 부딪히는 모든 적에게 물리 피해를 입힙니다. 공격 대상과 부딪힌 적은 짧은 시간 공중에 떠오릅니다. 이 기술은 제시 페링이 전수한 기술이지만, 리 신은 적을 맵 밖으로 날려버리지는 않습니다.","sanitizedDescription":"리 신이 강력한 돌려차기로 적 챔피언을 뒤로 밀어내고 공격 대상과 대상과 부딪히는 모든 적에게 물리 피해를 입힙니다. 공격 대상과 부딪힌 적은 짧은 시간 공중에 떠오릅니다. 이 기술은 제시 페링이 전수한 기술이지만, 리 신은 적을 맵 밖으로 날려버리지는 않습니다.","tooltip":"리 신이 강력한 돌려차기로 적 챔피언을 뒤로 날려버리고, 날아간 대상과 부딪히는 모든 적에게 {{ e1 }} <scaleAD>(+{{ a1 }})</scaleAD>의 물리 피해를 입힙니다.<br /><br />대상과 부딪힌 적은 잠시 공중에 떠오르고 {{ e1 }} <scaleAD>(+{{ a1 }})</scaleAD> + 최초 대상 추가 체력의 {{ e3 }}%에 해당하는 물리 피해를 입습니다.</span>","sanitizedTooltip":"리 신이 강력한 돌려차기로 적 챔피언을 뒤로 날려버리고, 날아간 대상과 부딪히는 모든 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 대상과 부딪힌 적은 잠시 공중에 떠오르고 {{ e1 }} (+{{ a1 }}) + 최초 대상 추가 체력의 {{ e3 }}%에 해당하는 물리 피해를 입습니다.","leveltip":{"label":["피해량","추가 체력 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BlindMonkRKick.png","sprite":"spell6.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[110,85,60],"cooldownBurn":"110/85/60","effect":[null,[150,300,450],[75,125,175],[12,15,18],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/300/450","75/125/175","12/15/18","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[2]},{"key":"a1","link":"bonusattackdamage","coeff":[2]}],"range":[375,375,375],"rangeBurn":"375","key":"BlindMonkRKick"}],"passive":{"name":"질풍격","description":"리 신이 스킬을 사용하면 그의 다음 두 번의 기본 공격 속도가 40%만큼 증가하며 기력을 20/10 환원해줍니다.","sanitizedDescription":"리 신이 스킬을 사용하면 그의 다음 두 번의 기본 공격 속도가 40%만큼 증가하며 기력을 20/10 환원해줍니다.","image":{"full":"LeeSinPassive.png","sprite":"passive2.png","group":"passive","x":0,"y":0,"w":48,"h":48}},"recommended":[{"champion":"LeeSin","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1028,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3072,"count":1},{"id":3742,"count":1},{"id":3812,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3072,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3077,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3068,"count":1},{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3044,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3072,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3068,"count":1},{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1},{"id":3022,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3077,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3068,"count":1},{"id":3742,"count":1},{"id":3143,"count":1},{"id":3022,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3133,"count":1},{"id":1001,"count":1},{"id":3252,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1408,"count":1},{"id":3117,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3026,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"LeeSin","title":"LeeSinTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":2},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3077,"count":1},{"id":1033,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":3252,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2138,"count":1}]}]}]},"Yorick":{"id":83,"key":"Yorick","name":"요릭","title":"영혼의 길잡이","image":{"full":"Yorick.png","sprite":"champion4.png","group":"champion","x":96,"y":48,"w":48,"h":48},"skins":[{"id":83000,"name":"default","num":0},{"id":83001,"name":"장의사 요릭","num":1},{"id":83002,"name":"펜타킬 요릭","num":2},{"id":83003,"name":"빛의 요릭","num":3}],"lore":"오래 전 잊혀진 종교 교단의 마지막 생존자 요릭은 망자를 거느리는, 축복이자 저주인 능력을 소유하고 있다. 그에게로 몰려드는 썩은 시체와 울부짖는 영혼은 그림자 군도에 발이 묶인 그의 유일한 동반자다. 대몰락의 저주로부터 조국을 구원하겠다는 신성한 뜻을 품고 있지만 그의 행동은 괴이하기만 하다.","blurb":"오래 전 잊혀진 종교 교단의 마지막 생존자 요릭은 망자를 거느리는, 축복이자 저주인 능력을 소유하고 있다. 그에게로 몰려드는 썩은 시체와 울부짖는 영혼은 그림자 군도에 발이 묶인 그의 유일한 동반자다. 대몰락의 저주로부터 조국을 구원하겠다는 신성한 뜻을 품고 있지만 그의 행동은 괴이하기만 하다.","allytips":["최후의 의식을 다시 사용하기 위해 각성을 사용할 필요는 없습니다.","안개 마녀는 전투에서 요릭을 도와줍니다. 공격 대상을 잘 선택하세요.","안개 마녀를 공격로에 혼자 보낼 수 있습니다. 하지만 안개 마녀가 없으면 요릭의 전투력이 크게 감소한다는 점을 주의하세요."],"enemytips":["안개 망령과 안개 마녀에게 강타 주문을 사용해 피해를 입히거나 처치할 수 있습니다.","요릭과 싸우기 전 미리 안개 망령의 수를 줄여 놓으면 좋습니다. 안개 망령은 기본 공격이나 단일 대상에 대한 스킬 공격으로 처치할 수 있습니다.","망자의 진을 공격하면 벽을 파괴할 수 있습니다."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":6,"defense":6,"magic":4,"difficulty":6},"stats":{"armor":39,"armorperlevel":4,"attackdamage":62,"attackdamageperlevel":5,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":580,"hpperlevel":100,"hpregen":8,"hpregenperlevel":0.8,"movespeed":340,"mp":300,"mpperlevel":40,"mpregen":7.5,"mpregenperlevel":0.75,"spellblock":32,"spellblockperlevel":1.25},"spells":[{"name":"최후의 의식","description":"요릭이 다음번 기본 공격 시 추가 피해를 입히고 체력을 회복합니다. 대상을 처치하면 무덤이 생성됩니다.","sanitizedDescription":"요릭이 다음번 기본 공격 시 추가 피해를 입히고 체력을 회복합니다. 대상을 처치하면 무덤이 생성됩니다.","tooltip":"요릭의 다음 기본 공격이 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 체력을 {{ f1 }}만큼 회복합니다. (체력이 절반 이하일 경우 회복량이 2배로 늘어납니다.) 최후의 의식으로 대상을 처치하면 무덤이 생성됩니다.<br /><br />근처에 무덤이 3개 이상 있고 최후의 의식을 사용한 상태라면 각성을 사용해 무덤에서 안개 망령을 일으킬 수 있습니다.</span>","sanitizedTooltip":"요릭의 다음 기본 공격이 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 체력을 {{ f1 }}만큼 회복합니다. (체력이 절반 이하일 경우 회복량이 2배로 늘어납니다.) 최후의 의식으로 대상을 처치하면 무덤이 생성됩니다. 근처에 무덤이 3개 이상 있고 최후의 의식을 사용한 상태라면 각성을 사용해 무덤에서 안개 망령을 일으킬 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"YorickQ.png","sprite":"spell13.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[25,25,25,25,25],"costBurn":"25","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[30,55,80,105,130],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/55/80/105/130","5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.4]}],"range":[0,0,0,0,0],"rangeBurn":"0","key":"YorickQ"},{"name":"망자의 진","description":"요릭이 대상 지점에 벽을 세워 적의 이동을 막습니다. 벽은 공격을 받으면 파괴됩니다.","sanitizedDescription":"요릭이 대상 지점에 벽을 세워 적의 이동을 막습니다. 벽은 공격을 받으면 파괴됩니다.","tooltip":"요릭이 대상 지점에 {{ e1 }}초 동안 벽을 세웁니다. 벽의 체력은 {{ e5 }}이며 파괴할 수 있습니다. 아군은 벽을 자유롭게 통과할 수 있습니다.","sanitizedTooltip":"요릭이 대상 지점에 {{ e1 }}초 동안 벽을 세웁니다. 벽의 체력은 {{ e5 }}이며 파괴할 수 있습니다. 아군은 벽을 자유롭게 통과할 수 있습니다.","leveltip":{"label":["체력","재사용 대기시간"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"YorickW.png","sprite":"spell13.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[20,18,16,14,12],"cooldownBurn":"20/18/16/14/12","effect":[null,[4,4,4,4,4],[18,18,18,18,18],[0.75,0.75,0.75,0.75,0.75],[0,0,1,1,2],[2,2,3,3,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4","18","0.75","0/0/1/1/2","2/2/3/3/4","0","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"YorickW"},{"name":"애도의 안개","description":"요릭이 대상에게 피해를 입히고 이동 속도를 늦추며 표식을 남기는 안개의 구를 던집니다.","sanitizedDescription":"요릭이 대상에게 피해를 입히고 이동 속도를 늦추며 표식을 남기는 안개의 구를 던집니다.","tooltip":"요릭이 안개의 구를 던져 적의 현재 체력의 {{ e7 }}%만큼 마법 피해를 입히고 (최소 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>), {{ e6 }}초 동안 이동 속도를 {{ e3 }}% 늦추며, {{ e2 }}초 동안 챔피언과 몬스터에게 표식을 남깁니다.<br /><br />요릭과 안개 망령은 표식이 있는 대상 쪽으로 이동할 때 {{ e5 }}% 빨라집니다.","sanitizedTooltip":"요릭이 안개의 구를 던져 적의 현재 체력의 {{ e7 }}%만큼 마법 피해를 입히고 (최소 {{ e1 }} (+{{ a1 }})), {{ e6 }}초 동안 이동 속도를 {{ e3 }}% 늦추며, {{ e2 }}초 동안 챔피언과 몬스터에게 표식을 남깁니다. 요릭과 안개 망령은 표식이 있는 대상 쪽으로 이동할 때 {{ e5 }}% 빨라집니다.","leveltip":{"label":["최소 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"YorickE.png","sprite":"spell13.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[70,105,140,175,210],[4,4,4,4,4],[30,30,30,30,30],[1400,1400,1400,1400,1400],[20,20,20,20,20],[2,2,2,2,2],[15,15,15,15,15],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/105/140/175/210","4","30","1400","20","2","15","300","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"YorickE"},{"name":"군도의 장송곡","description":"요릭이 안개 마녀를 소환합니다. 요릭이 안개 마녀의 표적을 공격하면 추가 피해를 입힙니다. 안개 마녀는 죽은 적을 안개 망령으로 다시 일으킵니다.","sanitizedDescription":"요릭이 안개 마녀를 소환합니다. 요릭이 안개 마녀의 표적을 공격하면 추가 피해를 입힙니다. 안개 마녀는 죽은 적을 안개 망령으로 다시 일으킵니다.","tooltip":"요릭이 안개 마녀와 안개 망령 {{ e1 }}명을 소환합니다. 안개 마녀는 체력이 {{ e3 }} <span class=\"colorFF3300\">(+{{ f1 }})</span>이며, {{ e4 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>의 마법 피해를 입히고, 근처에서 죽은 적으로부터 안개 망령을 일으킵니다.<br /><br />요릭이 안개 마녀의 표적을 공격하면 표적 최대 체력의 {{ e5 }}%만큼의 추가 마법 피해를 입힙니다. (재사용 대기시간 {{ e7 }}초)<br /><br /><span class=\"colorDDDD77\">안개 마녀가 공격로에 소환될 경우 공격로를 따라 진격합니다.</span>","sanitizedTooltip":"요릭이 안개 마녀와 안개 망령 {{ e1 }}명을 소환합니다. 안개 마녀는 체력이 {{ e3 }} (+{{ f1 }})이며, {{ e4 }} (+{{ f2 }})의 마법 피해를 입히고, 근처에서 죽은 적으로부터 안개 망령을 일으킵니다. 요릭이 안개 마녀의 표적을 공격하면 표적 최대 체력의 {{ e5 }}%만큼의 추가 마법 피해를 입힙니다. (재사용 대기시간 {{ e7 }}초) 안개 마녀가 공격로에 소환될 경우 공격로를 따라 진격합니다.","leveltip":{"label":["체력","피해량","안개 망령 수","안개 마녀의 표적에게 입히는 추가 피해량","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e4 }} -> {{ e4NL }}","{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"YorickR.png","sprite":"spell13.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[160,130,100],"cooldownBurn":"160/130/100","effect":[null,[2,3,4],[700,700,700],[700,1500,4000],[10,20,40],[5,7.5,10],[1,1,1],[2,2,2],[200,300,400],[0,0,0],[0,0,0]],"effectBurn":["","2/3/4","700","700/1500/4000","10/20/40","5/7.5/10","1","2","200/300/400","0","0"],"range":[600,600,600],"rangeBurn":"600","key":"YorickR"}],"passive":{"name":"영혼의 길잡이","description":"<mainText>요릭은 스킬을 사용해 안개 망령을 일으킬 수 있습니다. 적 유닛이 요릭 근처에서 죽으면 때때로 무덤이 생성됩니다.</mainText>","sanitizedDescription":"요릭은 스킬을 사용해 안개 망령을 일으킬 수 있습니다. 적 유닛이 요릭 근처에서 죽으면 때때로 무덤이 생성됩니다.","image":{"full":"Yorick_P.png","sprite":"passive4.png","group":"passive","x":96,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Yorick","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3101,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3065,"count":1},{"id":3053,"count":1},{"id":3083,"count":1}]}]},{"champion":"Yorick","title":"YorickARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3065,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Yorick","title":"YorickCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3512,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3156,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Yorick","title":"YorickFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3065,"count":1},{"id":3070,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3004,"count":1},{"id":3078,"count":1},{"id":3056,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3083,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Yorick","title":"YorickKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3065,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Yorick","title":"YorickSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3512,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3156,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]}]},{"champion":"Yorick","title":"YorickSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3512,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3156,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Yorick","title":"YorickTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3156,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Ornn":{"id":516,"key":"Ornn","name":"오른","title":"거산의 화염","image":{"full":"Ornn.png","sprite":"champion2.png","group":"champion","x":96,"y":96,"w":48,"h":48},"skins":[{"id":516000,"name":"default","num":0},{"id":516001,"name":"천둥 군주 오른","num":1}],"lore":"오른은 대장장이와 손재주를 대표하는 프렐요드의 영혼이다. 그는 화산 아래에 있는 용암 동굴 속에 거대한 불꽃 대장간을 짓고 홀로 작업에 몰두한다. 이곳에서 오른은 불을 지펴 광석을 녹이고 제련하며 비할 데 없이 뛰어난 물건을 제작한다. 특히 볼리베어와 같은 신들이 대지 위를 걸으며 필멸자들의 일에 간섭할 경우, 오른은 그의 믿음직스러운 망치나 강렬한 화산의 불꽃을 휘둘러 그 어리석은 존재들이 원래 자리로 되돌아가도록 한다.","blurb":"오른은 대장장이와 손재주를 대표하는 프렐요드의 영혼이다. 그는 화산 아래에 있는 용암 동굴 속에 거대한 불꽃 대장간을 짓고 홀로 작업에 몰두한다. 이곳에서 오른은 불을 지펴 광석을 녹이고 제련하며 비할 데 없이 뛰어난 물건을 제작한다. 특히 볼리베어와 같은 신들이 대지 위를 걸으며 필멸자들의 일에 간섭할 경우, 오른은 그의 믿음직스러운 망치나 강렬한 화산의 불꽃을 휘둘러 그 어리석은 존재들이 원래 자리로 되돌아가도록 한다.","allytips":["아이템의 조합식을 안다면 공격로에서 빠르게 업그레이드를 선택할 수 있습니다.","용암 균열로 적군을 위협할 수 있는 구역을 생성할 수 있죠.","스킬을 배우는 순서도 매우 중요합니다! 불안정 상태를 효율적으로 활용해 보세요."],"enemytips":["벽에서 물러나 있으세요. 기절 효과를 가하지 못할 경우 오른의 위력이 줄어드니까요.","공격로에서 오른을 공격해 그가 아이템을 만들지 못하게 하세요."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":5,"defense":9,"magic":3,"difficulty":5},"stats":{"armor":33.04,"armorperlevel":3,"attackdamage":67.72,"attackdamageperlevel":3.5,"attackrange":175,"attackspeedoffset":-0.08,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":565.64,"hpperlevel":90,"hpregen":9,"hpregenperlevel":0.8,"movespeed":335,"mp":340.6,"mpperlevel":45,"mpregen":8.01,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"용암 균열","description":"오른이 지면을 내려쳐 적에게 물리 피해를 입히고 둔화시키는 균열을 만들어냅니다. 잠시 후 목표 지점에 용암 기둥이 생성됩니다.","sanitizedDescription":"오른이 지면을 내려쳐 적에게 물리 피해를 입히고 둔화시키는 균열을 만들어냅니다. 잠시 후 목표 지점에 용암 기둥이 생성됩니다.","tooltip":"오른이 지면을 내려쳐 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 {{ e6 }}초 동안 {{ e5 }}% 둔화시키는 균열을 만듭니다. 잠시 후 균열이 끝나는 지점에 {{ e3 }}초 동안 용암 기둥이 생성됩니다.<br /><br /><span class=\"size16 color8C8C8C\">적 챔피언을 맞출 시 균열은 얼마 안 되어 멈춥니다.</span>","sanitizedTooltip":"오른이 지면을 내려쳐 적에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 {{ e6 }}초 동안 {{ e5 }}% 둔화시키는 균열을 만듭니다. 잠시 후 균열이 끝나는 지점에 {{ e3 }}초 동안 용암 기둥이 생성됩니다. 적 챔피언을 맞출 시 균열은 얼마 안 되어 멈춥니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"OrnnQ.png","sprite":"spell8.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,55,55,55,55],"costBurn":"55","cooldown":[9,8.5,8,7.5,7],"cooldownBurn":"9/8.5/8/7.5/7","effect":[null,[20,50,80,110,140],[1.125,1.125,1.125,1.125,1.125],[4,4,4,4,4],[0,0,0,0,0],[40,45,50,55,60],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/50/80/110/140","1.13","4","0","40/45/50/55/60","2","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.6]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"OrnnQ"},{"name":"불꽃 풀무질","description":"오른이 멈출 수 없는 상태로 전진하며 자신에게 보호막을 씌우고 불꽃을 뿜어냅니다. 마지막 불꽃에 맞은 적은 불안정 상태가 됩니다.","sanitizedDescription":"오른이 멈출 수 없는 상태로 전진하며 자신에게 보호막을 씌우고 불꽃을 뿜어냅니다. 마지막 불꽃에 맞은 적은 불안정 상태가 됩니다.","tooltip":"오른이 멈출 수 없는 상태로 전진해 불꽃을 뿜고 자기 자신에게 {{ e5 }}초 동안 <span class=\"colorCC3300\">{{ f5 }}</span>(최대 체력의 12%)의 보호막을 씌웁니다. 불꽃은 적의 최대 체력의 최고 {{ e0 }}%에 해당하는 마법 피해를 입힙니다. (최소 {{ e3 }})<br /><br />마지막 불꽃에 맞은 적은 {{ f9 }}초 동안 <span class=\"colorFF5733\">불안정 상태</span>가 됩니다. 불안정 상태인 적이 이동 불가 효과가 있는 스킬을 맞으면 효과 지속 시간이 30% 증가하며 최대 체력의 <span class=\"colorFFFFFF\">{{ f8 }}</span>%에 비례하는 마법 피해를 입습니다.<br /><br /><span class=\"size16 color8C8C8C\">오른의 기본 공격은 불안정 상태인 적을 뒤로 밀어냅니다.</span>","sanitizedTooltip":"오른이 멈출 수 없는 상태로 전진해 불꽃을 뿜고 자기 자신에게 {{ e5 }}초 동안 {{ f5 }}(최대 체력의 12%)의 보호막을 씌웁니다. 불꽃은 적의 최대 체력의 최고 {{ e0 }}%에 해당하는 마법 피해를 입힙니다. (최소 {{ e3 }}) 마지막 불꽃에 맞은 적은 {{ f9 }}초 동안 불안정 상태가 됩니다. 불안정 상태인 적이 이동 불가 효과가 있는 스킬을 맞으면 효과 지속 시간이 30% 증가하며 최대 체력의 {{ f8 }}%에 비례하는 마법 피해를 입습니다. 오른의 기본 공격은 불안정 상태인 적을 뒤로 밀어냅니다.","leveltip":{"label":["최대 피해량","최소 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e0 }}% -> {{ e0NL }}%","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"OrnnW.png","sprite":"spell8.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[80,130,180,230,280],[0.02,0.024,0.028,0.032,0.036],[2.5,2.5,2.5,2.5,2.5],[225,225,225,225,225],[550,550,550,550,550],[0.5,0.5,0.5,0.5,0.5],[1.5,1.5,1.5,1.5,1.5],[10,12,14,16,18]],"effectBurn":["","0.75","0","80/130/180/230/280","0.02/0.024/0.028/0.032/0.036","2.5","225","550","0.5","1.5","10/12/14/16/18"],"range":[25000,25000,25000,25000,25000],"rangeBurn":"25000","key":"OrnnW"},{"name":"화염 돌진","description":"오른이 돌진하며 통과한 적에게 피해를 입힙니다. 오른이 돌진 중 지형지물에 충돌하면, 그 충돌로 인해 충격파가 발생해 적에게 피해를 입히고 공중으로 띄웁니다.","sanitizedDescription":"오른이 돌진하며 통과한 적에게 피해를 입힙니다. 오른이 돌진 중 지형지물에 충돌하면, 그 충돌로 인해 충격파가 발생해 적에게 피해를 입히고 공중으로 띄웁니다.","tooltip":"오른이 돌진하며 통과한 적에게 {{ e1 }} <span class=\"colorFFFF00\">(+{{ f2 }})</span> <span class=\"colorFF00FF\">(+{{ f3 }})</span>의 물리 피해를 입힙니다.<br /><br />오른이 돌진 중 지형지물에 충돌하면, 그 충돌로 인해 충격파가 발생해 적에게 {{ e2 }} <span class=\"colorFFFF00\">(+{{ f2 }})</span> <span class=\"colorFF00FF\">(+{{ f3 }})</span>의 물리 피해를 입히고 {{ e6 }}초 동안 공중으로 띄웁니다.<br /><br /><span class=\"size16 color8C8C8C\">충격파는 용암 기둥이나 적 챔피언이 만든 지형지물을 파괴합니다.</span>","sanitizedTooltip":"오른이 돌진하며 통과한 적에게 {{ e1 }} (+{{ f2 }}) (+{{ f3 }})의 물리 피해를 입힙니다. 오른이 돌진 중 지형지물에 충돌하면, 그 충돌로 인해 충격파가 발생해 적에게 {{ e2 }} (+{{ f2 }}) (+{{ f3 }})의 물리 피해를 입히고 {{ e6 }}초 동안 공중으로 띄웁니다. 충격파는 용암 기둥이나 적 챔피언이 만든 지형지물을 파괴합니다.","leveltip":{"label":["돌진 피해","충격파 피해","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"OrnnE.png","sprite":"spell8.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[30,50,70,90,110],[50,90,130,170,210],[1600,1600,1600,1600,1600],[650,650,650,650,650],[360,360,360,360,360],[1,1,1,1,1],[150,150,150,150,150],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","50/90/130/170/210","1600","650","360","1","150","0","0","0"],"range":[450,450,450,450,450],"rangeBurn":"450","key":"OrnnE"},{"name":"대장장이 신의 부름","description":"오른이 목표 위치에 거대한 불의 정령을 소환합니다. 불의 정령은 오른에게로 다가오며 점점 이동 속도가 빨라집니다. 정령이 밟고 지나간 적은 피해를 입고 둔화되며 불안정 상태가 됩니다. 오른이 대장장이 신의 부름을 재시전하면 정령 쪽으로 돌진합니다. 오른이 돌진해 정령에 부딪히면 정령의 진행 방향이 바뀝니다. 진행 방향이 바뀐 정령은 부딪힌 모든 적을 1초 동안 공중으로 띄우며 전과 동일한 피해를 입히고 다시 불안정 상태로 만듭니다.","sanitizedDescription":"오른이 목표 위치에 거대한 불의 정령을 소환합니다. 불의 정령은 오른에게로 다가오며 점점 이동 속도가 빨라집니다. 정령이 밟고 지나간 적은 피해를 입고 둔화되며 불안정 상태가 됩니다. 오른이 대장장이 신의 부름을 재시전하면 정령 쪽으로 돌진합니다. 오른이 돌진해 정령에 부딪히면 정령의 진행 방향이 바뀝니다. 진행 방향이 바뀐 정령은 부딪힌 모든 적을 1초 동안 공중으로 띄우며 전과 동일한 피해를 입히고 다시 불안정 상태로 만듭니다.","tooltip":"오른이 자신에게 다가오는 거대한 불의 정령을 소환합니다. 정령이 밟고 지나간 적은 {{ e2 }} <span class=\"color99FF99\">(+{{ f4 }})</span>의 마법 피해를 입고 {{ e6 }}초 동안 {{ e5 }}% 둔화됩니다. 또한 {{ f10 }} 초 동안 <span class=\"colorFF5733\">불안정 상태</span>가 됩니다.<br /><br />오른이 대장장이 신의 부름을 재시전하면 정령에게 돌진해 부딪쳐 정령의 진행 방향을 바꾸고 힘을 줄 수 있습니다. 힘을 받은 정령은 1.5초 동안 적을 공중으로 띄우며 {{ e2 }} <span class=\"color99FF99\">(+{{ f4 }})</span>의 마법 피해를 입히고 <span class=\"colorFF5733\">불안정 상태</span>로 만듭니다.","sanitizedTooltip":"오른이 자신에게 다가오는 거대한 불의 정령을 소환합니다. 정령이 밟고 지나간 적은 {{ e2 }} (+{{ f4 }})의 마법 피해를 입고 {{ e6 }}초 동안 {{ e5 }}% 둔화됩니다. 또한 {{ f10 }} 초 동안 불안정 상태가 됩니다. 오른이 대장장이 신의 부름을 재시전하면 정령에게 돌진해 부딪쳐 정령의 진행 방향을 바꾸고 힘을 줄 수 있습니다. 힘을 받은 정령은 1.5초 동안 적을 공중으로 띄우며 {{ e2 }} (+{{ f4 }})의 마법 피해를 입히고 불안정 상태로 만듭니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"OrnnR.png","sprite":"spell8.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[130,100,70],"cooldownBurn":"130/100/70","effect":[null,[2500,2500,2500],[125,175,225],[1200,1200,1200],[100,100,100],[40,60,80],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","2500","125/175/225","1200","100","40/60/80","2","0","0","0","0"],"range":[2500,2500,2500],"rangeBurn":"2500","key":"OrnnR"}],"passive":{"name":"간이 대장간","description":"오른은 어디에서든 골드를 써서 소모품을 제외한 아이템을 제작할 수 있습니다.<br><br>또한 오른이 13레벨이 되면 일부 아이템을 업그레이드한 걸작 아이템을 오른과 아군이 구매할 수 있게 됩니다.<br><br><font color='#8C8C8C' size='16'>오른은 제작 메뉴나 상점에서 직접 아이템을 만들 수 있습니다.</font>","sanitizedDescription":"오른은 어디에서든 골드를 써서 소모품을 제외한 아이템을 제작할 수 있습니다. 또한 오른이 13레벨이 되면 일부 아이템을 업그레이드한 걸작 아이템을 오른과 아군이 구매할 수 있게 됩니다. 오른은 제작 메뉴나 상점에서 직접 아이템을 만들 수 있습니다.","image":{"full":"OrnnP.png","sprite":"passive2.png","group":"passive","x":96,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Ornn","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3751,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendary","recMath":true,"items":[{"id":3751,"count":1},{"id":1028,"count":1},{"id":1031,"count":1},{"id":3068,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2138,"count":1},{"id":2055,"count":1}]}]},{"champion":"Ornn","title":"OrnnARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3083,"count":1},{"id":3194,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3075,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ornn","title":"OrnnCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3024,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3748,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ornn","title":"OrnnFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3211,"count":1},{"id":3110,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":3800,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3083,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":3361,"count":1}]}]},{"champion":"Ornn","title":"OrnnKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ornn","title":"OrnnSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3075,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3512,"count":1}]}]},{"champion":"Ornn","title":"OrnnSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3024,"count":1},{"id":3801,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3025,"count":1},{"id":3047,"count":1},{"id":3083,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1401,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3194,"count":1},{"id":3075,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ornn","title":"OrnnTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":1028,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3401,"count":1},{"id":3109,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3194,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3075,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3742,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Kayn":{"id":141,"key":"Kayn","name":"케인","title":"그림자 사신","image":{"full":"Kayn.png","sprite":"champion1.png","group":"champion","x":144,"y":96,"w":48,"h":48},"skins":[{"id":141000,"name":"default","num":0},{"id":141001,"name":"영혼사냥꾼 케인","num":1}],"lore":"치명적인 그림자 마법을 그 누구보다도 자유자재로 구사하는 자, 시이다 케인이 싸우는 이유는 자신에게 주어진 진정한 운명을 실현하기 위해서다. 장차 그림자단을 이끌고 아이오니아가 패권을 장악하는 새로운 시대를 열 것이라는 운명. 케인은 위험천만하게도 자의식이 있는 다르킨 무기 라아스트를 들고 전장에 나선다. 다르킨 무기는 그것을 휘두르는 자의 몸과 정신을 서서히 타락시킨다는 사실은 아랑곳하지 않는 것이다. 다르킨 무기에 손을 댄 이상 예상할 수 있는 결과는 단 두 가지다. 케인이 무기의 의식을 굴복시켜 자신의 의지를 따르게 하거나, 아니면 저 악의에 가득 찬 낫이 케인을 완전히 집어삼키고 룬테라 전역을 멸망의 길로 몰아넣거나.","blurb":"치명적인 그림자 마법을 그 누구보다도 자유자재로 구사하는 자, 시이다 케인이 싸우는 이유는 자신에게 주어진 진정한 운명을 실현하기 위해서다. 장차 그림자단을 이끌고 아이오니아가 패권을 장악하는 새로운 시대를 열 것이라는 운명. 케인은 위험천만하게도 자의식이 있는 다르킨 무기 라아스트를 들고 전장에 나선다. 다르킨 무기는 그것을 휘두르는 자의 몸과 정신을 서서히 타락시킨다는 사실은 아랑곳하지 않는 것이다. 다르킨 무기에 손을 댄 이상 예상할 수 있는...","allytips":["- 아군 팀과 적 팀의 구성을 고려해 형상을 선택하세요.","- 현재 통과 중인 지형이 어디인지 근처의 적에게 표시됩니다."],"enemytips":["- 그림자의 지배를 사용하려면 먼저 케인이 상대에게 피해를 입혀야 합니다. 몰아치는 낫을 피해 그림자의 지배 사거리가 늘어나는 것을 막아 보세요.","- 케인이 근처에서 지형을 통과하면 해당 지형이 표시되어 확인할 수 있습니다.","- 케인이 그림자의 길을 사용 중일 때 피해를 입히면 지속시간을 줄일 수 있고, 강력한 군중 제어 스킬(기절, 매혹, 공중에 띄워올리기 등)을 사용하면 그림자의 길을 즉시 중단시킬 수 있습니다."],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":10,"defense":6,"magic":1,"difficulty":8},"stats":{"armor":38,"armorperlevel":3.3,"attackdamage":68,"attackdamageperlevel":3.3,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":2.7,"crit":0,"critperlevel":0,"hp":585,"hpperlevel":85,"hpregen":8,"hpregenperlevel":0.75,"movespeed":340,"mp":410,"mpperlevel":50,"mpregen":11.5,"mpregenperlevel":0.95,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"살상돌격","description":"케인이 앞으로 돌진하며 적을 공격합니다. 돌진 및 공격 시 모두 피해를 입힙니다.","sanitizedDescription":"케인이 앞으로 돌진하며 적을 공격합니다. 돌진 및 공격 시 모두 피해를 입힙니다.","tooltip":"케인이 앞으로 돌진해 근처의 적을 공격합니다. 돌진 및 공격 시 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.<br /><hr><span class=\"colorff2323\">다르킨:</span> 입히는 피해량이 대상의 최대 체력에 비례합니다.<br /><br /><rules>몬스터에게 {{ e6 }}의 추가 물리 피해를 입힙니다.</rules>","sanitizedTooltip":"케인이 앞으로 돌진해 근처의 적을 공격합니다. 돌진 및 공격 시 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 다르킨: 입히는 피해량이 대상의 최대 체력에 비례합니다. 몬스터에게 {{ e6 }}의 추가 물리 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초"]},"image":{"full":"KaynQ.png","sprite":"spell5.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[60,80,100,120,140],[0.5,0.5,0.5,0.5,0.5],[5,5,5,5,5],[4,4,4,4,4],[200,250,300,350,400],[55,55,55,55,55],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/80/100/120/140","0.5","5","4","200/250/300/350/400","55","300","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.65]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"KaynQ"},{"name":"몰아치는 낫","description":"케인이 직선상의 대상 모두에게 피해를 입히고 둔화시킵니다.","sanitizedDescription":"케인이 직선상의 대상 모두에게 피해를 입히고 둔화시킵니다.","tooltip":"케인이 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e3 }}% 둔화시킵니다. 둔화 효과는 {{ e5 }}초에 걸쳐 정상으로 돌아옵니다.<br /><hr><span class=\"color7777ff\">그림자 암살자:</span> 사거리가 추가로 증가하고 몰아치는 낫 사용 중 이동할 수 있게 됩니다.<br /><br /><span class=\"colorff2323\">다르킨:</span> 적을 공중으로 띄웁니다.</li></ul>","sanitizedTooltip":"케인이 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e3 }}% 둔화시킵니다. 둔화 효과는 {{ e5 }}초에 걸쳐 정상으로 돌아옵니다. 그림자 암살자: 사거리가 추가로 증가하고 몰아치는 낫 사용 중 이동할 수 있게 됩니다. 다르킨: 적을 공중으로 띄웁니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KaynW.png","sprite":"spell5.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[90,135,180,225,270],[1,1,1,1,1],[60,60,60,60,60],[160,160,160,160,160],[1.5,1.5,1.5,1.5,1.5],[900,900,900,900,900],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","90/135/180/225/270","1","60","160","1.5","900","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.2]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"KaynW"},{"name":"그림자의 길","description":"케인이 지형을 통과해 이동할 수 있습니다.","sanitizedDescription":"케인이 지형을 통과해 이동할 수 있습니다.","tooltip":"케인이 {{ e2 }}초 동안 지형을 통과할 수 있게 되고 이동 속도가 {{ e1 }}% 증가합니다. 처음으로 지형을 통과하면 체력을 {{ e7 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>만큼 회복합니다.<br /><hr><span class=\"color7777ff\">그림자 암살자:</span> 이동 속도가 증가하고 둔화에 면역됩니다.<br /><br /><rules>적 챔피언과 전투 중 최대 지속시간은 {{ e6 }}초입니다.<br />이동 불가 상태가 되거나 지형 밖에서 {{ e3 }}초 넘게 머무르면 그림자의 길 효과가 즉시 종료됩니다.</rules>","sanitizedTooltip":"케인이 {{ e2 }}초 동안 지형을 통과할 수 있게 되고 이동 속도가 {{ e1 }}% 증가합니다. 처음으로 지형을 통과하면 체력을 {{ e7 }} (+{{ a1 }})만큼 회복합니다. 그림자 암살자: 이동 속도가 증가하고 둔화에 면역됩니다. 적 챔피언과 전투 중 최대 지속시간은 {{ e6 }}초입니다. 이동 불가 상태가 되거나 지형 밖에서 {{ e3 }}초 넘게 머무르면 그림자의 길 효과가 즉시 종료됩니다.","leveltip":{"label":["지속시간","회복량","재사용 대기시간"],"effect":["{{ e2 }}초 -> {{ e2NL }}초","{{ e7 }} -> {{ e7NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초"]},"image":{"full":"KaynE.png","sprite":"spell5.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,90,90,90,90],"costBurn":"90","cooldown":[21,19,17,15,13],"cooldownBurn":"21/19/17/15/13","effect":[null,[40,40,40,40,40],[5,6,7,8,9],[1.5,1.5,1.5,1.5,1.5],[1250,1250,1250,1250,1250],[70,70,70,70,70],[1.5,1.5,1.5,1.5,1.5],[100,115,130,145,160],[0.4,0.4,0.4,0.4,0.4],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40","5/6/7/8/9","1.5","1250","70","1.5","100/115/130/145/160","0.4","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.4]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"KaynE"},{"name":"그림자의 지배","description":"케인이 적에게 파고들었다가 빠져나오면서 큰 피해를 입힙니다.","sanitizedDescription":"케인이 적에게 파고들었다가 빠져나오면서 큰 피해를 입힙니다.","tooltip":"케인이 <specialRules>최근에 피해를 입힌</specialRules> 적 챔피언에게 파고들어 {{ e4 }}초 동안 대상으로 지정할 수 없게 됩니다. 스킬을 <span class=\"colorffffff\">다시 사용</span>하면 효과가 일찍 종료됩니다. 그림자의 지배가 끝나면 대상은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입습니다.<br /><hr><span class=\"color7777ff\">그림자 암살자:</span> 사거리가 증가하고 그림자의 지배 종료 시 다르킨의 낫 재사용 대기시간이 초기화됩니다.<br /><br /><span class=\"colorff2323\">다르킨:</span> 대상의 최대 체력에 비례해 피해를 입히고 자신의 체력을 회복합니다.","sanitizedTooltip":"케인이 최근에 피해를 입힌 적 챔피언에게 파고들어 {{ e4 }}초 동안 대상으로 지정할 수 없게 됩니다. 스킬을 다시 사용하면 효과가 일찍 종료됩니다. 그림자의 지배가 끝나면 대상은 {{ e1 }} (+{{ a1 }})의 물리 피해를 입습니다. 그림자 암살자: 사거리가 증가하고 그림자의 지배 종료 시 다르킨의 낫 재사용 대기시간이 초기화됩니다. 다르킨: 대상의 최대 체력에 비례해 피해를 입히고 자신의 체력을 회복합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초"]},"image":{"full":"KaynR.png","sprite":"spell5.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[150,250,350],[0.5,0.5,0.5],[0,0,0],[2.5,2.5,2.5],[300,300,300],[10,10,10],[13,13,13],[70,70,70],[750,750,750],[550,550,550]],"effectBurn":["","150/250/350","0.5","0","2.5","300","10","13","70","750","550"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.5]}],"range":[550,550,550],"rangeBurn":"550","key":"KaynR"}],"passive":{"name":"다르킨의 낫","description":"변신 후부터는 그림자 암살자 또는 다르킨 형상이 계속 유지됩니다.","sanitizedDescription":"변신 후부터는 그림자 암살자 또는 다르킨 형상이 계속 유지됩니다.","image":{"full":"Kayn_Passive_Primary.png","sprite":"passive1.png","group":"passive","x":144,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Kayn","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3071,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]}]},{"champion":"Kayn","title":"KaynARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3184,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3074,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kayn","title":"KaynCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kayn","title":"KaynFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3142,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1}]}]},{"champion":"Kayn","title":"KaynSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3147,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]}]},{"champion":"Kayn","title":"KaynSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":2032,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3133,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3071,"count":1},{"id":1001,"count":1},{"id":3133,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3053,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3147,"count":1},{"id":3142,"count":1},{"id":3117,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3033,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3065,"count":1},{"id":3748,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3026,"count":1},{"id":3193,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3812,"count":1},{"id":3139,"count":1},{"id":3033,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kayn","title":"KaynTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":2032,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3133,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3071,"count":1},{"id":3133,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3053,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3147,"count":1},{"id":3142,"count":1},{"id":3117,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3033,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3065,"count":1},{"id":3748,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3193,"count":1},{"id":3075,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3812,"count":1},{"id":3139,"count":1},{"id":3033,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2055,"count":1}]}]}]},"Kassadin":{"id":38,"key":"Kassadin","name":"카사딘","title":"공허의 방랑자","image":{"full":"Kassadin.png","sprite":"champion1.png","group":"champion","x":0,"y":96,"w":48,"h":48},"skins":[{"id":38000,"name":"default","num":0},{"id":38001,"name":"얼음축제 카사딘","num":1},{"id":38002,"name":"심해의 카사딘","num":2},{"id":38003,"name":"인간 시절의 카사딘","num":3},{"id":38004,"name":"선구자 카사딘","num":4},{"id":38005,"name":"우주의 지배자 카사딘","num":5}],"lore":"세상의 가장 어두운 곳을 불타는 검으로 뚫어 헤쳐 나가는 카사딘은 자신에게 남은 날이 많지 않음을 알고 있다. 한 때 악명 높은 모험가로 알려졌던 카사딘은 스스로의 선택에 의해 이름을 감추고 슈리마의 유목 부족 사이에서 가족을 일구며 지냈다. 자신의 딸을 공허에 빼앗기기 전까지는. 카사딘은 딸을 구해오겠다고 맹세하며, 앞으로 나아가기 위해 여러 신비로운 유물과 금지된 기술을 조합했다. 카사딘의 예방책은 충분하지 않았지만, 이렇게 준비한 장치가 이제 서서히 카사딘의 몸을 갉아먹는 부패를 느리게 해 주고 있다. 하지만 카사딘은 기꺼이 그 대가를 치를 것이다. 딸을 구할 수 있기만 하다면.","blurb":"세상의 가장 어두운 곳을 불타는 검으로 뚫어 헤쳐 나가는 카사딘은 자신에게 남은 날이 많지 않음을 알고 있다. 한 때 악명 높은 모험가로 알려졌던 카사딘은 스스로의 선택에 의해 이름을 감추고 슈리마의 유목 부족 사이에서 가족을 일구며 지냈다. 자신의 딸을 공허에 빼앗기기 전까지는. 카사딘은 딸을 구해오겠다고 맹세하며, 앞으로 나아가기 위해 여러 신비로운 유물과 금지된 기술을 조합했다. 카사딘의 예방책은 충분하지 않았지만, 이렇게 준비한 장치가 이제...","allytips":["- 카사딘은 여러 가지 방면으로 성장시킬 수 있는 챔피언입니다. 마나와 주문력을 늘려 마법 공격형 챔피언으로 성장시킬 수도 있으며 재사용 대기시간 감소와 마법 저항력 위주의 아이템을 장착하면 마법사 사냥꾼으로 둔갑합니다.","- 카사딘의 궁극기는 사용법이 다양하고 재사용 대기시간도 비교적 짧으므로 자주 활용하십시오.","- 푸른 파수꾼을 처치하여 균열 이동을 연속해서 사용할 때 증가하는 마나 소모량에 대비하십시오."],"enemytips":["- 카사딘은 주로 마법 피해를 줍니다. 카사딘에 대항하려면 헤르메스의 발걸음이나 밴시의 장막과 같은 마법 저항력 아이템을 구매하세요.","- 카사딘은 균열 이동을 연속으로 사용할수록 점점 더 많은 마나를 사용하게 됩니다. 카사딘을 쫓을 때는 이 점을 유념하세요.","- 주위에서 스킬이 6번 시전되면 카사딘이 힘의 파동을 사용할 수 있으므로, 스킬 사용에 주의하세요."],"tags":["Assassin","Mage"],"partype":"마나","info":{"attack":3,"defense":5,"magic":8,"difficulty":8},"stats":{"armor":23.376,"armorperlevel":3.2,"attackdamage":58.852,"attackdamageperlevel":3.9,"attackrange":150,"attackspeedoffset":-0.023,"attackspeedperlevel":3.7,"crit":0,"critperlevel":0,"hp":576,"hpperlevel":90,"hpregen":7.79,"hpregenperlevel":0.5,"movespeed":340,"mp":397.6,"mpperlevel":67,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"무의 구체","description":"카사딘이 대상에게 공허 에너지로 구성된 구체를 발사하여 피해를 입히고 정신 집중을 끊습니다. 여분의 에너지는 카사딘의 몸을 감싸 잠시 동안 보호막을 형성하며 마법 피해를 흡수합니다.","sanitizedDescription":"카사딘이 대상에게 공허 에너지로 구성된 구체를 발사하여 피해를 입히고 정신 집중을 끊습니다. 여분의 에너지는 카사딘의 몸을 감싸 잠시 동안 보호막을 형성하며 마법 피해를 흡수합니다.","tooltip":"카사딘이 공허 에너지 구체를 발사하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 정신 집중을 끊습니다.<br /><br />여분의 에너지는 카사딘의 몸을 감싸 {{ e4 }}초 동안 보호막을 형성하며 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 흡수합니다.","sanitizedTooltip":"카사딘이 공허 에너지 구체를 발사하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 정신 집중을 끊습니다. 여분의 에너지는 카사딘의 몸을 감싸 {{ e4 }}초 동안 보호막을 형성하며 {{ e3 }} (+{{ a2 }})의 마법 피해를 흡수합니다.","leveltip":{"label":["피해량","보호막","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NullLance.png","sprite":"spell5.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[65,95,125,155,185],[0,0,0,0,0],[40,70,100,130,160],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/95/125/155/185","0","40/70/100/130/160","1.5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"NullLance"},{"name":"황천의 검","description":"기본 지속 효과: 카사딘의 기본 공격이 추가 마법 피해를 입힙니다. 사용 시: 카사딘의 다음번 기본 공격이 큰 추가 마법 피해를 입히고, 마나가 회복됩니다.","sanitizedDescription":"기본 지속 효과: 카사딘의 기본 공격이 추가 마법 피해를 입힙니다. 사용 시: 카사딘의 다음번 기본 공격이 큰 추가 마법 피해를 입히고, 마나가 회복됩니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>카사딘이 기본 공격 시 공허에서 에너지를 추출하여 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>카사딘이 황천의 검을 충전하여 다음 번 기본 공격으로 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입히고, <span class=\"color44DDFF\">잃은 마나의 {{ e1 }}%</span>를 회복합니다. (챔피언을 공격하면 <span class=\"color44DDFF\">{{ e4 }}%</span>로 증가)","sanitizedTooltip":"기본 지속 효과: 카사딘이 기본 공격 시 공허에서 에너지를 추출하여 {{ e2 }} (+{{ a1 }})의 추가 마법 피해를 입힙니다. 사용 시: 카사딘이 황천의 검을 충전하여 다음 번 기본 공격으로 {{ e3 }} (+{{ a2 }})의 추가 마법 피해를 입히고, 잃은 마나의 {{ e1 }}%를 회복합니다. (챔피언을 공격하면 {{ e4 }}%로 증가)","leveltip":{"label":["사용 시 피해량","기본 마나 회복량","챔피언 마나 회복량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ e4 }}% -> {{ e4NL }}%"]},"image":{"full":"NetherBlade.png","sprite":"spell5.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[7,7,7,7,7],"cooldownBurn":"7","effect":[null,[4,5,6,7,8],[20,20,20,20,20],[40,65,90,115,140],[20,25,30,35,40],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4/5/6/7/8","20","40/65/90/115/140","20/25/30/35/40","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.1]},{"key":"a2","link":"spelldamage","coeff":[0.7]}],"range":[1,1,1,1,1],"rangeBurn":"1","key":"NetherBlade"},{"name":"힘의 파동","description":"카사딘이 자신의 영역 안에서 시전된 마법에서 에너지를 뽑아냅니다. 충전이 완료되면 힘의 파동을 시전하여 정면 원뿔 반경에 있는 적의 속도를 늦추고 피해를 입힐 수 있습니다.","sanitizedDescription":"카사딘이 자신의 영역 안에서 시전된 마법에서 에너지를 뽑아냅니다. 충전이 완료되면 힘의 파동을 시전하여 정면 원뿔 반경에 있는 적의 속도를 늦추고 피해를 입힐 수 있습니다.","tooltip":"카사딘이 자신의 영역 안에서 시전된 마법에서 에너지를 뽑아냅니다. 주변에서 마법이 시전될 때 마다 1회 충전을 얻습니다.<br /><br />6번의 충전을 얻으면 카사딘이 힘의 파동을 시전하여 원뿔 반경안의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 당한 대상은 {{ e3 }}초 동안 이동 속도가 {{ e2 }}% 감소합니다.","sanitizedTooltip":"카사딘이 자신의 영역 안에서 시전된 마법에서 에너지를 뽑아냅니다. 주변에서 마법이 시전될 때 마다 1회 충전을 얻습니다. 6번의 충전을 얻으면 카사딘이 힘의 파동을 시전하여 원뿔 반경안의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 당한 대상은 {{ e3 }}초 동안 이동 속도가 {{ e2 }}% 감소합니다.","leveltip":{"label":["피해량","둔화 %","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ForcePulse.png","sprite":"spell5.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[5,5,5,5,5],"cooldownBurn":"5","effect":[null,[80,105,130,155,180],[50,60,70,80,90],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/105/130/155/180","50/60/70/80/90","1","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"ForcePulse"},{"name":"균열 이동","description":"카사딘이 가까운 지역으로 순간 이동하면서 주변 적 유닛에게 피해를 입힙니다. 짧은 시간 동안 여러 번의 균열 이동을 시전하면 마나를 추가로 소모하는 대신 추가 피해를 입힐 수 있습니다.","sanitizedDescription":"카사딘이 가까운 지역으로 순간 이동하면서 주변 적 유닛에게 피해를 입힙니다. 짧은 시간 동안 여러 번의 균열 이동을 시전하면 마나를 추가로 소모하는 대신 추가 피해를 입힐 수 있습니다.","tooltip":"카사딘이 근처로 순간 이동하여 주변 적들에게 {{ e1 }} <span class=\"color44DDFF\">(+{{ f2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />다음 {{ e2 }}초 안에 균열 이동을 연속으로 사용할 경우 두 배의 마나를 소모하며 중첩 당 {{ e3 }} <span class=\"color44DDFF\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ f3 }})</span>의 추가 마법 피해를 입히고, 최대 {{ e6 }}번까지 중첩됩니다.","sanitizedTooltip":"카사딘이 근처로 순간 이동하여 주변 적들에게 {{ e1 }} (+{{ f2 }}) (+{{ a1 }})의 마법 피해를 입힙니다. 다음 {{ e2 }}초 안에 균열 이동을 연속으로 사용할 경우 두 배의 마나를 소모하며 중첩 당 {{ e3 }} (+{{ f1 }}) (+{{ f3 }})의 추가 마법 피해를 입히고, 최대 {{ e6 }}번까지 중첩됩니다.","leveltip":{"label":["기본 피해량","중첩 당 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RiftWalk.png","sprite":"spell5.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[50,50,50],"costBurn":"50","cooldown":[6,4,2],"cooldownBurn":"6/4/2","effect":[null,[80,100,120],[15,15,15],[40,50,60],[1,1,1],[0,0,0],[4,4,4],[2,2,2],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","80/100/120","15","40/50/60","1","0","4","2","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[500,500,500],"rangeBurn":"500","key":"RiftWalk"}],"passive":{"name":"공허석","description":"카사딘이 받는 마법 피해가 15% 감소하며, 유닛과의 충돌을 무시합니다.","sanitizedDescription":"카사딘이 받는 마법 피해가 15% 감소하며, 유닛과의 충돌을 무시합니다.","image":{"full":"Kassadin_Passive.png","sprite":"passive1.png","group":"passive","x":0,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Kassadin","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3165,"count":1},{"id":3100,"count":1},{"id":3089,"count":1}]}]},{"champion":"Kassadin","title":"KassadinARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3100,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kassadin","title":"KassadinCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3100,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kassadin","title":"KassadinFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3706,"count":1},{"id":2032,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3003,"count":1},{"id":3157,"count":1},{"id":3174,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kassadin","title":"KassadinKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3100,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kassadin","title":"KassadinSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3100,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]}]},{"champion":"Kassadin","title":"KassadinSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3100,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kassadin","title":"KassadinTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3158,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1402,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3003,"count":1},{"id":3090,"count":1},{"id":3165,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Sivir":{"id":15,"key":"Sivir","name":"시비르","title":"전장의 여제","image":{"full":"Sivir.png","sprite":"champion3.png","group":"champion","x":0,"y":48,"w":48,"h":48},"skins":[{"id":15000,"name":"default","num":0},{"id":15001,"name":"전장의 공주 시비르","num":1},{"id":15002,"name":"눈부신 시비르","num":2},{"id":15003,"name":"사냥꾼 시비르","num":3},{"id":15004,"name":"약탈자 시비르","num":4},{"id":15005,"name":"PAX 시비르","num":5},{"id":15006,"name":"눈꽃 시비르","num":6},{"id":15007,"name":"심판자 시비르","num":7},{"id":15008,"name":"승리의 시비르","num":8},{"id":15009,"name":"네오 PAX 시비르","num":9}],"lore":"시비르는 슈리마 사막에서 활동하는 보물 사냥꾼이자 용병 대장이다. 몸값은 입이 떡 벌어질 정도로 비싸지만 전투를 벌이는 족족 이겨 몸값에 걸맞은 솜씨로 명성이 자자하다. 대담무쌍한 성격에 원대한 야심까지 겸비한 시비르. 그녀는 위험하기 짝이 없는 슈리마의 묘역에서 진귀한 보물을 찾으며 남다른 자부심을 느낀다. 의뢰인에게서 두둑한 대가를 챙기는 것은 물론이다. 하지만 슈리마에 고대의 존재들이 귀환하면서 시비르도 운명의 갈림길에 서게 된다.","blurb":"시비르는 슈리마 사막에서 활동하는 보물 사냥꾼이자 용병 대장이다. 몸값은 입이 떡 벌어질 정도로 비싸지만 전투를 벌이는 족족 이겨 몸값에 걸맞은 솜씨로 명성이 자자하다. 대담무쌍한 성격에 원대한 야심까지 겸비한 시비르. 그녀는 위험하기 짝이 없는 슈리마의 묘역에서 진귀한 보물을 찾으며 남다른 자부심을 느낀다. 의뢰인에게서 두둑한 대가를 챙기는 것은 물론이다. 하지만 슈리마에 고대의 존재들이 귀환하면서 시비르도 운명의 갈림길에 서게 된다.","allytips":["- 시비르의 부메랑 검은 최대 사거리에 도달하면 다시 되돌아오므로 되돌아오는 위치를 계산하며 이동하여 적이 부메랑에 맞도록 유도할 수 있습니다.","- 튕기는 부메랑 스킬은 시비르의 기본 공격 모션을 취소합니다. 기본 공격을 사용한 후 튕기는 부메랑 스킬을 사용하면 피해량을 최대화 할 수 있습니다.","- 주문 방어막은 기절이나 속박 등 방해 효과가 있는 적 스킬에 대비하여 아껴 두세요."],"enemytips":["- 부메랑 검은 많은 마나를 소모하므로 빗나갈 경우 시비르에게도 치명적입니다. 만약 부메랑에 맞았을 경우, 되돌아 올 때 다시 맞지 않도록 피하십시오.","- 시비르는 강력한 압박형 챔피언입니다. 시비르가 있는 공격로를 너무 오랫동안 내버려두면 포탑이 순식간에 파괴됩니다.","- 마법사 챔피언일 경우 앞으로 나가 스킬을 쓰는 척하다가 빠지는 방식으로 주문 방어막을 낭비하게 해 보세요."],"tags":["Marksman"],"partype":"마나","info":{"attack":9,"defense":3,"magic":1,"difficulty":4},"stats":{"armor":31,"armorperlevel":3.25,"attackdamage":65,"attackdamageperlevel":2.41,"attackrange":500,"attackspeedoffset":0,"attackspeedperlevel":1.6,"crit":0,"critperlevel":0,"hp":515.76,"hpperlevel":82,"hpregen":5.174,"hpregenperlevel":0.55,"movespeed":335,"mp":284,"mpperlevel":50,"mpregen":8.012,"mpregenperlevel":0.9,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"부메랑 검","description":"시비르가 십자날 검을 부메랑처럼 던져서 두 번 피해를 입힙니다.","sanitizedDescription":"시비르가 십자날 검을 부메랑처럼 던져서 두 번 피해를 입힙니다.","tooltip":"시비르가 십자날 검을 부메랑처럼 던져 첫 번째 대상에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span> 의 물리 피해를 입히고 다음 적들에게 순차적으로 {{ e2 }}%씩 감소된 피해를 입힙니다. 피해량은 최소 {{ e3 }}%까지 내려갈 수 있습니다. ","sanitizedTooltip":"시비르가 십자날 검을 부메랑처럼 던져 첫 번째 대상에게 {{ e1 }} (+{{ f1 }}) (+{{ a1 }}) 의 물리 피해를 입히고 다음 적들에게 순차적으로 {{ e2 }}%씩 감소된 피해를 입힙니다. 피해량은 최소 {{ e3 }}%까지 내려갈 수 있습니다.","leveltip":{"label":["기본 피해량","공격력 증가","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SivirQ.png","sprite":"spell10.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[35,55,75,95,115],[15,15,15,15,15],[40,40,40,40,40],[0.7,0.8,0.9,1,1.1],[70,80,90,100,110],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/55/75/95/115","15","40","0.7/0.8/0.9/1/1.1","70/80/90/100/110","0","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[1200,1200,1200,1200,1200],"rangeBurn":"1200","key":"SivirQ"},{"name":"튕기는 부메랑","description":"시비르의 다음 몇 번의 기본 공격은 첫 번째 목표물에 적중한 후 주위 적들에게 튕기며, 2차 대상에게는 감소된 피해를 입힙니다.","sanitizedDescription":"시비르의 다음 몇 번의 기본 공격은 첫 번째 목표물에 적중한 후 주위 적들에게 튕기며, 2차 대상에게는 감소된 피해를 입힙니다.","tooltip":"시비르의 다음 {{ e4 }}번의 기본 공격은 주변 대상에게 튕기며 첫 번째 대상에게는 <span class=\"colorFF8C00\">{{ f1 }}</span>의 물리 피해를, 그 다음 대상에게는 각각 <span class=\"colorFF8C00\">{{ f2 }}</span>의 물리 피해를 입힙니다.<br /><br />첫 번째 대상에게 치명타로 적중 시 튕긴 대상에게도 치명타로 적중됩니다.<br /><br /><span class=\"color919191\"><i>튕기는 부메랑 스킬은 같은 대상을 한 번 이상 맞힐 수 없으며 적중 시 발동 효과는 첫 번째 대상에게만 적용됩니다.</i></span>","sanitizedTooltip":"시비르의 다음 {{ e4 }}번의 기본 공격은 주변 대상에게 튕기며 첫 번째 대상에게는 {{ f1 }}의 물리 피해를, 그 다음 대상에게는 각각 {{ f2 }}의 물리 피해를 입힙니다. 첫 번째 대상에게 치명타로 적중 시 튕긴 대상에게도 치명타로 적중됩니다. 튕기는 부메랑 스킬은 같은 대상을 한 번 이상 맞힐 수 없으며 적중 시 발동 효과는 첫 번째 대상에게만 적용됩니다.","leveltip":{"label":["재사용 대기시간","튕겼을 때 피해량 (총 피해량)"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"SivirW.png","sprite":"spell10.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[12,10.5,9,7.5,6],"cooldownBurn":"12/10.5/9/7.5/6","effect":[null,[5,6,7,8,9],[10,20,30,40,50],[50,55,60,65,70],[3,3,3,3,3],[60,70,80,90,100],[1,1,1,1,1],[0,0,0,0,0],[4.5,4.25,4,3.75,3.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/6/7/8/9","10/20/30/40/50","50/55/60/65/70","3","60/70/80/90/100","1","0","4.5/4.25/4/3.75/3.5","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0]},{"key":"f2","link":"attackdamage","coeff":[0]}],"range":[20,20,20,20,20],"rangeBurn":"20","key":"SivirW"},{"name":"주문 방어막","description":"시비르가 마법 보호막을 만들어 자신을 대상으로 한 적 스킬 1개를 막아냅니다. 성공적으로 방어시 마나를 돌려받습니다.","sanitizedDescription":"시비르가 마법 보호막을 만들어 자신을 대상으로 한 적 스킬 1개를 막아냅니다. 성공적으로 방어시 마나를 돌려받습니다.","tooltip":"시비르가 {{ e1 }}초간 주문 방어막을 만들어 적의 스킬을 막아냅니다.<br /><br />적의 스킬을 방어하는 데 성공하면 시비르의 마나가 {{ e2 }} 회복됩니다.","sanitizedTooltip":"시비르가 {{ e1 }}초간 주문 방어막을 만들어 적의 스킬을 막아냅니다. 적의 스킬을 방어하는 데 성공하면 시비르의 마나가 {{ e2 }} 회복됩니다.","leveltip":{"label":["재사용 대기시간","마나 획득량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"SivirE.png","sprite":"spell10.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[22,19,16,13,10],"cooldownBurn":"22/19/16/13/10","effect":[null,[1.5,1.5,1.5,1.5,1.5],[80,95,110,125,140],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.5","80/95/110/125/140","0","0","0","0","0","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"SivirE"},{"name":"사냥 개시","description":"시비르가 전장에서 아군을 이끌며, 잠시동안 이동 속도를 대폭 상승시킵니다. 또한, 튕기는 부메랑이 활성화된 동안 시비르의 공격 속도가 증가합니다.","sanitizedDescription":"시비르가 전장에서 아군을 이끌며, 잠시동안 이동 속도를 대폭 상승시킵니다. 또한, 튕기는 부메랑이 활성화된 동안 시비르의 공격 속도가 증가합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>튕기는 부메랑이 활성화된 동안 시비르의 공격 속도가 {{ e1 }}% 상승합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>시비르가 {{ e3 }}초 동안 아군을 규합하여, 주변 모든 아군의 이동 속도가 {{ e4 }}% 상승했다가 사냥 개시 지속 시간의 첫 {{ e5 }}초가 지나면 {{ e2 }}%로 감소합니다.","sanitizedTooltip":"기본 지속 효과: 튕기는 부메랑이 활성화된 동안 시비르의 공격 속도가 {{ e1 }}% 상승합니다. 사용 시: 시비르가 {{ e3 }}초 동안 아군을 규합하여, 주변 모든 아군의 이동 속도가 {{ e4 }}% 상승했다가 사냥 개시 지속 시간의 첫 {{ e5 }}초가 지나면 {{ e2 }}%로 감소합니다.","leveltip":{"label":["공격 속도","이동 속도 향상 효과","이동 속도 향상 지속 시간","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e4 }}% -> {{ e4NL }}%","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SivirR.png","sprite":"spell10.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[30,45,60],[20,20,20],[8,8,8],[40,50,60],[2,3,4],[1000,1000,1000],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","30/45/60","20","8","40/50/60","2/3/4","1000","0","0","0","0"],"range":[1000,1000,1000],"rangeBurn":"1000","key":"SivirR"}],"passive":{"name":"재빠른 발놀림","description":"시비르가 적 챔피언을 공격할 때 짧은 시간동안 이동 속도가 대폭 상승합니다.","sanitizedDescription":"시비르가 적 챔피언을 공격할 때 짧은 시간동안 이동 속도가 대폭 상승합니다.","image":{"full":"Sivir_Passive.png","sprite":"passive3.png","group":"passive","x":0,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Sivir","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1038,"count":1},{"id":1037,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3031,"count":1},{"id":3133,"count":1},{"id":3508,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3812,"count":1},{"id":3085,"count":1},{"id":3026,"count":1}]}]},{"champion":"Sivir","title":"SivirARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3508,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3072,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Sivir","title":"SivirCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1001,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Sivir","title":"SivirFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1037,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3508,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3036,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3139,"count":1},{"id":3071,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Sivir","title":"SivirKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3508,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3102,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Sivir","title":"SivirPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3009,"count":1},{"id":3508,"count":1},{"id":3094,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3031,"count":1},{"id":3046,"count":1},{"id":3812,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3142,"count":1},{"id":3078,"count":1}]}]},{"champion":"Sivir","title":"SivirSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]}]},{"champion":"Sivir","title":"SivirSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1001,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Sivir","title":"SivirTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"MissFortune":{"id":21,"key":"MissFortune","name":"미스 포츈","title":"현상금 사냥꾼","image":{"full":"MissFortune.png","sprite":"champion2.png","group":"champion","x":0,"y":48,"w":48,"h":48},"skins":[{"id":21000,"name":"default","num":0},{"id":21001,"name":"카우걸 미스 포츈","num":1},{"id":21002,"name":"워털루 미스 포츈","num":2},{"id":21003,"name":"비밀요원 미스 포츈","num":3},{"id":21004,"name":"막대사탕 미스 포츈","num":4},{"id":21005,"name":"로드워리어 미스 포츈","num":5},{"id":21006,"name":"마피아 미스 포츈","num":6},{"id":21007,"name":"아케이드 미스 포츈","num":7},{"id":21008,"name":"캡틴 미스 포츈","num":8},{"id":21009,"name":"수영장 파티 미스 포츈","num":9},{"id":21015,"name":"별 수호자 미스 포츈","num":15}],"lore":"빌지워터의 선장, 사라 포츈은 아름다운 외모로도 유명하지만 무자비한 성정으로 공포의 대상이 되기도 한다. 그녀는 판에 박힌 듯 똑같은 빌지워터의 범죄자들 사이에서도 단연 돋보이는 존재다. 사라 포츈은 어릴 적에 자신의 가족이 해적왕 갱플랭크에게 살해당하는 것을 눈앞에서 보았다. 그리고 몇 년 후, 그녀는 갱플랭크가 기함에 타고 있을 때 기함을 불태우며 잔혹한 복수에 성공했다. 그녀를 얕보는 자들은 그녀가 매력적이지만 예상치 못했던 적수라는 사실을 알게 될 것이다. 뱃속에 박힐 총알 한두 발도 예상치 못한 것은 마찬가지이겠지만.","blurb":"빌지워터의 선장, 사라 포츈은 아름다운 외모로도 유명하지만 무자비한 성정으로 공포의 대상이 되기도 한다. 그녀는 판에 박힌 듯 똑같은 빌지워터의 범죄자들 사이에서도 단연 돋보이는 존재다. 사라 포츈은 어릴 적에 자신의 가족이 해적왕 갱플랭크에게 살해당하는 것을 눈앞에서 보았다. 그리고 몇 년 후, 그녀는 갱플랭크가 기함에 타고 있을 때 기함을 불태우며 잔혹한 복수에 성공했다. 그녀를 얕보는 자들은 그녀가 매력적이지만 예상치 못했던 적수라는 사실을...","allytips":["- 미스 포츈은 얼마 동안 피해를 입지 않으면 이동 속도가 점점 올라갑니다. 빨리 이동하려면 공격받는 걸 피하십시오.","- 적 챔피언이 미니언 뒤에 숨어 있다면 가장 멀리 있는 미니언에게 한 발에 두 놈을 사용하여 그 뒤에 있는 챔피언에게 큰 피해를 줄 수 있습니다.","- 활보가 재사용 대기 중일 때는 사랑의 한 방을 활용해 활보의 재사용 대기시간을 줄일 수 있습니다."],"enemytips":["- 미스 포츈의 이동 속도 증가 효과는 피해를 입으면 사라집니다.","- 미스 포츈은 접근만 할 수 있다면 매우 쉬운 상대이므로, 팀 전투 시 가장 먼저 공략하십시오."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":2,"magic":5,"difficulty":1},"stats":{"armor":33,"armorperlevel":3,"attackdamage":54,"attackdamageperlevel":1,"attackrange":550,"attackspeedoffset":-0.0473,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":530,"hpperlevel":85,"hpregen":6.192,"hpregenperlevel":0.65,"movespeed":325,"mp":325.84,"mpperlevel":35,"mpregen":8.042,"mpregenperlevel":0.65,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"한 발에 두 놈","description":"미스 포츈이 하나의 대상에게 총알을 쏘아 대상과 대상 뒤에 있는 적에게 피해를 입힙니다. 두 번 모두에 사랑의 한 방이 적용될 수 있습니다.","sanitizedDescription":"미스 포츈이 하나의 대상에게 총알을 쏘아 대상과 대상 뒤에 있는 적에게 피해를 입힙니다. 두 번 모두에 사랑의 한 방이 적용될 수 있습니다.","tooltip":"미스 포츈이 튕기는 총알을 적에게 발사하여 두 대상에게 각각 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 두 번 모두 적중 시 효과를 적용합니다.<br /><br />두 번째 대상에게는 {{ f1 }}%의 치명타를 입힐 수 있으며, 첫 번째 대상을 처치했을 경우 두 번째 대상에게는 항상 치명타가 적용됩니다.","sanitizedTooltip":"미스 포츈이 튕기는 총알을 적에게 발사하여 두 대상에게 각각 {{ e2 }} (+{{ a2 }}) (+{{ a1 }})의 물리 피해를 입힙니다. 두 번 모두 적중 시 효과를 적용합니다. 두 번째 대상에게는 {{ f1 }}%의 치명타를 입힐 수 있으며, 첫 번째 대상을 처치했을 경우 두 번째 대상에게는 항상 치명타가 적용됩니다.","leveltip":{"label":["마나 소모량","재사용 대기시간","피해량"],"effect":["{{ cost }} -> {{ costNL }} ","{{ cooldown }} -> {{ cooldownNL }} ","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"MissFortuneRicochetShot.png","sprite":"spell7.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[43,46,49,52,55],"costBurn":"43/46/49/52/55","cooldown":[7,6,5,4,3],"cooldownBurn":"7/6/5/4/3","effect":[null,[1,1,1,1,1],[20,40,60,80,100],[1,1,1,1,1],[40,70,100,130,160],[40,40,40,40,40],[20,20,20,20,20],[40,40,40,40,40],[110,110,110,110,110],[160,160,160,160,160],[0,0,0,0,0]],"effectBurn":["","1","20/40/60/80/100","1","40/70/100/130/160","40","20","40","110","160","0"],"vars":[{"key":"a2","link":"attackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.35]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"MissFortuneRicochetShot"},{"name":"활보","description":"미스 포츈은 얼마 동안 피해를 입지 않으면 이동 속도가 점점 올라갑니다. 이 스킬을 활성화하면 잠깐 동안 미스 포츈의 공격 속도가 높아집니다. 재사용 대기 중일 때는 사랑의 한 방을 활용해 활보의 재사용 대기시간을 줄일 수 있습니다.","sanitizedDescription":"미스 포츈은 얼마 동안 피해를 입지 않으면 이동 속도가 점점 올라갑니다. 이 스킬을 활성화하면 잠깐 동안 미스 포츈의 공격 속도가 높아집니다. 재사용 대기 중일 때는 사랑의 한 방을 활용해 활보의 재사용 대기시간을 줄일 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 5초간 직접적인 피해를 받지 않으면 미스 포츈의 이동 속도가 {{ e5 }}만큼 증가합니다. 다음 5초간 피해를 입지 않으면 이동 속도가 {{ e2 }}까지 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> {{ e3 }}초 동안 공격 속도를 {{ e1 }}% 상승시키고 활보의 이동 속도 증가 효과를 최대로 활성화합니다.<br /><br />사랑의 한 방 발동 시 활보의 재사용 대기시간이 {{ f2 }}초 줄어듭니다.","sanitizedTooltip":"기본 지속 효과: 5초간 직접적인 피해를 받지 않으면 미스 포츈의 이동 속도가 {{ e5 }}만큼 증가합니다. 다음 5초간 피해를 입지 않으면 이동 속도가 {{ e2 }}까지 증가합니다. 사용 시: {{ e3 }}초 동안 공격 속도를 {{ e1 }}% 상승시키고 활보의 이동 속도 증가 효과를 최대로 활성화합니다. 사랑의 한 방 발동 시 활보의 재사용 대기시간이 {{ f2 }}초 줄어듭니다.","leveltip":{"label":["최대 이동 속도","공격 속도"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%"]},"image":{"full":"MissFortuneViciousStrikes.png","sprite":"spell7.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[40,55,70,85,100],[60,70,80,90,100],[4,4,4,4,4],[2,2,2,2,2],[25,25,25,25,25],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/55/70/85/100","60/70/80/90/100","4","2","25","1","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"MissFortuneViciousStrikes"},{"name":"총알은 비를 타고","description":"미스 포츈이 총알을 퍼부어 지정 위치의 시야를 밝힙니다. 해당 위치에 있는 적은 여러 차례 피해를 입고 이동 속도가 느려집니다.","sanitizedDescription":"미스 포츈이 총알을 퍼부어 지정 위치의 시야를 밝힙니다. 해당 위치에 있는 적은 여러 차례 피해를 입고 이동 속도가 느려집니다.","tooltip":"미스 포츈이 지정 지역에 총알을 퍼부어 시야를 밝히고 2초간 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 총알에 맞은 적은 이동 속도가 {{ e2 }}% 느려집니다.","sanitizedTooltip":"미스 포츈이 지정 지역에 총알을 퍼부어 시야를 밝히고 2초간 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 총알에 맞은 적은 이동 속도가 {{ e2 }}% 느려집니다.","leveltip":{"label":["재사용 대기시간","피해량","둔화"],"effect":["{{ cooldown }} -> {{ cooldownNL }} ","{{ e1 }} -> {{ e1NL }} ","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"MissFortuneScattershot.png","sprite":"spell7.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[80,115,150,185,220],[28,36,44,52,60],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/115/150/185/220","28/36/44/52/60","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"MissFortuneScattershot"},{"name":"쌍권총 난사","description":"미스 포츈이 정면에 원뿔 형태로 수백 발의 총알을 쏘며 적에게 대량의 피해를 입힙니다. 쌍권총 난사는 매회 발사 시 각각 치명타가 적용될 수 있습니다.","sanitizedDescription":"미스 포츈이 정면에 원뿔 형태로 수백 발의 총알을 쏘며 적에게 대량의 피해를 입힙니다. 쌍권총 난사는 매회 발사 시 각각 치명타가 적용될 수 있습니다.","tooltip":"미스 포츈이 {{ e3 }}초 동안 정신 집중 상태로 총을 난사해 공격 한 차례에 <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. (총 {{ e2 }}회 공격)<br /><br />쌍권총 난사는 매회 발사 시 각각 피해량의 {{ f3 }}%로 치명타가 적용될 수 있습니다.<br /><br /><span class=\"colorF50F00\">총 피해량: {{ f2 }}</span>","sanitizedTooltip":"미스 포츈이 {{ e3 }}초 동안 정신 집중 상태로 총을 난사해 공격 한 차례에 (+{{ f1 }}) (+{{ a1 }})의 물리 피해를 입힙니다. (총 {{ e2 }}회 공격) 쌍권총 난사는 매회 발사 시 각각 피해량의 {{ f3 }}%로 치명타가 적용될 수 있습니다. 총 피해량: {{ f2 }}","leveltip":{"label":["재사용 대기시간","공격 횟수"],"effect":["{{ cooldown }} -> {{ cooldownNL }} ","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"MissFortuneBulletTime.png","sprite":"spell7.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[0,0,0],[12,14,16],[3,3,3],[75,75,75],[120,120,120],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","0","12/14/16","3","75","120","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.35]},{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[400,400,400],"rangeBurn":"400","key":"MissFortuneBulletTime"}],"passive":{"name":"사랑의 한 방","description":"미스 포츈은 새로운 대상을 공격할 때마다 추가 물리 피해를 입힙니다.","sanitizedDescription":"미스 포츈은 새로운 대상을 공격할 때마다 추가 물리 피해를 입힙니다.","image":{"full":"MissFortune_W.png","sprite":"passive2.png","group":"passive","x":0,"y":48,"w":48,"h":48}},"recommended":[{"champion":"MissFortune","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3087,"count":1},{"id":3031,"count":1},{"id":3071,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3071,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3071,"count":1},{"id":3812,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2055,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3812,"count":1},{"id":3087,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3102,"count":1},{"id":3071,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3102,"count":1},{"id":3071,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"MissFortune","title":"MissFortunePRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3009,"count":1},{"id":3031,"count":1},{"id":3508,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3812,"count":1},{"id":3071,"count":1},{"id":3078,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3046,"count":1},{"id":3139,"count":1},{"id":3814,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3071,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2055,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3071,"count":1},{"id":3812,"count":1},{"id":3102,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3071,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"MissFortune","title":"MissFortuneTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Draven":{"id":119,"key":"Draven","name":"드레이븐","title":"화려한 처형자","image":{"full":"Draven.png","sprite":"champion0.png","group":"champion","x":48,"y":96,"w":48,"h":48},"skins":[{"id":119000,"name":"default","num":0},{"id":119001,"name":"영혼 파괴자 드레이븐","num":1},{"id":119002,"name":"검투사 드레이븐","num":2},{"id":119003,"name":"채널고정 드레이븐","num":3},{"id":119004,"name":"수영장 파티 드레이븐","num":4},{"id":119005,"name":"괴물 사냥꾼 드레이븐","num":5},{"id":119006,"name":"대두레이븐","num":6},{"id":119012,"name":"산타 드레이븐","num":12}],"lore":"녹서스에서는 경기장에서 피를 흘리며 싸우고 힘을 겨루는 전사들이 있다. '청산업자'로 알려진 이들 중 드레이븐만큼 많은 환호를 받은 전사는 없었다. 전직 군인인 드레이븐은 회전 도끼가 뿜어내는 피안개는 물론이고, 자신의 극적이고 화려한 기술에 관중들이 환호한다는 것을 알아차렸다. 드레이븐은 요란하고도 완벽한 구경거리를 만들어내는 자신의 기술에 도취되어, 드레이븐이라는 이름을 녹서스 제국에 길이 남기기 위해 누구든 쓰러뜨리겠다고 다짐했다.","blurb":"녹서스에서는 경기장에서 피를 흘리며 싸우고 힘을 겨루는 전사들이 있다. '청산업자'로 알려진 이들 중 드레이븐만큼 많은 환호를 받은 전사는 없었다. 전직 군인인 드레이븐은 회전 도끼가 뿜어내는 피안개는 물론이고, 자신의 극적이고 화려한 기술에 관중들이 환호한다는 것을 알아차렸다. 드레이븐은 요란하고도 완벽한 구경거리를 만들어내는 자신의 기술에 도취되어, 드레이븐이라는 이름을 녹서스 제국에 길이 남기기 위해 누구든 쓰러뜨리겠다고 다짐했다.","allytips":["- 회전 도끼 스킬을 사용한 후 드레이븐이 움직이지 않으면 현재 위치나 오른쪽, 또는 왼쪽 근처로 도끼가 떨어집니다.","- 스킬 사용 후 드레이븐이 이동하면 그 방향으로 회전 도끼가 미리 가게 되므로, 이를 이용하여 회전 도끼의 궤적을 제어할 수 있습니다."],"enemytips":["- 드레이븐의 회전 도끼가 떨어질 위치 쪽으로 스킬 공격을 사용하는 것이 좋습니다.","- 드레이븐이 도끼를 다시 받을 수 없도록 방해하면, 드레이븐의 위력이 대폭 감소합니다."],"tags":["Marksman"],"partype":"마나","info":{"attack":9,"defense":3,"magic":1,"difficulty":8},"stats":{"armor":35,"armorperlevel":3.3,"attackdamage":64,"attackdamageperlevel":2.91,"attackrange":550,"attackspeedoffset":-0.08,"attackspeedperlevel":2.7,"crit":0,"critperlevel":0,"hp":557.76,"hpperlevel":82,"hpregen":6.176,"hpregenperlevel":0.7,"movespeed":330,"mp":360.56,"mpperlevel":39,"mpregen":8.042,"mpregenperlevel":0.65,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"회전 도끼","description":"드레이븐의 다음 공격이 추가 물리 피해를 입힙니다. 이 도끼는 대상에게 맞고 튕겨 나가 공중에 뜹니다. 공중에 뜬 도끼를 회수하면 자동으로 회전 도끼를 재사용할 수 있게 됩니다. 드레이븐은 한번에 2개의 도끼를 사용할 수 있습니다.","sanitizedDescription":"드레이븐의 다음 공격이 추가 물리 피해를 입힙니다. 이 도끼는 대상에게 맞고 튕겨 나가 공중에 뜹니다. 공중에 뜬 도끼를 회수하면 자동으로 회전 도끼를 재사용할 수 있게 됩니다. 드레이븐은 한번에 2개의 도끼를 사용할 수 있습니다.","tooltip":"드레이븐의 다음 공격이 <span class=\"colorFF8C00\">{{ f1 }}</span>만큼의 추가 물리 피해를 입힙니다. 추가 피해량은 {{ e5 }} + 추가 공격력의 {{ e2 }}%와 동일합니다.<br /><br />드레이븐의 도끼가 대상에게 맞고 튕겨 나가 공중으로 높이 뜹니다. 공중에 뜬 도끼를 드레이븐이 잡으면 자동으로 회전 도끼를 다시 사용합니다.<br /><br /><span class=\"colorDDDD77\">드레이븐은 한 번에 두 개의 도끼를 사용할 수 있습니다.</span>","sanitizedTooltip":"드레이븐의 다음 공격이 {{ f1 }}만큼의 추가 물리 피해를 입힙니다. 추가 피해량은 {{ e5 }} + 추가 공격력의 {{ e2 }}%와 동일합니다. 드레이븐의 도끼가 대상에게 맞고 튕겨 나가 공중으로 높이 뜹니다. 공중에 뜬 도끼를 드레이븐이 잡으면 자동으로 회전 도끼를 다시 사용합니다. 드레이븐은 한 번에 두 개의 도끼를 사용할 수 있습니다.","leveltip":{"label":["기본 피해량","추가 공격력 %","재사용 대기시간"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DravenSpinning.png","sprite":"spell2.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[100,100,100,100,100],[65,75,85,95,105],[30,35,40,45,50],[5.75,5.75,5.75,5.75,5.75],[35,40,45,50,55],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","100","65/75/85/95/105","30/35/40/45/50","5.75","35/40/45/50/55","0","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.45,0.55,0.65,0.75,0.85]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"DravenSpinning"},{"name":"광기의 피","description":"드레이븐의 이동 속도와 공격 속도가 증가합니다. 이동 속도 증가 효과는 시간이 지날수록 급격하게 감소합니다. 드레이븐이 회전 도끼를 회수하면 광기의 피 재사용 대기시간이 초기화됩니다.","sanitizedDescription":"드레이븐의 이동 속도와 공격 속도가 증가합니다. 이동 속도 증가 효과는 시간이 지날수록 급격하게 감소합니다. 드레이븐이 회전 도끼를 회수하면 광기의 피 재사용 대기시간이 초기화됩니다.","leveltip":{"label":["공격 속도","마나 소모값","이동 속도"],"effect":["{{ e4 }}% -> {{ e4NL }}%","{{ cost }} -> {{ costNL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"DravenFury.png","sprite":"spell2.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,35,30,25,20],"costBurn":"40/35/30/25/20","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[4,5,6,7,8],[40,45,50,55,60],[1.5,1.5,1.5,1.5,1.5],[20,25,30,35,40],[3,3,3,3,3],[-0.05,-0.056,-0.062,-0.069,-0.075],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4/5/6/7/8","40/45/50/55/60","1.5","20/25/30/35/40","3","-0.05/-0.056/-0.062/-0.069/-0.075","0","0","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"DravenFury"},{"name":"비켜서라","description":"드레이븐이 도끼를 던져 물리 피해를 입히며, 도끼에 맞은 적들을 옆으로 밀어냅니다. 타격을 받은 대상들은 이동 속도가 감소합니다.","sanitizedDescription":"드레이븐이 도끼를 던져 물리 피해를 입히며, 도끼에 맞은 적들을 옆으로 밀어냅니다. 타격을 받은 대상들은 이동 속도가 감소합니다.","tooltip":"드레이븐이 도끼를 던져 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 도끼에 맞은 적들을 옆으로 밀어냅니다. 타격을 받은 대상은 {{ e3 }}초 동안 이동 속도가 {{ e2 }}% 감소합니다.","sanitizedTooltip":"드레이븐이 도끼를 던져 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 도끼에 맞은 적들을 옆으로 밀어냅니다. 타격을 받은 대상은 {{ e3 }}초 동안 이동 속도가 {{ e2 }}% 감소합니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DravenDoubleShot.png","sprite":"spell2.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[75,110,145,180,215],[20,25,30,35,40],[2,2,2,2,2],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/110/145/180/215","20/25/30/35/40","2","0.5","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.5]}],"range":[1050,1050,1050,1050,1050],"rangeBurn":"1050","key":"DravenDoubleShot"},{"name":"죽음의 소용돌이","description":"드레이븐이 두 개의 거대한 도끼를 던져 맞은 적 각각에게 물리 피해를 입힙니다. 죽음의 소용돌이는 적 챔피언을 하나 맞힌 다음 서서히 방향을 바꿔 드레이븐에게 돌아옵니다. 도끼가 나아가는 동안 스킬을 재시전하면 더 빠르게 회수할 수 있습니다. 유닛 하나를 관통할 때마다 피해량이 줄어들지만, 되돌아올 때는 피해량이 최대로 회복됩니다.","sanitizedDescription":"드레이븐이 두 개의 거대한 도끼를 던져 맞은 적 각각에게 물리 피해를 입힙니다. 죽음의 소용돌이는 적 챔피언을 하나 맞힌 다음 서서히 방향을 바꿔 드레이븐에게 돌아옵니다. 도끼가 나아가는 동안 스킬을 재시전하면 더 빠르게 회수할 수 있습니다. 유닛 하나를 관통할 때마다 피해량이 줄어들지만, 되돌아올 때는 피해량이 최대로 회복됩니다.","tooltip":"드레이븐이 두 개의 거대한 도끼를 던져 맞은 적 각각에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다.<br /><br />죽음의 소용돌이는 적 챔피언을 하나 맞힌 다음 서서히 방향을 바꿔 드레이븐에게 돌아옵니다. 도끼가 나아가는 동안 스킬을 재시전하면 더 빠르게 회수할 수 있습니다. 유닛 하나를 관통할 때마다 피해량이 {{ e4 }}%씩 줄어들고 (최소 {{ e2 }}%), 되돌아올 때는 피해량이 최대로 회복됩니다.","sanitizedTooltip":"드레이븐이 두 개의 거대한 도끼를 던져 맞은 적 각각에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 죽음의 소용돌이는 적 챔피언을 하나 맞힌 다음 서서히 방향을 바꿔 드레이븐에게 돌아옵니다. 도끼가 나아가는 동안 스킬을 재시전하면 더 빠르게 회수할 수 있습니다. 유닛 하나를 관통할 때마다 피해량이 {{ e4 }}%씩 줄어들고 (최소 {{ e2 }}%), 되돌아올 때는 피해량이 최대로 회복됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DravenRCast.png","sprite":"spell2.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[175,275,375],[40,40,40],[0,0,0],[8,8,8],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","175/275/375","40","0","8","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1.1]}],"range":[20000,20000,20000],"rangeBurn":"20000","key":"DravenRCast"}],"passive":{"name":"드레이븐의 리그","description":"드레이븐이 회전 도끼를 받아내거나 미니언 또는 몬스터를 처치하고 포탑을 철거하면 팬들의 환호를 받습니다. 적 챔피언을 처치하면 지금까지 얻은 팬들의 환호에 비례해 추가 골드를 획득합니다.","sanitizedDescription":"드레이븐이 회전 도끼를 받아내거나 미니언 또는 몬스터를 처치하고 포탑을 철거하면 팬들의 환호를 받습니다. 적 챔피언을 처치하면 지금까지 얻은 팬들의 환호에 비례해 추가 골드를 획득합니다.","image":{"full":"Draven_passive.png","sprite":"passive0.png","group":"passive","x":48,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Draven","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Draven","title":"DravenARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Draven","title":"DravenCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Draven","title":"DravenFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3508,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Draven","title":"DravenKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3102,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Draven","title":"DravenPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3072,"count":1},{"id":3812,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3031,"count":1},{"id":3046,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]}]},{"champion":"Draven","title":"DravenSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]}]},{"champion":"Draven","title":"DravenSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Draven","title":"DravenTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3072,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3087,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Yasuo":{"id":157,"key":"Yasuo","name":"야스오","title":"용서받지 못한 자","image":{"full":"Yasuo.png","sprite":"champion4.png","group":"champion","x":48,"y":48,"w":48,"h":48},"skins":[{"id":157000,"name":"default","num":0},{"id":157001,"name":"하이 눈 야스오","num":1},{"id":157002,"name":"프로젝트: 야스오","num":2},{"id":157003,"name":"불의 축제 야스오","num":3},{"id":157009,"name":"어둠의 인도자 야스오","num":9}],"lore":"불굴의 의지를 지닌 검객 야스오는 민첩한 몸놀림으로 바람을 자유자재로 휘둘러 적을 쓰러뜨린다. 야스오는 젊었던 시절 자부심이 너무 강한 탓에 많은 것을 잃었다. 자신의 지위, 스승, 급기야는 친형까지. 누명으로 명예가 땅에 떨어져 범죄자처럼 뒤를 쫓기는 야스오는 과거를 속죄하기 위해 바람이 검을 인도하는 대로 조국 땅을 배회한다.","blurb":"불굴의 의지를 지닌 검객 야스오는 민첩한 몸놀림으로 바람을 자유자재로 휘둘러 적을 쓰러뜨린다. 야스오는 젊었던 시절 자부심이 너무 강한 탓에 많은 것을 잃었다. 자신의 지위, 스승, 급기야는 친형까지. 누명으로 명예가 땅에 떨어져 범죄자처럼 뒤를 쫓기는 야스오는 과거를 속죄하기 위해 바람이 검을 인도하는 대로 조국 땅을 배회한다.","allytips":["- 적이 도망갈 때는 미니언을 뚫고 돌진해서 질풍검 효과로 추격하세요. 적을 대상으로 해서 돌진한 다음 미니언을 활용하여 퇴로를 확보하는 것도 좋습니다.","- 18레벨에서 55%의 공격 속도 아이템을 갖추면 강철 폭풍의 공격 속도를 최대로 올릴 수 있습니다.","- 최후의 숨결은 공중에 뜬 대상이라면 누구에게든 시전할 수 있습니다. 아군이 띄우는 적을 놓치지 마세요."],"enemytips":["- 강철 폭풍의 폭은 아주 좁습니다. 가능하면 옆으로 피하세요.","- 야스오가 강철 폭풍을 연이어 두 번 맞히면, 다음에는 회오리가 발사됩니다. 해당 스킬의 음향 효과가 들리면 바로 피할 수 있도록 준비하세요.","- 야스오는 회오리 바람을 발사한 직후에 가장 취약해집니다. 이 때를 노려 교전을 벌이세요.","- 야스오의 결의 보호막은 지속 시간이 2초에 불과합니다. 피해를 입히고 2초 동안 기다린 후 교전을 개시하세요."],"tags":["Fighter","Assassin"],"partype":"기류","info":{"attack":8,"defense":4,"magic":4,"difficulty":10},"stats":{"armor":30,"armorperlevel":3.4,"attackdamage":60,"attackdamageperlevel":3.2,"attackrange":175,"attackspeedoffset":-0.067,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":523,"hpperlevel":87,"hpregen":6.512,"hpregenperlevel":0.9,"movespeed":345,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":30,"spellblockperlevel":1.25},"spells":[{"name":"강철 폭풍","description":"조준형 기본 공격. 강철 폭풍이 두 번 성공하면 다음 번에는 회오리 바람이 발사되어 적들을 공중에 띄웁니다.","sanitizedDescription":"조준형 기본 공격. 강철 폭풍이 두 번 성공하면 다음 번에는 회오리 바람이 발사되어 적들을 공중에 띄웁니다.","tooltip":"전방으로 내질러 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.<br /><br />강철 폭풍 적중 시, 6초간 폭풍 구름 효과가 1회 중첩됩니다. 중첩이 2가 되면 강철 폭풍 스킬이 회오리바람을 발사하여 <span class=\"color6655CC\">공중으로</span> 띄워올립니다.<br /><br />강철 폭풍은 기본 공격으로 간주되어 치명타와 적중 시 발동 효과가 적용되고, 군중 제어기에 방해를 받으며 공격 속도로 재사용 대기시간과 시전 소요 시간을 단축할 수 있습니다.<br /><br /><span class=\"color99FF99\">돌진 도중 시전할 경우, 강철 폭풍이 원형으로 타격합니다.</span>","sanitizedTooltip":"전방으로 내질러 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 강철 폭풍 적중 시, 6초간 폭풍 구름 효과가 1회 중첩됩니다. 중첩이 2가 되면 강철 폭풍 스킬이 회오리바람을 발사하여 공중으로 띄워올립니다. 강철 폭풍은 기본 공격으로 간주되어 치명타와 적중 시 발동 효과가 적용되고, 군중 제어기에 방해를 받으며 공격 속도로 재사용 대기시간과 시전 소요 시간을 단축할 수 있습니다. 돌진 도중 시전할 경우, 강철 폭풍이 원형으로 타격합니다.","leveltip":{"label":["피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"YasuoQW.png","sprite":"spell13.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[6,5.5,5,4.5,4],"cooldownBurn":"6/5.5/5/4.5/4","effect":[null,[20,45,70,95,120],[100,100,100,100,100],[85,95,105,115,125],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/45/70/95/120","100","85/95/105/115/125","4","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]}],"range":[475,475,475,475,475],"rangeBurn":"475","key":"YasuoQW"},{"name":"바람 장막","description":"적의 투사체를 막으며 이동하는 벽을 생성합니다.","sanitizedDescription":"적의 투사체를 막으며 이동하는 벽을 생성합니다.","tooltip":"4초간 모든 적의 투사체를 막아주는 움직이는 벽을 생성합니다.","sanitizedTooltip":"4초간 모든 적의 투사체를 막아주는 움직이는 벽을 생성합니다.","leveltip":{"label":["장막 너비","재사용 대기시간"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"YasuoWMovingWall.png","sprite":"spell13.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[26,24,22,20,18],"cooldownBurn":"26/24/22/20/18","effect":[null,[15,20,25,30,35],[60,90,120,150,180],[3,6,9,12,15],[300,350,400,450,500],[320,390,460,530,600],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/20/25/30/35","60/90/120/150/180","3/6/9/12/15","300/350/400/450/500","320/390/460/530/600","0","0","0","0","0"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"YasuoWMovingWall"},{"name":"질풍검","description":"유닛을 뚫고 돌진하며, 매번 시전할 때마다 점차 큰 마법 피해를 입힙니다.","sanitizedDescription":"유닛을 뚫고 돌진하며, 매번 시전할 때마다 점차 큰 마법 피해를 입힙니다.","tooltip":"대상 적을 뚫고 돌진하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorFF8C00\">(+{{ f3 }})</span>의 마법 피해를 입힙니다. 매번 시전할 때마다 다음번 돌진의 기본 피해량이 25%씩 올라 최대 {{ e6 }}%까지 상승합니다.<br /><br />{{ e2 }}초 내에는 동일한 대상에게 재시전할 수 없습니다.<br /><br /><span class=\"color99FF99\">돌진 도중에 시전하면 강철 폭풍이 원형으로 타격합니다.</span>","sanitizedTooltip":"대상 적을 뚫고 돌진하여 {{ e1 }} (+{{ a1 }}) (+{{ f3 }})의 마법 피해를 입힙니다. 매번 시전할 때마다 다음번 돌진의 기본 피해량이 25%씩 올라 최대 {{ e6 }}%까지 상승합니다. {{ e2 }}초 내에는 동일한 대상에게 재시전할 수 없습니다. 돌진 도중에 시전하면 강철 폭풍이 원형으로 타격합니다.","leveltip":{"label":["피해량","재시전 불가","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ f1 }} -> {{ f2 }}"]},"image":{"full":"YasuoDashWrapper.png","sprite":"spell13.png","group":"spell","x":240,"y":96,"w":48,"h":48},"maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[60,70,80,90,100],[10,9,8,7,6],[0.5,0.4,0.3,0.2,0.1],[1.5,1.5,1.5,1.5,1.5],[15,17.5,20,22.5,25],[50,50,50,50,50],[20,20,20,20,20],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/70/80/90/100","10/9/8/7/6","0.5/0.4/0.3/0.2/0.1","1.5","15/17.5/20/22.5/25","50","20","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[475,475,475,475,475],"rangeBurn":"475","key":"YasuoDashWrapper"},{"name":"최후의 숨결","description":"유닛에게 이동하여 반복해 가격하며 큰 피해를 입힙니다. 공중에 뜬 대상에게만 시전할 수 있습니다.","sanitizedDescription":"유닛에게 이동하여 반복해 가격하며 큰 피해를 입힙니다. 공중에 뜬 대상에게만 시전할 수 있습니다.","tooltip":"<span class=\"color6655CC\">공중에 뜬</span> 적 챔피언에게 점멸하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고, 해당 지역에서 <span class=\"color6655CC\">공중에 떠 있는</span> 모든 적을 1초 더 공중에 붙들어둡니다. 기류가 최대치로 차는 대신, 폭풍 구름의 중첩이 모두 초기화됩니다.<br /><br />15초 동안 야스오의 치명타에 방어구 관통력이 {{ e5 }}% 추가로 적용됩니다. 이 때 아이템, 이로운 효과, 룬, 특성으로 얻은 방어력도 영향을 받습니다.","sanitizedTooltip":"공중에 뜬 적 챔피언에게 점멸하여 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고, 해당 지역에서 공중에 떠 있는 모든 적을 1초 더 공중에 붙들어둡니다. 기류가 최대치로 차는 대신, 폭풍 구름의 중첩이 모두 초기화됩니다. 15초 동안 야스오의 치명타에 방어구 관통력이 {{ e5 }}% 추가로 적용됩니다. 이 때 아이템, 이로운 효과, 룬, 특성으로 얻은 방어력도 영향을 받습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f1 }} -> {{ f2 }}"]},"image":{"full":"YasuoRKnockUpComboW.png","sprite":"spell13.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[0,0,0],"cooldownBurn":"0","effect":[null,[200,300,400],[33,66,100],[650,750,850],[1.5,1.5,1.5],[50,50,50],[33,66,100],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","200/300/400","33/66/100","650/750/850","1.5","50","33/66/100","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.5]}],"range":[1400,1400,1400],"rangeBurn":"1400","key":"YasuoRKnockUpComboW"}],"passive":{"name":"낭인의 길","description":"야스오의 치명타 확률이 두 배가 됩니다. 또한, 야스오는 이동할 때마다 보호막이 충전되며, 챔피언이나 몬스터로부터 피해를 입으면 이 보호막이 발동됩니다.","sanitizedDescription":"야스오의 치명타 확률이 두 배가 됩니다. 또한, 야스오는 이동할 때마다 보호막이 충전되며, 챔피언이나 몬스터로부터 피해를 입으면 이 보호막이 발동됩니다.","image":{"full":"Yasuo_Passive.png","sprite":"passive4.png","group":"passive","x":48,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Yasuo","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1051,"count":1},{"id":1042,"count":1},{"id":3086,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3086,"count":1},{"id":2015,"count":1},{"id":3087,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3031,"count":1},{"id":3072,"count":1},{"id":3022,"count":1},{"id":3026,"count":1}]}]},{"champion":"Yasuo","title":"YasuoARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3153,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Yasuo","title":"YasuoCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3072,"count":1},{"id":3033,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Yasuo","title":"YasuoFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3074,"count":1},{"id":3156,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3033,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Yasuo","title":"YasuoKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3153,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Yasuo","title":"YasuoSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3072,"count":1},{"id":3033,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]}]},{"champion":"Yasuo","title":"YasuoSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3072,"count":1},{"id":3033,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Yasuo","title":"YasuoTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3074,"count":1},{"id":3033,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Kayle":{"id":10,"key":"Kayle","name":"케일","title":"심판자","image":{"full":"Kayle.png","sprite":"champion1.png","group":"champion","x":96,"y":96,"w":48,"h":48},"skins":[{"id":10000,"name":"default","num":0},{"id":10001,"name":"은빛 케일","num":1},{"id":10002,"name":"청록의 심판자 케일","num":2},{"id":10003,"name":"얼굴을 드러낸 케일","num":3},{"id":10004,"name":"전장을 누비는 케일","num":4},{"id":10005,"name":"심판관 케일","num":5},{"id":10006,"name":"에테르 날개 케일","num":6},{"id":10007,"name":"라이엇 전경 케일","num":7},{"id":10008,"name":"강철의 심판관 케일","num":8},{"id":10009,"name":"펜타킬 케일","num":9}],"lore":"케일은 위대한 영웅이자 천상의 전사 중 최강이라 불리며, 구원의 여지가 없는 자들을 제거한다. 갈등으로 동족이 분열되자 케일은 질서의 이름 하에 마법 갑옷과 불타오르는 검을 집어 들었다. 그리고 그 과정에서 그녀는 자신의 혈육과의 연을 끊었다. 케일이 전장에 강림하면 순식간에 정의가 구현된다. 그 누구도 신성한 빛과 정당한 분노를 피해 갈 수 없기에.","blurb":"케일은 위대한 영웅이자 천상의 전사 중 최강이라 불리며, 구원의 여지가 없는 자들을 제거한다. 갈등으로 동족이 분열되자 케일은 질서의 이름 하에 마법 갑옷과 불타오르는 검을 집어 들었다. 그리고 그 과정에서 그녀는 자신의 혈육과의 연을 끊었다. 케일이 전장에 강림하면 순식간에 정의가 구현된다. 그 누구도 신성한 빛과 정당한 분노를 피해 갈 수 없기에.","allytips":["- 중재를 아군 중 가장 우수한 화력을 내는 플레이어에게 사용할 경우 순식간에 전황을 뒤집을 수도 있습니다. ","- 케일은 아이템에 따라 공격수 역할도, 서포터 역할도 수행할 수 있는 챔피언입니다.","- 케일에게는 공격력과 주문력 모두가 중요합니다. 케일은 내셔의 이빨이나 삼위일체 같은 하이브리드형 아이템이 효과적입니다.","- 서포터로 갈 때는 강철의 솔라리 펜던트 같은 아이템을 구매하면 됩니다."],"enemytips":["- 중재 스킬은 케일 또는 케일의 아군이 피해를 입지 않도록 보호해 줍니다. 그러나 둔화 및 기절과 같은 각종 방해 효과에는 무력합니다.","- 케일은 집중 공격에 약한 편입니다. 궁극기를 아군에게 시전하면 바로 케일을 공격하십시오.","- 케일이 장착한 아이템으로 케일이 팀에서 무슨 역할을 하는지 알 수 있습니다."],"tags":["Fighter","Support"],"partype":"마나","info":{"attack":6,"defense":6,"magic":7,"difficulty":7},"stats":{"armor":26.88,"armorperlevel":3.5,"attackdamage":51,"attackdamageperlevel":2.8,"attackrange":125,"attackspeedoffset":-0.02,"attackspeedperlevel":2.2,"crit":0,"critperlevel":0,"hp":586,"hpperlevel":105,"hpregen":8.26,"hpregenperlevel":0.75,"movespeed":335,"mp":322.2,"mpperlevel":40,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"징벌","description":"천상의 힘으로 적을 공격하여 피해를 입히고 이동 속도를 늦추며, 신성한 열정 효과를 적용합니다.","sanitizedDescription":"천상의 힘으로 적을 공격하여 피해를 입히고 이동 속도를 늦추며, 신성한 열정 효과를 적용합니다.","tooltip":"적을 강타하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 또한 신성한 열정 효과를 중첩시킵니다.","sanitizedTooltip":"적을 강타하여 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 또한 신성한 열정 효과를 중첩시킵니다.","leveltip":{"label":["피해량","둔화","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }}  ->  {{ costNL }}"]},"image":{"full":"JudicatorReckoning.png","sprite":"spell5.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[60,110,160,210,260],[35,40,45,50,55],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/110/160/210/260","35/40/45/50/55","3","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"JudicatorReckoning"},{"name":"신성한 축복","description":"아군 챔피언을 축복하여 즉시 체력을 회복시키며 이동 속도를 높여줍니다.","sanitizedDescription":"아군 챔피언을 축복하여 즉시 체력을 회복시키며 이동 속도를 높여줍니다.","tooltip":"아군 챔피언을 축복하여 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% <span class=\"color99FF99\">(+{{ a2 }}%)</span> 높이고, {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 체력을 치료합니다.","sanitizedTooltip":"아군 챔피언을 축복하여 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% (+{{ a2 }}%) 높이고, {{ e1 }} (+{{ a1 }})의 체력을 치료합니다.","leveltip":{"label":["회복량","이동 속도","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JudicatorDivineBlessing.png","sprite":"spell5.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[60,105,150,195,240],[18,21,24,27,30],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/105/150/195/240","18/21/24/27/30","3","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.07]},{"key":"a1","link":"spelldamage","coeff":[0.45]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"JudicatorDivineBlessing"},{"name":"정의로운 분노","description":"기본 지속 효과: 케일이 적중 시 마법 피해를 입힙니다. 사용 시: 케일의 검에 신성한 불을 붙여 다수의 적에게 범위 공격을 하고 추가 마법 피해를 입힐 수 있습니다.","sanitizedDescription":"기본 지속 효과: 케일이 적중 시 마법 피해를 입힙니다. 사용 시: 케일의 검에 신성한 불을 붙여 다수의 적에게 범위 공격을 하고 추가 마법 피해를 입힐 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>케일의 기본 공격은 적중 시 {{ e4 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>케일의 공격 사거리가 10초 동안 400 증가하는 동시에 기본 공격 적중 시 추가 마법 피해량이 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>로 증가하고, 마법 아이템 효과가 적용됩니다.<br /><br />또한, 공격 시 대상 주변 적은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 마법 아이템 효과가 적용됩니다.","sanitizedTooltip":"기본 지속 효과: 케일의 기본 공격은 적중 시 {{ e4 }} (+{{ a2 }})의 추가 마법 피해를 입힙니다. 사용 시: 케일의 공격 사거리가 10초 동안 400 증가하는 동시에 기본 공격 적중 시 추가 마법 피해량이 {{ e1 }} (+{{ a1 }})로 증가하고, 마법 아이템 효과가 적용됩니다. 또한, 공격 시 대상 주변 적은 {{ e1 }} (+{{ f2 }}) (+{{ a1 }})의 마법 피해를 입고 마법 아이템 효과가 적용됩니다.","leveltip":{"label":["기본 지속 효과 피해량","사용 시 피해량","광역 공격력 비율"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"JudicatorRighteousFury.png","sprite":"spell5.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[16,16,16,16,16],"cooldownBurn":"16","effect":[null,[20,30,40,50,60],[20,25,30,35,40],[0.2,0.25,0.3,0.35,0.4],[10,15,20,25,30],[10,10,10,10,10],[400,400,400,400,400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/30/40/50/60","20/25/30/35/40","0.2/0.25/0.3/0.35/0.4","10/15/20/25/30","10","400","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.15]},{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"f2","link":"attackdamage","coeff":[0.2,0.25,0.3,0.35,0.4]},{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[20,20,20,20,20],"rangeBurn":"20","key":"JudicatorRighteousFury"},{"name":"중재","description":"짧은 시간 동안 케일 또는 아군을 피해로부터 완벽하게 막아줍니다.","sanitizedDescription":"짧은 시간 동안 케일 또는 아군을 피해로부터 완벽하게 막아줍니다.","tooltip":"케일의 성스러운 빛이 대상을 감싸며 {{ e1 }}초 동안 모든 피해에 면역이 됩니다.","sanitizedTooltip":"케일의 성스러운 빛이 대상을 감싸며 {{ e1 }}초 동안 모든 피해에 면역이 됩니다.","leveltip":{"label":["지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JudicatorIntervention.png","sprite":"spell5.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[2,2.5,3],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","2/2.5/3","0","0","0","0","0","0","0","0","0"],"range":[900,900,900],"rangeBurn":"900","key":"JudicatorIntervention"}],"passive":{"name":"신성한 열정","description":"케일의 공격을 받은 챔피언은 방어력과 마법 저항력이 5초 동안 3%만큼 감소합니다. 이 효과는 5번까지 중첩됩니다.","sanitizedDescription":"케일의 공격을 받은 챔피언은 방어력과 마법 저항력이 5초 동안 3%만큼 감소합니다. 이 효과는 5번까지 중첩됩니다.","image":{"full":"Kayle_Passive.png","sprite":"passive1.png","group":"passive","x":96,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Kayle","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1042,"count":2},{"id":3101,"count":1},{"id":3340,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3101,"count":1},{"id":3108,"count":1},{"id":3115,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3124,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Kayle","title":"KayleARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3115,"count":1},{"id":3085,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3124,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kayle","title":"KayleCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3101,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3085,"count":1},{"id":3115,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3124,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kayle","title":"KayleFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3115,"count":1},{"id":3089,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1},{"id":3115,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3124,"count":1},{"id":3135,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kayle","title":"KayleKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3115,"count":1},{"id":3085,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3124,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kayle","title":"KayleSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3085,"count":1},{"id":3115,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3124,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]}]},{"champion":"Kayle","title":"KayleSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3101,"count":1},{"id":3108,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":1043,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3085,"count":1},{"id":3115,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1},{"id":3115,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3124,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kayle","title":"KayleTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":3101,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3115,"count":1},{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3124,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3285,"count":1},{"id":3170,"count":1},{"id":3165,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2003,"count":3}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3113,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3115,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3090,"count":1},{"id":3124,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3170,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Shaco":{"id":35,"key":"Shaco","name":"샤코","title":"악마 어릿광대","image":{"full":"Shaco.png","sprite":"champion3.png","group":"champion","x":240,"y":0,"w":48,"h":48},"skins":[{"id":35000,"name":"default","num":0},{"id":35001,"name":"이상한 나라의 모자장수 샤코","num":1},{"id":35002,"name":"궁전 어릿광대 샤코","num":2},{"id":35003,"name":"호두까기 샤코","num":3},{"id":35004,"name":"태엽장치 샤코","num":4},{"id":35005,"name":"뒷골목 샤코","num":5},{"id":35006,"name":"신바람 탈 샤코","num":6},{"id":35007,"name":"와일드 카드 샤코","num":7}],"lore":"오래 전에 외로운 왕자를 위한 장난감으로 만들어진 샤코는 이제 살육과 참사를 즐기는 마법 깃든 인형이다. 흑마법으로 인한 타락과 사랑하는 이의 상실로 인해, 한 때 친절했던 인형은 오로지 불쌍한 영혼에 고통을 주는 것에서만 기쁨을 느끼게 되었다. 샤코는 장난감과 단순한 속임수를 사용해 치명적인 효과를 주며, 유혈낭자한 '유희'의 결과를 아주 재밌어 한다. 한밤 중에 음산한 웃음소리를 듣는다면 아마 악마 어릿광대의 다음 장난감으로 찍혔는지도 모른다.","blurb":"오래 전에 외로운 왕자를 위한 장난감으로 만들어진 샤코는 이제 살육과 참사를 즐기는 마법 깃든 인형이다. 흑마법으로 인한 타락과 사랑하는 이의 상실로 인해, 한 때 친절했던 인형은 오로지 불쌍한 영혼에 고통을 주는 것에서만 기쁨을 느끼게 되었다. 샤코는 장난감과 단순한 속임수를 사용해 치명적인 효과를 주며, 유혈낭자한 '유희'의 결과를 아주 재밌어 한다. 한밤 중에 음산한 웃음소리를 듣는다면 아마 악마 어릿광대의 다음 장난감으로 찍혔는지도 모른다.","allytips":["- 속임수 스킬로 지형을 넘어가면 안정적으로 탈출할 수 있습니다.","- 적중 시 발동 효과를 지닌 아이템을 구매하십시오. 환각 스킬 사용 시 분신도 영향을 받습니다.","- 암습 스킬의 피해량은 무한의 대검같이 치명타 피해를 올려주는 아이템의 효과를 받아 상승합니다."],"enemytips":["- 샤코가 게임 초반에 강세를 보이면 샤코가 갈만한 정글 캠프에 투명 와드를 설치하는 것도 나쁘지 않습니다.","- 샤코가 전투를 시작하자마자 속임수를 사용했다면 재사용 대기시간 동안 도망칠 수 없습니다. 팀원들과 힘을 합쳐 재빨리 샤코부터 해치우십시오."],"tags":["Assassin"],"partype":"마나","info":{"attack":8,"defense":4,"magic":6,"difficulty":9},"stats":{"armor":30,"armorperlevel":3.5,"attackdamage":66,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":-0.1,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":587,"hpperlevel":89,"hpregen":8.374,"hpregenperlevel":0.55,"movespeed":350,"mp":297.2,"mpperlevel":40,"mpregen":7.156,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"속임수","description":"샤코가 즉시 투명해지며 지정한 위치로 순간이동합니다.","sanitizedDescription":"샤코가 즉시 투명해지며 지정한 위치로 순간이동합니다.","tooltip":"샤코가 근처로 순간이동해 {{ e3 }}초 동안 <span class=\"color91d7ee\">투명</span> 상태가 됩니다. 깜짝 상자나 환각 스킬을 사용해도 <span class=\"color91d7ee\">투명</span> 상태는 유지됩니다.<br /><br /><span class=\"color91d7ee\">투명</span> 상태 중, 혹은 상태가 종료된 직후 다음 기본 공격 시 속임수의 재사용 대기시간이 {{ f3 }}초 줄어듭니다. <br /><br /><u><span class=\"size16 color91d7ee\">은신 - 투명</span></u><span class=\"size16 colorb3b3b3\">: 근처의 적 포탑 또는 <span class=\"size16 coloree91d7\">절대 시야</span>만이 샤코의 모습을 드러낼 수 있습니다.","sanitizedTooltip":"샤코가 근처로 순간이동해 {{ e3 }}초 동안 투명 상태가 됩니다. 깜짝 상자나 환각 스킬을 사용해도 투명 상태는 유지됩니다. 투명 상태 중, 혹은 상태가 종료된 직후 다음 기본 공격 시 속임수의 재사용 대기시간이 {{ f3 }}초 줄어듭니다. 은신 - 투명: 근처의 적 포탑 또는 절대 시야만이 샤코의 모습을 드러낼 수 있습니다.","leveltip":{"label":["은신 지속시간","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Deceive.png","sprite":"spell9.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[16,15.5,15,14.5,14],"cooldownBurn":"16/15.5/15/14.5/14","effect":[null,[0,0,0,0,0],[200,200,200,200,200],[1.5,2.25,3,3.75,4.5],[6,6,6,6,6],[400,400,400,400,400],[2.5,2.5,2.5,2.5,2.5],[0,0,0,0,0],[2.5,2.5,2.5,2.5,2.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","200","1.5/2.25/3/3.75/4.5","6","400","2.5","0","2.5","0","0"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"Deceive"},{"name":"깜짝 상자","description":"샤코가 깜짝 상자를 숨깁니다. 상자가 발동되면 주변의 적들을 공포 상태에 빠뜨린 다음 공격합니다.","sanitizedDescription":"샤코가 깜짝 상자를 숨깁니다. 상자가 발동되면 주변의 적들을 공포 상태에 빠뜨린 다음 공격합니다.","tooltip":"샤코가 {{ e5 }}초 뒤 시야에서 사라지는 깜짝 상자를 남깁니다. 깜짝 상자는 와드 또는 장신구에 발각되거나 적이 가까이 다가오면 발동해 {{ e3 }}초 동안 적을 느린 속도로 도망가게 합니다.<br /><br />깜짝 상자는 공격 시마다 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히며, 발동 전에는 {{ e4 }} <scaleAP>(+{{ a2 }})</scaleAP>초, 발동 후에는 5초 동안 지속됩니다. ","sanitizedTooltip":"샤코가 {{ e5 }}초 뒤 시야에서 사라지는 깜짝 상자를 남깁니다. 깜짝 상자는 와드 또는 장신구에 발각되거나 적이 가까이 다가오면 발동해 {{ e3 }}초 동안 적을 느린 속도로 도망가게 합니다. 깜짝 상자는 공격 시마다 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며, 발동 전에는 {{ e4 }} (+{{ a2 }})초, 발동 후에는 5초 동안 지속됩니다.","leveltip":{"label":["피해량","공포 지속 시간","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JackInTheBox.png","sprite":"spell10.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[16,16,16,16,16],"cooldownBurn":"16","effect":[null,[35,50,65,80,95],[200,300,400,500,600],[0.5,0.75,1,1.25,1.5],[60,60,60,60,60],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/50/65/80/95","200/300/400/500/600","0.5/0.75/1/1.25/1.5","60","2","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"a2","link":"spelldamage","coeff":[0.05]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"JackInTheBox"},{"name":"양날 독","description":"샤코의 단검은 공격에 맞은 대상을 중독시켜 이동 속도를 늦춥니다. 샤코는 단검을 던져 적에게 피해를 입히고 중독시킬 수 있으며, 이때 대상의 잃은 체력에 비례해 추가 피해를 입힙니다.","sanitizedDescription":"샤코의 단검은 공격에 맞은 대상을 중독시켜 이동 속도를 늦춥니다. 샤코는 단검을 던져 적에게 피해를 입히고 중독시킬 수 있으며, 이때 대상의 잃은 체력에 비례해 추가 피해를 입힙니다.","tooltip":"<spellPassive>기본 지속 효과:</spellPassive> 양날 독을 사용할 준비가 되면 샤코의 기본 공격에 양날 독이 적용되어 {{ e5 }}초 동안 대상의 이동 속도를 {{ e4 }}% 감소시킵니다.<br /><br /><spellActive>사용 시:</spellActive> 샤코가 단검을 던져 {{ e1 }} <scaleAD>(+{{ f1 }})</scaleAD> <scaleAP>(+{{ a1 }})</scaleAP>의 물리 피해를 입히고 대상의 이동 속도를 {{ e6 }}초 동안 {{ e4 }}% 감소시킵니다. 양날 독의 피해량은 대상의 잃은 체력에 비례해 최대 {{ e3 }}%까지 증가합니다.","sanitizedTooltip":"기본 지속 효과: 양날 독을 사용할 준비가 되면 샤코의 기본 공격에 양날 독이 적용되어 {{ e5 }}초 동안 대상의 이동 속도를 {{ e4 }}% 감소시킵니다. 사용 시: 샤코가 단검을 던져 {{ e1 }} (+{{ f1 }}) (+{{ a1 }})의 물리 피해를 입히고 대상의 이동 속도를 {{ e6 }}초 동안 {{ e4 }}% 감소시킵니다. 양날 독의 피해량은 대상의 잃은 체력에 비례해 최대 {{ e3 }}%까지 증가합니다.","leveltip":{"label":["피해량","추가 공격력 %","둔화","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e4 }}% -> {{ e4NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TwoShivPoison.png","sprite":"spell10.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[55,80,105,130,155],[60,75,90,105,120],[50,50,50,50,50],[20,22.5,25,27.5,30],[2,2,2,2,2],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/80/105/130/155","60/75/90/105/120","50","20/22.5/25/27.5/30","2","3","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"TwoShivPoison"},{"name":"환각","description":"샤코가 자신의 환영을 생성합니다. 적 포탑에게는 환영의 피해량이 줄어듭니다. 환영은 죽을 경우 폭발하며 세 개의 작은 깜짝 상자를 남겨 주변 적에게 피해를 입힙니다. ","sanitizedDescription":"샤코가 자신의 환영을 생성합니다. 적 포탑에게는 환영의 피해량이 줄어듭니다. 환영은 죽을 경우 폭발하며 세 개의 작은 깜짝 상자를 남겨 주변 적에게 피해를 입힙니다.","tooltip":"샤코가 잠시간 사라졌다가 분신과 함께 다시 나타납니다. 분신은 18초간 유지되며 처치되면 폭발하여 주변 적에게 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 세 개의 작은 깜짝 상자를 남깁니다. <br /><br /><li>작은 상자는 <scaleAP>(+{{ a2 }})</scaleAP>의 피해를 입히고 적을 {{ e7 }}초 동안 달아나게 합니다. 상자는 동시에 발동될 수 있습니다. <br /><br />분신은 샤코의 {{ e8 }}%에 해당하는 피해를 입히지만, 받는 피해량이 {{ e2 }}% 증가합니다.</li><br /><scaleAP>Alt 키를 누른 채로 마우스 오른쪽 버튼을 누르거나 이 스킬을 한번 더 사용하면 분신을 조종할 수 있습니다.</scaleAP>","sanitizedTooltip":"샤코가 잠시간 사라졌다가 분신과 함께 다시 나타납니다. 분신은 18초간 유지되며 처치되면 폭발하여 주변 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 세 개의 작은 깜짝 상자를 남깁니다. 작은 상자는 (+{{ a2 }})의 피해를 입히고 적을 {{ e7 }}초 동안 달아나게 합니다. 상자는 동시에 발동될 수 있습니다. 분신은 샤코의 {{ e8 }}%에 해당하는 피해를 입히지만, 받는 피해량이 {{ e2 }}% 증가합니다. Alt 키를 누른 채로 마우스 오른쪽 버튼을 누르거나 이 스킬을 한번 더 사용하면 분신을 조종할 수 있습니다.","leveltip":{"label":["분신 사망 시 피해","작은 상자 피해량","작은 상자 공포 지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e6 }} -> {{ e6NL }}","{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"HallucinateFull.png","sprite":"spell10.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[200,300,400],[50,50,50],[15,15,15],[2,2,2],[6,6,6],[25,50,75],[0.75,1,1.25],[75,75,75],[0,0,0],[0,0,0]],"effectBurn":["","200/300/400","50","15","2","6","25/50/75","0.75/1/1.25","75","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]},{"key":"a2","link":"spelldamage","coeff":[0.15]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"HallucinateFull"}],"passive":{"name":"암습","description":"샤코가 대상의 뒤에 있으면 기본 공격이 치명타로 적중해 추가 피해를 입힙니다. 한 번 암습을 당한 적은 몇 초 이내에 다시 암습을 당하지 않습니다. 이 시간에는 재사용 대기시간 감소가 적용됩니다.","sanitizedDescription":"샤코가 대상의 뒤에 있으면 기본 공격이 치명타로 적중해 추가 피해를 입힙니다. 한 번 암습을 당한 적은 몇 초 이내에 다시 암습을 당하지 않습니다. 이 시간에는 재사용 대기시간 감소가 적용됩니다.","image":{"full":"Jester_CarefulStrikes.png","sprite":"passive3.png","group":"passive","x":240,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Shaco","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":3086,"count":1},{"id":2015,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3087,"count":1},{"id":3031,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3078,"count":1},{"id":3026,"count":1}]}]},{"champion":"Shaco","title":"ShacoARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3152,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Shaco","title":"ShacoCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3071,"count":1},{"id":3036,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Shaco","title":"ShacoFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1053,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3087,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3156,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3074,"count":1},{"id":3117,"count":1},{"id":1400,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3087,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2140,"count":1}]}]},{"champion":"Shaco","title":"ShacoKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3152,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Shaco","title":"ShacoSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3071,"count":1},{"id":3036,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]}]},{"champion":"Shaco","title":"ShacoSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3071,"count":1},{"id":3036,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":1400,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3031,"count":1},{"id":3071,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3036,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2140,"count":1}]}]},{"champion":"Shaco","title":"ShacoTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":2},{"id":2031,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3071,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3006,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3147,"count":1},{"id":3071,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3814,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Renekton":{"id":58,"key":"Renekton","name":"레넥톤","title":"사막의 도살자","image":{"full":"Renekton.png","sprite":"champion2.png","group":"champion","x":432,"y":96,"w":48,"h":48},"skins":[{"id":58000,"name":"default","num":0},{"id":58001,"name":"은하계 레넥톤","num":1},{"id":58002,"name":"아웃백 레넥톤","num":2},{"id":58003,"name":"핏빛 분노 레넥톤","num":3},{"id":58004,"name":"룬 전쟁 레넥톤","num":4},{"id":58005,"name":"용광로 레넥톤","num":5},{"id":58006,"name":"수영장 파티 레넥톤","num":6},{"id":58007,"name":"선사시대 레넥톤","num":7},{"id":58008,"name":"SKT T1 레넥톤","num":8},{"id":58009,"name":"레넥토이","num":9}],"lore":"불길에 그을린 슈리마 사막에서 다시 일어선 무시무시한 분노의 초월체, 레넥톤. 한 때 그는 슈리마 최고의 전사로서 무수한 전쟁을 승리로 이끌었다. 하지만 슈리마의 몰락과 함께 사막 아래 무덤 속에 갇혔고, 강산이 변하는 억겁의 세월을 어둠 속에서 보내면서 서서히 광기에 굴복해 갔다. 다시 자유의 몸이 된 레넥톤이 원하는 것은 단 하나, 자신을 가둔 형에 대한 복수뿐이다.","blurb":"불길에 그을린 슈리마 사막에서 다시 일어선 무시무시한 분노의 초월체, 레넥톤. 한 때 그는 슈리마 최고의 전사로서 무수한 전쟁을 승리로 이끌었다. 하지만 슈리마의 몰락과 함께 사막 아래 무덤 속에 갇혔고, 강산이 변하는 억겁의 세월을 어둠 속에서 보내면서 서서히 광기에 굴복해 갔다. 다시 자유의 몸이 된 레넥톤이 원하는 것은 단 하나, 자신을 가둔 형에 대한 복수뿐이다.","allytips":["- 자르고 토막내기는 적을 견제하며 괴롭힐 때 좋은 스킬입니다. 찌르며 들어가 다른 스킬을 사용한 뒤 다시 안전한 곳으로 물러날 수 있기 때문입니다.","- 적이 많을 때 양떼 도륙 스킬을 사용할 경우 대량의 체력을 회복합니다. 이것을 미끼로 약한 척 행세하며 적을 유인할 수 있습니다.","- 재사용 대기시간 감소 효과는 레넥톤의 분노를 빠르게 늘릴 수 있게 해줍니다."],"enemytips":["- 레넥톤의 분노 게이지를 주의 깊게 살피면 언제 공격할지 대강 짐작할 수 있습니다.","- 레넥톤은 싸우지 못할 경우 분노 게이지를 채우기 어렵습니다. 이 경우 레넥톤 스킬의 효과가 크게 저하됩니다."],"tags":["Fighter","Tank"],"partype":"분노","info":{"attack":8,"defense":5,"magic":2,"difficulty":3},"stats":{"armor":35,"armorperlevel":3.8,"attackdamage":69,"attackdamageperlevel":3.75,"attackrange":125,"attackspeedoffset":-0.06,"attackspeedperlevel":2.65,"crit":0,"critperlevel":0,"hp":572.16,"hpperlevel":87,"hpregen":7.96,"hpregenperlevel":0.75,"movespeed":345,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"양떼 도륙","description":"레넥톤이 검을 휘둘러 주변의 모든 적에게 어느 정도의 물리 피해를 입히고, 해당 피해 수치의 일부를 체력으로 회복합니다. 분노가 50이상 쌓이면 피해량과 치료 능력이 모두 상승합니다.","sanitizedDescription":"레넥톤이 검을 휘둘러 주변의 모든 적에게 어느 정도의 물리 피해를 입히고, 해당 피해 수치의 일부를 체력으로 회복합니다. 분노가 50이상 쌓이면 피해량과 치료 능력이 모두 상승합니다.","tooltip":"레넥톤이 검을 휘둘러 주변의 모든 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 챔피언 이외의 적을 맞힐 때마다 체력 {{ e2 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>, 챔피언을 맞힐 때마다 체력 {{ f2 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span>를 회복하여 최대 {{ e4 }}의 체력을 회복합니다.<br /><br />챔피언 이외의 적을 맞힐 때는 <span class=\"colorFF6633\">분노 2.5</span>, 챔피언을 맞힐 때마다 <span class=\"colorFF6633\">분노 10</span>이 생성되어 최대 <span class=\"colorFF6633\">30의 분노</span>가 생성됩니다.<br /><br /><span class=\"colorFF6633\">분노 50 추가 효과:</span> 피해량이 {{ e6 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>까지 오릅니다. 챔피언 이외의 적을 맞힐 때는 {{ e7 }} <span class=\"colorFF8C00\">(+{{ f4 }})</span>, 챔피언을 맞힐 때는 {{ f5 }} <span class=\"colorFF8C00\">(+{{ f6 }})</span>, 최대 {{ e9 }}까지 회복 증가 효과를 얻습니다. 더 이상 <span class=\"colorFF6633\">분노</span>가 생성되지 않습니다.","sanitizedTooltip":"레넥톤이 검을 휘둘러 주변의 모든 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 챔피언 이외의 적을 맞힐 때마다 체력 {{ e2 }} (+{{ f1 }}), 챔피언을 맞힐 때마다 체력 {{ f2 }} (+{{ f3 }})를 회복하여 최대 {{ e4 }}의 체력을 회복합니다. 챔피언 이외의 적을 맞힐 때는 분노 2.5, 챔피언을 맞힐 때마다 분노 10이 생성되어 최대 30의 분노가 생성됩니다. 분노 50 추가 효과: 피해량이 {{ e6 }} (+{{ a2 }})까지 오릅니다. 챔피언 이외의 적을 맞힐 때는 {{ e7 }} (+{{ f4 }}), 챔피언을 맞힐 때는 {{ f5 }} (+{{ f6 }}), 최대 {{ e9 }}까지 회복 증가 효과를 얻습니다. 더 이상 분노가 생성되지 않습니다.","leveltip":{"label":["피해량","최대 체력 증가","분노 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} / {{ e9 }} -> {{ e4NL }} / {{ e9NL }}","{{ e6 }} -> {{ e6NL }}"]},"image":{"full":"RenektonCleave.png","sprite":"spell9.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"소모값 없음 또는 분노 50","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음 또는 분노 50","costBurn":"0","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[65,95,125,155,185],[3,4.5,6,7.5,9],[0.04,0.04,0.04,0.04,0.04],[50,75,100,125,150],[300,300,300,300,300],[95,140,185,230,275],[9,13.5,18,22.5,27],[0.12,0.12,0.12,0.12,0.12],[150,225,300,375,450],[0,0,0,0,0]],"effectBurn":["","65/95/125/155/185","3/4.5/6/7.5/9","0.04","50/75/100/125/150","300","95/140/185/230/275","9/13.5/18/22.5/27","0.12","150/225/300/375/450","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]},{"key":"f1","link":"bonusattackdamage","coeff":[0.8]},{"key":"f2","link":"bonusattackdamage","coeff":[1.2]},{"key":"a2","link":"bonusattackdamage","coeff":[1.2]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"RenektonCleave"},{"name":"무자비한 포식자","description":"레넥톤이 목표를 두 번 베어 어느 정도의 물리 피해를 입히며, 0.75초 동안 적을 기절시킵니다. 레넥톤의 분노가 50 이상일 경우 적을 세 번 베어 높은 물리 피해를 입히고 1.5초 동안 적을 기절시킵니다.","sanitizedDescription":"레넥톤이 목표를 두 번 베어 어느 정도의 물리 피해를 입히며, 0.75초 동안 적을 기절시킵니다. 레넥톤의 분노가 50 이상일 경우 적을 세 번 베어 높은 물리 피해를 입히고 1.5초 동안 적을 기절시킵니다.","tooltip":"레넥톤의 다음 공격이 두 번 명중하여 적을 {{ e3 }}초 동안 기절시키며 맞힐 때마다 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다. (총 피해량 {{ e5 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>)<br /><br />각 공격은 적중 시 발동 효과가 적용되며 <span class=\"colorFF6633\">분노</span>가 생성됩니다. 레넥톤이 챔피언을 맞히면 추가로 <span class=\"colorFF6633\">{{ e7 }}의 분노</span>를 획득합니다.<br /><br /><span class=\"colorFF6633\">분노 50 추가 효과:</span> 레넥톤이 세 번 공격하여 대상을 {{ e4 }}초 동안 기절시키고 총 {{ e6 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span>의 피해를 입힙니다. 더 이상 <span class=\"colorFF6633\">분노</span>가 생성되지 않습니다.","sanitizedTooltip":"레넥톤의 다음 공격이 두 번 명중하여 적을 {{ e3 }}초 동안 기절시키며 맞힐 때마다 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. (총 피해량 {{ e5 }} (+{{ f2 }})) 각 공격은 적중 시 발동 효과가 적용되며 분노가 생성됩니다. 레넥톤이 챔피언을 맞히면 추가로 {{ e7 }}의 분노를 획득합니다. 분노 50 추가 효과: 레넥톤이 세 번 공격하여 대상을 {{ e4 }}초 동안 기절시키고 총 {{ e6 }} (+{{ f3 }})의 피해를 입힙니다. 더 이상 분노가 생성되지 않습니다.","leveltip":{"label":["추가 피해량","재사용 대기시간"],"effect":["{{ e5 }} / {{ e6 }} -> {{ e5NL }} / {{ e6NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RenektonPreExecute.png","sprite":"spell9.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"소모값 없음 혹은 분노 50","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음 혹은 분노 50","costBurn":"0","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[5,15,25,35,45],[0.75,0.75,0.75,0.75,0.75],[0.75,0.75,0.75,0.75,0.75],[1.5,1.5,1.5,1.5,1.5],[10,30,50,70,90],[15,45,75,105,135],[10,10,10,10,10],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/15/25/35/45","0.75","0.75","1.5","10/30/50/70/90","15/45/75/105/135","10","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[1.5]},{"key":"f2","link":"attackdamage","coeff":[2.25]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"RenektonPreExecute"},{"name":"자르고 토막내기","description":"레넥톤이 돌격을 하며 여러 적 유닛에게 피해를 입힙니다. 강화시 레넥톤은 적에게 추가 피해를 입히고 방어력을 낮출 수 있습니다.","sanitizedDescription":"레넥톤이 돌격을 하며 여러 적 유닛에게 피해를 입힙니다. 강화시 레넥톤은 적에게 추가 피해를 입히고 방어력을 낮출 수 있습니다.","tooltip":"<span class=\"colorFF6633\">자르기:</span> 레넥톤이 돌격하여 부딪히는 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다. 적을 맞히면 {{ e8 }}초 이내에 토막내기를 쓸 수 있습니다.<br /><br /><span class=\"colorFF6633\">토막내기:</span> 레넥톤이 돌격하여 부딪히는 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다. 챔피언 이외의 유닛을 맞힐 때마다 <span class=\"colorFF6633\">{{ e4 }}의 분노</span>가 생기고 챔피언을 맞히면 <span class=\"colorFF6633\">{{ e5 }}의 분노</span>가 생겨 최대 <span class=\"colorFF6633\">분노 {{ e0 }}</span>까지 오릅니다.<br /><br /><span class=\"colorFF6633\">토막내기 - 분노 50 추가 효과:</span> 피해가 {{ e3 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>로 증가합니다. 피격당한 적은 {{ e9 }}초 동안 방어력이 {{ e2 }}% 감소합니다. 더 이상 <span class=\"colorFF6633\">분노</span>가 생성되지 않습니다.","sanitizedTooltip":"자르기: 레넥톤이 돌격하여 부딪히는 적에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 적을 맞히면 {{ e8 }}초 이내에 토막내기를 쓸 수 있습니다. 토막내기: 레넥톤이 돌격하여 부딪히는 적에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 챔피언 이외의 유닛을 맞힐 때마다 {{ e4 }}의 분노가 생기고 챔피언을 맞히면 {{ e5 }}의 분노가 생겨 최대 분노 {{ e0 }}까지 오릅니다. 토막내기 - 분노 50 추가 효과: 피해가 {{ e3 }} (+{{ f2 }})로 증가합니다. 피격당한 적은 {{ e9 }}초 동안 방어력이 {{ e2 }}% 감소합니다. 더 이상 분노가 생성되지 않습니다.","leveltip":{"label":["추가 피해","방어 감소 %","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RenektonSliceAndDice.png","sprite":"spell9.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"소모값 없음 또는 분노 50","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음 또는 분노 50","costBurn":"0","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[40,70,100,130,160],[15,20,25,30,35],[60,105,150,195,240],[2,2,2,2,2],[10,10,10,10,10],[0.9,0.9,0.9,0.9,0.9],[1.35,1.35,1.35,1.35,1.35],[4,4,4,4,4],[4,4,4,4,4],[30,30,30,30,30]],"effectBurn":["","40/70/100/130/160","15/20/25/30/35","60/105/150/195/240","2","10","0.9","1.35","4","4","30"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.9]},{"key":"f1","link":"bonusattackdamage","coeff":[0.9]},{"key":"f2","link":"bonusattackdamage","coeff":[1.35]}],"range":[450,450,450,450,450],"rangeBurn":"450","key":"RenektonSliceAndDice"},{"name":"강신","description":"레넥톤이 폭군의 형상을 취하여 추가 체력을 얻고 주변 적에게 피해를 입힙니다. 폭군 형태로 있는 동안에는 레넥톤의 분노가 주기적으로 상승합니다.","sanitizedDescription":"레넥톤이 폭군의 형상을 취하여 추가 체력을 얻고 주변 적에게 피해를 입힙니다. 폭군 형태로 있는 동안에는 레넥톤의 분노가 주기적으로 상승합니다.","tooltip":"레넥톤이 {{ e5 }}초 동안 어둠의 기운으로 자신을 감싸며 {{ e1 }}의 체력과 <span class=\"colorFF6633\">{{ e6 }}의 분노</span>를 얻습니다. 스킬이 활성화되어 있는 동안 레넥톤은 근처의 적들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 초당 <span class=\"colorFF6633\">{{ e4 }}의 분노</span>를 획득합니다.","sanitizedTooltip":"레넥톤이 {{ e5 }}초 동안 어둠의 기운으로 자신을 감싸며 {{ e1 }}의 체력과 {{ e6 }}의 분노를 얻습니다. 스킬이 활성화되어 있는 동안 레넥톤은 근처의 적들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히고 초당 {{ e4 }}의 분노를 획득합니다.","leveltip":{"label":["추가 체력","주기적 피해"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"RenektonReignOfTheTyrant.png","sprite":"spell9.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[120,120,120],"cooldownBurn":"120","effect":[null,[250,500,750],[40,80,120],[7.5,7.5,7.5],[5,5,5],[15,15,15],[20,20,20],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","250/500/750","40/80/120","7.5","5","15","20","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.1]}],"range":[20,20,20],"rangeBurn":"20","key":"RenektonReignOfTheTyrant"}],"passive":{"name":"분노의 지배","description":"레넥톤은 기본 공격을 할 때마다 분노를 얻습니다. 분노는 레넥톤의 스킬을 강화시키며 추가 효과를 줍니다. 또한 레넥톤의 체력이 낮다면 추가 분노를 얻습니다.","sanitizedDescription":"레넥톤은 기본 공격을 할 때마다 분노를 얻습니다. 분노는 레넥톤의 스킬을 강화시키며 추가 효과를 줍니다. 또한 레넥톤의 체력이 낮다면 추가 분노를 얻습니다.","image":{"full":"Renekton_Passive.png","sprite":"passive2.png","group":"passive","x":432,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Renekton","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":3340,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3065,"count":1},{"id":3068,"count":1},{"id":3812,"count":1}]}]},{"champion":"Renekton","title":"RenektonARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3074,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3068,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Renekton","title":"RenektonCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3142,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Renekton","title":"RenektonFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3142,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Renekton","title":"RenektonKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3074,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3068,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Renekton","title":"RenektonSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3142,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]}]},{"champion":"Renekton","title":"RenektonSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3053,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3026,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Renekton","title":"RenektonTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3077,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2138,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2003,"count":3}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3053,"count":1}]}]}]},"Hecarim":{"id":120,"key":"Hecarim","name":"헤카림","title":"전쟁의 전조","image":{"full":"Hecarim.png","sprite":"champion1.png","group":"champion","x":288,"y":0,"w":48,"h":48},"skins":[{"id":120000,"name":"default","num":0},{"id":120001,"name":"피의 기사 헤카림","num":1},{"id":120002,"name":"사신 헤카림","num":2},{"id":120003,"name":"호박머리 헤카림","num":3},{"id":120004,"name":"아케이드 헤카림","num":4},{"id":120005,"name":"나무정령 헤카림","num":5},{"id":120006,"name":"파괴의 신 헤카림","num":6},{"id":120007,"name":"빛의 창기병 헤카림","num":7}],"lore":"헤카림은 반인반수 유령으로, 산 자들의 영혼을 끝없이 추적하는 저주를 받았다. 축복의 빛 군도에 그림자가 드리울 때, 긍지 높은 기사 헤카림은 자신의 기사단과 그 말들과 함께 대몰락의 파괴적 기운으로 인해 최후를 맞았다. 이제 헤카림은 검은 안개가 룬테라에 깔릴 때마다 파괴를 위한 돌격을 이끌며 적을 학살하고 무장된 말발굽으로 짓밟는 쾌락을 즐긴다.","blurb":"헤카림은 반인반수 유령으로, 산 자들의 영혼을 끝없이 추적하는 저주를 받았다. 축복의 빛 군도에 그림자가 드리울 때, 긍지 높은 기사 헤카림은 자신의 기사단과 그 말들과 함께 대몰락의 파괴적 기운으로 인해 최후를 맞았다. 이제 헤카림은 검은 안개가 룬테라에 깔릴 때마다 파괴를 위한 돌격을 이끌며 적을 학살하고 무장된 말발굽으로 짓밟는 쾌락을 즐긴다.","allytips":["- 공포의 망령 스킬은 주변 적들이 피해를 입을 때 체력을 회복해 주며, 아군이 피해를 입혀도 역시 체력이 회복됩니다. 대규모 교전 시 공포의 망령을 활용해 헤카림의 생존력을 올리세요.","- 파멸의 돌격은 이동 거리에 비례한 피해를 줍니다. 그림자의 맹습이나 소환사 주문 유체화 혹은 점멸을 이용해 피해량을 극대화하세요."],"enemytips":["- 헤카림은 공포의 망령 스킬을 이용해 주변 적들에게서 체력을 얻는 대신 방어도가 낮으니 큰 피해를 주는 데 집중하세요.","- 헤카림은 궁극기로 적들을 공포에 질려 도망가게 만듭니다. 교전 시에는 흩어져 있으면 피해를 줄일 수 있습니다."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":8,"defense":6,"magic":4,"difficulty":6},"stats":{"armor":36,"armorperlevel":4,"attackdamage":66,"attackdamageperlevel":3.2,"attackrange":175,"attackspeedoffset":-0.0672,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":580,"hpperlevel":90,"hpregen":7,"hpregenperlevel":0.75,"movespeed":345,"mp":277.2,"mpperlevel":40,"mpregen":6.5,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"회오리 베기","description":"헤카림이 주변 적들을 베어 물리 피해를 입힙니다.","sanitizedDescription":"헤카림이 주변 적들을 베어 물리 피해를 입힙니다.","tooltip":"헤카림이 주위 적들을 베어 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다. (미니언에게는 {{ e5 }}%의 피해)<br /><br />이 공격으로 헤카림이 적 한 명이라도 피해를 입히면 회오리 베기 효과가 중첩되어, 잠깐 동안 이 스킬의 기본 재사용 대기시간이 {{ e3 }}초 감소합니다. 이 효과는 최대 {{ e2 }}번까지 중첩됩니다.","sanitizedTooltip":"헤카림이 주위 적들을 베어 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. (미니언에게는 {{ e5 }}%의 피해) 이 공격으로 헤카림이 적 한 명이라도 피해를 입히면 회오리 베기 효과가 중첩되어, 잠깐 동안 이 스킬의 기본 재사용 대기시간이 {{ e3 }}초 감소합니다. 이 효과는 최대 {{ e2 }}번까지 중첩됩니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"HecarimRapidSlash.png","sprite":"spell4.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[32,34,36,38,40],"costBurn":"32/34/36/38/40","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[55,90,125,160,195],[2,2,2,2,2],[1,1,1,1,1],[3,3,3,3,3],[66,66,66,66,66],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/90/125/160/195","2","1","3","66","6","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.6]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"HecarimRapidSlash"},{"name":"공포의 망령","description":"헤카림이 잠시 동안 주변 적들에게 마법 피해를 입히고, 적들이 입은 피해 비율에 해당하는 체력을 회복합니다.","sanitizedDescription":"헤카림이 잠시 동안 주변 적들에게 마법 피해를 입히고, 적들이 입은 피해 비율에 해당하는 체력을 회복합니다.","tooltip":"헤카림이 {{ e3 }}초에 걸쳐 주변 모든 적들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 누가 공격했든 주변 적들이 받은 피해의 {{ e1 }}%만큼 헤카림의 체력이 회복됩니다.<br /><br />미니언이나 몬스터를 공격한 경우, 헤카림의 체력 회복량은 {{ e4 }}을 넘을 수 없습니다.","sanitizedTooltip":"헤카림이 {{ e3 }}초에 걸쳐 주변 모든 적들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 누가 공격했든 주변 적들이 받은 피해의 {{ e1 }}%만큼 헤카림의 체력이 회복됩니다. 미니언이나 몬스터를 공격한 경우, 헤카림의 체력 회복량은 {{ e4 }}을 넘을 수 없습니다.","leveltip":{"label":["피해량","회복 최대치","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"HecarimW.png","sprite":"spell4.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[22,21,20,19,18],"cooldownBurn":"22/21/20/19/18","effect":[null,[20,20,20,20,20],[80,120,160,200,240],[4,4,4,4,4],[90,120,150,180,210],[8,8,8,8,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20","80/120/160/200/240","4","90/120/150/180/210","8","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[575,575,575,575,575],"rangeBurn":"575","key":"HecarimW"},{"name":"파멸의 돌격","description":"잠깐 동안 헤카림의 이동 속도가 빨라지고 다른 유닛을 통과해 이동할 수 있습니다. 다음번 공격은 대상을 뒤로 밀어내고, 스킬을 사용한 후 이동한 거리에 비례하여 추가 물리 피해를 입힙니다.  ","sanitizedDescription":"잠깐 동안 헤카림의 이동 속도가 빨라지고 다른 유닛을 통과해 이동할 수 있습니다. 다음번 공격은 대상을 뒤로 밀어내고, 스킬을 사용한 후 이동한 거리에 비례하여 추가 물리 피해를 입힙니다.","tooltip":"{{ e5 }}초 동안 헤카림의 이동 속도가 상승하고 다른 유닛을 통과해 이동할 수 있습니다. 다음번 공격 시 대상을 뒤로 밀어내며, 파멸의 돌격 시전 후 이동한 거리에 비례하여 {{ e4 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> 에서 {{ e3 }}<span class=\"colorFF8C00\"> (+{{ a2 }})</span>의 물리 피해를 입힙니다. (밀어내는 거리도 비례해서 달라집니다.)<br /><br /><rules>파멸의 돌격의 남은 지속 시간은 그림자의 맹습 시전 시 멈춥니다.</rules>","sanitizedTooltip":"{{ e5 }}초 동안 헤카림의 이동 속도가 상승하고 다른 유닛을 통과해 이동할 수 있습니다. 다음번 공격 시 대상을 뒤로 밀어내며, 파멸의 돌격 시전 후 이동한 거리에 비례하여 {{ e4 }} (+{{ a1 }}) 에서 {{ e3 }} (+{{ a2 }})의 물리 피해를 입힙니다. (밀어내는 거리도 비례해서 달라집니다.) 파멸의 돌격의 남은 지속 시간은 그림자의 맹습 시전 시 멈춥니다.","leveltip":{"label":["최소 피해량","최대 피해량","재사용 대기시간"],"effect":[" {{ e4 }} -> {{ e4NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"HecarimRamp.png","sprite":"spell4.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[24,22,20,18,16],"cooldownBurn":"24/22/20/18/16","effect":[null,[250,250,250,250,250],[450,450,450,450,450],[90,160,230,300,370],[45,80,115,150,185],[4,4,4,4,4],[0.75,0.75,0.75,0.75,0.75],[1200,1200,1200,1200,1200],[0.25,0.25,0.25,0.25,0.25],[2.5,2.5,2.5,2.5,2.5],[0,0,0,0,0]],"effectBurn":["","250","450","90/160/230/300/370","45/80/115/150/185","4","0.75","1200","0.25","2.5","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.5]},{"key":"a2","link":"bonusattackdamage","coeff":[1]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"HecarimRamp"},{"name":"그림자의 맹습","description":"헤카림이 유령 기수들을 소환하며 전방으로 돌진해 일직선 상에 마법 피해를 입힙니다. 헤카림이 돌격을 멈추면 충격파가 발생하여, 주변 적들이 공포에 사로잡혀 달아납니다.","sanitizedDescription":"헤카림이 유령 기수들을 소환하며 전방으로 돌진해 일직선 상에 마법 피해를 입힙니다. 헤카림이 돌격을 멈추면 충격파가 발생하여, 주변 적들이 공포에 사로잡혀 달아납니다.","tooltip":"헤카림이 유령 기수들을 소환하며 전방으로 돌격하여, 부딪힌 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />돌격이 끝나면 헤카림이 충격파를 발산하여 최소{{ e2 }}초에서 최대 {{ e3 }}초 동안 주변 적들이 헤카림에게서 달아납니다.<br /><br /><rules>헤카림은 지정한 위치까지만 이동하고, 기수들은 항상 사거리 끝까지 이동합니다.</rules>","sanitizedTooltip":"헤카림이 유령 기수들을 소환하며 전방으로 돌격하여, 부딪힌 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 돌격이 끝나면 헤카림이 충격파를 발산하여 최소{{ e2 }}초에서 최대 {{ e3 }}초 동안 주변 적들이 헤카림에게서 달아납니다. 헤카림은 지정한 위치까지만 이동하고, 기수들은 항상 사거리 끝까지 이동합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"HecarimUlt.png","sprite":"spell4.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,120,100],"cooldownBurn":"140/120/100","effect":[null,[150,250,350],[0.75,0.75,0.75],[1.5,1.5,1.5],[1100,1100,1100],[1000,1000,1000],[950,950,950],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","0.75","1.5","1100","1000","950","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[50000,50000,50000],"rangeBurn":"50000","key":"HecarimUlt"}],"passive":{"name":"출정","description":"헤카림의 공격력이 이동 속도 상승량의 일정 비율만큼 증가합니다.","sanitizedDescription":"헤카림의 공격력이 이동 속도 상승량의 일정 비율만큼 증가합니다.","image":{"full":"Hecarim_Passive.png","sprite":"passive1.png","group":"passive","x":288,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Hecarim","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3009,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3065,"count":1},{"id":3071,"count":1},{"id":3068,"count":1},{"id":3105,"count":1}]}]},{"champion":"Hecarim","title":"Map12","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Hecarim","title":"HecarimCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Hecarim","title":"HecarimFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3047,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Hecarim","title":"HecarimKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Hecarim","title":"HecarimSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]}]},{"champion":"Hecarim","title":"HecarimSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3044,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Hecarim","title":"HecarimTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3047,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Fizz":{"id":105,"key":"Fizz","name":"피즈","title":"대양의 말썽꾸러기","image":{"full":"Fizz.png","sprite":"champion0.png","group":"champion","x":432,"y":96,"w":48,"h":48},"skins":[{"id":105000,"name":"default","num":0},{"id":105001,"name":"아틀란티스 피즈","num":1},{"id":105002,"name":"에스키모 피즈","num":2},{"id":105003,"name":"낚시꾼 피즈","num":3},{"id":105004,"name":"공허의 피즈","num":4},{"id":105008,"name":"복실복실 피즈","num":8},{"id":105009,"name":"슈퍼 갤럭시 피즈","num":9},{"id":105010,"name":"오메가 분대 피즈","num":10}],"lore":"피즈는 빌지워터를 둘러싼 암초에 사는 양서류 요들이다. 피즈는 미신을 믿는 선장이 바다에 고수레로 던진 음식을 찾아오기도 하는데, 가장 오래된 선원이라도 피즈를 화나게 하지 말아야 한다는 것쯤은 알고 있다. 피즈를 우습게 봤다가 혼쭐난 이야기가 많기 때문이다. 피즈를 변덕스러운 바다 정령이라고 오해하기 쉽지만, 그저 심연의 거대한 육식 괴물을 부려 아군 적군 가리지 않고 정신을 빼놓는 것을 즐길 뿐이다.","blurb":"피즈는 빌지워터를 둘러싼 암초에 사는 양서류 요들이다. 피즈는 미신을 믿는 선장이 바다에 고수레로 던진 음식을 찾아오기도 하는데, 가장 오래된 선원이라도 피즈를 화나게 하지 말아야 한다는 것쯤은 알고 있다. 피즈를 우습게 봤다가 혼쭐난 이야기가 많기 때문이다. 피즈를 변덕스러운 바다 정령이라고 오해하기 쉽지만, 그저 심연의 거대한 육식 괴물을 부려 아군 적군 가리지 않고 정신을 빼놓는 것을 즐길 뿐이다.","allytips":["- 피즈는 유닛을 통과할 수 있으므로, 공격로 대치 단계에서 미니언 사이로 이동하며 심해석 삼지창의 기본 지속 효과를 입히고 몇 초 후 해당 스킬을 사용해 공격해 보세요.","- 피즈의 궁극기 미끼 뿌리기는 적 또는 적의 예상 경로를 대상으로 할 수 있습니다.","- 피즈의 스킬은 주문력을 기반으로 합니다. 적 팀에 고화력 위주의 챔피언이 많다면 존야의 모래시계나 밴시의 장막을, 체력이 적더라도 생존할 자신이 있다면 리치베인이나 라바돈의 죽음모자를 구매하는 게 좋습니다."],"enemytips":["- 피즈가 일으킨 출혈 효과가 몇 초 이상 지속될 경우 피즈가 강력한 일격을 날릴 수 있으니 출혈 효과가 사라지기 전까지는 거리를 유지하세요.","- 스킬을 모두 사용할 수 있을 때의 피즈는 매우 잡기 어려우니 스킬을 미리 쓰도록 유도한 후 군중 제어기나 강력한 공격 스킬을 사용해 보세요."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":6,"defense":4,"magic":7,"difficulty":6},"stats":{"armor":22.412,"armorperlevel":3.4,"attackdamage":58.04,"attackdamageperlevel":3,"attackrange":175,"attackspeedoffset":-0.05,"attackspeedperlevel":3.1,"crit":0,"critperlevel":0,"hp":570,"hpperlevel":98,"hpregen":8.176,"hpregenperlevel":0.7,"movespeed":335,"mp":317.2,"mpperlevel":37,"mpregen":6,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"성게 찌르기","description":"피즈가 대상을 뚫고 지나가며 마법 피해를 줍니다. 적중 시 효과도 적용됩니다.","sanitizedDescription":"피즈가 대상을 뚫고 지나가며 마법 피해를 줍니다. 적중 시 효과도 적용됩니다.","tooltip":"피즈가 대상을 관통하며 돌진하여 <span class=\"colorFF8C00\">{{ a2 }}</span>의 물리 피해에 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 추가로 입힙니다. 이 스킬은 적중 시 발동 효과가 적용됩니다.<br /><br /><span class=\"size16 colorFFEB7F\">심해석 삼지창</span> <span class=\"size16 color8C8C8C\">효과가 피즈가 돌진하며 관통한 모든 적 유닛에게 적용됩니다.</span>","sanitizedTooltip":"피즈가 대상을 관통하며 돌진하여 {{ a2 }}의 물리 피해에 {{ e1 }} (+{{ a1 }})의 마법 피해를 추가로 입힙니다. 이 스킬은 적중 시 발동 효과가 적용됩니다. 심해석 삼지창 효과가 피즈가 돌진하며 관통한 모든 적 유닛에게 적용됩니다.","leveltip":{"label":["마법 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"FizzQ.png","sprite":"spell3.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[8,7.5,7,6.5,6],"cooldownBurn":"8/7.5/7/6.5/6","effect":[null,[10,25,40,55,70],[0,0,0,0,0],[650,750,850,950,1050],[1.5,1.5,1.5,1.5,1.5],[600,600,600,600,600],[1,1,1,1,1],[0.35,0.35,0.35,0.35,0.35],[40,40,40,40,40],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/25/40/55/70","0","650/750/850/950/1050","1.5","600","1","0.35","40","0","0"],"vars":[{"key":"a2","link":"attackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.55]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"FizzQ"},{"name":"심해석 삼지창","description":"피즈가 적을 공격하면 출혈 효과가 적용되어 몇 초 동안 마법 피해를 입힙니다. 피즈는 다음 기본 공격을 할 때, 대상에게 출혈 효과가 지속된 시간에 비례해 추가 마법 피해를 입힙니다.","sanitizedDescription":"피즈가 적을 공격하면 출혈 효과가 적용되어 몇 초 동안 마법 피해를 입힙니다. 피즈는 다음 기본 공격을 할 때, 대상에게 출혈 효과가 지속된 시간에 비례해 추가 마법 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>피즈가 적에게 기본 공격을 가하면 출혈을 일으켜 {{ e8 }}초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>피즈의 다음 기본 공격은 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입힙니다. 대상에게 {{ e7 }}초 이상 출혈 효과가 적용된 상태라면 추가 피해량이 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>까지 증가합니다. <br /><br /><span class=\"size16 color8C8C8C\">이 스킬을 사용해 대상을 처치하면 마나를 {{ e2 }} 돌려받고 재사용 대기시간이 {{ e0 }}초로 줄어듭니다.</span>","sanitizedTooltip":"기본 지속 효과: 피즈가 적에게 기본 공격을 가하면 출혈을 일으켜 {{ e8 }}초 동안 {{ e1 }} (+{{ a2 }})의 마법 피해를 입힙니다. 사용 시: 피즈의 다음 기본 공격은 {{ e3 }} (+{{ a2 }})의 추가 마법 피해를 입힙니다. 대상에게 {{ e7 }}초 이상 출혈 효과가 적용된 상태라면 추가 피해량이 {{ e3 }} (+{{ a1 }})까지 증가합니다. 이 스킬을 사용해 대상을 처치하면 마나를 {{ e2 }} 돌려받고 재사용 대기시간이 {{ e0 }}초로 줄어듭니다.","leveltip":{"label":["기본 지속 효과 / 사용 시 피해량","사용 시 피해량 (충전)","재사용 대기시간","마나 소모량","돌려받는 마나"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"FizzW.png","sprite":"spell3.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,40,50,60,70],"costBurn":"30/40/50/60/70","cooldown":[10,9.5,9,8.5,8],"cooldownBurn":"10/9.5/9/8.5/8","effect":[null,[20,30,40,50,60],[20,28,36,42,50],[60,90,120,150,180],[6,6,6,6,6],[2,2,2,2,2],[4,4,4,4,4],[2,2,2,2,2],[3,3,3,3,3],[750,750,750,750,750],[1,1,1,1,1]],"effectBurn":["","20/30/40/50/60","20/28/36/42/50","60/90/120/150/180","6","2","4","2","3","750","1"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.4]},{"key":"a1","link":"spelldamage","coeff":[1.2]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"FizzW"},{"name":"장난치기 / 재간둥이","description":"피즈가 자신의 창 위로 뛰어올라 목표로 지정할 수 없게 됩니다. 이 상태에서 피즈는 땅을 내리치거나 다시금 뛰어오를 수 있습니다.","sanitizedDescription":"피즈가 자신의 창 위로 뛰어올라 목표로 지정할 수 없게 됩니다. 이 상태에서 피즈는 땅을 내리치거나 다시금 뛰어오를 수 있습니다.","tooltip":"커서가 위치한 쪽으로 뛰어 창 위에 서고 잠시 대상으로 지정할 수 없는 상태가 됩니다.<br /><br /><span class=\"colorFF9900\">재사용 시: </span>피즈가 빠르게 스킬을 재사용하면 커서 방향으로 다시 한 번 뛰어 근처의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />피즈가 스킬을 재사용하지 않으면 더 큰 반경 안의 적에게 피해를 입히고 적중당한 적을 {{ e4 }}초 동안 {{ e2 }}% 둔화시킵니다.","sanitizedTooltip":"커서가 위치한 쪽으로 뛰어 창 위에 서고 잠시 대상으로 지정할 수 없는 상태가 됩니다. 재사용 시: 피즈가 빠르게 스킬을 재사용하면 커서 방향으로 다시 한 번 뛰어 근처의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 피즈가 스킬을 재사용하지 않으면 더 큰 반경 안의 적에게 피해를 입히고 적중당한 적을 {{ e4 }}초 동안 {{ e2 }}% 둔화시킵니다.","leveltip":{"label":["피해량","둔화","마나 소모량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"FizzE.png","sprite":"spell3.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,95,100,105,110],"costBurn":"90/95/100/105/110","cooldown":[16,14.5,13,11.5,10],"cooldownBurn":"16/14.5/13/11.5/10","effect":[null,[70,120,170,220,270],[40,45,50,55,60],[225,225,225,225,225],[2,2,2,2,2],[375,375,375,375,375],[80,80,80,80,80],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/120/170/220/270","40/45/50/55/60","225","2","375","80","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"FizzE"},{"name":"미끼 뿌리기","description":"피즈가 지정한 방향으로 마법 물고기를 풀어놓으면, 이 물고기를 건드리는 챔피언에게 들러붙어 이동 속도를 늦춥니다. 잠시 후 상어가 땅 밑에서 튀어나와 대상을 띄워올리며 주변에 있는 적은 옆으로 밀어냅니다. 상어에게 맞은 적은 모두 마법 피해를 입으며 속도가 느려집니다.","sanitizedDescription":"피즈가 지정한 방향으로 마법 물고기를 풀어놓으면, 이 물고기를 건드리는 챔피언에게 들러붙어 이동 속도를 늦춥니다. 잠시 후 상어가 땅 밑에서 튀어나와 대상을 띄워올리며 주변에 있는 적은 옆으로 밀어냅니다. 상어에게 맞은 적은 모두 마법 피해를 입으며 속도가 느려집니다.","tooltip":"피즈가 물고기를 풀어 처음으로 부딪힌 적 챔피언을 둔화시키고 상어를 유인하며 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. 상어는 {{ e8 }}초 후 바닥에서 튀어나와 대상을 공중으로 띄워올리고 나머지 적을 옆으로 밀어냅니다.<br /><br />물고기가 이동한 거리에 따라 상어의 크기가 커지며, 상어는 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> ~ {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 대상을 40% ~ 80% 둔화시킵니다.<br /><br /><span class=\"size16 colorFFEB7F\">심해석 삼지창</span> <span class=\"size16 color8C8C8C\">효과가 물고기가 붙은 적에게 적용되며 상어의 대상이 됩니다.</span>","sanitizedTooltip":"피즈가 물고기를 풀어 처음으로 부딪힌 적 챔피언을 둔화시키고 상어를 유인하며 절대 시야를 얻습니다. 상어는 {{ e8 }}초 후 바닥에서 튀어나와 대상을 공중으로 띄워올리고 나머지 적을 옆으로 밀어냅니다. 물고기가 이동한 거리에 따라 상어의 크기가 커지며, 상어는 {{ e1 }} (+{{ a1 }}) ~ {{ e3 }} (+{{ a2 }})의 마법 피해를 입히고 대상을 40% ~ 80% 둔화시킵니다. 심해석 삼지창 효과가 물고기가 붙은 적에게 적용되며 상어의 대상이 됩니다.","leveltip":{"label":["작은 상어 피해량","중간 상어 피해량","큰 상어 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} ->{{ cooldownNL }}"]},"image":{"full":"FizzR.png","sprite":"spell3.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,85,70],"cooldownBurn":"100/85/70","effect":[null,[150,250,350],[225,325,425],[300,400,500],[200,200,200],[325,325,325],[450,450,450],[1300,1300,1300],[2,2,2],[2,2,2],[60,60,60]],"effectBurn":["","150/250/350","225/325/425","300/400/500","200","325","450","1300","2","2","60"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]},{"key":"a2","link":"spelldamage","coeff":[1.2]}],"range":[1300,1300,1300],"rangeBurn":"1300","key":"FizzR"}],"passive":{"name":"영리한 싸움꾼","description":"피즈는 재빠른 몸놀림 덕택에 유닛을 통과해 이동하며 기본 공격에 맞을 때 물리 피해를 덜 입습니다.","sanitizedDescription":"피즈는 재빠른 몸놀림 덕택에 유닛을 통과해 이동하며 기본 공격에 맞을 때 물리 피해를 덜 입습니다.","image":{"full":"Fizz_P.png","sprite":"passive0.png","group":"passive","x":432,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Fizz","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3100,"count":1},{"id":3151,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Fizz","title":"FizzARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3057,"count":1},{"id":1001,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3100,"count":1},{"id":3158,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3029,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Fizz","title":"FizzCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3057,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3001,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3135,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Fizz","title":"FizzFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1058,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3100,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Fizz","title":"FizzKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3001,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3027,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Fizz","title":"FizzSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3001,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3135,"count":1},{"id":3026,"count":1}]}]},{"champion":"Fizz","title":"FizzSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1414,"count":1},{"id":3100,"count":1},{"id":3157,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3057,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Fizz","title":"FizzTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3113,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3100,"count":1},{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"KogMaw":{"id":96,"key":"KogMaw","name":"코그모","title":"심연의 아귀","image":{"full":"KogMaw.png","sprite":"champion1.png","group":"champion","x":384,"y":96,"w":48,"h":48},"skins":[{"id":96000,"name":"default","num":0},{"id":96001,"name":"애벌레 코그모","num":1},{"id":96002,"name":"모랫빛 코그모","num":2},{"id":96003,"name":"왕나비 코그모 ","num":3},{"id":96004,"name":"루돌프 코그모","num":4},{"id":96005,"name":"사자춤 코그모","num":5},{"id":96006,"name":"심해어 코그모","num":6},{"id":96007,"name":"쥬라기 코그모","num":7},{"id":96008,"name":"전투 기계 코그모","num":8},{"id":96009,"name":"코그멍","num":9},{"id":96010,"name":"마법공학 코그모","num":10}],"lore":"코그모는 이케시아의 황무지 깊은 곳에서 느닷없이 등장해 부패해 가는 공허가 토해낸 생명체로, 호기심 넘치는 입을 크게 쩍 벌리고 부식성 분비물을 흘리며 악취를 풍긴다. 공허 태생인 코그모는 유달리 무언가를 닥치는대로 물어뜯고 침을 흘려야만 진정으로 그것을 이해할 수 있었다. 코그모가 태어날 때부터 악의가 있는 것은 아니라서 그 천진난만함에 묘한 매력이 있지만, 살기 위해서가 아닌, 끝없는 호기심에 그만 닥치는대로 먹어치울 수 있기 때문에 위험하다. ","blurb":"코그모는 이케시아의 황무지 깊은 곳에서 느닷없이 등장해 부패해 가는 공허가 토해낸 생명체로, 호기심 넘치는 입을 크게 쩍 벌리고 부식성 분비물을 흘리며 악취를 풍긴다. 공허 태생인 코그모는 유달리 무언가를 닥치는대로 물어뜯고 침을 흘려야만 진정으로 그것을 이해할 수 있었다. 코그모가 태어날 때부터 악의가 있는 것은 아니라서 그 천진난만함에 묘한 매력이 있지만, 살기 위해서가 아닌, 끝없는 호기심에 그만 닥치는대로 먹어치울 수 있기 때문에 위험하다. ","allytips":["- 코그모가 생체마법 폭격 스킬을 사용하면 대부분의 챔피언보다 사거리 길어집니다.","- 공허의 분비물을 이용하면 살아있는 곡사포를 보다 잘 맞힐 수 있게 됩니다.","- 이케시아식 마무리를 최대한 활용하십시오."],"enemytips":["- 코그모는 쓸만한 탈출 능력이 딱히 없어 매복에 취약합니다.","- 코그모가 쓰러지면 빨리 도망가십시오!!!","- 살아 있는 곡사포는 매 레벨마다 사거리가 증가합니다.","- 코그모는 생체마법 폭격 스킬로 내셔 남작을 매우 빨리 처치할 수 있습니다. 코그모가 몰락한 왕의 검을 뽑으면 내셔 남작이 있는 곳에 와드를 박아두는 게 좋습니다."],"tags":["Marksman","Mage"],"partype":"마나","info":{"attack":8,"defense":2,"magic":5,"difficulty":6},"stats":{"armor":29,"armorperlevel":3.5,"attackdamage":65,"attackdamageperlevel":2.41,"attackrange":500,"attackspeedoffset":-0.06,"attackspeedperlevel":2.65,"crit":0,"critperlevel":0,"hp":517.76,"hpperlevel":82,"hpregen":5.924,"hpregenperlevel":0.55,"movespeed":325,"mp":322.2,"mpperlevel":40,"mpregen":8.676,"mpregenperlevel":0.7,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"부식성 침","description":"코그모가 부식성 침을 발사하여 적에게 마법 피해를 입히고 잠깐 동안 대상의 방어력과 마법 방어력을 낮춥니다. 코그모는 추가 공격 속도를 얻습니다.","sanitizedDescription":"코그모가 부식성 침을 발사하여 적에게 마법 피해를 입히고 잠깐 동안 대상의 방어력과 마법 방어력을 낮춥니다. 코그모는 추가 공격 속도를 얻습니다.","tooltip":"<span class=\"colorFF8C00\">기본 지속 효과: </span>코그모의 공격 속도가 추가로 {{ e2 }}% 증가합니다<br /><br /><span class=\"colorFF8C00\">사용 시: </span>부식성 침을 발사하여 처음 맞은 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 가하고, 해당 적의 방어력과 마법 저항력을 {{ e4 }}초간 {{ e3 }}%만큼 낮춥니다.","sanitizedTooltip":"기본 지속 효과: 코그모의 공격 속도가 추가로 {{ e2 }}% 증가합니다 사용 시: 부식성 침을 발사하여 처음 맞은 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 가하고, 해당 적의 방어력과 마법 저항력을 {{ e4 }}초간 {{ e3 }}%만큼 낮춥니다.","leveltip":{"label":["추가 공격 속도","피해량","방어력과 마법 저항력 감소량"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"KogMawQ.png","sprite":"spell6.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[80,130,180,230,280],[15,20,25,30,35],[20,22,24,26,28],[4,4,4,4,4],[1,1,1,1,1],[1,1,1,1,1],[100,100,100,100,100],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/130/180/230/280","15/20/25/30/35","20/22/24/26/28","4","1","1","100","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[1175,1175,1175,1175,1175],"rangeBurn":"1175","key":"KogMawQ"},{"name":"생체마법 폭격","description":"코그모의 공격 사거리가 증가하고 피격 대상의 최대 체력에 비례한 마법 피해를 입힙니다.","sanitizedDescription":"코그모의 공격 사거리가 증가하고 피격 대상의 최대 체력에 비례한 마법 피해를 입힙니다.","tooltip":"{{ e3 }}초 동안 기본 공격 시 사거리가 {{ e1 }}만큼 증가하고 대상 최대 체력의 {{ e2 }}% <span class=\"color99FF99\">(+{{ f1 }})%</span>만큼 추가 마법 피해를 입힙니다.","sanitizedTooltip":"{{ e3 }}초 동안 기본 공격 시 사거리가 {{ e1 }}만큼 증가하고 대상 최대 체력의 {{ e2 }}% (+{{ f1 }})%만큼 추가 마법 피해를 입힙니다.","leveltip":{"label":["사거리","최대 체력 비례 추가 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"KogMawBioArcaneBarrage.png","sprite":"spell6.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[17,17,17,17,17],"cooldownBurn":"17","effect":[null,[130,150,170,190,210],[3,4,5,6,7],[8,8,8,8,8],[100,100,100,100,100],[100,100,100,100,100],[0,0,0,0,0],[100,100,100,100,100],[15,15,15,15,15],[0.15,0.2,0.25,0.3,0.35],[15,20,25,30,35]],"effectBurn":["","130/150/170/190/210","3/4/5/6/7","8","100","100","0","100","15","0.15/0.2/0.25/0.3/0.35","15/20/25/30/35"],"range":[530,530,530,530,530],"rangeBurn":"530","key":"KogMawBioArcaneBarrage"},{"name":"공허의 분비물","description":"코그모가 특유의 진액을 발사하여 진액에 맞는 모든 적에게 피해를 입히며, 진액이 남긴 흔적 위에 있는 적의 이동 속도를 늦춥니다.","sanitizedDescription":"코그모가 특유의 진액을 발사하여 진액에 맞는 모든 적에게 피해를 입히며, 진액이 남긴 흔적 위에 있는 적의 이동 속도를 늦춥니다.","tooltip":"진액에 맞은 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 유지되는 흔적을 남깁니다. 흔적을 지나는 적은 이동 속도가 {{ e2 }}% 감소합니다.","sanitizedTooltip":"진액에 맞은 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 유지되는 흔적을 남깁니다. 흔적을 지나는 적은 이동 속도가 {{ e2 }}% 감소합니다.","leveltip":{"label":["피해량","둔화","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KogMawVoidOoze.png","sprite":"spell6.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,90,100,110,120],"costBurn":"80/90/100/110/120","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,105,150,195,240],[20,28,36,44,52],[4,4,4,4,4],[0.25,0.25,0.25,0.25,0.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/105/150/195/240","20/28/36/44/52","4","0.25","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[1200,1200,1200,1200,1200],"rangeBurn":"1200","key":"KogMawVoidOoze"},{"name":"살아있는 곡사포","description":"코그모가 매우 멀리서 포탄을 발사하여 마법 피해를 입히고 은신하지 않은 대상의 모습을 드러나게 합니다. 체력이 낮은 적에게는 더 큰 피해를 입힙니다. 또한 짧은 시간 동안 여러 번 살아 있는 곡사포 스킬을 사용하면 마나가 추가로 소모됩니다.","sanitizedDescription":"코그모가 매우 멀리서 포탄을 발사하여 마법 피해를 입히고 은신하지 않은 대상의 모습을 드러나게 합니다. 체력이 낮은 적에게는 더 큰 피해를 입힙니다. 또한 짧은 시간 동안 여러 번 살아 있는 곡사포 스킬을 사용하면 마나가 추가로 소모됩니다.","tooltip":"아주 멀리서 살아있는 곡사포를 발사합니다. 적 체력이 40% 이상일 경우 포탄은 대상이 잃은 체력에 비례하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span> ~ {{ effect1amount*1.5 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span> <span class=\"color99FF99\">(+{{ f2 }})</span>의 마법 피해를 입힙니다.<br /><br />체력이 40% 미만인 적에게는 {{ f4 }} <span class=\"colorFF8C00\">(+{{ f6 }})</span> <span class=\"color99FF99\">(+{{ f5 }})</span>의 마법 피해를 입힙니다.<br /><br />다음 {{ e4 }}초 안에 재사용 시 곡사포 한 발당 {{ e3 }}의 마나를 추가로 소모합니다. (최대 마나 소모량: {{ e5 }}).","sanitizedTooltip":"아주 멀리서 살아있는 곡사포를 발사합니다. 적 체력이 40% 이상일 경우 포탄은 대상이 잃은 체력에 비례하여 {{ e1 }} (+{{ a2 }}) (+{{ a1 }}) ~ {{ effect1amount*1.5 }} (+{{ f3 }}) (+{{ f2 }})의 마법 피해를 입힙니다. 체력이 40% 미만인 적에게는 {{ f4 }} (+{{ f6 }}) (+{{ f5 }})의 마법 피해를 입힙니다. 다음 {{ e4 }}초 안에 재사용 시 곡사포 한 발당 {{ e3 }}의 마나를 추가로 소모합니다. (최대 마나 소모량: {{ e5 }}).","leveltip":{"label":["피해량","사거리","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KogMawLivingArtillery.png","sprite":"spell6.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[40,40,40],"costBurn":"40","cooldown":[2,1.5,1],"cooldownBurn":"2/1.5/1","effect":[null,[100,140,180],[1200,1500,1800],[40,40,40],[8,8,8],[400,400,400],[2,2,2],[1.5,1.5,1.5],[2,2,2],[360,360,360],[400,400,400]],"effectBurn":["","100/140/180","1200/1500/1800","40","8","400","2","1.5","2","360","400"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.65]},{"key":"a1","link":"spelldamage","coeff":[0.25]}],"range":[1200,1500,1800],"rangeBurn":"1200/1500/1800","key":"KogMawLivingArtillery"}],"passive":{"name":"이케시아식 마무리","description":"코그모는 죽기 직전 몸에서 연쇄 반응을 일으켜 전보다 훨씬 빠른 속도로 움직일 수 있게 되고 4초 뒤에 폭발하게 됩니다. 폭발 시 주변의 적에게 100 +(25 x 레벨)의 고정 피해를 입힙니다.","sanitizedDescription":"코그모는 죽기 직전 몸에서 연쇄 반응을 일으켜 전보다 훨씬 빠른 속도로 움직일 수 있게 되고 4초 뒤에 폭발하게 됩니다. 폭발 시 주변의 적에게 100 +(25 x 레벨)의 고정 피해를 입힙니다.","image":{"full":"KogMaw_IcathianSurprise.png","sprite":"passive1.png","group":"passive","x":384,"y":96,"w":48,"h":48}},"recommended":[{"champion":"KogMaw","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1},{"id":3144,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1043,"count":1},{"id":3153,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]}]},{"champion":"KogMaw","title":"KogMawARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"KogMaw","title":"KogMawCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3046,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"KogMaw","title":"KogmawFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3085,"count":1},{"id":3046,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3033,"count":1},{"id":3094,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"KogMaw","title":"KogMawKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"KogMaw","title":"KogMawPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3124,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3091,"count":1},{"id":3078,"count":1},{"id":3146,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3094,"count":1},{"id":3508,"count":1}]}]},{"champion":"KogMaw","title":"KogMawSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3046,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]}]},{"champion":"KogMaw","title":"KogmawSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3046,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"KogMaw","title":"KogmawTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1083,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3006,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3033,"count":1},{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2140,"count":1}]}]}]},"Maokai":{"id":57,"key":"Maokai","name":"마오카이","title":"뒤틀린 나무 정령","image":{"full":"Maokai.png","sprite":"champion2.png","group":"champion","x":384,"y":0,"w":48,"h":48},"skins":[{"id":57000,"name":"default","num":0},{"id":57001,"name":"그을린 마오카이","num":1},{"id":57002,"name":"토템 마오카이","num":2},{"id":57003,"name":"눈맞이 축제 마오카이","num":3},{"id":57004,"name":"악령 마오카이","num":4},{"id":57005,"name":"골키퍼 마오카이","num":5},{"id":57006,"name":"냐옹카이","num":6},{"id":57007,"name":"승리의 마오카이","num":7}],"lore":"거대한 나무 정령 마오카이는 분노에 휩싸여 그림자 군도의 초자연적인 언데드와 싸운다. 마법에 의한 대격변으로 고향이 파괴되었을 때 그는 자신의 나무 심장에 스며 있는 생명의 정수로 언데드의 상태는 모면했지만 형체가 뒤틀린 복수의 화신이 되었다. 한 때는 평화를 사랑하는 자연의 정령이었으나 이제 그는 그림자 군도를 뒤덮은 언데드를 몰아내고 아름답던 고향의 옛 모습을 되찾기 위해 맹렬하게 싸운다.","blurb":"거대한 나무 정령 마오카이는 분노에 휩싸여 그림자 군도의 초자연적인 언데드와 싸운다. 마법에 의한 대격변으로 고향이 파괴되었을 때 그는 자신의 나무 심장에 스며 있는 생명의 정수로 언데드의 상태는 모면했지만 형체가 뒤틀린 복수의 화신이 되었다. 한 때는 평화를 사랑하는 자연의 정령이었으나 이제 그는 그림자 군도를 뒤덮은 언데드를 몰아내고 아름답던 고향의 옛 모습을 되찾기 위해 맹렬하게 싸운다.","allytips":["- 묘목을 수풀에 던지면 효과가 향상되지만 잘 쌓이지는 않습니다.","- 대자연의 마수는 적이 도저히 피할 수 없는 상황에서 쓰거나 기습할 때 사용하면 좋습니다.","- 마오카이는 기본 지속 효과 덕분에 기본 공격만 꾸준히 할 수 있다면 적이 스킬을 마구 퍼부어도 잘 버틸 수 있습니다."],"enemytips":["- 묘목은 처음으로 사거리 안에 들어온 적을 추격하며, 몇 초가 지나거나 다른 적에 닿으면 폭발합니다. 특히 수풀에 있는 묘목은 효과가 더 강력하니 반드시 조심하세요.","- 마오카이의 체력 회복 재사용 대기시간은 스킬에 맞을 때마다 짧아지니 상황에 따라서는 마오카이에게 스킬을 허비하지 않는 게 좋습니다.","- 마오카이가 뒤틀린 전진을 쓰는 동안에는 피해를 입지 않으므로 스킬이나 주문을 낭비하지 마세요."],"tags":["Tank","Mage"],"partype":"마나","info":{"attack":3,"defense":8,"magic":6,"difficulty":3},"stats":{"armor":39,"armorperlevel":4,"attackdamage":63.54,"attackdamageperlevel":3.3,"attackrange":125,"attackspeedoffset":-0.1,"attackspeedperlevel":2.125,"crit":0,"critperlevel":0,"hp":565,"hpperlevel":95,"hpregen":5,"hpregenperlevel":0.75,"movespeed":335,"mp":377.28,"mpperlevel":43,"mpregen":7.2,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"덤불 주먹","description":"마오카이가 충격파를 일으켜 근처의 적을 뒤로 날려버리고 마법 피해를 입히며 둔화시킵니다.","sanitizedDescription":"마오카이가 충격파를 일으켜 근처의 적을 뒤로 날려버리고 마법 피해를 입히며 둔화시킵니다.","tooltip":"마오카이가 주먹으로 지면을 강타해 충격파를 일으킵니다. 근처의 적은 뒤로 날아가며 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 잠시 둔화됩니다.","sanitizedTooltip":"마오카이가 주먹으로 지면을 강타해 충격파를 일으킵니다. 근처의 적은 뒤로 날아가며 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 잠시 둔화됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"MaokaiQ.png","sprite":"spell7.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[8,7.25,6.5,5.75,5],"cooldownBurn":"8/7.25/6.5/5.75/5","effect":[null,[65,105,145,185,225],[325,325,325,325,325],[99,99,99,99,99],[0.25,0.25,0.25,0.25,0.25],[750,750,750,750,750],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/105/145/185/225","325","99","0.25","750","300","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"MaokaiQ"},{"name":"뒤틀린 전진","description":"마오카이가 움직이는 뿌리 덩어리로 변신해 대상에게 도약해 속박합니다. 이때 마오카이는 대상으로 지정할 수 없습니다.","sanitizedDescription":"마오카이가 움직이는 뿌리 덩어리로 변신해 대상에게 도약해 속박합니다. 이때 마오카이는 대상으로 지정할 수 없습니다.","tooltip":"마오카이가 움직이는 뿌리 덩어리로 변신해 대상에게 돌진합니다. 이때 마오카이는 대상으로 지정할 수 없습니다.<br /><br />적에게 부딪히면 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 속박합니다.","sanitizedTooltip":"마오카이가 움직이는 뿌리 덩어리로 변신해 대상에게 돌진합니다. 이때 마오카이는 대상으로 지정할 수 없습니다. 적에게 부딪히면 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 속박합니다.","leveltip":{"label":["피해량","속박 지속 시간","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"MaokaiW.png","sprite":"spell7.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[50,75,100,125,150],[1,1.1,1.2,1.3,1.4],[0,0,0,0,0],[0,0,0,0,0],[1300,1300,1300,1300,1300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/75/100/125/150","1/1.1/1.2/1.3/1.4","0","0","1300","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[525,525,525,525,525],"rangeBurn":"525","key":"MaokaiW"},{"name":"묘목 던지기","description":"마오카이가 묘목을 던져 해당 지역을 감시하게 합니다. 수풀에서는 효과가 향상됩니다.","sanitizedDescription":"마오카이가 묘목을 던져 해당 지역을 감시하게 합니다. 수풀에서는 효과가 향상됩니다.","tooltip":"마오카이가 {{ f1 }}초 동안 주변을 감시하는 묘목을 던집니다. 묘목은 근처 적을 추격해 가까이 가면 폭발하며 {{ e1 }}<span class=\"colorCC3300\"> + 대상 최대 체력의 {{ e8 }}%</span> <span class=\"color99FF99\">[+{{ a1 }}%]</span>에 해당하는 마법 피해를 입힙니다. 폭발에 맞은 적은 {{ e6 }}초 동안 {{ e5 }}% 둔화됩니다.<br /><br />수풀에 설치된 묘목은 <span class=\"colorCC3300\">{{ f2 }}</span>초 동안 유지되고 더 강력한 폭발을 일으켜 맞은 적 모두에게 {{ e6 }}초 동안 두 배의 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">챔피언이 아닌 대상에게는 최대 {{ e4 }}의 피해를 입히며, 수풀에 설치될 경우 이 수치가 두 배로 증가합니다.</span></rules>","sanitizedTooltip":"마오카이가 {{ f1 }}초 동안 주변을 감시하는 묘목을 던집니다. 묘목은 근처 적을 추격해 가까이 가면 폭발하며 {{ e1 }} + 대상 최대 체력의 {{ e8 }}% [+{{ a1 }}%]에 해당하는 마법 피해를 입힙니다. 폭발에 맞은 적은 {{ e6 }}초 동안 {{ e5 }}% 둔화됩니다. 수풀에 설치된 묘목은 {{ f2 }}초 동안 유지되고 더 강력한 폭발을 일으켜 맞은 적 모두에게 {{ e6 }}초 동안 두 배의 피해를 입힙니다. 챔피언이 아닌 대상에게는 최대 {{ e4 }}의 피해를 입히며, 수풀에 설치될 경우 이 수치가 두 배로 증가합니다.","leveltip":{"label":["기본 피해량","최대 체력 비례 피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e8 }}% -> {{ e8NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"MaokaiE.png","sprite":"spell7.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[11,11,11,11,11],"cooldownBurn":"11","effect":[null,[25,50,75,100,125],[0.5,0.5,0.5,0.5,0.5],[2,2,2,2,2],[300,300,300,300,300],[35,35,35,35,35],[2,2,2,2,2],[2,2,2,2,2],[6,6.5,7,7.5,8],[0,0,0,0,0],[550,550,550,550,550]],"effectBurn":["","25/50/75/100/125","0.5","2","300","35","2","2","6/6.5/7/7.5/8","0","550"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.01]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"MaokaiE"},{"name":"대자연의 마수","description":"마오카이가 나뭇가지와 가시로 된 거대 벽을 소환합니다. 벽은 천천히 전진하며 벽에 닿은 적에게 피해를 입히고 속박합니다.","sanitizedDescription":"마오카이가 나뭇가지와 가시로 된 거대 벽을 소환합니다. 벽은 천천히 전진하며 벽에 닿은 적에게 피해를 입히고 속박합니다.","tooltip":"마오카이가 나뭇가지와 가시로 된 거대 벽을 소환합니다. 벽은 천천히 전진하며 벽에 닿은 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }} ~ {{ e2 }}초 동안 속박합니다. 속박 시간은 벽이 이동한 거리에 비례합니다.","sanitizedTooltip":"마오카이가 나뭇가지와 가시로 된 거대 벽을 소환합니다. 벽은 천천히 전진하며 벽에 닿은 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }} ~ {{ e2 }}초 동안 속박합니다. 속박 시간은 벽이 이동한 거리에 비례합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"MaokaiR.png","sprite":"spell7.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[150,225,300],[2.4,2.4,2.4],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/225/300","2.4","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[3000,3000,3000],"rangeBurn":"3000","key":"MaokaiR"}],"passive":{"name":"마법 흡수","description":"마오카이는 기본 지속 효과로 기본 공격 시 체력을 회복합니다. 적 스킬에 맞거나 직접 스킬을 사용하면 기본 지속 효과의 재사용 대기시간이 감소합니다.","sanitizedDescription":"마오카이는 기본 지속 효과로 기본 공격 시 체력을 회복합니다. 적 스킬에 맞거나 직접 스킬을 사용하면 기본 지속 효과의 재사용 대기시간이 감소합니다.","image":{"full":"Maokai_Passive.png","sprite":"passive2.png","group":"passive","x":384,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Maokai","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3067,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3067,"count":1},{"id":3211,"count":1},{"id":3065,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3068,"count":1},{"id":3001,"count":1},{"id":3194,"count":1}]}]},{"champion":"Maokai","title":"MaokaiARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3029,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3194,"count":1},{"id":3102,"count":1},{"id":3068,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Maokai","title":"MaokaiCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3211,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3194,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3030,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Maokai","title":"MaokaiFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3027,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3056,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3117,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3190,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3027,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Maokai","title":"MaokaiKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"kingporosnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3194,"count":1},{"id":3102,"count":1},{"id":3068,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Maokai","title":"MaokaiSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3029,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]}]},{"champion":"Maokai","title":"MaokaiSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3211,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3194,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3027,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3117,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3194,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Maokai","title":"MaokaiTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3211,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3194,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3025,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1413,"count":1},{"id":3111,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3194,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3025,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Lissandra":{"id":127,"key":"Lissandra","name":"리산드라","title":"얼음 마녀","image":{"full":"Lissandra.png","sprite":"champion2.png","group":"champion","x":96,"y":0,"w":48,"h":48},"skins":[{"id":127000,"name":"default","num":0},{"id":127001,"name":"혈석 리산드라","num":1},{"id":127002,"name":"서슬 여왕 리산드라","num":2},{"id":127003,"name":"프로그램 리산드라","num":3}],"lore":"혹한의 북쪽 땅 주민들은 아주 먼 옛날부터 '그녀'를 두려워했다. 그녀는 순수한 냉기를 왜곡시켜 어둠의 힘으로 부리는 마법을 구사했으며, 날카로운 얼음으로 자신에 대적하는 적들을 모조리 꿰뚫어 버리거나 으스러뜨렸다. 얼마나 무시무시하고 막강한 힘이었는지! 사람들은 그녀의 본명을 언급하는 것마저 꺼려 '얼음 마녀'라는 별명으로 그녀를 칭하곤 했다. 그러나 진정 두려운 것은 그녀의 힘이 아니라 위험한 계획이었다. 이 사악한 마녀의 이름은 리산드라, 그녀는 대자연을 암흑의 힘으로 물들여 이 세계에 빙하기를 초래하려 한다.","blurb":"혹한의 북쪽 땅 주민들은 아주 먼 옛날부터 '그녀'를 두려워했다. 그녀는 순수한 냉기를 왜곡시켜 어둠의 힘으로 부리는 마법을 구사했으며, 날카로운 얼음으로 자신에 대적하는 적들을 모조리 꿰뚫어 버리거나 으스러뜨렸다. 얼마나 무시무시하고 막강한 힘이었는지! 사람들은 그녀의 본명을 언급하는 것마저 꺼려 '얼음 마녀'라는 별명으로 그녀를 칭하곤 했다. 그러나 진정 두려운 것은 그녀의 힘이 아니라 위험한 계획이었다. 이 사악한 마녀의 이름은 리산드라...","allytips":["- 자기 자신에게 시전 키와 궁극기 키를 함께 누르면 궁극기 얼음 무덤을 즉시 자신에게 걸 수 있습니다. (기본 지정: alt+R)","- 얼음갈퀴 길을 시전한 다음 반대편으로 달려가서 적들이 이동 방향을 쉽게 예측할 수 없게 하세요.","- 리산드라의 스킬들은 다른 마법사들에 비해 사거리가 짧습니다. 따라서 피해량과 생존력을 둘 다 놓치지 않게끔 존야의 모래시계와 밴시의 장막 같이 주문력과 방어력을 다 올려주는 아이템을 사는 편이 좋습니다."],"enemytips":["- 리산드라가 얼음갈퀴 길을 활용해 이동하지 못하도록 막으려면, 이 스킬을 재시전하기 전에 이동 불가 효과를 거는 게 좋습니다.","- 리산드라의 서릿발 스킬은 초반에 재사용 대기시간이 깁니다. 재사용 대기가 끝나기 전에 전투를 벌이도록 하세요.","- 리산드라의 얼음 파편은 처음 맞히는 유닛에게만 둔화를 겁니다. 아군 미니언 뒤에서 리산드라에게 접근하면 둔화를 피할 수 있습니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":5,"magic":8,"difficulty":6},"stats":{"armor":20.216,"armorperlevel":3.7,"attackdamage":53,"attackdamageperlevel":2.7,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":518,"hpperlevel":87,"hpregen":6.924,"hpregenperlevel":0.55,"movespeed":325,"mp":304,"mpperlevel":60,"mpregen":5.672,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"얼음 파편","description":"적을 맞히면 부서지는 얼음창을 던져 마법 피해를 입히고 이동 속도를 늦춥니다. 파편들이 대상을 꿰뚫고 나가, 여기에 맞는 다른 적들에게도 동일한 피해를 입힙니다.","sanitizedDescription":"적을 맞히면 부서지는 얼음창을 던져 마법 피해를 입히고 이동 속도를 늦춥니다. 파편들이 대상을 꿰뚫고 나가, 여기에 맞는 다른 적들에게도 동일한 피해를 입힙니다.","tooltip":"처음 맞는 적에게서 부서지는 얼음창을 던져 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 이동 속도를 {{ e3 }}% 늦춥니다. 그 후 파편들이 대상을 꿰뚫고 나가, 여기에 맞는 다른 적들에게도 동일한 피해를 입힙니다.","sanitizedTooltip":"처음 맞는 적에게서 부서지는 얼음창을 던져 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 이동 속도를 {{ e3 }}% 늦춥니다. 그 후 파편들이 대상을 꿰뚫고 나가, 여기에 맞는 다른 적들에게도 동일한 피해를 입힙니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LissandraQ.png","sprite":"spell6.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[85,85,85,85,85],"costBurn":"85","cooldown":[6,5.25,4.5,3.75,3],"cooldownBurn":"6/5.25/4.5/3.75/3","effect":[null,[70,100,130,160,190],[1.5,1.5,1.5,1.5,1.5],[16,19,22,25,28],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/100/130/160/190","1.5","16/19/22/25/28","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[725,725,725,725,725],"rangeBurn":"725","key":"LissandraQ"},{"name":"서릿발","description":"주변 적들을 꽁꽁 얼려 마법 피해를 입히면서 발을 묶습니다. ","sanitizedDescription":"주변 적들을 꽁꽁 얼려 마법 피해를 입히면서 발을 묶습니다.","tooltip":"주변 적들에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 발을 묶습니다.","sanitizedTooltip":"주변 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 발을 묶습니다.","leveltip":{"label":["피해량","고정 지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LissandraW.png","sprite":"spell6.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[70,110,150,190,230],[1.1,1.2,1.3,1.4,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","1.1/1.2/1.3/1.4/1.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[450,450,450,450,450],"rangeBurn":"450","key":"LissandraW"},{"name":"얼음갈퀴 길","description":"리산드라가 마법 피해를 주는 얼음갈퀴를 생성합니다. 이 스킬을 다시 시전하면 리산드라가 얼음갈퀴의 현재 위치로 순간이동합니다.","sanitizedDescription":"리산드라가 마법 피해를 주는 얼음갈퀴를 생성합니다. 이 스킬을 다시 시전하면 리산드라가 얼음갈퀴의 현재 위치로 순간이동합니다.","tooltip":"얼음갈퀴를 던져 적중한 적들에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />이 스킬을 다시 사용하면 리산드라가 얼음갈퀴의 현재 위치로 순간이동합니다.","sanitizedTooltip":"얼음갈퀴를 던져 적중한 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이 스킬을 다시 사용하면 리산드라가 얼음갈퀴의 현재 위치로 순간이동합니다.","leveltip":{"label":["피해량","재사용 대기시간","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LissandraE.png","sprite":"spell6.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,85,90,95,100],"costBurn":"80/85/90/95/100","cooldown":[24,21,18,15,12],"cooldownBurn":"24/21/18/15/12","effect":[null,[70,115,160,205,250],[14,13,12,11,10],[20,20,20,20,20],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","14/13/12/11/10","20","1","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[1050,1050,1050,1050,1050],"rangeBurn":"1050","key":"LissandraE"},{"name":"얼음 무덤","description":"적 챔피언에게 시전하면 대상이 꽁꽁 얼면서 기절합니다. 리산드라에게 시전하면 몸을 어둠의 얼음으로 감싸, 공격할 수 없는 무적 상태가 된 채로 자신을 치유합니다. 그 다음 어둠의 얼음이 대상에게서 번져나가 적들에게 마법 피해를 주며 이동 속도를 늦춥니다.","sanitizedDescription":"적 챔피언에게 시전하면 대상이 꽁꽁 얼면서 기절합니다. 리산드라에게 시전하면 몸을 어둠의 얼음으로 감싸, 공격할 수 없는 무적 상태가 된 채로 자신을 치유합니다. 그 다음 어둠의 얼음이 대상에게서 번져나가 적들에게 마법 피해를 주며 이동 속도를 늦춥니다.","tooltip":"<span class=\"colorFF9999\">적에게 시전: </span>대상 챔피언을 꽁꽁 얼려 {{ e4 }}초 동안 기절시킵니다.<br /><br /><span class=\"colorCCFF99\">자신에게 시전: </span>리산드라가 {{ e5 }}초 동안 어둠의 얼음으로 자기 몸을 감싸 {{ e6 }} <span class=\"color99FF99\">(+{{ a2 }})</span>만큼 회복되며, 잃은 체력 {{ e8 }}%당 회복되는 체력 수치는 {{ e7 }}%씩 상승합니다. 이 때 아무런 행동도 취할 수 없는 대신 공격도 받지 않는 무적 상태가 됩니다.<br /><br />그 다음 어둠의 얼음이 대상에게서 번져나가 적들에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 얼음은 {{ e3 }}초 동안 유지되며 적의 이동 속도를 {{ e2 }}% 늦춥니다.","sanitizedTooltip":"적에게 시전: 대상 챔피언을 꽁꽁 얼려 {{ e4 }}초 동안 기절시킵니다. 자신에게 시전: 리산드라가 {{ e5 }}초 동안 어둠의 얼음으로 자기 몸을 감싸 {{ e6 }} (+{{ a2 }})만큼 회복되며, 잃은 체력 {{ e8 }}%당 회복되는 체력 수치는 {{ e7 }}%씩 상승합니다. 이 때 아무런 행동도 취할 수 없는 대신 공격도 받지 않는 무적 상태가 됩니다. 그 다음 어둠의 얼음이 대상에게서 번져나가 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 얼음은 {{ e3 }}초 동안 유지되며 적의 이동 속도를 {{ e2 }}% 늦춥니다.","leveltip":{"label":["피해량","둔화","회복량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e6 }} -> {{ e6NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LissandraR.png","sprite":"spell6.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[130,105,80],"cooldownBurn":"130/105/80","effect":[null,[150,250,350],[30,45,75],[3,3,3],[1.5,1.5,1.5],[2.5,2.5,2.5],[100,150,200],[1,1,1],[1,1,1],[292,292,292],[0,0,0]],"effectBurn":["","150/250/350","30/45/75","3","1.5","2.5","100/150/200","1","1","292","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[550,550,550],"rangeBurn":"550","key":"LissandraR"}],"passive":{"name":"냉기의 화신","description":"몇 초마다 리산드라의 다음 스킬은 마나를 소모하지 않습니다. 리산드라가 스킬로 적의 이동을 방해할 때마다 재사용 대기시간이 감소합니다. (아이템으로 적용하는 이동 방해 효과에는 적용되지 않음)","sanitizedDescription":"몇 초마다 리산드라의 다음 스킬은 마나를 소모하지 않습니다. 리산드라가 스킬로 적의 이동을 방해할 때마다 재사용 대기시간이 감소합니다. (아이템으로 적용하는 이동 방해 효과에는 적용되지 않음)","image":{"full":"Lissandra_Passive.png","sprite":"passive2.png","group":"passive","x":96,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Lissandra","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3165,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Lissandra","title":"LissandraARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3029,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lissandra","title":"LissandraCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3152,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lissandra","title":"LissandraFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1},{"id":3361,"count":1}]}]},{"champion":"Lissandra","title":"LissandraKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lissandra","title":"LissandraSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3152,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]}]},{"champion":"Lissandra","title":"LissandraSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3152,"count":1},{"id":3102,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lissandra","title":"LissandraTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3136,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3110,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Jinx":{"id":222,"key":"Jinx","name":"징크스","title":"난폭한 말괄량이","image":{"full":"Jinx.png","sprite":"champion1.png","group":"champion","x":288,"y":48,"w":48,"h":48},"skins":[{"id":222000,"name":"default","num":0},{"id":222001,"name":"마피아 징크스","num":1},{"id":222002,"name":"불꽃놀이 징크스","num":2},{"id":222003,"name":"슬레이어 징크스","num":3},{"id":222004,"name":"별 수호자 징크스","num":4},{"id":222012,"name":"당돌한 엘프 징크스","num":12}],"lore":"자운 출신의 충동적이고 격정적인 범죄자 징크스. 난장판을 벌이는 재미로 살며, 결과 따위는 안중에 없다. 살상 무기를 다수 보유한 그녀가 떠난 자리는 화려하고 요란한 폭발로 공포의 아수라장이 된다. 징크스는 지루함을 끔찍이 싫어하고 가는 곳 어디에나 특유의 대혼란을 화끈하게 일으킨다.","blurb":"자운 출신의 충동적이고 격정적인 범죄자 징크스. 난장판을 벌이는 재미로 살며, 결과 따위는 안중에 없다. 살상 무기를 다수 보유한 그녀가 떠난 자리는 화려하고 요란한 폭발로 공포의 아수라장이 된다. 징크스는 지루함을 끔찍이 싫어하고 가는 곳 어디에나 특유의 대혼란을 화끈하게 일으킨다.","allytips":["- 반드시 로켓이 더 좋은 것은 아닙니다! 징크스의 미니건은 완전히 공격 속도가 상승하면 위력이 엄청나게 커집니다. 적 챔피언이 너무 가까이 붙으면 반드시 미니건으로 전환하세요.","- 징크스의 로켓은 폭발 반경 안의 모든 적에게 최대치의 피해를 입힙니다. 적 챔피언 옆에 있는 미니언들에게 사용해서 미니언의 공격 대상이 되지 않도록 하세요.","- 교전이 시작되면 진형 끝에 서서 로켓 런처와 빠직! 스킬로 원거리 공격을 하세요! 안전이 확보될 때까지는 달려들어가 미니건을 난사하지 않는 게 좋습니다."],"enemytips":["- 징크스의 미니건은 공격 속도가 상승할 때까지 시간이 걸립니다. 거리를 두고 로켓으로 공격한다면 덮쳐서 빠르게 녹여버리세요.","- 징크스의 궁극기는 가까이 있을수록 피해량이 적습니다.","- 징크스의 주력 방어 스킬인 와작와작 지뢰는 재사용 대기시간이 깁니다. 지뢰가 재사용 대기중일 때 전투가 벌어지면 징크스가 도주하기 어려운 점을 활용하세요."],"tags":["Marksman"],"partype":"마나","info":{"attack":9,"defense":2,"magic":4,"difficulty":6},"stats":{"armor":32,"armorperlevel":3.5,"attackdamage":66,"attackdamageperlevel":2.41,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":1,"crit":0,"critperlevel":0,"hp":517.76,"hpperlevel":82,"hpregen":5.84,"hpregenperlevel":0.5,"movespeed":325,"mp":245.6,"mpperlevel":45,"mpregen":6.68,"mpregenperlevel":1,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"휘릭휘릭!","description":"징크스는 '빵야빵야' 미니건과 '생선대가리' 로켓 런처 중에서 원하는 것을 선택하여 기본 공격을 변경할 수 있습니다. 미니건으로 공격하면 공격 속도가 상승하고, 로켓 런처로 공격하면 광역 피해를 주고 사거리가 증가하며 마나가 소모됩니다.","sanitizedDescription":"징크스는 '빵야빵야' 미니건과 '생선대가리' 로켓 런처 중에서 원하는 것을 선택하여 기본 공격을 변경할 수 있습니다. 미니건으로 공격하면 공격 속도가 상승하고, 로켓 런처로 공격하면 광역 피해를 주고 사거리가 증가하며 마나가 소모됩니다.","tooltip":"징크스가 무기를 변환합니다.<br /><br /><span class=\"colorFF9900\">생선 대가리 로켓 런처:</span> 기본 공격 시 마나를 소모하여 대상과 주변 적들에게 110%의 피해를 가합니다. 추가 공격 속도는 {{ e5 }}% 느려지지만 사거리는 {{ e3 }}만큼 증가합니다.<br /><br /><span class=\"colorFF9900\">빵야빵야 미니건:</span> 2.5초 동안 기본 공격 시마다 공격 속도가 상승합니다. 이 효과는 최대 3번까지 중첩되며 총 <span class=\"colorFFFFFF\">{{ f4 }}%</span>까지 상승합니다. (추가 수치는 스킬 레벨과 징크스의 레벨에 비례합니다.) 한 번 변환할 때 중첩이 1회 소모되며, 로켓 런처로 변환한 다음 징크스의 처음 공격에서만 혜택이 적용됩니다.","sanitizedTooltip":"징크스가 무기를 변환합니다. 생선 대가리 로켓 런처: 기본 공격 시 마나를 소모하여 대상과 주변 적들에게 110%의 피해를 가합니다. 추가 공격 속도는 {{ e5 }}% 느려지지만 사거리는 {{ e3 }}만큼 증가합니다. 빵야빵야 미니건: 2.5초 동안 기본 공격 시마다 공격 속도가 상승합니다. 이 효과는 최대 3번까지 중첩되며 총 {{ f4 }}%까지 상승합니다. (추가 수치는 스킬 레벨과 징크스의 레벨에 비례합니다.) 한 번 변환할 때 중첩이 1회 소모되며, 로켓 런처로 변환한 다음 징크스의 처음 공격에서만 혜택이 적용됩니다.","leveltip":{"label":["로켓 추가 사거리","미니건의 총 공격 속도 증가분"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ f4 }}% -> {{ f5 }}%"]},"image":{"full":"JinxQ.png","sprite":"spell5.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"로켓 1발당 마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[1,1,1,1,1],"cooldownBurn":"1","effect":[null,[30,40,50,60,70],[100,100,100,100,100],[75,100,125,150,175],[0,0,0,0,0],[25,25,25,25,25],[33.25,33.25,33.25,33.25,33.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/40/50/60/70","100","75/100/125/150/175","0","25","33.25","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"JinxQ"},{"name":"빠직!","description":"징크스가 빠직!으로 전기 충격파를 발사해 처음 적중한 적을 둔화시키고 위치를 드러내며 피해를 입힙니다.","sanitizedDescription":"징크스가 빠직!으로 전기 충격파를 발사해 처음 적중한 적을 둔화시키고 위치를 드러내며 피해를 입힙니다.","tooltip":"징크스가 전기 충격파를 발사하여 처음 맞힌 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고, 2초 동안 위치를 드러내며 속도를 {{ e2 }}% 늦춥니다.","sanitizedTooltip":"징크스가 전기 충격파를 발사하여 처음 맞힌 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고, 2초 동안 위치를 드러내며 속도를 {{ e2 }}% 늦춥니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JinxW.png","sprite":"spell5.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[8,7,6,5,4],"cooldownBurn":"8/7/6/5/4","effect":[null,[10,60,110,160,210],[30,40,50,60,70],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/60/110/160/210","30/40/50/60/70","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.4]}],"range":[1450,1450,1450,1450,1450],"rangeBurn":"1450","key":"JinxW"},{"name":"와작와작 뻥!","description":"징크스가 와작와작 지뢰를 일렬로 던지면 5초 후에 폭발하며 주변 적들을 불태웁니다. 와작와작 지뢰는 적 챔피언이 밟으면 물어뜯어 제자리에 묶습니다.","sanitizedDescription":"징크스가 와작와작 지뢰를 일렬로 던지면 5초 후에 폭발하며 주변 적들을 불태웁니다. 와작와작 지뢰는 적 챔피언이 밟으면 물어뜯어 제자리에 묶습니다.","tooltip":"징크스가 와작와작 지뢰 3개를 일렬로 던지면 설치된 후, 적 챔피언이 닿으면 폭발하며 1.5초 동안 대상을 제자리에 묶고 진행 중이던 이동 스킬을 모두 중단시킵니다. 주변 적들은 1.5초에 걸쳐 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다. 와작와작 지뢰는 5초간 유지됩니다.","sanitizedTooltip":"징크스가 와작와작 지뢰 3개를 일렬로 던지면 설치된 후, 적 챔피언이 닿으면 폭발하며 1.5초 동안 대상을 제자리에 묶고 진행 중이던 이동 스킬을 모두 중단시킵니다. 주변 적들은 1.5초에 걸쳐 {{ e1 }} (+{{ a1 }})의 마법 피해를 입습니다. 와작와작 지뢰는 5초간 유지됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JinxE.png","sprite":"spell5.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[24,20.5,17,13.5,10],"cooldownBurn":"24/20.5/17/13.5/10","effect":[null,[70,120,170,220,270],[100,140,180,220,260],[30,35,40,45,50],[35,50,65,80,95],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/120/170/220/270","100/140/180/220/260","30/35/40/45/50","35/50/65/80/95","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"JinxE"},{"name":"초강력 초토화 로켓!","description":"징크스가 맵을 가로지르는 강력한 로켓을 발사합니다. 발사 후 비행 거리에 비례해 로켓의 피해량이 증가합니다. 로켓은 적 챔피언과 충돌하면 폭발하며, 해당 챔피언과 주위의 적에게 잃은 체력에 비례하여 피해를 입힙니다. ","sanitizedDescription":"징크스가 맵을 가로지르는 강력한 로켓을 발사합니다. 발사 후 비행 거리에 비례해 로켓의 피해량이 증가합니다. 로켓은 적 챔피언과 충돌하면 폭발하며, 해당 챔피언과 주위의 적에게 잃은 체력에 비례하여 피해를 입힙니다.","tooltip":"징크스가 매 초 피해량이 커지는 로켓을 발사합니다. 이 로켓은 적 챔피언을 맞히면 폭발하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>에서 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 물리 피해 + 대상이 잃은 체력의 {{ e3 }}%의 추가 피해를 입힙니다. 주위의 적들은 80%의 피해를 입습니다.","sanitizedTooltip":"징크스가 매 초 피해량이 커지는 로켓을 발사합니다. 이 로켓은 적 챔피언을 맞히면 폭발하여 {{ e1 }} (+{{ a1 }})에서 {{ e2 }} (+{{ a2 }})의 물리 피해 + 대상이 잃은 체력의 {{ e3 }}%의 추가 피해를 입힙니다. 주위의 적들은 80%의 피해를 입습니다.","leveltip":{"label":["최소 피해량","최대 피해량","잃은 체력 비례 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JinxR.png","sprite":"spell5.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[90,75,60],"cooldownBurn":"90/75/60","effect":[null,[25,35,45],[250,350,450],[25,30,35],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","25/35/45","250/350/450","25/30/35","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.15]},{"key":"a2","link":"bonusattackdamage","coeff":[1.5]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"JinxR"}],"passive":{"name":"신난다!","description":"징크스는 적 챔피언이나 포탑, 억제기에 피해를 입힌 후 3초 안에 처치하거나 파괴할 경우 이동 속도와 공격 속도가 대폭 상승하며 공격 속도 상승분은 중첩됩니다.","sanitizedDescription":"징크스는 적 챔피언이나 포탑, 억제기에 피해를 입힌 후 3초 안에 처치하거나 파괴할 경우 이동 속도와 공격 속도가 대폭 상승하며 공격 속도 상승분은 중첩됩니다.","image":{"full":"Jinx_Passive.png","sprite":"passive1.png","group":"passive","x":288,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Jinx","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3094,"count":1},{"id":3031,"count":1},{"id":3022,"count":1},{"id":3102,"count":1}]}]},{"champion":"Jinx","title":"JinxARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jinx","title":"JinxCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2055,"count":1}]}]},{"champion":"Jinx","title":"JinxFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3094,"count":1},{"id":3046,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3139,"count":1},{"id":3812,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Jinx","title":"JinxKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3022,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jinx","title":"JinxPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3508,"count":1},{"id":3046,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3153,"count":1},{"id":3814,"count":1}]}]},{"champion":"Jinx","title":"JinxSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2055,"count":1}]}]},{"champion":"Jinx","title":"JinxSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]}]},{"champion":"Jinx","title":"JinxSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jinx","title":"JinxTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":2015,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3046,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3812,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Urgot":{"id":6,"key":"Urgot","name":"우르곳","title":"살상 병기","image":{"full":"Urgot.png","sprite":"champion3.png","group":"champion","x":384,"y":96,"w":48,"h":48},"skins":[{"id":6000,"name":"default","num":0},{"id":6001,"name":"대게 우르곳","num":1},{"id":6002,"name":"도살자 우르곳","num":2},{"id":6003,"name":"전투 기계 우르곳","num":3}],"lore":"우르곳은 녹서스 제국에서 맹위를 떨치던 처형인이었으나, 자신이 그토록 숱한 목숨을 거두며 충성했던 조국에게 배신을 당했다. 그는 강철 사슬에 묶여 자운의 깊은 지하에 자리한 광산 감옥인 드레지에서 힘이 갖는 진정한 의미를 배워야 했다. 자운 전체를 혼돈에 빠뜨린 재난을 틈타 드레지를 지배하게 된 우르곳은 이제 범죄가 판을 치는 지하 세계에 짙은 그늘을 드리우고 있다. 한때 자신을 구속했던 바로 그 사슬로 희생자를 옭아매고, 새로운 정착지에서 가치 없는 자들을 숙청하며 고통의 도가니를 만들고 있다.","blurb":"우르곳은 녹서스 제국에서 맹위를 떨치던 처형인이었으나, 자신이 그토록 숱한 목숨을 거두며 충성했던 조국에게 배신을 당했다. 그는 강철 사슬에 묶여 자운의 깊은 지하에 자리한 광산 감옥인 드레지에서 힘이 갖는 진정한 의미를 배워야 했다. 자운 전체를 혼돈에 빠뜨린 재난을 틈타 드레지를 지배하게 된 우르곳은 이제 범죄가 판을 치는 지하 세계에 짙은 그늘을 드리우고 있다. 한때 자신을 구속했던 바로 그 사슬로 희생자를 옭아매고, 새로운 정착지에서 가치...","allytips":["각 다리의 재사용 대기시간에 주의하세요. 우르곳이 가하는 피해량의 상당 부분을 차지하니까요.","부식성 폭약 또는 경멸을 사용해 심판의 원을 사용할 대상을 추적하세요. 여러 다리에서 연달아 불꽃을 뿜어낼 수 있는 좋은 방법입니다.","불사의 공포는 이미 살아남기 힘든 상태인 적에게 사용하세요. 주변 적을 떼어낼 때 특히 좋습니다."],"enemytips":["우르곳은 다리에서 발사되는 불꽃에 크게 의존합니다. 이 불꽃은 다리가 향한 방향으로 공격하면 발사되며 불꽃이 발사된 다리는 재사용 대기 상태에 들어갑니다. 불꽃에 여러 번 맞지 않도록 주의하세요.","우르곳은 심판의 원으로 엄청난 양의 피해를 가하고 흡수할 수 있지만, 사격을 할 때 속도가 느려집니다.","불사의 공포를 맞았다면 스킬 효과가 유지되는 동안 체력이 처형의 기준치 아래로 떨어지지 않도록 주의하세요. (최대 체력의 25%)"],"tags":["Fighter","Marksman"],"partype":"마나","info":{"attack":8,"defense":5,"magic":3,"difficulty":8},"stats":{"armor":39,"armorperlevel":4.25,"attackdamage":63,"attackdamageperlevel":4,"attackrange":350,"attackspeedoffset":0.05,"attackspeedperlevel":3.75,"crit":0,"critperlevel":0,"hp":585,"hpperlevel":88,"hpregen":7.5,"hpregenperlevel":0.7,"movespeed":330,"mp":300,"mpperlevel":45,"mpregen":7.25,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"부식성 폭약","description":"부식성 폭약을 지정한 위치에 발사하여 물리 피해를 입히고 적중당한 적을 둔화시킵니다.","sanitizedDescription":"부식성 폭약을 지정한 위치에 발사하여 물리 피해를 입히고 적중당한 적을 둔화시킵니다.","tooltip":"우르곳이 부식성 폭약을 발사하여 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 적중 당한 적을 {{ e5 }}초 동안 {{ e4 }}% 둔화시킵니다.","sanitizedTooltip":"우르곳이 부식성 폭약을 발사하여 {{ e2 }} (+{{ a1 }})의 물리 피해를 입히고 적중 당한 적을 {{ e5 }}초 동안 {{ e4 }}% 둔화시킵니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"UrgotQ.png","sprite":"spell12.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[0.1,0.1,0.1,0.1,0.1],[25,70,115,160,205],[0.3,0.3,0.3,0.3,0.3],[45,50,55,60,65],[1,1,1,1,1],[0.3,0.3,0.3,0.3,0.3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0.1","25/70/115/160/205","0.3","45/50/55/60/65","1","0.3","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.7]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"UrgotQ"},{"name":"심판의 원","description":"우르곳이 자신에게 보호막을 씌우고 둔화된 상태로 주변 적을 사격합니다. 우르곳은 최근 다른 스킬을 적중시킨 적 챔피언을 우선 공격하며, 화염의 메아리를 발동시킬 수 있습니다.","sanitizedDescription":"우르곳이 자신에게 보호막을 씌우고 둔화된 상태로 주변 적을 사격합니다. 우르곳은 최근 다른 스킬을 적중시킨 적 챔피언을 우선 공격하며, 화염의 메아리를 발동시킬 수 있습니다.","tooltip":"우르곳이 {{ e3 }}초 동안 주변 적을 초당 {{ e8 }}회 사격하여 사격 1회당 {{ e9 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span>의 피해를 입히며, 최근 우르곳의 다른 스킬로 피해를 입은 챔피언을 <span class=\"colorFFEB7F\">추적 대상</span>으로 지정합니다. 우르곳은 또한 자신에게 {{ e1 }} <span class=\"colorCC3300\">(+{{ f2 }})</span>의 피해를 흡수하는 보호막을 씌웁니다.<br /><br />사격 시 우르곳은 이동 속도가 {{ e5 }} 감소하지만 둔화 저항이 {{ e2 }}% 증가하며, 에픽 몬스터를 제외한 몬스터 및 미니언을 통과할 수 있습니다.<br /><br /><rules><span class=\"color8c8c8c\">적중 시 효과는 피해량의 33%로 적용되지만, 치명타는 적용되지 않습니다. 미니언을 대상으로 최소 {{ e0 }}의 피해를 입힙니다.</span></rules>","sanitizedTooltip":"우르곳이 {{ e3 }}초 동안 주변 적을 초당 {{ e8 }}회 사격하여 사격 1회당 {{ e9 }} (+{{ f3 }})의 피해를 입히며, 최근 우르곳의 다른 스킬로 피해를 입은 챔피언을 추적 대상으로 지정합니다. 우르곳은 또한 자신에게 {{ e1 }} (+{{ f2 }})의 피해를 흡수하는 보호막을 씌웁니다. 사격 시 우르곳은 이동 속도가 {{ e5 }} 감소하지만 둔화 저항이 {{ e2 }}% 증가하며, 에픽 몬스터를 제외한 몬스터 및 미니언을 통과할 수 있습니다. 적중 시 효과는 피해량의 33%로 적용되지만, 치명타는 적용되지 않습니다. 미니언을 대상으로 최소 {{ e0 }}의 피해를 입힙니다.","leveltip":{"label":["보호막","공격 1회당 공격력","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e7 }}% -> {{ e7NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"UrgotW.png","sprite":"spell12.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[60,90,120,150,180],[40,40,40,40,40],[4,4,4,4,4],[450,450,450,450,450],[125,125,125,125,125],[0.5,0.5,0.5,0.5,0.5],[20,24,28,32,36],[3,3,3,3,3],[12,12,12,12,12],[50,50,50,50,50]],"effectBurn":["","60/90/120/150/180","40","4","450","125","0.5","20/24/28/32/36","3","12","50"],"range":[490,490,490,490,490],"rangeBurn":"490","key":"UrgotW"},{"name":"경멸","description":"우르곳이 한 방향으로 돌진하며 챔피언이 아닌 대상을 밀어냅니다. 적 챔피언과 충돌하면 우르곳이 멈추고 적 챔피언을 반대 방향으로 던집니다.","sanitizedDescription":"우르곳이 한 방향으로 돌진하며 챔피언이 아닌 대상을 밀어냅니다. 적 챔피언과 충돌하면 우르곳이 멈추고 적 챔피언을 반대 방향으로 던집니다.","tooltip":"우르곳이 전방으로 돌진합니다. 적 챔피언과 충돌하면 우르곳이 멈추고 해당 챔피언을 반대 방향으로 던지며, {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e6 }}초 동안 기절시킵니다.<br /><br />챔피언이 아닌 대상의 경우 피해량은 동일하지만 옆으로 밀쳐냅니다.<br /><br /><rules><span class=\"color8c8c8c\">지형지물은 건너뛸 수 없습니다.</span></rules>","sanitizedTooltip":"우르곳이 전방으로 돌진합니다. 적 챔피언과 충돌하면 우르곳이 멈추고 해당 챔피언을 반대 방향으로 던지며, {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e6 }}초 동안 기절시킵니다. 챔피언이 아닌 대상의 경우 피해량은 동일하지만 옆으로 밀쳐냅니다. 지형지물은 건너뛸 수 없습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"UrgotE.png","sprite":"spell12.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[60,100,140,180,220],[450,450,450,450,450],[1200,1200,1200,1200,1200],[100,100,100,100,100],[1.25,1.25,1.25,1.25,1.25],[0.75,0.75,0.75,0.75,0.75],[1.25,1.25,1.25,1.25,1.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/100/140/180/220","450","1200","100","1.25","0.75","1.25","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.5]}],"range":[475,475,475,475,475],"rangeBurn":"475","key":"UrgotE"},{"name":"불사의 공포","description":"우르곳이 마공학 송곳 섬광탄을 발사하여 섬광탄이 처음 적중한 적 챔피언에게 꽂힙니다. 해당 챔피언의 체력이 일정 수준 이하로 떨어지면 우르곳이 그를 약자라고 판단하여 처형할 수 있습니다.","sanitizedDescription":"우르곳이 마공학 송곳 섬광탄을 발사하여 섬광탄이 처음 적중한 적 챔피언에게 꽂힙니다. 해당 챔피언의 체력이 일정 수준 이하로 떨어지면 우르곳이 그를 약자라고 판단하여 처형할 수 있습니다.","tooltip":"우르곳이 마공학 송곳 섬광탄을 발사하여 섬광탄이 처음 적중한 적 챔피언에게 꽂힙니다. 섬광탄은 적중 당한 적 챔피언에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히며, 대상이 잃은 체력에 비례하여 이동 속도를 {{ e4 }}초 동안 최대 {{ e3 }}% 감소시킵니다.<br /><br />대상의 체력이 {{ e2 }}% 이하로 떨어지면 우르곳이 스킬을 다시 사용하여 사슬로 대상을 제압하고 끌어당겨 처형할 수 있습니다. 스킬 효과가 끝날 때 대상의 체력이 {{ e2 }}% 이하일 경우 자동으로 처형이 진행됩니다.<br /><br />우르곳이 적을 처형할 때 주변의 모든 적은 {{ e0 }}초 동안 공포에 빠져 달아납니다.","sanitizedTooltip":"우르곳이 마공학 송곳 섬광탄을 발사하여 섬광탄이 처음 적중한 적 챔피언에게 꽂힙니다. 섬광탄은 적중 당한 적 챔피언에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히며, 대상이 잃은 체력에 비례하여 이동 속도를 {{ e4 }}초 동안 최대 {{ e3 }}% 감소시킵니다. 대상의 체력이 {{ e2 }}% 이하로 떨어지면 우르곳이 스킬을 다시 사용하여 사슬로 대상을 제압하고 끌어당겨 처형할 수 있습니다. 스킬 효과가 끝날 때 대상의 체력이 {{ e2 }}% 이하일 경우 자동으로 처형이 진행됩니다. 우르곳이 적을 처형할 때 주변의 모든 적은 {{ e0 }}초 동안 공포에 빠져 달아납니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"UrgotR.png","sprite":"spell12.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,95,70],"cooldownBurn":"120/95/70","effect":[null,[50,175,300],[25,25,25],[75,75,75],[4,4,4],[1,1,1],[1,1,1],[0.5,0.5,0.5],[25000,25000,25000],[600,600,600],[1.5,1.5,1.5]],"effectBurn":["","50/175/300","25","75","4","1","1","0.5","25000","600","1.5"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.5]}],"range":[1600,1600,1600],"rangeBurn":"1600","key":"UrgotR"}],"passive":{"name":"화염의 메아리","description":"우르곳은 기본 공격과 심판의 원으로 다리에서 불꽃을 발사해 물리 피해를 입힙니다.","sanitizedDescription":"우르곳은 기본 공격과 심판의 원으로 다리에서 불꽃을 발사해 물리 피해를 입힙니다.","image":{"full":"Urgot_Passive.png","sprite":"passive3.png","group":"passive","x":384,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Urgot","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3067,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3022,"count":1},{"id":3075,"count":1},{"id":3083,"count":1}]}]},{"champion":"Urgot","title":"UrgotARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3044,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3071,"count":1},{"id":3022,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3085,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3083,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Urgot","title":"UrgotCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3047,"count":1},{"id":3022,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2140,"count":1},{"id":3364,"count":1}]}]},{"champion":"Urgot","title":"UrgotFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":2},{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3047,"count":1},{"id":3022,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":3364,"count":1},{"id":2003,"count":1},{"id":2031,"count":1},{"id":2140,"count":1}]}]},{"champion":"Urgot","title":"UrgotSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3047,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]}]},{"champion":"Urgot","title":"UrgotSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3047,"count":1},{"id":3022,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2140,"count":1},{"id":3364,"count":1}]}]},{"champion":"Urgot","title":"UrgotTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3047,"count":1},{"id":3022,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Fiddlesticks":{"id":9,"key":"Fiddlesticks","name":"피들스틱","title":"종말의 전조","image":{"full":"Fiddlesticks.png","sprite":"champion0.png","group":"champion","x":336,"y":96,"w":48,"h":48},"skins":[{"id":9000,"name":"default","num":0},{"id":9001,"name":"유령 피들스틱","num":1},{"id":9002,"name":"유니언 잭 피들스틱","num":2},{"id":9003,"name":"노상강도 피들스틱","num":3},{"id":9004,"name":"호박머리 피들스틱","num":4},{"id":9005,"name":"해적 피들스틱","num":5},{"id":9006,"name":"깜짝 파티 피들스틱","num":6},{"id":9007,"name":"어둠 막대사탕 피들스틱","num":7},{"id":9008,"name":"부활한 피들스틱","num":8}],"lore":"피들스틱은 섬뜩한 모습으로 살아 움직이는 허수아비로, 방심하고 있는 사이 어둠 속에서 조용히 다가와 날카로운 낫을 휘두른다. 마을에 기근을 불러왔다는 누명을 홀로 외로이 뒤집어 쓴 사나이였던 피들스틱은 황폐한 들판에 손발이 묶인 채 버려져 굶어 죽었다. 흉포하게 자신의 시체를 뜯어먹은 까마귀 덕분에 되살아난 피들스틱은 무시무시한 까마귀 떼와 함께 하늘을 뒤덮는 깃털과 피에 물든 부리로 상대를 절명시키는 마지막 순간까지 공포에 떠는 희생자를 바라보며 희열을 느낀다.","blurb":"피들스틱은 섬뜩한 모습으로 살아 움직이는 허수아비로, 방심하고 있는 사이 어둠 속에서 조용히 다가와 날카로운 낫을 휘두른다. 마을에 기근을 불러왔다는 누명을 홀로 외로이 뒤집어 쓴 사나이였던 피들스틱은 황폐한 들판에 손발이 묶인 채 버려져 굶어 죽었다. 흉포하게 자신의 시체를 뜯어먹은 까마귀 덕분에 되살아난 피들스틱은 무시무시한 까마귀 떼와 함께 하늘을 뒤덮는 깃털과 피에 물든 부리로 상대를 절명시키는 마지막 순간까지 공포에 떠는 희생자를 바라보며...","allytips":["- 어둠의 바람을 사용하여 다수의 미니언을 처치하며 흡수로 체력을 회복할 수 있습니다.","- 까마귀 폭풍이나 흡수를 사용하기 전에 공포를 사용하여 피해를 최대화 하십시오.","- 피들스틱은 주문력 아이템만을 구매할 경우 체력이 매우 낮은 챔피언이 됩니다. 룬, 특성, 아이템을 활용하여 공격과 방어 사이의 균형을 찾아보십시오."],"enemytips":["- 피들스틱이 어둠의 바람을 사용할 때 아군과 멀리 떨어지십시오. 어둠의 바람은 플레이어와 아군들 사이를 튕겨 다닐 때마다 피해량이 커집니다.","- 피들스틱이 까마귀 폭풍을 사용했다면 기절 또는 둔화 효과가 있는 스킬을 시전하고 재빨리 사거리 밖으로 벗어나십시오.","- 피들스틱이 보이지 않는다면 수풀에서 까마귀 폭풍으로 기습 공격을 노리고 있을지도 모르니 조심하십시오."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":2,"defense":3,"magic":9,"difficulty":9},"stats":{"armor":30,"armorperlevel":3.5,"attackdamage":48.36,"attackdamageperlevel":2.625,"attackrange":480,"attackspeedoffset":0,"attackspeedperlevel":2.11,"crit":0,"critperlevel":0,"hp":524.4,"hpperlevel":80,"hpregen":5.608,"hpregenperlevel":0.6,"movespeed":335,"mp":400.12,"mpperlevel":56,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"공포","description":"적을 공포에 질리게 하여 일정 시간 도망치게 합니다.","sanitizedDescription":"적을 공포에 질리게 하여 일정 시간 도망치게 합니다.","tooltip":"대상을 겁에 질리게 해 {{ e1 }}초 동안 피들스틱으로부터 도망치게 합니다.","sanitizedTooltip":"대상을 겁에 질리게 해 {{ e1 }}초 동안 피들스틱으로부터 도망치게 합니다.","leveltip":{"label":["지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Terrify.png","sprite":"spell3.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,65,65,65,65],"costBurn":"65","cooldown":[15,14,13,12,11],"cooldownBurn":"15/14/13/12/11","effect":[null,[1.25,1.5,1.75,2,2.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.25/1.5/1.75/2/2.25","0","0","0","0","0","0","0","0","0"],"range":[575,575,575,575,575],"rangeBurn":"575","key":"Terrify"},{"name":"흡수","description":"피들스틱이 적의 생명을 흡수하여 지속적으로 피해를 입히고 자신을 치료합니다.","sanitizedDescription":"피들스틱이 적의 생명을 흡수하여 지속적으로 피해를 입히고 자신을 치료합니다.","tooltip":"피들스틱이 대상 유닛을 엮은 뒤 정신을 집중해 <span class=\"colorFFEB7F\">흡수</span>하며 매 초마다 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주고 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. 피들스틱은 흡수 스킬로 적에게 준 피해의 {{ e3 }}%만큼 체력을 회복합니다.<br /><br /><span class=\"colorFFEB7F\">흡수</span>는 최대 {{ e4 }}초 동안 지속되며 총 {{ f1 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 피해를 입힙니다.<br /><br /><span class=\"size16 color8C8C8C\"><span class=\"size16 colorFFEB7F\">흡수</span><span class=\"size16 color8C8C8C\">중 대상이 죽으면 남은 시간만큼 재사용 대기시간을 돌려받습니다.</span>","sanitizedTooltip":"피들스틱이 대상 유닛을 엮은 뒤 정신을 집중해 흡수하며 매 초마다 {{ e1 }} (+{{ a1 }})의 마법 피해를 주고 절대 시야를 얻습니다. 피들스틱은 흡수 스킬로 적에게 준 피해의 {{ e3 }}%만큼 체력을 회복합니다. 흡수는 최대 {{ e4 }}초 동안 지속되며 총 {{ f1 }} (+{{ f2 }})의 피해를 입힙니다. 흡수중 대상이 죽으면 남은 시간만큼 재사용 대기시간을 돌려받습니다.","leveltip":{"label":["초당 피해량","재사용 대기시간","마나 소모량","흡수율"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"Drain.png","sprite":"spell3.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,90,100,110,120],"costBurn":"80/90/100/110/120","cooldown":[4,3.75,3.5,3.25,3],"cooldownBurn":"4/3.75/3.5/3.25/3","effect":[null,[80,105,130,155,180],[4,4,4,4,4],[60,65,70,75,80],[5,5,5,5,5],[650,650,650,650,650],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/105/130/155/180","4","60/65/70/75/80","5","650","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]}],"range":[575,575,575,575,575],"rangeBurn":"575","key":"Drain"},{"name":"어둠의 바람","description":"한 줄기의 바람이 적 유닛을 타격하고 튕겨나가 주변의 다른 적을 공격하며 피해를 입히고 침묵 효과를 줍니다.","sanitizedDescription":"한 줄기의 바람이 적 유닛을 타격하고 튕겨나가 주변의 다른 적을 공격하며 피해를 입히고 침묵 효과를 줍니다.","tooltip":"대상 적에게 까마귀를 날려 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 새로운 대상에게 튕겨냅니다. 적중당한 유닛은 처음 한 번만 {{ e2 }}초 동안 침묵당합니다.<br /><br />어둠의 바람은 최대 {{ e3 }}번까지 튕기며, 아직 맞히지 않은 적이나 <span class=\"colorFFEB7F\">흡수</span>당한 적을 우선적으로 공격합니다. 미니언과 몬스터에게는 {{ e4 }}%의 피해가 적용됩니다.","sanitizedTooltip":"대상 적에게 까마귀를 날려 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 새로운 대상에게 튕겨냅니다. 적중당한 유닛은 처음 한 번만 {{ e2 }}초 동안 침묵당합니다. 어둠의 바람은 최대 {{ e3 }}번까지 튕기며, 아직 맞히지 않은 적이나 흡수당한 적을 우선적으로 공격합니다. 미니언과 몬스터에게는 {{ e4 }}%의 피해가 적용됩니다.","leveltip":{"label":["피해량","마나 소모","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"FiddlesticksDarkWind.png","sprite":"spell3.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[12,11.5,11,10.5,10],"cooldownBurn":"12/11.5/11/10.5/10","effect":[null,[65,85,105,125,145],[1.25,1.25,1.25,1.25,1.25],[6,6,6,6,6],[150,150,150,150,150],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/85/105/125/145","1.25","6","150","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"FiddlesticksDarkWind"},{"name":"까마귀 폭풍","description":"피들스틱 주변을 광폭한 굶주린 새떼가 헤집고 다니며 매 초마다 해당 지역에 있는 모든 적 유닛에게 피해를 입힙니다.","sanitizedDescription":"피들스틱 주변을 광폭한 굶주린 새떼가 헤집고 다니며 매 초마다 해당 지역에 있는 모든 적 유닛에게 피해를 입힙니다.","tooltip":"피들스틱이 {{ e3 }}초 동안 정신을 집중해 대상 지역으로 순간 이동한 뒤 주위에 살인 까마귀 떼를 불러내어 매 초마다 해당 지역에 있는 모든 적 유닛에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />살인 까마귀 떼는 {{ e2 }}초 동안 유지되며 최대 총 {{ f1 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"피들스틱이 {{ e3 }}초 동안 정신을 집중해 대상 지역으로 순간 이동한 뒤 주위에 살인 까마귀 떼를 불러내어 매 초마다 해당 지역에 있는 모든 적 유닛에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 살인 까마귀 떼는 {{ e2 }}초 동안 유지되며 최대 총 {{ f1 }} (+{{ f2 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Crowstorm.png","sprite":"spell3.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[150,140,130],"cooldownBurn":"150/140/130","effect":[null,[125,225,325],[5,5,5],[1.5,1.5,1.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","125/225/325","5","1.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]}],"range":[800,800,800],"rangeBurn":"800","key":"Crowstorm"}],"passive":{"name":"두려움","description":"1.5초 동안 정신을 집중하거나 가만히 서 있으면 피들스틱에게 두려움의 기운이 모입니다. 단, 이동을 불가능하게 하는 군중 제어기에 적중당하면 시간이 초기화됩니다.<br><br>두려움으로 인한 피들스틱의 이동 속도 증가 효과는 이동 시작 후 1.5초 동안만 유지됩니다.","sanitizedDescription":"1.5초 동안 정신을 집중하거나 가만히 서 있으면 피들스틱에게 두려움의 기운이 모입니다. 단, 이동을 불가능하게 하는 군중 제어기에 적중당하면 시간이 초기화됩니다. 두려움으로 인한 피들스틱의 이동 속도 증가 효과는 이동 시작 후 1.5초 동안만 유지됩니다.","image":{"full":"Fiddlesticks_Passive.png","sprite":"passive0.png","group":"passive","x":336,"y":96,"w":48,"h":48}},"recommended":[{"champion":"FiddleSticks","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3165,"count":1},{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]}]},{"champion":"FiddleSticks","title":"FiddleARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3020,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Fiddlesticks","title":"FiddlesticksCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3191,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3001,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3029,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"FiddleSticks","title":"FiddleFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3001,"count":1},{"id":3152,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Fiddlesticks","title":"FiddlesticksKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3020,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Fiddlesticks","title":"FiddlesticksSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3001,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3029,"count":1},{"id":3089,"count":1}]}]},{"champion":"FiddleSticks","title":"FiddleSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3191,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3027,"count":1},{"id":3089,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3089,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2139,"count":1}]}]},{"champion":"FiddleSticks","title":"FiddleTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3116,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3165,"count":1},{"id":3170,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1402,"count":1},{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3152,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3170,"count":1},{"id":3001,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Galio":{"id":3,"key":"Galio","name":"갈리오","title":"위대한 석상","image":{"full":"Galio.png","sprite":"champion1.png","group":"champion","x":0,"y":0,"w":48,"h":48},"skins":[{"id":3000,"name":"default","num":0},{"id":3001,"name":"마법 강화 갈리오","num":1},{"id":3002,"name":"마법공학 갈리오","num":2},{"id":3003,"name":"특공대 갈리오","num":3},{"id":3004,"name":"지옥 수문장 갈리오","num":4},{"id":3005,"name":"연미복 갈리오","num":5}],"lore":"아스라한 빛의 도시 데마시아의 성문 밖, 거대한 석상 갈리오가 경계의 눈을 늦추지 않고 서 있다. 마법사의 공격으로부터 데마시아를 수호하기 위해 만들어진 갈리오는 강력한 마법의 힘이 그를 깨울 때까지 수십 년, 때로는 수백 년 동안 한자리에 미동도 없이 서있다. 일단 깨어나면 전투의 아찔한 스릴과 데마시아인들을 구한다는 자부심을 음미하며 1분 1초도 허투루 쓰는 법이 없다. 그러나 그가 쟁취한 승리의 향기는 결코 달콤하지만은 않다. 아이러니하게도 그가 물리친 마법의 힘이 그에게 생명을 준 원천이기에 전쟁을 승리로 장식한 후에는 다시 깊은 잠으로 빠져든다.","blurb":"아스라한 빛의 도시 데마시아의 성문 밖, 거대한 석상 갈리오가 경계의 눈을 늦추지 않고 서 있다. 마법사의 공격으로부터 데마시아를 수호하기 위해 만들어진 갈리오는 강력한 마법의 힘이 그를 깨울 때까지 수십 년, 때로는 수백 년 동안 한자리에 미동도 없이 서있다. 일단 깨어나면 전투의 아찔한 스릴과 데마시아인들을 구한다는 자부심을 음미하며 1분 1초도 허투루 쓰는 법이 없다. 그러나 그가 쟁취한 승리의 향기는 결코 달콤하지만은 않다. 아이러니하게도...","allytips":["- 군중 제어 스킬에 영향을 받고 있는 상태라도 듀란드의 방패를 재사용할 수 있습니다.","- 영웅출현은 미니맵의 아군 아이콘에도 사용할 수 있습니다.","- 정의의 주먹 사용 시 잠깐 뒤로 물러나는 것을 이용해 적의 스킬을 피할 수도 있습니다."],"enemytips":["- 갈리오는 듀란드의 방패로 방어 태세에 돌입하면 움직임이 느려집니다.","- 갈리오가 영웅출현 사용 시, 도약하기 전까지 스킬을 방해할 수 있습니다.","- 갈리오는 정의의 주먹으로 지형을 넘을 수 없습니다."],"tags":["Tank","Mage"],"partype":"마나","info":{"attack":1,"defense":10,"magic":6,"difficulty":5},"stats":{"armor":24,"armorperlevel":3.5,"attackdamage":59,"attackdamageperlevel":3.5,"attackrange":150,"attackspeedoffset":0,"attackspeedperlevel":1.5,"crit":0,"critperlevel":0,"hp":562,"hpperlevel":112,"hpregen":8,"hpregenperlevel":0.8,"movespeed":335,"mp":400,"mpperlevel":40,"mpregen":7,"mpregenperlevel":0.7,"spellblock":32,"spellblockperlevel":1.25},"spells":[{"name":"전장의 돌풍","description":"갈리오가 두 개의 돌풍을 발사해 거대한 소용돌이를 만듭니다.","sanitizedDescription":"갈리오가 두 개의 돌풍을 발사해 거대한 소용돌이를 만듭니다.","tooltip":"갈리오가 두 개의 돌풍을 발사해 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />두 돌풍이 합쳐지면 거대한 소용돌이가 일어나 {{ e3 }}초 동안 {{ e5 }} <span class=\"color99FF99\">(+{{ charabilitypower2.0*3 }})</span> + 적 최대 체력의 <span class=\"color99FF99\">(+{{ f9 }})</span>% (몬스터 상대로는 최대 {{ e4 }})에 해당하는 마법 피해를 입힙니다.","sanitizedTooltip":"갈리오가 두 개의 돌풍을 발사해 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 두 돌풍이 합쳐지면 거대한 소용돌이가 일어나 {{ e3 }}초 동안 {{ e5 }} (+{{ charabilitypower2.0*3 }}) + 적 최대 체력의 (+{{ f9 }})% (몬스터 상대로는 최대 {{ e4 }})에 해당하는 마법 피해를 입힙니다.","leveltip":{"label":["돌풍 피해량","소용돌이 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"GalioQ.png","sprite":"spell3.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[50,80,110,140,170],[1,1,1,1,1],[1.5,1.5,1.5,1.5,1.5],[150,150,150,150,150],[30,40.002,50.001,60,70.002],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/80/110/140/170","1","1.5","150","30/40.002/50.001/60/70.002","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[825,825,825,825,825],"rangeBurn":"825","key":"GalioQ"},{"name":"듀란드의 방패","description":"갈리오가 방어 태세를 갖추며 움직임이 느려집니다. 스킬을 다시 사용하면 근처의 적을 모두 도발하고 피해를 줍니다.","sanitizedDescription":"갈리오가 방어 태세를 갖추며 움직임이 느려집니다. 스킬을 다시 사용하면 근처의 적을 모두 도발하고 피해를 줍니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> {{ e6 }}초 동안 피해를 입지 않으면 <span class=\"colorFF0000\">{{ f3 }}</span>의 마법 피해를 흡수하는 보호막을 얻습니다.<br /><br /><span class=\"colorFF9900\">첫 번째 사용 시:</span> 갈리오가 방어 태세를 갖추며 {{ e1 }} <span class=\"colorFF00FF\">(+{{ f2 }})</span><span class=\"color99FF99\">(+{{ f4 }})</span>%의 마법 피해량 감소 효과를 얻습니다. 해당 효과의 {{ f5 }}%만큼 물리 피해량도 감소합니다. 방어 태세 중에는 {{ e3 }}% 느려집니다.<br /><br /><span class=\"colorFF9900\">두 번째 사용 시:</span> {{ e4 }} ~ {{ e7 }}초 동안 주변의 적 챔피언들을 도발하고 {{ f8 }} <span class=\"color99FF99\">(+{{ f9 }})</span> ~ {{ f10 }} <span class=\"color99FF99\">(+{{ f11 }})</span>의 피해를 입히며, 피해량 감소 효과가 {{ e8 }}초 재적용됩니다. 도발 범위 및 지속시간과 피해량은 방어 태세를 유지한 시간에 비례합니다.<br /><br /><span class=\"colorDDDD77\">군중 제어 스킬에 적중당해도 계속 방어 태세를 유지할 수 있습니다.</span>","sanitizedTooltip":"기본 지속 효과: {{ e6 }}초 동안 피해를 입지 않으면 {{ f3 }}의 마법 피해를 흡수하는 보호막을 얻습니다. 첫 번째 사용 시: 갈리오가 방어 태세를 갖추며 {{ e1 }} (+{{ f2 }})(+{{ f4 }})%의 마법 피해량 감소 효과를 얻습니다. 해당 효과의 {{ f5 }}%만큼 물리 피해량도 감소합니다. 방어 태세 중에는 {{ e3 }}% 느려집니다. 두 번째 사용 시: {{ e4 }} ~ {{ e7 }}초 동안 주변의 적 챔피언들을 도발하고 {{ f8 }} (+{{ f9 }}) ~ {{ f10 }} (+{{ f11 }})의 피해를 입히며, 피해량 감소 효과가 {{ e8 }}초 재적용됩니다. 도발 범위 및 지속시간과 피해량은 방어 태세를 유지한 시간에 비례합니다. 군중 제어 스킬에 적중당해도 계속 방어 태세를 유지할 수 있습니다.","leveltip":{"label":["보호막 흡수량 %","마법 피해량 감소","물리 피해량 감소","재사용 대기시간","최대 피해량"],"effect":["{{ e5 }}% -> {{ e5NL }}%","{{ e1 }}% -> {{ e1NL }}%","{{ f6 }}% -> {{ f7 }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ f10 }} -> {{ f12 }}"]},"image":{"full":"GalioW.png","sprite":"spell3.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[20,25,30,35,40],[2,2,2,2,2],[30,30,30,30,30],[0.5,0.5,0.5,0.5,0.5],[8,11,14,17,20],[12,12,12,12,12],[1.5,1.5,1.5,1.5,1.5],[2,2,2,2,2],[1.25,1.25,1.25,1.25,1.25],[5,5,5,5,5]],"effectBurn":["","20/25/30/35/40","2","30","0.5","8/11/14/17/20","12","1.5","2","1.25","5"],"range":[275,275,275,275,275],"rangeBurn":"275","key":"GalioW"},{"name":"정의의 주먹","description":"갈리오가 잠시 뒤로 물러났다가 돌진하며 처음으로 충돌한 적 챔피언을 공중으로 띄웁니다.","sanitizedDescription":"갈리오가 잠시 뒤로 물러났다가 돌진하며 처음으로 충돌한 적 챔피언을 공중으로 띄웁니다.","tooltip":"갈리오가 전방으로 돌진해 적들에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 공중으로 띄웁니다. 챔피언이나 지형에 충돌하면 돌진을 멈춥니다.","sanitizedTooltip":"갈리오가 전방으로 돌진해 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 공중으로 띄웁니다. 챔피언이나 지형에 충돌하면 돌진을 멈춥니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GalioE.png","sprite":"spell3.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[100,130,160,190,220],[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","100/130/160/190/220","0.75","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"GalioE"},{"name":"영웅출현","description":"갈리오가 아군이 입는 피해량을 감소시켜 줍니다. 잠시 후 아군이 원래 있던 위치로 돌진해 근처의 적을 공중으로 띄웁니다.","sanitizedDescription":"갈리오가 아군이 입는 피해량을 감소시켜 줍니다. 잠시 후 아군이 원래 있던 위치로 돌진해 근처의 적을 공중으로 띄웁니다.","tooltip":"갈리오가 아군 챔피언의 현재 위치를 착지 지점으로 정합니다. 갈리오가 착지하기 전까지 해당 아군에게는 {{ e5 }} <span class=\"colorFF00FF\">(+{{ f2 }})</span>%의 피해량 감소 효과가 적용됩니다.<br /><br />착지 시 해당 지역에 있던 적은 모두 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 {{ e3 }}초 동안 공중에 떠오릅니다. (가운데에 있는 적은 {{ e2 }}초 동안 떠오릅니다.)","sanitizedTooltip":"갈리오가 아군 챔피언의 현재 위치를 착지 지점으로 정합니다. 갈리오가 착지하기 전까지 해당 아군에게는 {{ e5 }} (+{{ f2 }})%의 피해량 감소 효과가 적용됩니다. 착지 시 해당 지역에 있던 적은 모두 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 {{ e3 }}초 동안 공중에 떠오릅니다. (가운데에 있는 적은 {{ e2 }}초 동안 떠오릅니다.)","leveltip":{"label":["피해량","아군 피해량 감소","사거리","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ e8 }} -> {{ e8NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GalioR.png","sprite":"spell3.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[180,150,120],"cooldownBurn":"180/150/120","effect":[null,[150,250,350],[1.25,1.25,1.25],[0.75,0.75,0.75],[2.5,2.5,2.5],[20,25,30],[0,0,0],[0,0,0],[4000,4750,5500],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","1.25","0.75","2.5","20/25/30","0","0","4000/4750/5500","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[4000,4750,5500],"rangeBurn":"4000/4750/5500","key":"GalioR"}],"passive":{"name":"석상의 강타","description":"<mainText>몇 초마다 갈리오의 다음 기본 공격이 해당 지역에 추가 마법 피해를 입힙니다. 갈리오가 챔피언에게 스킬을 적중시키면 석상의 강타 재사용 대기시간이 감소합니다.</mainText>","sanitizedDescription":"몇 초마다 갈리오의 다음 기본 공격이 해당 지역에 추가 마법 피해를 입힙니다. 갈리오가 챔피언에게 스킬을 적중시키면 석상의 강타 재사용 대기시간이 감소합니다.","image":{"full":"Galio_Passive.png","sprite":"passive1.png","group":"passive","x":0,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Galio","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3001,"count":1},{"id":3065,"count":1},{"id":3102,"count":1},{"id":3025,"count":1}]}]},{"champion":"Galio","title":"GalioARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3111,"count":1},{"id":3001,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Galio","title":"GalioCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1},{"id":1057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3029,"count":1},{"id":3001,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3025,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3102,"count":1},{"id":3135,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Galio","title":"GalioFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3028,"count":1},{"id":1001,"count":1},{"id":1057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3174,"count":1},{"id":3001,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Galio","title":"GalioKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3111,"count":1},{"id":3001,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Galio","title":"GalioSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3029,"count":1},{"id":3001,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3025,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3102,"count":1},{"id":3135,"count":1},{"id":3026,"count":1}]}]},{"champion":"Galio","title":"GalioSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3027,"count":1},{"id":3102,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3157,"count":1},{"id":3110,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3135,"count":1},{"id":3194,"count":1},{"id":3075,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Galio","title":"GalioTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1},{"id":1057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3027,"count":1},{"id":3001,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3025,"count":1},{"id":3065,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3090,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Pantheon":{"id":80,"key":"Pantheon","name":"판테온","title":"전쟁의 장인","image":{"full":"Pantheon.png","sprite":"champion2.png","group":"champion","x":144,"y":96,"w":48,"h":48},"skins":[{"id":80000,"name":"default","num":0},{"id":80001,"name":"미르미돈 판테온","num":1},{"id":80002,"name":"무자비한 판테온","num":2},{"id":80003,"name":"페르세우스 판테온","num":3},{"id":80004,"name":"강철의 판테온","num":4},{"id":80005,"name":"언월도 판테온","num":5},{"id":80006,"name":"용 사냥꾼 판테온","num":6},{"id":80007,"name":"슬레이어 판테온","num":7},{"id":80008,"name":"빵테온","num":8}],"lore":"천하제일의 전사 판테온은 거의 누구도 막을 수 없는 전투의 화신이다. 타곤 산 자락에서 살아가는 호전적인 부족 라코어 출신인 그는, 위험천만한 타곤 산봉우리에 오름으로써 전쟁의 성위에게 선택받아 그 현신이 되었다. 언제나 쉬지 않고 타곤 산의 적을 쫓는 판테온의 강함은 인간을 아득히 초월해, 가는 곳마다 남는 것은 시체뿐이다.","blurb":"천하제일의 전사 판테온은 거의 누구도 막을 수 없는 전투의 화신이다. 타곤 산 자락에서 살아가는 호전적인 부족 라코어 출신인 그는, 위험천만한 타곤 산봉우리에 오름으로써 전쟁의 성위에게 선택받아 그 현신이 되었다. 언제나 쉬지 않고 타곤 산의 적을 쫓는 판테온의 강함은 인간을 아득히 초월해, 가는 곳마다 남는 것은 시체뿐이다.","allytips":["- 제오니아의 방패 스킬 사용 직후 심장추적자 스킬을 쓰면 적을 순식간에 처치할 수 있습니다.","- 전투에서 공격 속도를 올려주는 아이템을 들고 투창 스킬을 자주 사용하면 이지스 방어술의 효과를 톡톡히 볼 수 있습니다.","- 대강하를 적절하게 사용하면 아군에게 유리한 방향으로 전황을 바꿀 수 있습니다."],"enemytips":["- 수풀 속으로 숨으면 판테온이 대강하 스킬을 쓰기 어렵게 만들 수 있습니다.","- 판테온이 기절 또는 속박 스킬을 쓸 수 있는 팀원과 함께 있는지 꼭 살펴보십시오. (예: 모르가나, 사이온) 심장추적자를 피하지 못한다면 치명적인 피해를 입을 수 있기 때문입니다.","- 판테온의 방패 방어술은 챔피언 한 명의 기본 공격이나 포탑 공격을 막습니다. 그 후 기본 공격이나 스킬 사용을 통해 방패 방어술이 활성화되기까지 공격에 취약해지는 점을 활용하세요."],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":9,"defense":4,"magic":3,"difficulty":4},"stats":{"armor":37,"armorperlevel":3.9,"attackdamage":64,"attackdamageperlevel":2.9,"attackrange":150,"attackspeedoffset":-0.03,"attackspeedperlevel":2.95,"crit":0,"critperlevel":0,"hp":579.16,"hpperlevel":87,"hpregen":7.842,"hpregenperlevel":0.65,"movespeed":355,"mp":317.12,"mpperlevel":31,"mpregen":7.356,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"투창","description":"판테온이 적에게 창을 던져 피해를 입힙니다.","sanitizedDescription":"판테온이 적에게 창을 던져 피해를 입힙니다.","tooltip":"판테온이 적에게 창을 던져 {{ e2 }} <scaleAD>(+{{ f1 }})</scaleAD>의 물리 피해를 입힙니다. ","sanitizedTooltip":"판테온이 적에게 창을 던져 {{ e2 }} (+{{ f1 }})의 물리 피해를 입힙니다.","leveltip":{"label":["기본 피해량"],"effect":["{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"PantheonQ.png","sprite":"spell8.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[100,115,130,145,160],[75,110,155,195,235],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","100/115/130/145/160","75/110/155/195/235","0","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1.4]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"PantheonQ"},{"name":"제오니아의 방패","description":"판테온이 적을 방패로 때리며 기절시킵니다. 공격이 끝나면 판테온은 바로 적의 공격을 막아낼 준비를 합니다.","sanitizedDescription":"판테온이 적을 방패로 때리며 기절시킵니다. 공격이 끝나면 판테온은 바로 적의 공격을 막아낼 준비를 합니다.","tooltip":"판테온이 적 대상을 덮쳐 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다. 판테온은 즉시 방패 방어술 효과를 새로 얻습니다.","sanitizedTooltip":"판테온이 적 대상을 덮쳐 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다. 판테온은 즉시 방패 방어술 효과를 새로 얻습니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"PantheonW.png","sprite":"spell8.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,55,55,55,55],"costBurn":"55","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[50,75,100,125,150],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/75/100/125/150","1","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"PantheonW"},{"name":"심장추적자","description":"판테온이 정신을 집중했다가 정면 지역에 빠르게 3번의 공격을 가해 모든 적에게 피해를 입힙니다. 또한 적의 약점을 보다 정확히 파악하여 15% 이하의 체력을 가진 적에게 항상 치명타 공격을 할 수 있게 됩니다.","sanitizedDescription":"판테온이 정신을 집중했다가 정면 지역에 빠르게 3번의 공격을 가해 모든 적에게 피해를 입힙니다. 또한 적의 약점을 보다 정확히 파악하여 15% 이하의 체력을 가진 적에게 항상 치명타 공격을 할 수 있게 됩니다.","tooltip":"<spellPassive>기본 지속 효과: </spellPassive>판테온의 기본 공격과 투창이 체력이 {{ e3 }}% 이하인 대상에게 100% 확률로 치명타가 됩니다.<br /><br /><spellActive>사용 시: </spellActive>판테온이 정신을 집중하여 정면에 빠르게 {{ e4 }}번의 공격을 퍼부으며 총 {{ e1 }} <scaleAD>(+{{ a1 }})</scaleAD>의 물리 피해를 입힙니다. (미니언과 몬스터에게는 {{ e2 }}%의 피해)<br /><br />공격당 피해량: <totalValue>{{ f1 }}</totalValue>","sanitizedTooltip":"기본 지속 효과: 판테온의 기본 공격과 투창이 체력이 {{ e3 }}% 이하인 대상에게 100% 확률로 치명타가 됩니다. 사용 시: 판테온이 정신을 집중하여 정면에 빠르게 {{ e4 }}번의 공격을 퍼부으며 총 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. (미니언과 몬스터에게는 {{ e2 }}%의 피해) 공격당 피해량: {{ f1 }}","leveltip":{"label":["기본 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"PantheonE.png","sprite":"spell8.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[100,150,200,250,300],[60,60,60,60,60],[15,15,15,15,15],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","100/150/200/250/300","60","15","3","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[3]},{"key":"f1","link":"bonusattackdamage","coeff":[0.6]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"PantheonE"},{"name":"대강하","description":"판테온이 태세를 갖추고 공중으로 뛰어올랐다가 목표를 덮치며 해당 지역에 있는 모든 적 유닛을 공격합니다. 착지 지점에 가까운 적일수록 더 큰 피해를 받습니다.","sanitizedDescription":"판테온이 태세를 갖추고 공중으로 뛰어올랐다가 목표를 덮치며 해당 지역에 있는 모든 적 유닛을 공격합니다. 착지 지점에 가까운 적일수록 더 큰 피해를 받습니다.","tooltip":"판테온이 힘을 모아 높이 도약했다가 몇 초 뒤 지정한 위치로 떨어집니다. 중앙에 있는 적에게 최대 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 (가장 바깥 쪽은 {{ e6 }}%의 피해), 1초 동안 적의 이동 속도를 {{ e4 }}% 늦춥니다.<br /><br />판테온이 정신 집중을 멈추면 대강하의 재사용 대기시간이 {{ e5 }}초가 됩니다.","sanitizedTooltip":"판테온이 힘을 모아 높이 도약했다가 몇 초 뒤 지정한 위치로 떨어집니다. 중앙에 있는 적에게 최대 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 (가장 바깥 쪽은 {{ e6 }}%의 피해), 1초 동안 적의 이동 속도를 {{ e4 }}% 늦춥니다. 판테온이 정신 집중을 멈추면 대강하의 재사용 대기시간이 {{ e5 }}초가 됩니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"PantheonRJump.png","sprite":"spell8.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[150,135,120],"cooldownBurn":"150/135/120","effect":[null,[400,700,1000],[0,0,0],[0,0,0],[35,35,35],[30,30,30],[50,50,50],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","400/700/1000","0","0","35","30","50","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[5500,5500,5500],"rangeBurn":"5500","key":"PantheonRJump"}],"passive":{"name":"방패 방어술","description":"판테온이 공격 또는 스킬 사용을 4번 하고 나면 적의 다음 기본 공격 또는 포탑 공격을 무조건 막아냅니다.","sanitizedDescription":"판테온이 공격 또는 스킬 사용을 4번 하고 나면 적의 다음 기본 공격 또는 포탑 공격을 무조건 막아냅니다.","image":{"full":"Pantheon_AOZ.png","sprite":"passive2.png","group":"passive","x":144,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Pantheon","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3071,"count":1},{"id":3072,"count":1},{"id":3022,"count":1},{"id":3035,"count":1}]}]},{"champion":"Pantheon","title":"PantheonARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3147,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Pantheon","title":"PantheonCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3812,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Pantheon","title":"PantheonFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3033,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3026,"count":1},{"id":3814,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3117,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3026,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Pantheon","title":"PantheonKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3147,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Pantheon","title":"PantheonSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3812,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]}]},{"champion":"Pantheon","title":"PantheonSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3812,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3117,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Pantheon","title":"PantheonTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":1036,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3812,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3147,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Talon":{"id":91,"key":"Talon","name":"탈론","title":"검의 그림자","image":{"full":"Talon.png","sprite":"champion3.png","group":"champion","x":384,"y":48,"w":48,"h":48},"skins":[{"id":91000,"name":"default","num":0},{"id":91001,"name":"무법자 탈론","num":1},{"id":91002,"name":"핏빛 친위대 탈론","num":2},{"id":91003,"name":"은룡검 탈론","num":3},{"id":91004,"name":"삼성 화이트 탈론","num":4},{"id":91005,"name":"불의 축제 탈론","num":5}],"lore":"탈론은 음지에서 암약하며 불의의 일격을 가하거나 이상한 낌새가 보이기도 전에 도망칠 수 있는 능력을 가진 무자비한 자객이다. 탈론은 녹서스의 잔인한 거리에서 생존을 위해 싸우고, 적을 처치하고, 도둑질을 하며 위험한 존재로 명성을 높였다. 악명 높은 뒤 쿠토 가문에 발탁된 탈론은 이제 녹서스 제국의 명을 받들어 적의 지휘관, 선장, 영웅을 비롯해 자신이 모시는 주인의 눈살을 찌푸리게 하는 멍청한 녹서스인까지 종횡무진 암살하고 있다.","blurb":"탈론은 음지에서 암약하며 불의의 일격을 가하거나 이상한 낌새가 보이기도 전에 도망칠 수 있는 능력을 가진 무자비한 자객이다. 탈론은 녹서스의 잔인한 거리에서 생존을 위해 싸우고, 적을 처치하고, 도둑질을 하며 위험한 존재로 명성을 높였다. 악명 높은 뒤 쿠토 가문에 발탁된 탈론은 이제 녹서스 제국의 명을 받들어 적의 지휘관, 선장, 영웅을 비롯해 자신이 모시는 주인의 눈살을 찌푸리게 하는 멍청한 녹서스인까지 종횡무진 암살하고 있다.","allytips":["- 적 뒤에 자리를 잡고 녹서스식 외교의 근접 공격을 시도하고 싶을 때 암살자의 길을 사용해 보세요.","- 그림자 공격은 탈출할 때 유용한 스킬이지만 여러 명을 공격할 때에도 유용하게 사용할 수 있습니다.","- 전투 전에 미리 공격 대상을 선택해두십시오. 탈론의 모든 스킬을 하나의 대상에 집중시키면 최고의 성과를 거둘 수 있습니다. 스킬을 분산시켜 사용하면 위험한 상황에 처할 수도 있습니다."],"enemytips":["- 탈론의 공격은 물리 피해를 줍니다. 초반에 방어력를 높여 대비하세요.","- 탈론은 탈출 시 그림자 공격에 의지하는 편입니다. 그림자 공격이 끝나면 탈론은 크게 약해집니다.","- 탈론은 기동성이 매우 좋은 챔피언입니다. 늘 위치를 파악해 두거나 공격로에서 강력하게 압박해 다른 곳으로 이동하지 못하게 하세요."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":9,"defense":3,"magic":1,"difficulty":7},"stats":{"armor":32,"armorperlevel":3.5,"attackdamage":68,"attackdamageperlevel":3.1,"attackrange":125,"attackspeedoffset":-0.065,"attackspeedperlevel":2.9,"crit":0,"critperlevel":0,"hp":588,"hpperlevel":95,"hpregen":8.51,"hpregenperlevel":0.75,"movespeed":335,"mp":377.2,"mpperlevel":37,"mpregen":7.6,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"녹서스식 외교","description":"탈론이 대상 유닛을 찌릅니다. 근접 공격이 가능한 거리에서 사용하면 치명타가 적용됩니다. 근접 공격이 불가능한 거리에서 사용하면 대상에게 도약해서 찌릅니다. 이 스킬로 대상을 처치하면 체력을 약간 회복하고 재사용 대기시간을 일부 돌려받습니다.","sanitizedDescription":"탈론이 대상 유닛을 찌릅니다. 근접 공격이 가능한 거리에서 사용하면 치명타가 적용됩니다. 근접 공격이 불가능한 거리에서 사용하면 대상에게 도약해서 찌릅니다. 이 스킬로 대상을 처치하면 체력을 약간 회복하고 재사용 대기시간을 일부 돌려받습니다.","tooltip":"탈론이 대상에게 도약해 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 근접 공격이 가능한 거리에서 사용하면 도약하는 대신 치명타가 적용되어 {{ f2 }}% <span class=\"colorFF8C00\">({{ f3 }})</span>의 피해를 입힙니다.<br /><br />녹서스식 외교로 유닛을 처치하면 탈론이 <span class=\"colorFFFFFF\">{{ f4 }}</span>의 체력을 회복하고 스킬 재사용 대기시간의 {{ e5 }}%를 돌려받습니다.","sanitizedTooltip":"탈론이 대상에게 도약해 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 근접 공격이 가능한 거리에서 사용하면 도약하는 대신 치명타가 적용되어 {{ f2 }}% ({{ f3 }})의 피해를 입힙니다. 녹서스식 외교로 유닛을 처치하면 탈론이 {{ f4 }}의 체력을 회복하고 스킬 재사용 대기시간의 {{ e5 }}%를 돌려받습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f5 }} -> {{ f6 }}"]},"image":{"full":"TalonQ.png","sprite":"spell11.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[65,90,115,140,165],[50,50,50,50,50],[17,17,17,17,17],[3,3,3,3,3],[50,50,50,50,50],[8,7.5,7,6.5,6],[0.8,0.8,0.8,0.8,0.8],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/90/115/140/165","50","17","3","50","8/7.5/7/6.5/6","0.8","1.5","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.1]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"TalonQ"},{"name":"갈퀴손","description":"탈론이 부메랑 단검을 여러 개 던져 명중하는 적에게 물리 피해를 줍니다. 단검이 다시 돌아올 때 맞은 적은 추가 피해를 입고 둔화됩니다.","sanitizedDescription":"탈론이 부메랑 단검을 여러 개 던져 명중하는 적에게 물리 피해를 줍니다. 단검이 다시 돌아올 때 맞은 적은 추가 피해를 입고 둔화됩니다.","tooltip":"탈론이 부메랑 단검을 여러 개 던져 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 잠시 후 돌아오게 합니다.<br /><br />단검이 돌아올 때 맞은 적은 {{ e5 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 추가 피해를 입고 1초 동안 {{ e2 }}% 둔화됩니다.","sanitizedTooltip":"탈론이 부메랑 단검을 여러 개 던져 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 잠시 후 돌아오게 합니다. 단검이 돌아올 때 맞은 적은 {{ e5 }} (+{{ a2 }})의 추가 피해를 입고 1초 동안 {{ e2 }}% 둔화됩니다.","leveltip":{"label":["1차 피해량","2차 피해량","둔화","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TalonW.png","sprite":"spell11.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,60,65,70,75],"costBurn":"55/60/65/70/75","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[50,65,80,95,110],[40,45,50,55,60],[14,13,12,11,10],[2,2,2,2,2],[70,95,120,145,170],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/65/80/95/110","40/45/50/55/60","14/13/12/11/10","2","70/95/120/145/170","1","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.6]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"TalonW"},{"name":"암살자의 길","description":"탈론이 구조물이나 지형 위로 일정 거리를 도약해 넘습니다. 이 스킬 자체는 재사용 대기시간이 짧지만 한 번 넘은 지형은 상당 시간 동안 다시 넘을 수 없습니다.","sanitizedDescription":"탈론이 구조물이나 지형 위로 일정 거리를 도약해 넘습니다. 이 스킬 자체는 재사용 대기시간이 짧지만 한 번 넘은 지형은 상당 시간 동안 다시 넘을 수 없습니다.","tooltip":"탈론이 대상 방향에 있는 가장 가까운 구조물이나 지형 위로 최대 {{ f2 }} 유닛 거리를 도약해 넘습니다. 도약 속도는 탈론의 이동 속도에 비례합니다.<br /><br />한 번 넘어간 지형은 <span class=\"colorFFFFFF\">{{ f3 }}</span>초 동안 다시 넘을 수 없습니다.","sanitizedTooltip":"탈론이 대상 방향에 있는 가장 가까운 구조물이나 지형 위로 최대 {{ f2 }} 유닛 거리를 도약해 넘습니다. 도약 속도는 탈론의 이동 속도에 비례합니다. 한 번 넘어간 지형은 {{ f3 }}초 동안 다시 넘을 수 없습니다.","leveltip":{"label":["지형 재사용 대기시간"],"effect":["{{ f3 }} -> {{ f4 }}"]},"image":{"full":"TalonE.png","sprite":"spell11.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[0,0,0,0,0],[0,0,0,0,0],[625,625,625,625,625],[1250,1250,1250,1250,1250],[2,2,2,2,2],[160,135,110,85,60],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","0","625","1250","2","160/135/110/85/60","0","0","0","0"],"range":[725,725,725,725,725],"rangeBurn":"725","key":"TalonE"},{"name":"그림자 공격","description":"탈론이 사방에 검을 던지면서 투명 상태가 되며 추가 이동 속도를 얻습니다. 투명 상태가 풀리면 검이 다시 탈론이 있는 곳으로 모여듭니다. 검이 움직일 때마다, 한 개 이상의 검에 맞은 적은 그림자 공격으로 물리 피해를 입습니다.  ","sanitizedDescription":"탈론이 사방에 검을 던지면서 투명 상태가 되며 추가 이동 속도를 얻습니다. 투명 상태가 풀리면 검이 다시 탈론이 있는 곳으로 모여듭니다. 검이 움직일 때마다, 한 개 이상의 검에 맞은 적은 그림자 공격으로 물리 피해를 입습니다.","tooltip":"탈론이 사방에 검을 던져 적중하는 모든 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고, 이동 속도가 {{ e3 }}% 상승하며 {{ e5 }}초 동안 <span class=\"color91d7ee\">투명</span> 상태가 됩니다. <span class=\"color91d7ee\">투명</span> 상태가 끝나면 검이 모여들며 경로 상의 적을 관통해 같은 양의 피해를 다시 입힙니다.<br /><br />탈론이 기본 공격이나 녹서스식 외교를 사용해 <span class=\"color91d7ee\">투명</span> 상태를 해제하면 던진 검은 탈론 대신 탈론의 대상에게 모여듭니다.<br /><br /><u><span class=\"size16 color91d7ee\">은신 - 투명</span></u><span class=\"size16 colorb3b3b3\">: 근처의 적 포탑 또는 <span class=\"size16 coloree91d7\">절대 시야</span>만이 탈론의 모습을 드러낼 수 있습니다.","sanitizedTooltip":"탈론이 사방에 검을 던져 적중하는 모든 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고, 이동 속도가 {{ e3 }}% 상승하며 {{ e5 }}초 동안 투명 상태가 됩니다. 투명 상태가 끝나면 검이 모여들며 경로 상의 적을 관통해 같은 양의 피해를 다시 입힙니다. 탈론이 기본 공격이나 녹서스식 외교를 사용해 투명 상태를 해제하면 던진 검은 탈론 대신 탈론의 대상에게 모여듭니다. 은신 - 투명: 근처의 적 포탑 또는 절대 시야만이 탈론의 모습을 드러낼 수 있습니다.","leveltip":{"label":["피해량","이동 속도","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TalonR.png","sprite":"spell11.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,80,60],"cooldownBurn":"100/80/60","effect":[null,[90,135,180],[200,300,400],[40,55,70],[70,85,100],[2.5,2.5,2.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","90/135/180","200/300/400","40/55/70","70/85/100","2.5","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]}],"range":[550,550,550],"rangeBurn":"550","key":"TalonR"}],"passive":{"name":"검의 최후","description":"탈론이 챔피언이나 에픽 몬스터에게 스킬을 사용하면 최대 3회까지 중첩되는 상처가 남습니다. 상처가 3회 중첩된 챔피언에게 기본 공격을 가하면 출혈을 일으켜 일정 시간 동안 큰 피해를 입힙니다.","sanitizedDescription":"탈론이 챔피언이나 에픽 몬스터에게 스킬을 사용하면 최대 3회까지 중첩되는 상처가 남습니다. 상처가 3회 중첩된 챔피언에게 기본 공격을 가하면 출혈을 일으켜 일정 시간 동안 큰 피해를 입힙니다.","image":{"full":"TalonP.png","sprite":"passive3.png","group":"passive","x":384,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Talon","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3117,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3156,"count":1},{"id":3036,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3072,"count":1},{"id":3031,"count":1}]}]},{"champion":"Talon","title":"TalonARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3158,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3074,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Talon","title":"TalonCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3074,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Talon","title":"TalonFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3134,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3035,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Talon","title":"TalonKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3158,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3074,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Talon","title":"TalonSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3074,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]}]},{"champion":"Talon","title":"TalonSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3074,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Talon","title":"TalonTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":2},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3035,"count":1},{"id":3147,"count":1},{"id":3104,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Gangplank":{"id":41,"key":"Gangplank","name":"갱플랭크","title":"바다의 무법자","image":{"full":"Gangplank.png","sprite":"champion1.png","group":"champion","x":48,"y":0,"w":48,"h":48},"skins":[{"id":41000,"name":"default","num":0},{"id":41001,"name":"으스스한 갱플랭크","num":1},{"id":41002,"name":"민병대원 갱플랭크","num":2},{"id":41003,"name":"해군 갱플랭크","num":3},{"id":41004,"name":"장난감 병정 갱플랭크","num":4},{"id":41005,"name":"특수 부대 갱플랭크","num":5},{"id":41006,"name":"술탄 갱플랭크","num":6},{"id":41007,"name":"캡틴 갱플랭크","num":7},{"id":41008,"name":"행성 파괴자 갱플랭크","num":8}],"lore":"몰락한 해적왕 갱플랭크는 그 잔인함 만큼이나 종잡을 수가 없으며 사악함으로 악명이 높은 인물이다. 갱플랭크는 과거 빌지워터의 항구를 주름잡았다. 하지만 갱플랭크의 시대가 끝난 뒤에는 그 악명이 소문으로만 전해질 뿐이다. 갱플랭크는 빌지워터가 누군가의 손아귀에 들어가기 전에 다시 한 번 피바람을 몰고 오려고 한다. 권총, 해적검, 화약통으로 무장한 갱플랭크는 잃었던 패권을 되찾기 위한 준비를 끝냈다.","blurb":"몰락한 해적왕 갱플랭크는 그 잔인함 만큼이나 종잡을 수가 없으며 사악함으로 악명이 높은 인물이다. 갱플랭크는 과거 빌지워터의 항구를 주름잡았다. 하지만 갱플랭크의 시대가 끝난 뒤에는 그 악명이 소문으로만 전해질 뿐이다. 갱플랭크는 빌지워터가 누군가의 손아귀에 들어가기 전에 다시 한 번 피바람을 몰고 오려고 한다. 권총, 해적검, 화약통으로 무장한 갱플랭크는 잃었던 패권을 되찾기 위한 준비를 끝냈다.","allytips":["- 혀어어어업상은 얼어붙은 망치 또는 칠흑의 양날도끼와 같이 적에게 적중 시 효과가 발생하는 아이템 효과가 적용됩니다.","- 지도에 체력이 낮은 적이 보이면 포탄 세례로 마무리하십시오.","- 적의 탈출로에 포탄 세례를 사용하여 도망치는 적을 나머지 적 챔피언 무리로부터 끊어놓으십시오."],"enemytips":["- 혀어어어업상은 매우 높은 물리 피해를 주므로 방어력을 높여주는 아이템이 있다면 그와 맞서는 데 도움이 됩니다.","- 갱플랭크가 6레벨에 도달하면 맵 전역에 적용할 수 있는 궁극기 포탄 세례를 주의하세요."],"tags":["Fighter"],"partype":"마나","info":{"attack":7,"defense":6,"magic":4,"difficulty":9},"stats":{"armor":35,"armorperlevel":3,"attackdamage":64,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":3.2,"crit":0,"critperlevel":0,"hp":540,"hpperlevel":82,"hpregen":6,"hpregenperlevel":0.6,"movespeed":345,"mp":282,"mpperlevel":40,"mpregen":7.5,"mpregenperlevel":0.7,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"혀어어어업상","description":"대상에게 총을 발사해 처치한 적 유닛마다 골드를 약탈합니다.","sanitizedDescription":"대상에게 총을 발사해 처치한 적 유닛마다 골드를 약탈합니다.","tooltip":"총알을 발사해 {{ e1 }} (<span class=\"colorFF8C00\">+{{ a1 }}</span>)의 물리 피해를 입힙니다. (치명타가 발동할 수 있으며 적중 시 효과가 적용됩니다.)<br /><br />혀어어어업상으로 대상을 처치할 경우 갱플랭크가 <span class=\"colorFFDD00\">{{ e2 }}</span>의 추가 골드와 <span class=\"colorffd700\">바다뱀 은화</span> <span class=\"colorFFDD00\">{{ e5 }}</span>닢을 약탈합니다. (상점에서 <span class=\"colorffd700\">바다뱀 은화</span>를 포탄 세례 업그레이드로 교환합니다.)<br /><br />","sanitizedTooltip":"총알을 발사해 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. (치명타가 발동할 수 있으며 적중 시 효과가 적용됩니다.) 혀어어어업상으로 대상을 처치할 경우 갱플랭크가 {{ e2 }}의 추가 골드와 바다뱀 은화 {{ e5 }}닢을 약탈합니다. (상점에서 바다뱀 은화를 포탄 세례 업그레이드로 교환합니다.)","leveltip":{"label":["피해량","약탈 골드","약탈 바다뱀 은화"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e5 }} -> {{ e5NL }}"]},"image":{"full":"GangplankQWrapper.png","sprite":"spell3.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[5,5,5,5,5],"cooldownBurn":"5","effect":[null,[20,45,70,95,120],[3,4,5,6,7],[0,0,0,0,0],[500,500,500,500,500],[4,5,6,7,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/45/70/95/120","3/4/5/6/7","0","500","4/5/6/7/8","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"GangplankQWrapper"},{"name":"괴혈병 치료","description":"귤을 먹어서 군중 제어 효과를 제거하고 체력을 회복합니다.","sanitizedDescription":"귤을 먹어서 군중 제어 효과를 제거하고 체력을 회복합니다.","tooltip":"갱플랭크가 귤을 많이 먹어서 방해 효과를 제거하고 체력이 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> + 잃은 체력의 <span class=\"colorCC3300\">{{ e2 }}%</span>만큼 회복됩니다.","sanitizedTooltip":"갱플랭크가 귤을 많이 먹어서 방해 효과를 제거하고 체력이 {{ e1 }} (+{{ a1 }}) + 잃은 체력의 {{ e2 }}%만큼 회복됩니다.","leveltip":{"label":["회복량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"GangplankW.png","sprite":"spell3.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,90,100,110,120],"costBurn":"80/90/100/110/120","cooldown":[22,20,18,16,14],"cooldownBurn":"22/20/18/16/14","effect":[null,[50,75,100,125,150],[15,15,15,15,15],[0.25,0.25,0.25,0.25,0.25],[200,200,200,200,200],[30,40,50,60,70],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/75/100/125/150","15","0.25","200","30/40/50/60/70","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"GangplankW"},{"name":"화약통","description":"갱플랭크가 대상 위치에 화약통을 비치합니다. 갱플랭크가 이 통을 공격하면 폭발하여 주위 적들에게 피해를 입히며 둔화를 적용합니다.","sanitizedDescription":"갱플랭크가 대상 위치에 화약통을 비치합니다. 갱플랭크가 이 통을 공격하면 폭발하여 주위 적들에게 피해를 입히며 둔화를 적용합니다.","tooltip":"{{ e5 }}초 동안 갱플랭크나 적이 공격할 수 있는 화약통을 대상 위치에 드러냅니다.<br /><br />갱플랭크가 이 통을 파괴하면 폭발하며 적에게 <span class=\"colorFF8C00\">공격 피해량</span>을 물리 피해로 적용하고 (방어력의 {{ e0 }}% 무시) {{ e2 }}초 동안 {{ e4 }}%의 둔화를 적용합니다. 챔피언은 폭발로부터 {{ e3 }}의 추가 물리 피해를 입습니다.<br /><br />통이 폭발하면 폭발 지대에 겹쳐 있는 통들이 연쇄 폭발합니다. (피해량은 중첩되지 않습니다.)<br /><br />통의 체력은 매 {{ f5 }}초마다 줄어듭니다. (7레벨, 13레벨에는 체력 감소율이 증가합니다.)<br /><br /><span class=\"colorffd700\">통 폭발 시 혀어어어업상의 약탈 효과가 적용됩니다.</span>","sanitizedTooltip":"{{ e5 }}초 동안 갱플랭크나 적이 공격할 수 있는 화약통을 대상 위치에 드러냅니다. 갱플랭크가 이 통을 파괴하면 폭발하며 적에게 공격 피해량을 물리 피해로 적용하고 (방어력의 {{ e0 }}% 무시) {{ e2 }}초 동안 {{ e4 }}%의 둔화를 적용합니다. 챔피언은 폭발로부터 {{ e3 }}의 추가 물리 피해를 입습니다. 통이 폭발하면 폭발 지대에 겹쳐 있는 통들이 연쇄 폭발합니다. (피해량은 중첩되지 않습니다.) 통의 체력은 매 {{ f5 }}초마다 줄어듭니다. (7레벨, 13레벨에는 체력 감소율이 증가합니다.) 통 폭발 시 혀어어어업상의 약탈 효과가 적용됩니다.","leveltip":{"label":["통 충전","둔화","챔피언에 대한 추가 피해량"],"effect":["{{ f2 }} -> {{ f3 }}","{{ e4 }}% -> {{ e4NL }}%","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"GangplankE.png","sprite":"spell3.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[3,3,3,3,3],[2,2,2,2,2],[60,90,120,150,180],[40,50,60,70,80],[60,60,60,60,60],[2,2,2,2,2],[10,10,10,10,10],[100,100,100,100,100],[0.5,0.5,0.5,0.5,0.5],[40,40,40,40,40]],"effectBurn":["","3","2","60/90/120/150/180","40/50/60/70/80","60","2","10","100","0.5","40"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"GangplankE"},{"name":"포탄 세례","description":"갱플랭크가 특정 지역을 포격하도록 배에 신호하여 적의 이동 속도를 늦추며 피해를 입힙니다.","sanitizedDescription":"갱플랭크가 특정 지역을 포격하도록 배에 신호하여 적의 이동 속도를 늦추며 피해를 입힙니다.","tooltip":"갱플랭크가 배에 신호를 보내 지정한 지역에 {{ e3 }}초 동안 {{ f3 }}차례 포탄을 발사하도록 합니다. 대포 세례마다 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히며 {{ e6 }}초 동안 적에게 {{ e2 }}%의 둔화를 적용합니다.<br /><br /><span class=\"colorffd700\">혀어어어업상으로 바다뱀 은화를 수집하여 상점에서 업그레이드에 사용합니다.</span>","sanitizedTooltip":"갱플랭크가 배에 신호를 보내 지정한 지역에 {{ e3 }}초 동안 {{ f3 }}차례 포탄을 발사하도록 합니다. 대포 세례마다 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며 {{ e6 }}초 동안 적에게 {{ e2 }}%의 둔화를 적용합니다. 혀어어어업상으로 바다뱀 은화를 수집하여 상점에서 업그레이드에 사용합니다.","leveltip":{"label":["대포 세례당 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GangplankR.png","sprite":"spell3.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[180,160,140],"cooldownBurn":"180/160/140","effect":[null,[35,60,85],[30,30,30],[8,8,8],[2,2,2],[1.5,0.5,0.5],[0.5,0.5,0.5],[300,300,300],[60,60,60],[1,1,1],[30,30,30]],"effectBurn":["","35/60/85","30","8","2","1.5/0.5/0.5","0.5","300","60","1","30"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.1]}],"range":[30000,30000,30000],"rangeBurn":"30000","key":"GangplankR"}],"passive":{"name":"불의 심판","description":"몇 초에 한 번씩 갱플랭크의 근접 공격은 적에게 불을 붙입니다.","sanitizedDescription":"몇 초에 한 번씩 갱플랭크의 근접 공격은 적에게 불을 붙입니다.","image":{"full":"Gangplank_Passive.png","sprite":"passive1.png","group":"passive","x":48,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Gangplank","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3022,"count":1},{"id":3031,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]}]},{"champion":"Gangplank","title":"Map12","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3057,"count":1},{"id":1001,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3158,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3087,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Gangplank","title":"GangplankCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3158,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3142,"count":1},{"id":3035,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3053,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Gangplank","title":"GangplankFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1083,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3035,"count":1},{"id":3508,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Gangplank","title":"GangplankKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3057,"count":1},{"id":1001,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3158,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3087,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Gangplank","title":"GangplankSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3158,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3142,"count":1},{"id":3035,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3053,"count":1},{"id":3065,"count":1}]}]},{"champion":"Gangplank","title":"GangplankSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3158,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3142,"count":1},{"id":3035,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Gangplank","title":"GangplankTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3065,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3071,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3110,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3902,"count":1},{"id":3903,"count":1},{"id":3901,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Ezreal":{"id":81,"key":"Ezreal","name":"이즈리얼","title":"방탕한 탐험가","image":{"full":"Ezreal.png","sprite":"champion0.png","group":"champion","x":288,"y":96,"w":48,"h":48},"skins":[{"id":81000,"name":"default","num":0},{"id":81001,"name":"노팅엄 이즈리얼","num":1},{"id":81002,"name":"공격수 이즈리얼","num":2},{"id":81003,"name":"서릿빛 이즈리얼","num":3},{"id":81004,"name":"탐험가 이즈리얼","num":4},{"id":81005,"name":"펄스 건 이즈리얼","num":5},{"id":81006,"name":"TPA 이즈리얼","num":6},{"id":81007,"name":"연미복 이즈리얼","num":7},{"id":81008,"name":"스페이드의 에이스 이즈리얼","num":8},{"id":81009,"name":"아케이드 이즈리얼","num":9},{"id":81018,"name":"별 수호자 이즈리얼","num":18}],"lore":"자신감 넘치는 탐험가 이즈리얼은 아무리 어려운 상황에서도 빠져나갈 길을 찾아내는 놀라운 능력을 타고났다. 그는 매일 흥미진진한 사건을 기대하며 룬테라를 탐험한다. 고대 슈리마 제국의 폐허에서 찾아낸 마법의 장갑을 끼고 전혀 예측할 수 없는 미지의 장소를 찾아 나서는 그는 전 세계의 불가사의한 수수께끼들을 직접 풀어내겠다는 각오로 매일같이 목숨을 건 모험을 한다. 한 손으로는 신비로운 에너지 화살을 발사하고, 입가에는 자신만만한 미소를 그리면서.","blurb":"자신감 넘치는 탐험가 이즈리얼은 아무리 어려운 상황에서도 빠져나갈 길을 찾아내는 놀라운 능력을 타고났다. 그는 매일 흥미진진한 사건을 기대하며 룬테라를 탐험한다. 고대 슈리마 제국의 폐허에서 찾아낸 마법의 장갑을 끼고 전혀 예측할 수 없는 미지의 장소를 찾아 나서는 그는 전 세계의 불가사의한 수수께끼들을 직접 풀어내겠다는 각오로 매일같이 목숨을 건 모험을 한다. 한 손으로는 신비로운 에너지 화살을 발사하고, 입가에는 자신만만한 미소를 그리면서.","allytips":["- 비전 이동을 활용하여 다른 스킬들을 손쉽게 맞힐 수 있습니다.","- 이즈리얼은 공격력이나 주문력 중 하나를 선택하여 주 공격수로 성장할 수 있는 챔피언입니다.","- 정조준 일격을 사용하여 다수의 미니언 무리 또는 몬스터 무리를 공격할 수 있습니다."],"enemytips":["- 이즈리얼은 체력이 매우 낮은 챔피언이므로 집중 공격하여 재빨리 처치하십시오.","- 이즈리얼의 공격은 모두 원거리 스킬 기반이므로 미니언 뒤에 숨도록 하십시오.","- 신비한 화살은 적중 시 효과를 받습니다. 따라서 잉걸불 문장 효과가 적용됩니다."],"tags":["Marksman","Mage"],"partype":"마나","info":{"attack":7,"defense":2,"magic":6,"difficulty":7},"stats":{"armor":31,"armorperlevel":3.5,"attackdamage":64,"attackdamageperlevel":2.41,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.5,"crit":0,"critperlevel":0,"hp":484.4,"hpperlevel":80,"hpregen":6.424,"hpregenperlevel":0.55,"movespeed":325,"mp":360.6,"mpperlevel":42,"mpregen":8.092,"mpregenperlevel":0.65,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"신비한 화살","description":"이즈리얼이 에너지로 이루어진 화살을 발사합니다. 적 유닛에게 명중하면 모든 스킬의 재사용 대기시간이 1.5초 감소합니다.","sanitizedDescription":"이즈리얼이 에너지로 이루어진 화살을 발사합니다. 적 유닛에게 명중하면 모든 스킬의 재사용 대기시간이 1.5초 감소합니다.","tooltip":"이즈리얼이 에너지 화살을 발사하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> <span class=\"color99FF99\">(+{{ a2 }})</span>의 물리 피해를 입힙니다. (적중 시 효과 적용)<br /><br />신비한 화살이 적중할 경우 이즈리얼의 스킬 재사용 대기시간이 {{ e2 }}초 감소합니다.","sanitizedTooltip":"이즈리얼이 에너지 화살을 발사하여 {{ e1 }} (+{{ a1 }}) (+{{ a2 }})의 물리 피해를 입힙니다. (적중 시 효과 적용) 신비한 화살이 적중할 경우 이즈리얼의 스킬 재사용 대기시간이 {{ e2 }}초 감소합니다.","leveltip":{"label":["추가 피해","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EzrealMysticShot.png","sprite":"spell3.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[28,31,34,37,40],"costBurn":"28/31/34/37/40","cooldown":[5.5,5.25,5,4.75,4.5],"cooldownBurn":"5.5/5.25/5/4.75/4.5","effect":[null,[35,55,75,95,115],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/55/75/95/115","1.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.1]},{"key":"a2","link":"spelldamage","coeff":[0.4]}],"range":[1150,1150,1150,1150,1150],"rangeBurn":"1150","key":"EzrealMysticShot"},{"name":"정수의 흐름","description":"이즈리얼이 넘실대는 에너지 파를 발사하여 적 챔피언들에게 마법 피해를 입히고, 아군의 공격 속도는 상승합니다.","sanitizedDescription":"이즈리얼이 넘실대는 에너지 파를 발사하여 적 챔피언들에게 마법 피해를 입히고, 아군의 공격 속도는 상승합니다.","tooltip":"이즈리얼이 에너지파를 발사하여 에너지파를 지나는 모든 적 챔피언에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 이즈리얼이나 아군 챔피언들이 이 에너지파에 맞으면 {{ e3 }}초간 공격 속도가 {{ e2 }}%만큼 빨라집니다.","sanitizedTooltip":"이즈리얼이 에너지파를 발사하여 에너지파를 지나는 모든 적 챔피언에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이즈리얼이나 아군 챔피언들이 이 에너지파에 맞으면 {{ e3 }}초간 공격 속도가 {{ e2 }}%만큼 빨라집니다.","leveltip":{"label":["공격력","공격 속도","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }}% -> {{ e2NL }}%"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"EzrealEssenceFlux.png","sprite":"spell3.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[70,115,160,205,250],[20,25,30,35,40],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","20/25/30/35/40","5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"EzrealEssenceFlux"},{"name":"비전 이동","description":"이즈리얼이 목표 위치로 순간 이동하여 가장 가까운 적을 향해 유도 화살을 발사합니다.","sanitizedDescription":"이즈리얼이 목표 위치로 순간 이동하여 가장 가까운 적을 향해 유도 화살을 발사합니다.","tooltip":"이즈리얼이 지정한 위치로 순간 이동하며 가장 가까이에 있는 적에게 화살을 발사하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"이즈리얼이 지정한 위치로 순간 이동하며 가장 가까이에 있는 적에게 화살을 발사하여 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"EzrealArcaneShift.png","sprite":"spell3.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,90,90,90,90],"costBurn":"90","cooldown":[19,17.5,16,14.5,13],"cooldownBurn":"19/17.5/16/14.5/13","effect":[null,[80,130,180,230,280],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/130/180/230/280","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.5]},{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[475,475,475,475,475],"rangeBurn":"475","key":"EzrealArcaneShift"},{"name":"정조준 일격","description":"이즈리얼이 1초 동안 힘을 모은 후 강력한 에너지로 구성된 적들을 관통하는 미사일 탄막을 발사하여 큰 피해를 입힙니다. (하나의 적을 지나칠 때마다 피해가 10%씩 감소합니다.)","sanitizedDescription":"이즈리얼이 1초 동안 힘을 모은 후 강력한 에너지로 구성된 적들을 관통하는 미사일 탄막을 발사하여 큰 피해를 입힙니다. (하나의 적을 지나칠 때마다 피해가 10%씩 감소합니다.)","tooltip":"이즈리얼이 1초 동안 힘을 모은 후 장거리 미사일을 발사하여 미사일에 맞는 각 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 적에게 명중할 때마다 피해가 {{ e2 }}%씩 감소합니다. (최소 {{ e3 }}%)","sanitizedTooltip":"이즈리얼이 1초 동안 힘을 모은 후 장거리 미사일을 발사하여 미사일에 맞는 각 적에게 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입힙니다. 적에게 명중할 때마다 피해가 {{ e2 }}%씩 감소합니다. (최소 {{ e3 }}%)","leveltip":{"label":["피해량"],"effect":[" {{ e1 }} -> {{ e1NL }}"]},"image":{"full":"EzrealTrueshotBarrage.png","sprite":"spell3.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,120,120],"cooldownBurn":"120","effect":[null,[350,500,650],[10,10,10],[30,30,30],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","350/500/650","10","30","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[20000,20000,20000],"rangeBurn":"20000","key":"EzrealTrueshotBarrage"}],"passive":{"name":"끓어오르는 주문의 힘","description":"이즈리얼이 스킬을 적중시킬 때마다 공격 속도가 증가합니다. (최대 5회 중첩)","sanitizedDescription":"이즈리얼이 스킬을 적중시킬 때마다 공격 속도가 증가합니다. (최대 5회 중첩)","image":{"full":"Ezreal_RisingSpellForce.png","sprite":"passive0.png","group":"passive","x":288,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Ezreal","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3133,"count":1},{"id":3508,"count":1}]}]},{"champion":"Ezreal","title":"EzrealARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1001,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3025,"count":1},{"id":3158,"count":1},{"id":3008,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ezreal","title":"EzrealCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3073,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3008,"count":1},{"id":3078,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3153,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ezreal","title":"EzrealFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3078,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3031,"count":1},{"id":3087,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3026,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Ezreal","title":"EzrealKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3025,"count":1},{"id":3158,"count":1},{"id":3004,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3102,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ezreal","title":"EzrealPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3078,"count":1},{"id":3153,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3072,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3147,"count":1},{"id":3812,"count":1},{"id":3146,"count":1}]}]},{"champion":"Ezreal","title":"EzrealSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3070,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3004,"count":1},{"id":3078,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3153,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ezreal","title":"EzrealSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3008,"count":1},{"id":3078,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3153,"count":1},{"id":3139,"count":1}]}]},{"champion":"Ezreal","title":"EzrealSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3070,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3004,"count":1},{"id":3078,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3153,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ezreal","title":"EzrealTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1036,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3078,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3034,"count":1},{"id":3153,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3102,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Gnar":{"id":150,"key":"Gnar","name":"나르","title":"잃어버린 고리","image":{"full":"Gnar.png","sprite":"champion1.png","group":"champion","x":144,"y":0,"w":48,"h":48},"skins":[{"id":150000,"name":"default","num":0},{"id":150001,"name":"공룡 나르","num":1},{"id":150002,"name":"신사 나르","num":2},{"id":150003,"name":"눈싸움 대장 나르","num":3},{"id":150004,"name":"프로레슬러 나르","num":4},{"id":150013,"name":"슈퍼 갤럭시 나르","num":13}],"lore":"나르는 고대 요들로, 장난스러운 행동을 하다가도 한순간에 파괴를 일삼는 거대 야수로 변해 어린아이 같이 난폭한 짓을 한다. 나르는 이제 수천 년 동안 갇혀 있던 얼음 정수에서 풀려나 새롭고 놀라우리만치 변한 세상을 뛰어다닌다. 나르는 위험을 즐기며, 뼈이빨 부메랑이든 옆에 있는 건물이든 손에 잡히는 것은 뭐든 적을 향해 던진다.","blurb":"나르는 고대 요들로, 장난스러운 행동을 하다가도 한순간에 파괴를 일삼는 거대 야수로 변해 어린아이 같이 난폭한 짓을 한다. 나르는 이제 수천 년 동안 갇혀 있던 얼음 정수에서 풀려나 새롭고 놀라우리만치 변한 세상을 뛰어다닌다. 나르는 위험을 즐기며, 뼈이빨 부메랑이든 옆에 있는 건물이든 손에 잡히는 것은 뭐든 적을 향해 던진다.","allytips":["- 분노 관리는 매우 중요합니다. 미니 나르와 메가 나르 두 형태의 이점을 극대화할 수 있도록 변신 시점을 잘 조절해 보세요.","- 교전 시에는 궁극기로 적을 기절시킬 수 있게끔 벽 근처로 유인하세요.","- 지피지기면 백전백승! 미니 나르는 빠르고 체력이 낮은 대신 지속 피해량이 높습니다. 메가 나르는 느리고 튼튼하며 순간 피해량이 높습니다."],"enemytips":["- 나르는 커졌다 다시 작아진 후에는 15초 동안 분노가 쌓이지 않습니다. 이 때를 놓치지 말고 교전을 시작하세요.","- 나르의 애니메이션과 분노 표시는 변신 시점에 가까워질수록 변합니다.","- 나르의 궁극기에 맞아 벽에 부딪히면 기절하게 됩니다. 벽 근처에서 나르와 싸울 때는 벽으로 밀리지 않도록 주의하세요."],"tags":["Fighter","Tank"],"partype":"분노","info":{"attack":6,"defense":5,"magic":5,"difficulty":8},"stats":{"armor":32,"armorperlevel":2.5,"attackdamage":59,"attackdamageperlevel":3,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":6,"crit":0,"critperlevel":0,"hp":510,"hpperlevel":65,"hpregen":4.5,"hpregenperlevel":1.75,"movespeed":325,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"부메랑 던지기 / 돌덩이 던지기","description":"나르가 부메랑을 던지면 맞힌 적에게 피해를 입히고 속도를 늦춘 다음 나르에게 돌아옵니다. 나르가 부메랑을 받으면 재사용 대기시간이 감소합니다.<br><br>메가 나르는 돌덩어리를 던져 주위 모두에게 피해를 입히고 속도를 늦춥니다. 던져진 돌덩어리는 적에게 맞으면 그 자리에 멈추며, 메가 나르가 다시 집어들면 재사용 대기시간이 감소합니다.","sanitizedDescription":"나르가 부메랑을 던지면 맞힌 적에게 피해를 입히고 속도를 늦춘 다음 나르에게 돌아옵니다. 나르가 부메랑을 받으면 재사용 대기시간이 감소합니다. 메가 나르는 돌덩어리를 던져 주위 모두에게 피해를 입히고 속도를 늦춥니다. 던져진 돌덩어리는 적에게 맞으면 그 자리에 멈추며, 메가 나르가 다시 집어들면 재사용 대기시간이 감소합니다.","tooltip":"<span class=\"color33FF33\">미니 나르: </span>부메랑을 던지면 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e4 }}초 동안 적들의 속도를 {{ e3 }}% 늦춥니다. 부메랑은 적 하나를 맞힌 다음에는 나르에게 돌아오며, 이후 맞히는 적들은 {{ e7 }}%의 피해를 입습니다. 적 하나 당 부메랑에 한 번만 맞습니다. 부메랑을 받으면 재사용 대기시간이 {{ f1 }}% 감소합니다.<br /><br /><span class=\"colorFF3300\">메가 나르: </span>돌덩이를 던져 맞은 대상과 주변 모든 적을 둔화시키고 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 물리 피해를 입힙니다. 돌덩이를 집어들면 이 스킬의 재사용 대기시간이 {{ e6 }}% 감소합니다.","sanitizedTooltip":"미니 나르: 부메랑을 던지면 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e4 }}초 동안 적들의 속도를 {{ e3 }}% 늦춥니다. 부메랑은 적 하나를 맞힌 다음에는 나르에게 돌아오며, 이후 맞히는 적들은 {{ e7 }}%의 피해를 입습니다. 적 하나 당 부메랑에 한 번만 맞습니다. 부메랑을 받으면 재사용 대기시간이 {{ f1 }}% 감소합니다. 메가 나르: 돌덩이를 던져 맞은 대상과 주변 모든 적을 둔화시키고 {{ e2 }} (+{{ a2 }})의 물리 피해를 입힙니다. 돌덩이를 집어들면 이 스킬의 재사용 대기시간이 {{ e6 }}% 감소합니다.","leveltip":{"label":["부메랑 피해량","돌덩이 피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GnarQ.png","sprite":"spell3.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[20,17.5,15,12.5,10],"cooldownBurn":"20/17.5/15/12.5/10","effect":[null,[5,45,85,125,165],[5,45,85,125,165],[15,20,25,30,35],[2,2,2,2,2],[3000,3000,3000,3000,3000],[60,60,60,60,60],[50,50,50,50,50],[200,200,200,200,200],[6,6,6,6,6],[280,280,280,280,280]],"effectBurn":["","5/45/85/125/165","5/45/85/125/165","15/20/25/30/35","2","3000","60","50","200","6","280"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.15]},{"key":"a2","link":"attackdamage","coeff":[1.2]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"GnarQ"},{"name":"슝슝 / 쿵쾅","description":"나르는 기본 공격과 스킬 공격을 하면 신이 나서 추가 피해를 입히며 이동 속도가 상승합니다.<br><br>메가 나르는 너무 분노해 있어서, 뒷발로 일어나서 전방을 꽝 내리치며 일정 범위 안의 적들을 기절시킵니다.","sanitizedDescription":"나르는 기본 공격과 스킬 공격을 하면 신이 나서 추가 피해를 입히며 이동 속도가 상승합니다. 메가 나르는 너무 분노해 있어서, 뒷발로 일어나서 전방을 꽝 내리치며 일정 범위 안의 적들을 기절시킵니다.","tooltip":"<span class=\"color33FF33\">미니 나르: </span><span class=\"colorFF9900\">기본 지속 효과:</span> 같은 대상에게 매 3번째 기본 공격이나 스킬 공격을 하면 추가로 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }}) </span>+ 대상의 최대 체력의 {{ e2 }}%에 해당하는 마법 피해를 입히고 나르의 이동 속도가 {{ f1 }}% 상승한 다음 3초에 걸쳐 서서히 감소합니다. (몬스터 상대로 최대 {{ e4 }}의 피해)<br /><br /><span class=\"colorFF3300\">메가 나르: </span>{{ e5 }}초 동안 일정 구역 안에 있는 적들을 기절시켜 {{ e3 }}<span class=\"colorFF8C00\"> (+{{ a2 }})</span>의 물리 피해를 입힙니다.<br /><br />나르가 메가 형태에서 미니 형태로 돌아올 때는 슝슝의 이동 속도 상승 효과를 받습니다.","sanitizedTooltip":"미니 나르: 기본 지속 효과: 같은 대상에게 매 3번째 기본 공격이나 스킬 공격을 하면 추가로 {{ e1 }} (+{{ a1 }}) + 대상의 최대 체력의 {{ e2 }}%에 해당하는 마법 피해를 입히고 나르의 이동 속도가 {{ f1 }}% 상승한 다음 3초에 걸쳐 서서히 감소합니다. (몬스터 상대로 최대 {{ e4 }}의 피해) 메가 나르: {{ e5 }}초 동안 일정 구역 안에 있는 적들을 기절시켜 {{ e3 }} (+{{ a2 }})의 물리 피해를 입힙니다. 나르가 메가 형태에서 미니 형태로 돌아올 때는 슝슝의 이동 속도 상승 효과를 받습니다.","leveltip":{"label":["슝슝 피해량","슝슝 체력 % 피해량","몬스터에 대한 슝슝 최대 피해량","쿵쾅 피해량","쿵쾅 재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e4 }} -> {{ e4NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GnarW.png","sprite":"spell3.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[15,13,11,9,7],"cooldownBurn":"15/13/11/9/7","effect":[null,[10,20,30,40,50],[6,8,10,12,14],[25,45,65,85,105],[100,150,200,250,300],[1.25,1.25,1.25,1.25,1.25],[3.5,3.5,3.5,3.5,3.5],[3,3,3,3,3],[550,550,550,550,550],[200,200,200,200,200],[0,0,0,0,0]],"effectBurn":["","10/20/30/40/50","6/8/10/12/14","25/45/65/85/105","100/150/200/250/300","1.25","3.5","3","550","200","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]},{"key":"a2","link":"attackdamage","coeff":[1]}],"range":[0,0,0,0,0],"rangeBurn":"0","key":"GnarW"},{"name":"폴짝 / 우지끈","description":"나르가 대상 지점으로 폴짝 뛰며, 유닛의 머리 위에 착지하는 경우에는 튕겨서 더 멀리 날아갑니다.<br><br>메가 나르는 튕겨가기에는 너무 커서, 대신 착지한 지면에 균열을 일으키고 주위 일정 반경에 피해를 입힙니다.","sanitizedDescription":"나르가 대상 지점으로 폴짝 뛰며, 유닛의 머리 위에 착지하는 경우에는 튕겨서 더 멀리 날아갑니다. 메가 나르는 튕겨가기에는 너무 커서, 대신 착지한 지면에 균열을 일으키고 주위 일정 반경에 피해를 입힙니다.","tooltip":"<span class=\"color33FF33\">미니 나르: </span>대상 지점으로 폴짝 뛰어 3초 동안 공격 속도가 {{ e2 }}% 상승합니다. 유닛 위에 착지하면 튕겨서 더 멀리 날아가며, 착지한 유닛이 적일 경우 {{ e1 }} <span class=\"colorCC3300\">(+{{ f1 }}) [나르 최대 체력의 6%]</span>에 해당하는 물리 피해를 입히고 잠시 둔화시킵니다.<br /><br /><span class=\"colorFF3300\">메가 나르: </span>대상 지점으로 훌쩍 뛰어 착지 위치에 있는 적에게 {{ e1 }} <span class=\"colorCC3300\">(+{{ f1 }}) [나르 최대 체력의 6%]</span>에 해당하는 물리 피해를 입힙니다. 나르에게 밟힌 적들은 잠시동안 둔화됩니다.<br /><br />우지끈으로 변신하게 되면 메가 나르가 되어서도 튕겨 날아갈 수 있습니다.","sanitizedTooltip":"미니 나르: 대상 지점으로 폴짝 뛰어 3초 동안 공격 속도가 {{ e2 }}% 상승합니다. 유닛 위에 착지하면 튕겨서 더 멀리 날아가며, 착지한 유닛이 적일 경우 {{ e1 }} (+{{ f1 }}) [나르 최대 체력의 6%]에 해당하는 물리 피해를 입히고 잠시 둔화시킵니다. 메가 나르: 대상 지점으로 훌쩍 뛰어 착지 위치에 있는 적에게 {{ e1 }} (+{{ f1 }}) [나르 최대 체력의 6%]에 해당하는 물리 피해를 입힙니다. 나르에게 밟힌 적들은 잠시동안 둔화됩니다. 우지끈으로 변신하게 되면 메가 나르가 되어서도 튕겨 날아갈 수 있습니다.","leveltip":{"label":["피해량","공격 속도","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GnarE.png","sprite":"spell3.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[22,19.5,17,14.5,12],"cooldownBurn":"22/19.5/17/14.5/12","effect":[null,[20,60,100,140,180],[20,30,40,50,60],[600,600,600,600,600],[-0.8,-0.8,-0.8,-0.8,-0.8],[0.5,0.5,0.5,0.5,0.5],[475,475,475,475,475],[525,525,525,525,525],[200,200,200,200,200],[0.6,0.6,0.6,0.6,0.6],[375,375,375,375,375]],"effectBurn":["","20/60/100/140/180","20/30/40/50/60","600","-0.8","0.5","475","525","200","0.6","375"],"range":[475,475,475,475,475],"rangeBurn":"475","key":"GnarE"},{"name":"나르!","description":"메가 나르가 선택한 방향으로 주위 모두를 집어던져 피해를 입히고 속도를 늦춥니다. 벽에 부딪힌 적은 기절하며 추가 피해를 입습니다.","sanitizedDescription":"메가 나르가 선택한 방향으로 주위 모두를 집어던져 피해를 입히고 속도를 늦춥니다. 벽에 부딪힌 적은 기절하며 추가 피해를 입습니다.","tooltip":"<span class=\"color33FF33\">미니 나르: </span><span class=\"colorFF9900\">기본 지속 효과:</span> 부메랑을 받았을 때 부메랑 던지기의 재사용 대기시간 감소율이 {{ e4 }}%, 슝슝의 이동 속도 증가율이 {{ e2 }}%로 상승합니다.<br /><br /><span class=\"colorFF3300\">메가 나르: </span>근처 적을 정해진 방향으로 밀어내서 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> <span class=\"color99FF99\">(+{{ a2 }})</span>의 물리 피해를 입히고 {{ e3 }}초 동안 속도를 {{ e8 }}% 늦춥니다. 벽에 부딪히는 적은 {{ e7 }}%의 피해를 입고, 둔화되는 대신 기절합니다.","sanitizedTooltip":"미니 나르: 기본 지속 효과: 부메랑을 받았을 때 부메랑 던지기의 재사용 대기시간 감소율이 {{ e4 }}%, 슝슝의 이동 속도 증가율이 {{ e2 }}%로 상승합니다. 메가 나르: 근처 적을 정해진 방향으로 밀어내서 {{ e1 }} (+{{ a1 }}) (+{{ a2 }})의 물리 피해를 입히고 {{ e3 }}초 동안 속도를 {{ e8 }}% 늦춥니다. 벽에 부딪히는 적은 {{ e7 }}%의 피해를 입고, 둔화되는 대신 기절합니다.","leveltip":{"label":["피해량","둔화/기절 지속 시간","부메랑 재사용 대기시간 감소","슝슝 이동 속도","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GnarR.png","sprite":"spell3.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[200,300,400],[45,60,75],[1.25,1.5,1.75],[50,55,60],[475,475,475],[500,500,500],[150,150,150],[45,45,45],[0,0,0],[0,0,0]],"effectBurn":["","200/300/400","45/60/75","1.25/1.5/1.75","50/55/60","475","500","150","45","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.2]},{"key":"a2","link":"spelldamage","coeff":[0.5]}],"range":[590,590,590],"rangeBurn":"590","key":"GnarR"}],"passive":{"name":"분노 유전자","description":"나르는 전투 중 분노가 생성됩니다. 분노가 최고치에 도달하면 다음번 스킬을 사용할 때 메가 나르로 변신하여 생존력이 커지고 스킬이 바뀝니다.","sanitizedDescription":"나르는 전투 중 분노가 생성됩니다. 분노가 최고치에 도달하면 다음번 스킬을 사용할 때 메가 나르로 변신하여 생존력이 커지고 스킬이 바뀝니다.","image":{"full":"Gnar_Passive.png","sprite":"passive1.png","group":"passive","x":144,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Gnar","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3067,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]}]},{"champion":"Gnar","title":"GnarARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Gnar","title":"GnarCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3022,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Gnar","title":"GnarFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3142,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2138,"count":1}]}]},{"champion":"Gnar","title":"GnarKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Gnar","title":"GnarSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1001,"count":1},{"id":3071,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3022,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]}]},{"champion":"Gnar","title":"GnarSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3143,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3065,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Gnar","title":"GnarTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3022,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Teemo":{"id":17,"key":"Teemo","name":"티모","title":"날쌘 정찰병","image":{"full":"Teemo.png","sprite":"champion3.png","group":"champion","x":0,"y":96,"w":48,"h":48},"skins":[{"id":17000,"name":"default","num":0},{"id":17001,"name":"행복한 엘프 티모","num":1},{"id":17002,"name":"정찰부대 티모","num":2},{"id":17003,"name":"오소리 티모","num":3},{"id":17004,"name":"우주비행사 티모","num":4},{"id":17005,"name":"복실복실 티모","num":5},{"id":17006,"name":"슈퍼 티모","num":6},{"id":17007,"name":"판다 티모","num":7},{"id":17008,"name":"오메가 분대 티모","num":8},{"id":17014,"name":"작은 악마 티모","num":14}],"lore":"어떤 위협에도 꿈쩍 않는 티모는 끝 모를 적극성과 쾌활함으로 세상을 정찰한다. 티모는 확고한 도덕성을 가진 요들로, 밴틀 시티의 정찰대 강령을 따르는 것을 자랑스럽게 여긴다. 강령을 얼마나 열심히 따르는지 그의 행동이 가져올 더 넓은 결과를 깨닫지 못하기도 한다. 더러 정찰대의 존재에 의문을 품는 자들도 있지만, 한 가지는 분명하다. 티모의 신념은 절대 얕잡아봐서는 안 된다.","blurb":"어떤 위협에도 꿈쩍 않는 티모는 끝 모를 적극성과 쾌활함으로 세상을 정찰한다. 티모는 확고한 도덕성을 가진 요들로, 밴틀 시티의 정찰대 강령을 따르는 것을 자랑스럽게 여긴다. 강령을 얼마나 열심히 따르는지 그의 행동이 가져올 더 넓은 결과를 깨닫지 못하기도 한다. 더러 정찰대의 존재에 의문을 품는 자들도 있지만, 한 가지는 분명하다. 티모의 신념은 절대 얕잡아봐서는 안 된다.","allytips":["- 티모는 버섯을 사용하여 효과적으로 미니언을 사냥할 수 있습니다.","- 드래곤이나 내셔 남작 근처 등 지도 주요 위치에 버섯을 설치하면 적들이 이들 거대 몬스터를 사냥할 때를 파악할 수 있습니다."],"enemytips":["- 티모의 맹독 다트는 치고 빠지는 타겟에게 효과적인 견제 수단입니다. 따라서 공격을 쏟아부을 준비가 끝나기 전에는 다가가지 마십시오.","- 예언자의 렌즈(장신구)를 사용하여 주요 위치 주변에 있는 버섯을 파괴하는 것도 좋은 방법입니다."],"tags":["Marksman","Assassin"],"partype":"마나","info":{"attack":5,"defense":3,"magic":7,"difficulty":6},"stats":{"armor":24.3,"armorperlevel":3.75,"attackdamage":54,"attackdamageperlevel":3,"attackrange":500,"attackspeedoffset":-0.0947,"attackspeedperlevel":3.38,"crit":0,"critperlevel":0,"hp":528,"hpperlevel":90,"hpregen":5.742,"hpregenperlevel":0.65,"movespeed":330,"mp":267.2,"mpperlevel":40,"mpregen":7.206,"mpregenperlevel":0.45,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"실명 다트","description":"강력한 독으로 적의 시야를 가리고 피해를 입힙니다. 지속 시간 동안 대상을 실명시킵니다.","sanitizedDescription":"강력한 독으로 적의 시야를 가리고 피해를 입힙니다. 지속 시간 동안 대상을 실명시킵니다.","tooltip":"{{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 대상이 앞을 볼 수 없습니다. ","sanitizedTooltip":"{{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 대상이 앞을 볼 수 없습니다.","leveltip":{"label":["피해량","지속 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }} -> {{ e2NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"BlindingDart.png","sprite":"spell11.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[80,125,170,215,260],[1.5,1.75,2,2.25,2.5],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/125/170/215/260","1.5/1.75/2/2.25/2.5","1","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[680,680,680,680,680],"rangeBurn":"680","key":"BlindingDart"},{"name":"신속한 이동","description":"티모의 이동 속도가 증가합니다. 포탑이나 적 챔피언에게 공격받으면 효과가 중단됩니다. 티모는 짧은 시간 공격 당하지 않으면 다시 이동 속도 증가 효과를 얻을 수 있습니다.","sanitizedDescription":"티모의 이동 속도가 증가합니다. 포탑이나 적 챔피언에게 공격받으면 효과가 중단됩니다. 티모는 짧은 시간 공격 당하지 않으면 다시 이동 속도 증가 효과를 얻을 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>티모가 적 챔피언 또는 포탑에게 5초 동안 공격을 당하지 않았다면 이동 속도가 {{ e1 }}% 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>티모가 전력으로 질주하여 {{ e2 }}초 동안 이동 속도 증가 효과가 2배가 됩니다. 이 효과는 공격 당해도 사라지지 않습니다.","sanitizedTooltip":"기본 지속 효과: 티모가 적 챔피언 또는 포탑에게 5초 동안 공격을 당하지 않았다면 이동 속도가 {{ e1 }}% 증가합니다. 사용 시: 티모가 전력으로 질주하여 {{ e2 }}초 동안 이동 속도 증가 효과가 2배가 됩니다. 이 효과는 공격 당해도 사라지지 않습니다.","leveltip":{"label":["기본 이동 속도 상승분"],"effect":["{{ e1 }}% -> {{ e1NL }}%"]},"image":{"full":"MoveQuick.png","sprite":"spell11.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[17,17,17,17,17],"cooldownBurn":"17","effect":[null,[10,14,18,22,26],[3,3,3,3,3],[0.2,0.28,0.36,0.44,0.52],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/14/18/22/26","3","0.2/0.28/0.36/0.44/0.52","5","0","0","0","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"MoveQuick"},{"name":"맹독 다트","description":"티모의 기본 공격에 맞은 적은 중독되어 4초 동안 매 초마다 피해를 입습니다. 기본 공격을 맞힐 때마다 독 피해도 같이 들어갑니다. ","sanitizedDescription":"티모의 기본 공격에 맞은 적은 중독되어 4초 동안 매 초마다 피해를 입습니다. 기본 공격을 맞힐 때마다 독 피해도 같이 들어갑니다.","tooltip":"티모의 기본 공격이 명중 시 적을 중독시켜 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 매 초마다 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"티모의 기본 공격이 명중 시 적을 중독시켜 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 매 초마다 {{ e1 }} (+{{ a2 }})의 마법 피해를 입힙니다.","leveltip":{"label":["명중 시 피해","초당 피해"],"effect":[" {{ e2 }} -> {{ e2NL }}"," {{ e1 }} -> {{ e1NL }}"]},"image":{"full":"ToxicShot.png","sprite":"spell11.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"기본 지속 효과","maxrank":5,"cost":[0,0,0,0,0],"costType":"기본 지속 효과","costBurn":"0","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[6,12,18,24,30],[10,20,30,40,50],[4,4,4,4,4],[4.5,4.5,4.5,4.5,4.5],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","6/12/18/24/30","10/20/30/40/50","4","4.5","1","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a2","link":"spelldamage","coeff":[0.1]}],"range":[680,680,680,680,680],"rangeBurn":"680","key":"ToxicShot"},{"name":"유독성 함정","description":"티모가 가방에 있던 버섯을 사용하여 폭발성 독 함정을 던집니다. 적이 함정을 밟으면 독 구름이 퍼져나와 몇 초에 걸쳐 적의 이동 속도를 늦추고 피해를 입힙니다. 버섯 위에 새 버섯을 던지면 튕겨나며 사거리가 늘어납니다.","sanitizedDescription":"티모가 가방에 있던 버섯을 사용하여 폭발성 독 함정을 던집니다. 적이 함정을 밟으면 독 구름이 퍼져나와 몇 초에 걸쳐 적의 이동 속도를 늦추고 피해를 입힙니다. 버섯 위에 새 버섯을 던지면 튕겨나며 사거리가 늘어납니다.","tooltip":"가지고 있던 버섯으로 적이 밟으면 폭발하는 함정을 만듭니다. 함정이 터지면 독이 퍼져 주변 적의 이동 속도가 {{ e2 }}% 감소하고 {{ e9 }}초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />함정은 {{ e5 }}분 동안 유지되며, 작동 준비를 마치고 은신할 때까지 {{ e4 }}초가 소요됩니다. 함정 위에 또 함정을 던지면 튕겨서 최대 <span class=\"colorFFFF99\">{{ e6 }}</span> 티모미터까지 간 다음 설치됩니다.<br /><br />티모는 매 <span class=\"colorFFFFFF\">{{ f1 }}</span>초마다 버섯을 하나 찾아내지만 몸집이 작아서 한 번에 3개만 가지고 다닐 수 있습니다.","sanitizedTooltip":"가지고 있던 버섯으로 적이 밟으면 폭발하는 함정을 만듭니다. 함정이 터지면 독이 퍼져 주변 적의 이동 속도가 {{ e2 }}% 감소하고 {{ e9 }}초 동안 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 함정은 {{ e5 }}분 동안 유지되며, 작동 준비를 마치고 은신할 때까지 {{ e4 }}초가 소요됩니다. 함정 위에 또 함정을 던지면 튕겨서 최대 {{ e6 }} 티모미터까지 간 다음 설치됩니다. 티모는 매 {{ f1 }}초마다 버섯을 하나 찾아내지만 몸집이 작아서 한 번에 3개만 가지고 다닐 수 있습니다.","leveltip":{"label":["피해량","둔화","튕기는 최대 범위","수색 타이머","시전 사거리"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }}% -> {{ e2NL }}%","{{ e6 }} 티모미터 -> {{ e6NL }} 티모미터"," {{ f1 }} -> {{ f2 }}"," {{ e8 }} -> {{ e8NL }}"]},"image":{"full":"TeemoRCast.png","sprite":"spell11.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[75,75,75],"costBurn":"75","cooldown":[0.25,0.25,0.25],"cooldownBurn":"0.25","effect":[null,[200,325,450],[30,40,50],[75,75,75],[1,1,1],[5,5,5],[3,4,5],[30,25,20],[400,650,900],[4,4,4],[450,450,450]],"effectBurn":["","200/325/450","30/40/50","75","1","5","3/4/5","30/25/20","400/650/900","4","450"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[400,650,900],"rangeBurn":"400/650/900","key":"TeemoRCast"}],"passive":{"name":"유격 전투","description":"티모가 아무 행동도 하지 않고 잠시 서 있으면 무기한 투명 상태가 됩니다. 수풀 속에서는 이동 중에도 투명 상태에 돌입해 유지할 수 있습니다 투명 상태에서 벗어나면 기습공격 효과를 얻어 3초간 공격 속도가 증가합니다.","sanitizedDescription":"티모가 아무 행동도 하지 않고 잠시 서 있으면 무기한 투명 상태가 됩니다. 수풀 속에서는 이동 중에도 투명 상태에 돌입해 유지할 수 있습니다 투명 상태에서 벗어나면 기습공격 효과를 얻어 3초간 공격 속도가 증가합니다.","image":{"full":"Teemo_P.png","sprite":"passive3.png","group":"passive","x":0,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Teemo","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1052,"count":1},{"id":3136,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3136,"count":1},{"id":1026,"count":1},{"id":3151,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3115,"count":1},{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Teemo","title":"TeemoARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3146,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Teemo","title":"TeemoCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3136,"count":1},{"id":1001,"count":1},{"id":2033,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3151,"count":1},{"id":3020,"count":1},{"id":3115,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Teemo","title":"TeemoFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3136,"count":1},{"id":1001,"count":1},{"id":2033,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3151,"count":1},{"id":3020,"count":1},{"id":3115,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3157,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2043,"count":1}]}]},{"champion":"Teemo","title":"TeemoKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3146,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Teemo","title":"TeemoSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3151,"count":1},{"id":3020,"count":1},{"id":3115,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]}]},{"champion":"Teemo","title":"TeemoSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3136,"count":1},{"id":1001,"count":1},{"id":2033,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3151,"count":1},{"id":3020,"count":1},{"id":3115,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1043,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1},{"id":3115,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3085,"count":1},{"id":3124,"count":1},{"id":3153,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3091,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Teemo","title":"TeemoTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"early","recMath":false,"items":[{"id":3136,"count":1},{"id":3020,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3090,"count":1},{"id":3151,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3030,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Annie":{"id":1,"key":"Annie","name":"애니","title":"어둠의 아이","image":{"full":"Annie.png","sprite":"champion0.png","group":"champion","x":288,"y":0,"w":48,"h":48},"skins":[{"id":1000,"name":"default","num":0},{"id":1001,"name":"고스족 애니","num":1},{"id":1002,"name":"빨간 모자 애니","num":2},{"id":1003,"name":"이상한 나라의 애니","num":3},{"id":1004,"name":"퀸카 애니","num":4},{"id":1005,"name":"얼음불꽃 애니","num":5},{"id":1006,"name":"티버 애니","num":6},{"id":1007,"name":"프랑켄티버 애니","num":7},{"id":1008,"name":"판다 애니","num":8},{"id":1009,"name":"사랑의 애니","num":9},{"id":1010,"name":"마법공학 애니","num":10},{"id":1011,"name":"슈퍼 갤럭시 애니","num":11}],"lore":"순수함 속에 아이답지 않은 위험한 모습을 간직한 애니는 불을 다루는 강력한 마법사다. 녹서스 북부의 산속에서 그림자처럼 숨어 지내면서도 그녀의 마법은 두각을 드러냈다. 아기였을 때부터 예측할 수 없는 감정의 분출과 함께 타고난 화염 친화성을 보인 애니는 곧 이런 '재주'를 제어할 수 있게 되었다. 화염을 두른 파괴적인 곰 '티버'를 곰 인형으로 소환하는 것을 좋아하고, 끝 모를 동심을 품은 애니는 언제나 어두운 숲을 거닐며 같이 놀 누군가를 찾고 있다.","blurb":"순수함 속에 아이답지 않은 위험한 모습을 간직한 애니는 불을 다루는 강력한 마법사다. 녹서스 북부의 산속에서 그림자처럼 숨어 지내면서도 그녀의 마법은 두각을 드러냈다. 아기였을 때부터 예측할 수 없는 감정의 분출과 함께 타고난 화염 친화성을 보인 애니는 곧 이런 '재주'를 제어할 수 있게 되었다. 화염을 두른 파괴적인 곰 '티버'를 곰 인형으로 소환하는 것을 좋아하고, 끝 모를 동심을 품은 애니는 언제나 어두운 숲을 거닐며 같이 놀 누군가를 찾고 있다.","allytips":["- 기절 효과를 아껴두다가 중요할 때 궁극기와 연계하여 사용하십시오. 전황을 바꿔놓을 수도 있습니다.","- 미니언에게 붕괴 스킬로 결정타를 날리면 게임 초반 빠른 성장을 기대할 수 있습니다.","- 용암 방패는 애니의 기절 효과를 활성화하는 데 사용할 수 있으므로 초반에 1레벨 정도 투자하는 것이 좋습니다."],"enemytips":["- 애니가 소환하는 곰 티버는 주변의 적에게 피해를 줍니다. 티버가 소환되면 가능한 한 멀리 떨어져 있으십시오.","- 소환사 주문 강타를 이용하면 티버를 제거하는데 도움이 됩니다.","- 애니 주변에 백색 소용돌이가 생겼다면 주의하십시오. 애니가 사용하는 다음 스킬에 기절 효과가 붙습니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":3,"magic":10,"difficulty":6},"stats":{"armor":19.22,"armorperlevel":4,"attackdamage":50.41,"attackdamageperlevel":2.625,"attackrange":575,"attackspeedoffset":0.08,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":524,"hpperlevel":88,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":335,"mp":334,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"붕괴","description":"애니가 마나로 가득 찬 화염구를 던져 피해를 입히고 결정타를 냈을 때 사용한 마나를 되돌려 받습니다.","sanitizedDescription":"애니가 마나로 가득 찬 화염구를 던져 피해를 입히고 결정타를 냈을 때 사용한 마나를 되돌려 받습니다.","tooltip":"{{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 붕괴로 적을 처치하면 사용한 마나가 다시 회복되며 재사용 대기시간이 절반으로 줄어듭니다.","sanitizedTooltip":"{{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 붕괴로 적을 처치하면 사용한 마나가 다시 회복되며 재사용 대기시간이 절반으로 줄어듭니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"Disintegrate.png","sprite":"spell1.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[80,115,150,185,220],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/115/150/185/220","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"Disintegrate"},{"name":"소각","description":"애니가 원뿔 형태의 화염을 내뿜어 해당 지역에 있는 모든 적에게 피해를 입힙니다.","sanitizedDescription":"애니가 원뿔 형태의 화염을 내뿜어 해당 지역에 있는 모든 적에게 피해를 입힙니다.","tooltip":"원뿔 모양의 불을 발사하여 해당 지역에 있는 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"원뿔 모양의 불을 발사하여 해당 지역에 있는 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"Incinerate.png","sprite":"spell1.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[70,115,160,205,250],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.85]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"Incinerate"},{"name":"용암 방패","description":"애니와 티버가 입는 피해가 일정 비율로 감소하고 기본 공격을 가하는 적에게 피해를 입힙니다.","sanitizedDescription":"애니와 티버가 입는 피해가 일정 비율로 감소하고 기본 공격을 가하는 적에게 피해를 입힙니다.","tooltip":"{{ e3 }}초 동안 애니와 티버가 입는 피해량이 {{ e1 }}% 감소합니다.<br /><br />방패가 활성화된 동안 기본 공격을 가하는 적은 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다.","sanitizedTooltip":"{{ e3 }}초 동안 애니와 티버가 입는 피해량이 {{ e1 }}% 감소합니다. 방패가 활성화된 동안 기본 공격을 가하는 적은 {{ e2 }} (+{{ a1 }})의 마법 피해를 입습니다.","leveltip":{"label":["피해량 감소","반사 피해량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"MoltenShield.png","sprite":"spell1.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[16,22,28,34,40],[20,30,40,50,60],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","16/22/28/34/40","20/30/40/50/60","3","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[0,0,0,0,0],"rangeBurn":"0","key":"MoltenShield"},{"name":"소환: 티버","description":"애니가 자신의 곰 티버를 되살려 지정 구역에 있는 유닛에게 피해를 입힙니다. 티버는 주변의 적을 공격하거나 불태울 수도 있습니다.","sanitizedDescription":"애니가 자신의 곰 티버를 되살려 지정 구역에 있는 유닛에게 피해를 입힙니다. 티버는 주변의 적을 공격하거나 불태울 수도 있습니다.","tooltip":"티버를 소환해 대상 위치의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 티버는 45초간 근처의 적에게 초당 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 피해를 입히고 적을 공격해 {{ e3 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 마법 피해를 입힙니다. 이 스킬을 재사용하면 티버를 조종할 수 있습니다.<br /><br />티버 <span class=\"colorFFEB7F\">분노</span> 소환되었을 때 / 애니가 적 챔피언에게 방화광 스킬을 사용했을 때 / 애니가 죽었을 때 발동<br /><br /><span class=\"colorFFEB7F\">분노</span>: 티버의 공격 속도가 275%, 이동 속도가 100% 상승한 뒤 3초에 걸쳐 기존 상태로 돌아옵니다.","sanitizedTooltip":"티버를 소환해 대상 위치의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 티버는 45초간 근처의 적에게 초당 {{ e2 }} (+{{ a2 }})의 피해를 입히고 적을 공격해 {{ e3 }} (+{{ f1 }})의 마법 피해를 입힙니다. 이 스킬을 재사용하면 티버를 조종할 수 있습니다. 티버 분노 소환되었을 때 / 애니가 적 챔피언에게 방화광 스킬을 사용했을 때 / 애니가 죽었을 때 발동 분노: 티버의 공격 속도가 275%, 이동 속도가 100% 상승한 뒤 3초에 걸쳐 기존 상태로 돌아옵니다.","leveltip":{"label":["피해량","티버 체력","티버 방어력과 마법 저항력","티버 공격력","티버 화염 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e0 }} -> {{ e0NL }}","{{ e7 }} -> {{ e7NL }}","{{ e3 }} -> {{ e3NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"InfernalGuardian.png","sprite":"spell1.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[150,275,400],[10,15,20],[50,75,100],[-0.1,-0.1,-0.1],[1,1,1],[3,3,3],[30,50,70],[0,900,1800],[0.15,0.15,0.15],[1200,2100,3000]],"effectBurn":["","150/275/400","10/15/20","50/75/100","-0.1","1","3","30/50/70","0/900/1800","0.15","1200/2100/3000"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.65]},{"key":"a2","link":"spelldamage","coeff":[0.1]}],"range":[600,600,600],"rangeBurn":"600","key":"InfernalGuardian"}],"passive":{"name":"방화광","description":"애니가 스킬을 4번 시전한 후 다음 공격 스킬에 맞은 적은 잠시 기절합니다.","sanitizedDescription":"애니가 스킬을 4번 시전한 후 다음 공격 스킬에 맞은 적은 잠시 기절합니다.","image":{"full":"Annie_Passive.png","sprite":"passive0.png","group":"passive","x":288,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Annie","title":"AnnieARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3152,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Annie","title":"AnnieCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3029,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Annie","title":"AnnieFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Annie","title":"AnnieKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3152,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Annie","title":"AnnieSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3029,"count":1},{"id":3001,"count":1}]}]},{"champion":"Annie","title":"AnnieSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3027,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Annie","title":"AnnieTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3135,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Annie","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3165,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3027,"count":1},{"id":3116,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]}]}]},"Mordekaiser":{"id":82,"key":"Mordekaiser","name":"모데카이저","title":"강철의 망령","image":{"full":"Mordekaiser.png","sprite":"champion2.png","group":"champion","x":96,"y":48,"w":48,"h":48},"skins":[{"id":82000,"name":"default","num":0},{"id":82001,"name":"용기사 모데카이저","num":1},{"id":82002,"name":"지옥의 모데카이저","num":2},{"id":82003,"name":"펜타킬 모데카이저","num":3},{"id":82004,"name":"모데카이저 경","num":4},{"id":82005,"name":"클로버의 킹 모데카이저","num":5}],"lore":"악의로 가득한 모데카이저는 그림자 군도에 출몰하는 악령 중에서도 가장 끔찍하고 흉악한 존재다. 어두운 의지와 사악한 마법의 힘으로 무수한 세월 진정한 죽음을 피해 온 모데카이저는 감히 자신에게 맞서는 자들에게 무시무시한 저주를 내린다. 이 저주를 받고 모데카이저의 손에 쓰러진 자들은, 그 영혼을 저주의 노예로 빼앗겨 또 다른 파괴의 도구가 되는 것이다.","blurb":"악의로 가득한 모데카이저는 그림자 군도에 출몰하는 악령 중에서도 가장 끔찍하고 흉악한 존재다. 어두운 의지와 사악한 마법의 힘으로 무수한 세월 진정한 죽음을 피해 온 모데카이저는 감히 자신에게 맞서는 자들에게 무시무시한 저주를 내린다. 이 저주를 받고 모데카이저의 손에 쓰러진 자들은, 그 영혼을 저주의 노예로 빼앗겨 또 다른 파괴의 도구가 되는 것이다.","allytips":["- Alt 키를 누른 상태로 마우스 오른쪽 버튼을 눌러 유령이 된 챔피언을 조종할 수 있습니다.","- 때때로 공격이 최선의 방어가 될 때가 있습니다. 모데카이저의 보호막 충전 효과를 활용하십시오.","- 무덤의 자식들은 체력을 채우는 데 쓸 수 있으므로 방어용으로도 사용할 수 있습니다."],"enemytips":["- 모데카이저는 보호막을 생성하여 오랫동안 공격을 버텨낼 수 있는 능력이 있습니다. 모데카이저와 싸울 때는 화력을 집중하여 한 번에 쓰러뜨리십시오.","- 거리를 유지한 채 미니언이 모인 곳에 가까이 다가가지 마십시오. 모데카이저가 파멸의 흡수를 사용하여 피해를 줄 가능성이 높습니다.","- 무덤의 자식들과 점화 조합을 조심하세요. 순식간에 당한 후 모데카이저의 유령이 될 수도 있습니다."],"tags":["Fighter"],"partype":"보호막 ","info":{"attack":4,"defense":6,"magic":7,"difficulty":4},"stats":{"armor":25,"armorperlevel":3.75,"attackdamage":61,"attackdamageperlevel":5,"attackrange":175,"attackspeedoffset":0.04,"attackspeedperlevel":2.2,"crit":0,"critperlevel":0,"hp":530,"hpperlevel":78,"hpregen":4,"hpregenperlevel":0.3,"movespeed":325,"mp":0,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"스페이드의 철퇴","description":"모데카이저의 다음 세 번의 공격은 추가 피해량이 점점 늘어납니다.","sanitizedDescription":"모데카이저의 다음 세 번의 공격은 추가 피해량이 점점 늘어납니다.","tooltip":"모데카이저의 다음 세 번의 공격이 강화됩니다. 첫 번째와 두 번째 공격은 {{ e3 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ f2 }})</span>의 추가 마법 피해를 입힙니다. 마지막 공격은 첫 번째와 두 번째 공격 추가 피해량의 {{ e9 }}배를 추가로 입히며, 최대 {{ f5 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span> <span class=\"color99FF99\">(+{{ f4 }})</span>의 피해를 줍니다.","sanitizedTooltip":"모데카이저의 다음 세 번의 공격이 강화됩니다. 첫 번째와 두 번째 공격은 {{ e3 }} (+{{ f1 }}) (+{{ f2 }})의 추가 마법 피해를 입힙니다. 마지막 공격은 첫 번째와 두 번째 공격 추가 피해량의 {{ e9 }}배를 추가로 입히며, 최대 {{ f5 }} (+{{ f3 }}) (+{{ f4 }})의 피해를 줍니다.","leveltip":{"label":["추가 피해량","공격력 계수","재사용 대기시간","체력 소모량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e0 }} -> {{ e0NL }}"]},"image":{"full":"MordekaiserMaceOfSpades.png","sprite":"spell7.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"체력 {{ e0 }} 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":" 소모","costBurn":"0","cooldown":[10,8.5,7,5.5,4],"cooldownBurn":"10/8.5/7/5.5/4","effect":[null,[132,181.5,231,280.5,330],[10,15,20,25,30],[10,20,30,40,50],[4,4,4,4,4],[30,60,90,120,150],[20,225,250,275,300],[0.5,0.6,0.7,0.8,0.9],[0.6,0.6,0.6,0.6,0.6],[2,2,2,2,2],[20,23,26,29,32]],"effectBurn":["","132/181.5/231/280.5/330","10/15/20/25/30","10/20/30/40/50","4","30/60/90/120/150","20/225/250/275/300","0.5/0.6/0.7/0.8/0.9","0.6","2","20/23/26/29/32"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1.65]},{"key":"f2","link":"bonusattackdamage","coeff":[1]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"MordekaiserMaceOfSpades"},{"name":"슬픔을 거두는 자","description":"아군을 자성 금속으로 감싸, 각 유닛이 서로를 향해 이동할 때 이동 속도가 상승합니다. 해당 유닛들이 서로 가까이 있으면 금속이 격렬하게 회오리쳐서 적들에게 매초 피해를 입힙니다","sanitizedDescription":"아군을 자성 금속으로 감싸, 각 유닛이 서로를 향해 이동할 때 이동 속도가 상승합니다. 해당 유닛들이 서로 가까이 있으면 금속이 격렬하게 회오리쳐서 적들에게 매초 피해를 입힙니다","tooltip":"<span class=\"size18 colorFF9900\">기본 지속 효과:</span> 모데카이저는 아군 챔피언이 근처에 있을 때 미니언을 처치하면 추가 경험치를 얻습니다.<br /><br />획득한 추가 경험치: <span class=\"colorFFFFFF\">{{ f3 }}</span><br /><br /><span class=\"size18 colorFF9900\">사용 시:</span> 아군 하나를 지정하여 모데카이저에게 연결:<span class=\"size4\"><br /><br /></span><li>서로를 향해 이동할 때 이동 속도가 최대 {{ e5 }}까지 상승합니다.<span class=\"size8\"><br /><br /></span>스킬 적용 범위가 닿으면, 4초에 걸쳐 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주변 적들에게 입힙니다.<span class=\"size8\"><br /><br /></span>스킬을 다시 시전하면 각자 주변 적들로부터 즉시 {{ e6 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 체력을 훔칩니다. (미니언의 경우 {{ e7 }}%만큼 회복하며, 최대 {{ e8 }}개 유닛을 대상으로 마법 피해를 입힙니다.)","sanitizedTooltip":"기본 지속 효과: 모데카이저는 아군 챔피언이 근처에 있을 때 미니언을 처치하면 추가 경험치를 얻습니다. 획득한 추가 경험치: {{ f3 }} 사용 시: 아군 하나를 지정하여 모데카이저에게 연결: 서로를 향해 이동할 때 이동 속도가 최대 {{ e5 }}까지 상승합니다. 스킬 적용 범위가 닿으면, 4초에 걸쳐 {{ e2 }} (+{{ a1 }})의 마법 피해를 주변 적들에게 입힙니다. 스킬을 다시 시전하면 각자 주변 적들로부터 즉시 {{ e6 }} (+{{ a2 }})의 체력을 훔칩니다. (미니언의 경우 {{ e7 }}%만큼 회복하며, 최대 {{ e8 }}개 유닛을 대상으로 마법 피해를 입힙니다.)","leveltip":{"label":["피해량","재시전 피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e6 }} -> {{ e6NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"MordekaiserCreepingDeathCast.png","sprite":"spell7.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"체력 {{ e3 }} 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":" 소모","costBurn":"0","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[20,30,40,50,60],[140,180,220,260,300],[25,35,45,55,65],[1,1,1,1,1],[75,75,75,75,75],[50,85,120,155,190],[25,25,25,25,25],[2,2,2,2,2],[50,50,50,50,50],[0,0,0,0,0]],"effectBurn":["","20/30/40/50/60","140/180/220/260/300","25/35/45/55/65","1","75","50/85/120/155/190","25","2","50","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"MordekaiserCreepingDeathCast"},{"name":"파멸의 흡수","description":"모데카이저가 정면의 원뿔 지역에 있는 적들에게 피해를 입힙니다. 모데카이저는 공격한 대상마다 추가 보호막을 얻습니다.","sanitizedDescription":"모데카이저가 정면의 원뿔 지역에 있는 적들에게 피해를 입힙니다. 모데카이저는 공격한 대상마다 추가 보호막을 얻습니다.","tooltip":"모데카이저가 원뿔 지역에 {{ e3 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span><span class=\"color99FF99\"> (+{{ a1 }})</span>의 마법 피해를 입힙니다.<span class=\"size8\"><br /><br /></span>적중한 챔피언 하나당 최대 {{ e5 }}%의 보호막을 얻습니다.","sanitizedTooltip":"모데카이저가 원뿔 지역에 {{ e3 }} (+{{ a1 }}) (+{{ a1 }})의 마법 피해를 입힙니다. 적중한 챔피언 하나당 최대 {{ e5 }}%의 보호막을 얻습니다.","leveltip":{"label":["피해량","재사용 대기시간","챔피언 공격으로 얻는 보호막 효과 최대 %","체력 소모량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e5 }}% -> {{ e5NL }}%","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"MordekaiserSyphonOfDestruction.png","sprite":"spell7.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"체력 {{ e1 }} 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":" 소모","costBurn":"0","cooldown":[6,5.75,5.5,5.25,5],"cooldownBurn":"6/5.75/5.5/5.25/5","effect":[null,[24,36,48,60,72],[1,2,3,4,5],[35,65,95,125,155],[4,4,4,4,4],[15,17.5,20,22.5,25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","24/36/48/60/72","1/2/3/4/5","35/65/95/125/155","4","15/17.5/20/22.5/25","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.6]},{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"MordekaiserSyphonOfDestruction"},{"name":"무덤의 자식들","description":"모데카이저가 적 챔피언이나 드래곤을 저주하여 매 초마다 적 체력의 일정 비율을 훔쳐갑니다. 대상이 이 마법에 걸린 상태에서 쓰러지면 이들의 영혼은 모데카이저의 노예가 됩니다.","sanitizedDescription":"모데카이저가 적 챔피언이나 드래곤을 저주하여 매 초마다 적 체력의 일정 비율을 훔쳐갑니다. 대상이 이 마법에 걸린 상태에서 쓰러지면 이들의 영혼은 모데카이저의 노예가 됩니다.","tooltip":"<span class=\"size18 colorFF9900\">기본 지속 효과 - 드래곤의 힘:</span> 드래곤에게 피해를 입히면 10초 동안 <span class=\"size18 color53c653\">저주</span>를 걸게 됩니다.<br /><br /><span class=\"size18 colorFF9900\">사용 시:</span> 대상 챔피언에게 <span class=\"size18 color53c653\">저주</span>를 걸어, 대상 최대 체력의 {{ e1 }}% <span class=\"color99FF99\">(+{{ a1 }}%)</span>를 훔칩니다. (최초에 25%, 이후 10초에 걸쳐 나머지 75%를 훔치며 마법 피해를 입힙니다.)<br /><br /><span class=\"size18 color53c653\">저주 효과:</span> 저주 받은 유닛은 모데카이저의 아군에게 처치 당하면 {{ e9 }}초 동안 모데카이저의 노예가 됩니다. 모데카이저는 노예가 된 적 주문력의 {{ e7 }}%와 추가 체력의 {{ e8 }}%를 얻습니다. 유령 노예는 <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 공격력과 <span class=\"colorCC3300\">(+{{ f2 }})</span>의 체력을 얻습니다.<br /><br /><span class=\"color53c653\">유령 노예는 alt 키를 누른 채로 마우스 오른쪽 버튼을 누르거나 이 스킬을 다시 한 번 사용하여 조종할 수 있습니다.</span>","sanitizedTooltip":"기본 지속 효과 - 드래곤의 힘: 드래곤에게 피해를 입히면 10초 동안 저주를 걸게 됩니다. 사용 시: 대상 챔피언에게 저주를 걸어, 대상 최대 체력의 {{ e1 }}% (+{{ a1 }}%)를 훔칩니다. (최초에 25%, 이후 10초에 걸쳐 나머지 75%를 훔치며 마법 피해를 입힙니다.) 저주 효과: 저주 받은 유닛은 모데카이저의 아군에게 처치 당하면 {{ e9 }}초 동안 모데카이저의 노예가 됩니다. 모데카이저는 노예가 된 적 주문력의 {{ e7 }}%와 추가 체력의 {{ e8 }}%를 얻습니다. 유령 노예는 (+{{ f1 }})의 공격력과 (+{{ f2 }})의 체력을 얻습니다. 유령 노예는 alt 키를 누른 채로 마우스 오른쪽 버튼을 누르거나 이 스킬을 다시 한 번 사용하여 조종할 수 있습니다.","leveltip":{"label":["훔친 총 체력","재사용 대기시간","유령 생존 시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ e9 }} -> {{ e9NL }}"]},"image":{"full":"MordekaiserChildrenOfTheGrave.png","sprite":"spell7.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[25,30,35],[55,65,75],[75,150,225],[2,2,2],[3,3,3],[10,25,50],[30,30,30],[25,25,25],[45,60,75],[2000,2000,2000]],"effectBurn":["","25/30/35","55/65/75","75/150/225","2","3","10/25/50","30","25","45/60/75","2000"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.04]}],"range":[650,650,650],"rangeBurn":"650","key":"MordekaiserChildrenOfTheGrave"}],"passive":{"name":"철인","description":"스킬로 입히는 피해량에 비례해 보호막을 생성합니다.","sanitizedDescription":"스킬로 입히는 피해량에 비례해 보호막을 생성합니다.","image":{"full":"MordekaiserPassive.png","sprite":"passive2.png","group":"passive","x":96,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Mordekaiser","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1052,"count":1},{"id":1058,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1011,"count":1},{"id":1058,"count":1},{"id":3116,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3001,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3146,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3053,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3067,"count":1},{"id":3145,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3152,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3078,"count":1},{"id":3089,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3097,"count":1},{"id":3044,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3053,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2043,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3146,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3152,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3078,"count":1},{"id":3089,"count":1},{"id":3053,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3067,"count":1},{"id":3145,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3152,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3742,"count":1},{"id":3001,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3078,"count":1},{"id":3089,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Mordekaiser","title":"MordekaiserTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":3302,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3146,"count":1},{"id":3135,"count":1},{"id":3090,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3001,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Azir":{"id":268,"key":"Azir","name":"아지르","title":"사막의 황제","image":{"full":"Azir.png","sprite":"champion0.png","group":"champion","x":432,"y":0,"w":48,"h":48},"skins":[{"id":268000,"name":"default","num":0},{"id":268001,"name":"은하계 아지르","num":1},{"id":268002,"name":"죽음의 군주 아지르","num":2},{"id":268003,"name":"SKT T1 아지르","num":3},{"id":268004,"name":"대장군 아지르","num":4}],"lore":"불멸을 꿈꾸던 고대 슈리마의 거만한 황제, 아지르. 그의 오만은 생애 최전성기에 그를 배반과 죽음으로 몰아 넣었다. 그 후 수천 년이 흘렀고, 아지르는 가공할 힘을 지닌 초월체로 다시 태어났다. 사막 아래 묻혀 있던 그의 도시가 지표면 위로 솟아 오르는 장관을 목도하며 아지르는 슈리마 제국의 옛 영광을 되살리겠다고 다짐한다.","blurb":"불멸을 꿈꾸던 고대 슈리마의 거만한 황제, 아지르. 그의 오만은 생애 최전성기에 그를 배반과 죽음으로 몰아 넣었다. 그 후 수천 년이 흘렀고, 아지르는 가공할 힘을 지닌 초월체로 다시 태어났다. 사막 아래 묻혀 있던 그의 도시가 지표면 위로 솟아 오르는 장관을 목도하며 아지르는 슈리마 제국의 옛 영광을 되살리겠다고 다짐한다.","allytips":["- 일어나라! 스킬로 병사를 둘 다 투입할 때는 주의하세요! 모든 것을 걸고 한 방을 노리는 순간이 아니라면, 하나를 아껴뒀다가 벽 뒤로 피할 때 사용하세요. 병사 하나의 위치를 잘못 잡았다 해도 나머지 하나로 좋은 위치에서 피해를 가할 수 있습니다.","- 공격로 대치 단계에서는 병사들을 적 미니언과 적 챔피언 사이에 배치하세요. 이러면 최후의 일격을 놓치지 않으면서 적에게도 위협을 가할 수 있습니다.","- 황제의 진영은 절대적인 방어 스킬로 여겨야 합니다. 적이 아군에게 팀간 전투를 개시할 때 사용하세요. 아군은 소환된 방패 병사를 통과할 수 있으므로, 적의 근접 챔피언들이 접근할 때 활용하면 좋습니다.","- 새가 되어 보세요!"],"enemytips":["- 아지르는 공격력의 대부분을 모래 병사에 의존하며, 모래 병사를 자주 이동시킬 수 없습니다. 모래 병사가 고정되어 있는 시간을 최대한 이용하세요.","- 아지르는 오랜 시간에 걸쳐 지속적으로 큰 피해를 입힐 수 있지만, 다른 마법사에 비해 순간 화력은 부족합니다. 교전 시 빠르게 아지르에게 화력을 집중하는 편이 좋습니다.","- 모래 병사를 불이라고 생각하고, 불길 속에 서 있는 일을 피하세요."],"tags":["Mage","Marksman"],"partype":"마나","info":{"attack":6,"defense":3,"magic":8,"difficulty":9},"stats":{"armor":19.04,"armorperlevel":3,"attackdamage":52,"attackdamageperlevel":2.8,"attackrange":525,"attackspeedoffset":-0.02,"attackspeedperlevel":1.5,"crit":0,"critperlevel":0,"hp":552,"hpperlevel":92,"hpregen":6.9,"hpregenperlevel":0.55,"movespeed":335,"mp":350.56,"mpperlevel":42,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"사막의 맹습","description":"아지르가 모든 모래 병사를 특정 위치로 보냅니다. 모래 병사들은 통과하는 적에게 마법 피해를 입히고, 1초 둔화 효과를 적용합니다.","sanitizedDescription":"아지르가 모든 모래 병사를 특정 위치로 보냅니다. 모래 병사들은 통과하는 적에게 마법 피해를 입히고, 1초 둔화 효과를 적용합니다.","tooltip":"아지르가 모든 <span class=\"colorEED6AF\">모래 병사</span>를 특정 위치로 보냅니다. <span class=\"colorEED6AF\">모래 병사</span>는 통과하는 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히며 {{ e2 }}%의 둔화 효과를 1초간 적용합니다.<br /><br /><span class=\"colorEED6AF\">모래 병사</span>가 적을 여러 번 맞혀도 추가 피해는 입히지 못합니다.","sanitizedTooltip":"아지르가 모든 모래 병사를 특정 위치로 보냅니다. 모래 병사는 통과하는 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며 {{ e2 }}%의 둔화 효과를 1초간 적용합니다. 모래 병사가 적을 여러 번 맞혀도 추가 피해는 입히지 못합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f1 }} -> {{ f2 }}"]},"image":{"full":"AzirQWrapper.png","sprite":"spell1.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[70,95,120,145,170],[25,25,25,25,25],[11,9.5,8,6.5,5],[70,70,70,70,70],[1600,1600,1600,1600,1600],[200,200,200,200,200],[370,370,370,370,370],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/95/120/145/170","25","11/9.5/8/6.5/5","70","1600","200","370","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[740,740,740,740,740],"rangeBurn":"740","key":"AzirQWrapper"},{"name":"일어나라!","description":"아지르가 모래 병사를 소환하여 근처에 있는 대상을 공격합니다. 아지르의 기본 공격은 모래 병사의 공격 범위 내에 있는 대상에게 가해집니다. 아지르와 모래 병사의 공격은 일직선 상의 적들에게 마법 피해를 입힙니다. 일어나라!는 또한 기본 지속 효과로 아지르와 모래 병사들의 공격 속도를 상승시킵니다.","sanitizedDescription":"아지르가 모래 병사를 소환하여 근처에 있는 대상을 공격합니다. 아지르의 기본 공격은 모래 병사의 공격 범위 내에 있는 대상에게 가해집니다. 아지르와 모래 병사의 공격은 일직선 상의 적들에게 마법 피해를 입힙니다. 일어나라!는 또한 기본 지속 효과로 아지르와 모래 병사들의 공격 속도를 상승시킵니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 아지르의 공격 속도가 {{ e3 }}% 증가합니다. <span class=\"colorEED6AF\">모래 병사</span>의 수가 {{ e6 }}명 이상일 경우 {{ e8 }}초 동안 아지르의 공격 속도가 추가로 {{ e7 }}% 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 아지르가 <span class=\"colorEED6AF\">모래 병사</span> 하나를 {{ e1 }}초 동안 소환합니다. 아지르가 이 병사의 공격 범위 안에 있는 적을 공격하면 아지르 대신 모래 병사가 대상을 찔러 <scaleLevel>{{ f2 }}</scaleLevel> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 찌르는 경로에 있던 적은 <scaleLevel>{{ f7 }}%</scaleLevel>의 피해를 입습니다.<br /><br />아지르는 최대 {{ maxammo }} 명까지 <span class=\"colorEED6AF\">모래 병사</span>를 저장할 수 있습니다. 매 <span class=\"colorFFFFFF\">{{ f1 }}</span>초마다 새로운 병사가 하나씩 준비됩니다.<br /><br /><span class=\"color919191\"><i>여러 모래 병사가 같은 대상을 공격할 경우, 각 병사는 처음 공격 이후에는 {{ e9 }}%의 피해를 입힙니다.<br />아지르의 기본 공격 범위 밖에 있는 적이라도 모래 병사는 공격할 수 있습니다.<br />적 포탑 근처에서는 모래 병사가 두 배 빠르게 소멸됩니다.</i></span>","sanitizedTooltip":"기본 지속 효과: 아지르의 공격 속도가 {{ e3 }}% 증가합니다. 모래 병사의 수가 {{ e6 }}명 이상일 경우 {{ e8 }}초 동안 아지르의 공격 속도가 추가로 {{ e7 }}% 증가합니다. 사용 시: 아지르가 모래 병사 하나를 {{ e1 }}초 동안 소환합니다. 아지르가 이 병사의 공격 범위 안에 있는 적을 공격하면 아지르 대신 모래 병사가 대상을 찔러 {{ f2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 찌르는 경로에 있던 적은 {{ f7 }}%의 피해를 입습니다. 아지르는 최대 {{ maxammo }} 명까지 모래 병사를 저장할 수 있습니다. 매 {{ f1 }}초마다 새로운 병사가 하나씩 준비됩니다. 여러 모래 병사가 같은 대상을 공격할 경우, 각 병사는 처음 공격 이후에는 {{ e9 }}%의 피해를 입힙니다. 아지르의 기본 공격 범위 밖에 있는 적이라도 모래 병사는 공격할 수 있습니다. 적 포탑 근처에서는 모래 병사가 두 배 빠르게 소멸됩니다.","leveltip":{"label":["재충전","기본 지속 효과 공격 속도","병사 추가 공격 속도"],"effect":["{{ f1 }} -> {{ f3 }}","{{ e3 }}% -> {{ e3NL }}%","{{ e7 }}% -> {{ e7NL }}%"]},"image":{"full":"AzirW.png","sprite":"spell1.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[10,10,10,10,10],[8,7.5,7,6.5,6],[20,30,40,50,60],[0,0,0,0,0],[1.5,1.5,1.5,1.5,1.5],[3,3,3,3,3],[20,30,40,50,60],[5,5,5,5,5],[25,25,25,25,25],[0.5,0.5,0.5,0.5,0.5]],"effectBurn":["","10","8/7.5/7/6.5/6","20/30/40/50/60","0","1.5","3","20/30/40/50/60","5","25","0.5"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"AzirW"},{"name":"신기루","description":"아지르에게 잠시 보호막이 생성되고 아지르가 모래 병사 중 하나에게 질주하여 적에게 피해를 입힙니다. 적 챔피언에게 부딪친 경우에는 배치 가능한 새로운 모래 병사를 즉시 준비하고 질주를 멈춥니다.","sanitizedDescription":"아지르에게 잠시 보호막이 생성되고 아지르가 모래 병사 중 하나에게 질주하여 적에게 피해를 입힙니다. 적 챔피언에게 부딪친 경우에는 배치 가능한 새로운 모래 병사를 즉시 준비하고 질주를 멈춥니다.","tooltip":"아지르가 {{ e6 }}초 동안 최대 {{ e4 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 피해를 흡수하는 보호막을 얻고 <span class=\"colorEED6AF\">모래 병사</span> 중 하나에게 돌진하며, 부딪힌 적들에게 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />아지르가 적 챔피언과 부딪히면 돌진을 멈추고 즉시 새로운 <span class=\"colorEED6AF\">모래 병사</span>를 준비합니다.","sanitizedTooltip":"아지르가 {{ e6 }}초 동안 최대 {{ e4 }} (+{{ a2 }})의 피해를 흡수하는 보호막을 얻고 모래 병사 중 하나에게 돌진하며, 부딪힌 적들에게 {{ e3 }} (+{{ a1 }})의 마법 피해를 입힙니다. 아지르가 적 챔피언과 부딪히면 돌진을 멈추고 즉시 새로운 모래 병사를 준비합니다.","leveltip":{"label":["보호막 흡수량","피해량","재사용 대기시간"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e3 }} -> {{ e3NL }}","{{ f2 }} -> {{ f3 }}"]},"image":{"full":"AzirEWrapper.png","sprite":"spell1.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[1700,1700,1700,1700,1700],[19,18,17,16,15],[60,90,120,150,180],[80,120,160,200,240],[0.3,0.5,0.7,0.9,1.1],[1.5,1.5,1.5,1.5,1.5],[1100,1100,1100,1100,1100],[0,0,0,0,0],[5,5,5,5,5],[25,25,25,25,25]],"effectBurn":["","1700","19/18/17/16/15","60/90/120/150/180","80/120/160/200/240","0.3/0.5/0.7/0.9/1.1","1.5","1100","0","5","25"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.7]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"AzirEWrapper"},{"name":"황제의 진영","description":"아지르가 일렬 횡대의 병사들을 앞으로 돌진시켜 적들을 밀어내고 피해를 입힙니다.","sanitizedDescription":"아지르가 일렬 횡대의 병사들을 앞으로 돌진시켜 적들을 밀어내고 피해를 입힙니다.","tooltip":"아지르가 무장한 병사들을 일렬 횡대로 소환하여 돌진시키며, 적들을 밀어내고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 이후 병사들은 {{ e4 }}초 동안 벽처럼 유지됩니다.<br /><br />아지르와 아군은 황제의 진영 벽을 자유롭게 통과할 수 있습니다.<br /><br /><span class=\"color919191\"><i>황제의 진영은 아지르의 기본 공격이나 스킬 공격에 영향을 주지 않습니다.</i></span>","sanitizedTooltip":"아지르가 무장한 병사들을 일렬 횡대로 소환하여 돌진시키며, 적들을 밀어내고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이후 병사들은 {{ e4 }}초 동안 벽처럼 유지됩니다. 아지르와 아군은 황제의 진영 벽을 자유롭게 통과할 수 있습니다. 황제의 진영은 아지르의 기본 공격이나 스킬 공격에 영향을 주지 않습니다.","leveltip":{"label":["피해량","병사 수","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AzirR.png","sprite":"spell1.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[150,250,450],[0,0,0],[5,6,7],[3,3,3],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/450","0","5/6/7","3","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[250,250,250],"rangeBurn":"250","key":"AzirR"}],"passive":{"name":"슈리마의 유산","description":"아지르는 무너진 아군이나 적 포탑 위에 태양 포탑을 소환할 수 있습니다.","sanitizedDescription":"아지르는 무너진 아군이나 적 포탑 위에 태양 포탑을 소환할 수 있습니다.","image":{"full":"Azir_Passive.png","sprite":"passive0.png","group":"passive","x":432,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Azir","title":"AhriFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1004,"count":2},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3151,"count":1},{"id":3028,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3174,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3191,"count":1},{"id":3027,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2004,"count":1},{"id":2044,"count":1}]}]},{"champion":"Azir","title":"AzirARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3115,"count":1},{"id":3020,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3030,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Azir","title":"AzirCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3101,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3115,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3285,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Azir","title":"AzirFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3101,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3115,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3285,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Azir","title":"AzirKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3115,"count":1},{"id":3020,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Azir","title":"AzirSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3115,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3285,"count":1},{"id":3026,"count":1}]}]},{"champion":"Azir","title":"AzirSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3102,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3115,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Azir","title":"AzirTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3115,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3001,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Azir","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]}]},"Kennen":{"id":85,"key":"Kennen","name":"케넨","title":"폭풍의 심장","image":{"full":"Kennen.png","sprite":"champion1.png","group":"champion","x":192,"y":96,"w":48,"h":48},"skins":[{"id":85000,"name":"default","num":0},{"id":85001,"name":"무시무시한 케넨","num":1},{"id":85002,"name":"늪지의 은둔자 케넨","num":2},{"id":85003,"name":"공수도 케넨","num":3},{"id":85004,"name":"의사선생님 케넨","num":4},{"id":85005,"name":"설원 특공대 케넨","num":5},{"id":85006,"name":"불의 축제 케넨","num":6},{"id":85007,"name":"백만볼트 케넨","num":7}],"lore":"케넨은 아이오니아의 균형을 수호하는 번개같이 빠른 집행자이기도 하지만, 킨코우 결사단에서 유일한 요들이기도 하다. 작고 복실복실한 외모와는 달리 케넨은 수리검으로 일으키는 소용돌이 폭풍과 끝없는 열정으로 그 어떤 위협도 극복할 준비가 되어있다. 케넨은 사부인 쉔과 함께 영적인 영역을 순찰하며 엄청난 번개의 힘으로 적을 쓰러뜨린다.","blurb":"케넨은 아이오니아의 균형을 수호하는 번개같이 빠른 집행자이기도 하지만, 킨코우 결사단에서 유일한 요들이기도 하다. 작고 복실복실한 외모와는 달리 케넨은 수리검으로 일으키는 소용돌이 폭풍과 끝없는 열정으로 그 어떤 위협도 극복할 준비가 되어있다. 케넨은 사부인 쉔과 함께 영적인 영역을 순찰하며 엄청난 번개의 힘으로 적을 쓰러뜨린다.","allytips":["- 폭풍의 표식이 세 번 중첩되면 적이 기절합니다.","- 전투 시작 시 번개 질주를 사용한 후 기력을 돌려받아 다른 스킬을 쓸 수 있습니다.","- 적에게 천둥의 표창을 써서 폭풍의 표식을 건 후 전류 방출을 쓰면 폭풍의 표식을 중첩시킬 수 있습니다."],"enemytips":["- 폭풍의 표식에 걸렸을 때는 조심하여 케넨을 상대하십시오. 폭풍의 표식이 세 개 중첩되면 기절하게 됩니다.","- 케넨은 기본적으로 체력이 낮은 편입니다. 케넨이 번개 질주를 생각 없이 사용할 때 공격하도록 하십시오."],"tags":["Mage","Marksman"],"partype":"기력","info":{"attack":6,"defense":4,"magic":7,"difficulty":4},"stats":{"armor":29,"armorperlevel":3.75,"attackdamage":50.544,"attackdamageperlevel":3.3,"attackrange":550,"attackspeedoffset":-0.0947,"attackspeedperlevel":3.4,"crit":0,"critperlevel":0,"hp":541,"hpperlevel":84,"hpregen":5.592,"hpregenperlevel":0.65,"movespeed":335,"mp":200,"mpperlevel":0,"mpregen":50,"mpregenperlevel":0,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"천둥의 표창","description":"케넨이 빠르게 날아가는 수리검을 날려 맞은 대상에게 피해를 입히고 폭풍의 표식을 남깁니다.","sanitizedDescription":"케넨이 빠르게 날아가는 수리검을 날려 맞은 대상에게 피해를 입히고 폭풍의 표식을 남깁니다.","tooltip":"표창을 던져 명중하는 첫 번째 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"표창을 던져 명중하는 첫 번째 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","기력 소모량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KennenShurikenHurlMissile1.png","sprite":"spell5.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[60,55,50,45,40],"costBurn":"60/55/50/45/40","cooldown":[8,7,6,5,4],"cooldownBurn":"8/7/6/5/4","effect":[null,[75,115,155,195,235],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/115/155/195/235","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[950,950,950,950,950],"rangeBurn":"950","key":"KennenShurikenHurlMissile1"},{"name":"전류 방출","description":"케넨이 기본 공격을 몇 번 하면 힘을 충전하여 다음 기본 공격 대상에게 폭풍의 표식을 남깁니다. 스킬 활성화시 이미 표식이 있는 대상에게 피해를 주며 또 다른 폭풍의 표식을 남길 수 있습니다.","sanitizedDescription":"케넨이 기본 공격을 몇 번 하면 힘을 충전하여 다음 기본 공격 대상에게 폭풍의 표식을 남깁니다. 스킬 활성화시 이미 표식이 있는 대상에게 피해를 주며 또 다른 폭풍의 표식을 남길 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 5번째 공격마다 케넨이 {{ e2 }} <scaleAD>(+{{ f1 }})</scaleAD> <scaleAP>(+{{ a2 }})</scaleAP>의 추가 마법 피해를 입히고 대상에게 폭풍의 표식을 추가합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 폭풍의 표식이 있거나 날카로운 소용돌이에 적중당한 주변의 모든 적에게 전기를 뿜어내어 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"기본 지속 효과: 5번째 공격마다 케넨이 {{ e2 }} (+{{ f1 }}) (+{{ a2 }})의 추가 마법 피해를 입히고 대상에게 폭풍의 표식을 추가합니다. 사용 시: 폭풍의 표식이 있거나 날카로운 소용돌이에 적중당한 주변의 모든 적에게 전기를 뿜어내어 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량 (기본 지속 효과)","피해량 (사용 시)","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KennenBringTheLight.png","sprite":"spell5.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[14,12,10,8,6],"cooldownBurn":"14/12/10/8/6","effect":[null,[65,95,125,155,185],[15,20,25,30,35],[0.6,0.6,0.6,0.6,0.6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/95/125/155/185","15/20/25/30/35","0.6","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.55]}],"range":[725,725,725,725,725],"rangeBurn":"725","key":"KennenBringTheLight"},{"name":"번개 질주","description":"케넨이 번개로 변신하여 유닛 사이를 지나갈 수 있게 됩니다. 케넨과 부딪힌 적은 피해를 입고 폭풍의 표식이 남습니다.","sanitizedDescription":"케넨이 번개로 변신하여 유닛 사이를 지나갈 수 있게 됩니다. 케넨과 부딪힌 적은 피해를 입고 폭풍의 표식이 남습니다.","tooltip":"케넨이 2초 동안 유닛 사이로 매우 빠르게 움직이며 기본 이동 속도가 두 배로 증가하고, 지나간 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 4초간 {{ e2 }}의 방어력과 마법 저항력도 얻습니다.<br /><br />첫 번째 적을 뚫고 지나갈 때 케넨의 기력이 40 회복됩니다.<br />번개 질주는 미니언에게는 절반의 피해를 입힙니다.","sanitizedTooltip":"케넨이 2초 동안 유닛 사이로 매우 빠르게 움직이며 기본 이동 속도가 두 배로 증가하고, 지나간 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 4초간 {{ e2 }}의 방어력과 마법 저항력도 얻습니다. 첫 번째 적을 뚫고 지나갈 때 케넨의 기력이 40 회복됩니다. 번개 질주는 미니언에게는 절반의 피해를 입힙니다.","leveltip":{"label":["피해량","추가 방어력 및 마법 저항력","재사용 대기시간","기력 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KennenLightningRush.png","sprite":"spell5.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[100,95,90,85,80],"costBurn":"100/95/90/85/80","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[85,125,165,205,245],[10,20,30,40,50],[40,40,40,40,40],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","85/125/165/205/245","10/20/30/40/50","40","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[200,200,200,200,200],"rangeBurn":"200","key":"KennenLightningRush"},{"name":"날카로운 소용돌이","description":"케넨이 번개의 폭풍을 소환하여 근처 적 챔피언을 공격하고 마법 피해를 입힙니다.","sanitizedDescription":"케넨이 번개의 폭풍을 소환하여 근처 적 챔피언을 공격하고 마법 피해를 입힙니다.","tooltip":"{{ e3 }}초 동안 마법의 폭풍을 소환하여 {{ e2 }}초마다 케넨 근처에 있는 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 적은 날카로운 소용돌이에 맞을 때마다 폭풍의 표식이 최대 3번까지 중첩됩니다.<br /><br />동일한 적에게 다시 소용돌이를 맞히면 이미 맞힌 횟수에 비례해 {{ e4 }}%의 추가 피해를 입힙니다.","sanitizedTooltip":"{{ e3 }}초 동안 마법의 폭풍을 소환하여 {{ e2 }}초마다 케넨 근처에 있는 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 적은 날카로운 소용돌이에 맞을 때마다 폭풍의 표식이 최대 3번까지 중첩됩니다. 동일한 적에게 다시 소용돌이를 맞히면 이미 맞힌 횟수에 비례해 {{ e4 }}%의 추가 피해를 입힙니다.","leveltip":{"label":["피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"KennenShurikenStorm.png","sprite":"spell5.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[120,120,120],"cooldownBurn":"120","effect":[null,[40,75,110],[0.5,0.5,0.5],[3,3,3],[10,10,10],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","40/75/110","0.5","3","10","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[550,550,550],"rangeBurn":"550","key":"KennenShurikenStorm"}],"passive":{"name":"폭풍의 표식","description":"케넨이 스킬을 사용하면 대상에게 6초간 유지되는 폭풍의 표식이 남습니다. 폭풍의 표식이 3개가 되면 대상은 1.25초 동안 기절하며, 케넨은 25의 기력을 얻습니다.<br><br><font color='#99FF99'>6초 안에 다시 적을 기절시킬 경우 기절 시간이 0.5초 감소합니다.</font>","sanitizedDescription":"케넨이 스킬을 사용하면 대상에게 6초간 유지되는 폭풍의 표식이 남습니다. 폭풍의 표식이 3개가 되면 대상은 1.25초 동안 기절하며, 케넨은 25의 기력을 얻습니다. 6초 안에 다시 적을 기절시킬 경우 기절 시간이 0.5초 감소합니다.","image":{"full":"Kennen_Passive.png","sprite":"passive1.png","group":"passive","x":192,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Kennen","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1011,"count":1},{"id":1052,"count":1},{"id":1058,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3116,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3001,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Kennen","title":"KennenARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":1058,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3152,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kennen","title":"KennenCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3191,"count":1},{"id":1058,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3152,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kennen","title":"KennenFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3191,"count":1},{"id":1058,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3152,"count":1},{"id":3001,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kennen","title":"KennenKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1058,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3152,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kennen","title":"KennenSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3152,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3026,"count":1}]}]},{"champion":"Kennen","title":"KennenSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3145,"count":1},{"id":1001,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3152,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Kennen","title":"KennenTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1056,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1058,"count":1},{"id":3191,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3165,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Riven":{"id":92,"key":"Riven","name":"리븐","title":"추방자","image":{"full":"Riven.png","sprite":"champion3.png","group":"champion","x":48,"y":0,"w":48,"h":48},"skins":[{"id":92000,"name":"default","num":0},{"id":92001,"name":"구원받은 리븐","num":1},{"id":92002,"name":"핏빛 친위대 리븐","num":2},{"id":92003,"name":"전투 토끼 리븐","num":3},{"id":92004,"name":"챔피언십 리븐","num":4},{"id":92005,"name":"화룡검 리븐","num":5},{"id":92006,"name":"아케이드 리븐","num":6},{"id":92007,"name":"2016 챔피언십 리븐","num":7},{"id":92016,"name":"빛의 인도자 리븐","num":16}],"lore":"한 때 녹서스의 전투 지도자였던 리븐은 과거 자신이 점령하려고 했던 땅의 추방자이다. 리븐은 굳은 신념과 잔혹한 전투 효율성으로 빠르게 진급해 전설적인 룬 검을 하사받았지만, 아이오니아 전선에서 녹서스에 대한 리븐의 믿음은 흔들렸고 결국 깨지고야 만다. 녹서스 제국과의 모든 연을 끊어낸 리븐은 이제 부서진 검을 들고 용서할 수 없는 과거의 속죄를 위한 여행을 시작한다.","blurb":"한 때 녹서스의 전투 지도자였던 리븐은 과거 자신이 점령하려고 했던 땅의 추방자이다. 리븐은 굳은 신념과 잔혹한 전투 효율성으로 빠르게 진급해 전설적인 룬 검을 하사받았지만, 아이오니아 전선에서 녹서스에 대한 리븐의 믿음은 흔들렸고 결국 깨지고야 만다. 녹서스 제국과의 모든 연을 끊어낸 리븐은 이제 부서진 검을 들고 용서할 수 없는 과거의 속죄를 위한 여행을 시작한다.","allytips":["- 리븐의 부러진 날개 스킬은 마우스 커서가 올려져 있는 챔피언을 대상으로 합니다. 만약 적 챔피언 너머로 이동하고 싶다면 적 챔피언 앞쪽에 커서를 가져다 두십시오.","- 리븐은 치료 효과, 방어 효과를 가진 스킬이 부족하기 때문에 반드시 스킬 연계로 순간 화력을 뽑아내야 합니다. 부러진 날개와 기 폭발 스킬을 이용하여 전투에 진입한 뒤 용맹 스킬을 사용하여 전장에서 벗어나며 피해를 방어하십시오."],"enemytips":["- 리븐은 기동력이 매우 뛰어난 챔피언이지만 스킬 하나만 가지고는 멀리 움직일 수 없습니다. 스킬 연계 중 이동 불가 효과나 침묵 효과가 있는 스킬을 사용하면 리븐의 기동력을 크게 저하시킬 수 있습니다.","- 리븐이 가하는 피해는 전부 물리 피해입니다. 적 팀 리븐을 도저히 막을 수 없겠다 싶으면 방어력을 최우선으로 올리세요.","- 리븐은 광역 스킬이 많으므로, 리븐이 대부분의 스킬을 사용할 수 없는 상태가 아닌 한 다 같이 들어가지 마세요."],"tags":["Fighter","Assassin"],"partype":"없음","info":{"attack":8,"defense":5,"magic":1,"difficulty":8},"stats":{"armor":33,"armorperlevel":3.2,"attackdamage":64,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":558.48,"hpperlevel":86,"hpregen":5.34,"hpregenperlevel":0.5,"movespeed":340,"mp":0,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"부러진 날개","description":"리븐이 돌진하며 적을 베어 넘깁니다. 이 스킬은 세 번 사용할 수 있으며 세 번째로 사용할 때에는 맞은 적을 밀쳐냅니다. ","sanitizedDescription":"리븐이 돌진하며 적을 베어 넘깁니다. 이 스킬은 세 번 사용할 수 있으며 세 번째로 사용할 때에는 맞은 적을 밀쳐냅니다.","tooltip":"리븐이 전방으로 짧게 돌진합니다. 이 스킬은 {{ e4 }}회 다시 사용할 수 있습니다.<br /><br /><span class=\"colorDDDD77\">처음과 두 번째 사용 시:</span> 전방을 베며 리븐과 부딪힌 모든 유닛에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 줍니다.<br /><span class=\"colorDDDD77\">세 번째 사용 시:</span> 공중으로 뛰어 오른 후 땅을 내려찍으며 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 주는 동시에 떨어진 곳 주위의 적들을 띄워올립니다. 이 도약을 이용해 통과할 수 없는 지형을 가로지를 수 있습니다.<br /><br /><span class=\"colorDDDD77\">스킬 사용 시 커서를 유닛 위에 올려두면 해당 유닛을 대상으로 삼습니다. 어떤 대상도 지정하고 있지 않으면 리븐이 보고 있는 방향을 향해 돌진합니다.</span>","sanitizedTooltip":"리븐이 전방으로 짧게 돌진합니다. 이 스킬은 {{ e4 }}회 다시 사용할 수 있습니다. 처음과 두 번째 사용 시: 전방을 베며 리븐과 부딪힌 모든 유닛에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 줍니다. 세 번째 사용 시: 공중으로 뛰어 오른 후 땅을 내려찍으며 {{ e1 }} (+{{ f1 }})의 물리 피해를 주는 동시에 떨어진 곳 주위의 적들을 띄워올립니다. 이 도약을 이용해 통과할 수 없는 지형을 가로지를 수 있습니다. 스킬 사용 시 커서를 유닛 위에 올려두면 해당 유닛을 대상으로 삼습니다. 어떤 대상도 지정하고 있지 않으면 리븐이 보고 있는 방향을 향해 돌진합니다.","leveltip":{"label":["기본 피해량","공격력 증가"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%"]},"image":{"full":"RivenTriCleave.png","sprite":"spell9.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[13,13,13,13,13],"cooldownBurn":"13","effect":[null,[15,35,55,75,95],[30,55,80,105,130],[150,225,300,375,450],[2,2,2,2,2],[45,50,55,60,65],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/35/55/75/95","30/55/80/105/130","150/225/300/375/450","2","45/50/55/60/65","0","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.4,0.45,0.5,0.55,0.6]},{"key":"f1","link":"attackdamage","coeff":[0.4,0.45,0.5,0.55,0.6]}],"range":[275,275,275,275,275],"rangeBurn":"275","key":"RivenTriCleave"},{"name":"기 폭발","description":"리븐이 기를 폭발시켜 근처의 적에게 피해를 주며 기절시킵니다.","sanitizedDescription":"리븐이 기를 폭발시켜 근처의 적에게 피해를 주며 기절시킵니다.","tooltip":"리븐의 검에서 룬 에너지가 방출되어 주위에 있는 적에게 충격을 줍니다. {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 주며 {{ e5 }}초간 적을 기절시킵니다.","sanitizedTooltip":"리븐의 검에서 룬 에너지가 방출되어 주위에 있는 적에게 충격을 줍니다. {{ e1 }} (+{{ f1 }})의 물리 피해를 주며 {{ e5 }}초간 적을 기절시킵니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RivenMartyr.png","sprite":"spell9.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[11,10,9,8,7],"cooldownBurn":"11/10/9/8/7","effect":[null,[55,85,115,145,175],[40,70,100,130,160],[3,3,3,3,3],[0.75,0.75,0.75,0.75,0.75],[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/85/115/145/175","40/70/100/130/160","3","0.75","0.75","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1]}],"range":[260,260,260,260,260],"rangeBurn":"260","key":"RivenMartyr"},{"name":"용맹","description":"리븐이 짧은 거리를 나아가며 피해를 일부 흡수합니다.","sanitizedDescription":"리븐이 짧은 거리를 나아가며 피해를 일부 흡수합니다.","tooltip":"리븐이 보호막을 두르며 마우스 커서가 있는 방향으로 돌진합니다. 보호막은 {{ e2 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 피해를 흡수하며 1.5초 동안 지속됩니다.","sanitizedTooltip":"리븐이 보호막을 두르며 마우스 커서가 있는 방향으로 돌진합니다. 보호막은 {{ e2 }} (+{{ f1 }})의 피해를 흡수하며 1.5초 동안 지속됩니다.","leveltip":{"label":["피해 흡수량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RivenFeint.png","sprite":"spell9.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[95,125,155,185,215],[95,125,155,185,215],[4,4,4,4,4],[800,800,800,800,800],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","95/125/155/185/215","95/125/155/185/215","4","800","1.5","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1]}],"range":[250,250,250,250,250],"rangeBurn":"250","key":"RivenFeint"},{"name":"추방자의 검","description":"리븐이 자신의 옛 검에 힘을 불어넣어 추가 공격력과 공격 사거리를 얻습니다. 또한, 지속 시간동안 강력한 원거리 스킬인 바람 가르기를 한 번 사용할 수 있게 됩니다. ","sanitizedDescription":"리븐이 자신의 옛 검에 힘을 불어넣어 추가 공격력과 공격 사거리를 얻습니다. 또한, 지속 시간동안 강력한 원거리 스킬인 바람 가르기를 한 번 사용할 수 있게 됩니다.","tooltip":"리븐의 검이 정신력으로 충만하여 {{ e4 }}초 동안 공격력이 {{ e5 }}% 상승하며 <span class=\"colorFF8C00\">(+{{ f3 }})</span> 공격 스킬과 기본 공격의 사거리가 증가합니다. 또한 바람 가르기 스킬을 한 번 사용할 수 있게 됩니다.<br /><br /><span class=\"colorDDDD77\">바람 가르기:</span> 범위 내에 있는 모든 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> - {{ e2 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span> 사이의 물리 피해를 주는 충격파를 방출합니다. 적이 잃은 체력이 많을수록 더 많은 피해를 입힙니다.","sanitizedTooltip":"리븐의 검이 정신력으로 충만하여 {{ e4 }}초 동안 공격력이 {{ e5 }}% 상승하며 (+{{ f3 }}) 공격 스킬과 기본 공격의 사거리가 증가합니다. 또한 바람 가르기 스킬을 한 번 사용할 수 있게 됩니다. 바람 가르기: 범위 내에 있는 모든 적에게 {{ e1 }} (+{{ f1 }}) - {{ e2 }} (+{{ f2 }}) 사이의 물리 피해를 주는 충격파를 방출합니다. 적이 잃은 체력이 많을수록 더 많은 피해를 입힙니다.","leveltip":{"label":["충격파 피해","재사용 대기시간"],"effect":["{{ e1 }} / {{ e2 }} -> {{ e1NL }} / {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RivenFengShuiEngine.png","sprite":"spell9.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[130,95,60],"cooldownBurn":"130/95/60","effect":[null,[100,150,200],[300,450,600],[20,20,20],[15,15,15],[20,20,20],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/150/200","300/450/600","20","15","20","0","0","0","0","0"],"vars":[{"key":"f3","link":"bonusattackdamage","coeff":[0.2]},{"key":"f1","link":"bonusattackdamage","coeff":[0.6]},{"key":"f2","link":"bonusattackdamage","coeff":[1.8]}],"range":[200,200,200],"rangeBurn":"200","key":"RivenFengShuiEngine"}],"passive":{"name":"룬 검","description":"리븐이 스킬을 사용할 때마다 검에 에너지가 축적되어 기본 공격 시 추가 물리 피해를 가합니다. 이 효과는 최대 3번 중첩되며 공격할 때마다 한 번씩만 효과를 발휘합니다.","sanitizedDescription":"리븐이 스킬을 사용할 때마다 검에 에너지가 축적되어 기본 공격 시 추가 물리 피해를 가합니다. 이 효과는 최대 3번 중첩되며 공격할 때마다 한 번씩만 효과를 발휘합니다.","image":{"full":"RivenRunicBlades.png","sprite":"passive3.png","group":"passive","x":48,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Riven","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":2},{"id":3133,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1037,"count":1},{"id":3133,"count":1},{"id":3812,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3072,"count":1},{"id":3156,"count":1},{"id":3071,"count":1},{"id":3026,"count":1}]}]},{"champion":"Riven","title":"RivenARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Riven","title":"RivenCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Riven","title":"RivenFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":3340,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3158,"count":1},{"id":1412,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2032,"count":1},{"id":2140,"count":1}]}]},{"champion":"Riven","title":"RivenKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Riven","title":"RivenSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]}]},{"champion":"Riven","title":"RivenSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3044,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3158,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Riven","title":"RivenTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3036,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Chogath":{"id":31,"key":"Chogath","name":"초가스","title":"공허의 공포","image":{"full":"Chogath.png","sprite":"champion0.png","group":"champion","x":336,"y":48,"w":48,"h":48},"skins":[{"id":31000,"name":"default","num":0},{"id":31001,"name":"악몽의 초가스","num":1},{"id":31002,"name":"신사 초가스","num":2},{"id":31003,"name":"네스호 초가스","num":3},{"id":31004,"name":"쥬라기 초가스","num":4},{"id":31005,"name":"전투 기계 프라임 초가스","num":5},{"id":31006,"name":"선사시대 초가스","num":6}],"lore":"초가스가 룬테라의 찌르는 듯한 햇빛 아래 처음으로 모습을 드러낸 순간부터, 초가스는 가장 순수하고 끝없는 굶주림에 이끌려 움직였다. 초가스의 복잡한 생체조직은 모든 생명체를 먹어치우려는 공허의 욕망을 완벽하게 드러내며, 자신의 몸을 구성하는 물질을 성장시켜 새로운 물질로 빠르게 변화시켰다. 근육량과 밀도가 증가하고, 겉껍질이 마치 유기체로 된 다이아몬드처럼 딱딱해졌다. 공허의 생명체인 초가스는 몸집을 키워도 허기가 가시지 않자, 여분의 물질을 면도날처럼 날카로운 등뼈로 토해내 먹이를 꼬치로 꿰기 시작했다. 포식하기 쉽도록 말이다.","blurb":"초가스가 룬테라의 찌르는 듯한 햇빛 아래 처음으로 모습을 드러낸 순간부터, 초가스는 가장 순수하고 끝없는 굶주림에 이끌려 움직였다. 초가스의 복잡한 생체조직은 모든 생명체를 먹어치우려는 공허의 욕망을 완벽하게 드러내며, 자신의 몸을 구성하는 물질을 성장시켜 새로운 물질로 빠르게 변화시켰다. 근육량과 밀도가 증가하고, 겉껍질이 마치 유기체로 된 다이아몬드처럼 딱딱해졌다. 공허의 생명체인 초가스는 몸집을 키워도 허기가 가시지 않자, 여분의 물질을...","allytips":["- 날카로운 가시 스킬을 잘 조준하여 미니언을 처치하면서 동시에 적 챔피언도 견제해 보세요.","- 챔피언을 포식 스킬로 먹어 치우기 힘들다면 우선 미니언을 잡아먹어 체력을 키우십시오.","- 미니언을 파열 스킬로 한꺼번에 처리하면 육식 기본 지속 효과 덕택에 체력과 마나를 모두 확보할 수 있습니다."],"enemytips":["- 체력 아이템을 몇 개 사두면 초가스와 맞붙더라도 생존할 확률이 높아집니다.","- 초가스가 최대 크기로 성장하지 못하도록 저지하세요.","- 파열이 적중될 지역 위에는 연기구름이 생성됩니다. 연기구름이 생성되는지 잘 관찰해 초가스의 스킬 연계 공격을 막아 보세요."],"tags":["Tank","Mage"],"partype":"마나","info":{"attack":3,"defense":7,"magic":7,"difficulty":5},"stats":{"armor":38,"armorperlevel":3.5,"attackdamage":69,"attackdamageperlevel":4.2,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":1.44,"crit":0,"critperlevel":0,"hp":574.4,"hpperlevel":80,"hpregen":8.928,"hpregenperlevel":0.85,"movespeed":345,"mp":272.2,"mpperlevel":40,"mpregen":7.206,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"파열","description":"선택한 지역의 지면을 파열시켜 해당 지역에 있는 적을 공중으로 띄워 피해를 입히고 이동 속도를 늦춥니다.","sanitizedDescription":"선택한 지역의 지면을 파열시켜 해당 지역에 있는 적을 공중으로 띄워 피해를 입히고 이동 속도를 늦춥니다.","tooltip":"땅을 파열시켜 대상 지역에 있는 적들을 {{ e5 }}초 동안 공중에 띄우고 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히며, 이동 속도를 {{ e3 }}초 동안 {{ e2 }}% 낮춥니다.","sanitizedTooltip":"땅을 파열시켜 대상 지역에 있는 적들을 {{ e5 }}초 동안 공중에 띄우고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며, 이동 속도를 {{ e3 }}초 동안 {{ e2 }}% 낮춥니다.","leveltip":{"label":["피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"Rupture.png","sprite":"spell2.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[80,135,190,245,300],[60,60,60,60,60],[1.5,1.5,1.5,1.5,1.5],[0.625,0.625,0.625,0.625,0.625],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/135/190/245/300","60","1.5","0.63","1","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[950,950,950,950,950],"rangeBurn":"950","key":"Rupture"},{"name":"흉포한 울부짖음","description":"초가스가 원뿔 형태의 지역에 무시무시한 비명을 질러 마법 피해를 입히고 몇 초 동안 적을 침묵시킵니다.","sanitizedDescription":"초가스가 원뿔 형태의 지역에 무시무시한 비명을 질러 마법 피해를 입히고 몇 초 동안 적을 침묵시킵니다.","tooltip":"원뿔 형태의 지역에 있는 적들을 {{ e2 }}초 동안 침묵시키고 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다.","sanitizedTooltip":"원뿔 형태의 지역에 있는 적들을 {{ e2 }}초 동안 침묵시키고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간","침묵 지속 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"FeralScream.png","sprite":"spell2.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[75,125,175,225,275],[1.6,1.7,1.8,1.9,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/125/175/225/275","1.6/1.7/1.8/1.9/2","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"FeralScream"},{"name":"날카로운 가시","description":"초가스가 공격할 때마다 치명적인 가시가 발사되어 정면에 있는 모든 적에게 피해를 입히고 둔화시킵니다.","sanitizedDescription":"초가스가 공격할 때마다 치명적인 가시가 발사되어 정면에 있는 모든 적에게 피해를 입히고 둔화시킵니다.","tooltip":"다음 3회 기본 공격 시마다 가시를 발사해 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP> + 적 최대 체력의 {{ f1 }}%에 해당하는 마법 피해를 입히고 이동 속도를 {{ e2 }}% 감소시킵니다. 이동 속도는 {{ e3 }}초에 걸쳐 정상으로 돌아옵니다.<br /><br /><rules>가시들은 초가스의 포식 중첩에 비례해 커집니다.<br />가시는 포식 중첩 하나당 적 최대 체력의 0.5%에 해당하는 추가 피해를 입힙니다.<br />미니언과 몬스터의 경우 체력 비례 피해량은 최대 {{ e8 }}까지만 입힐 수 있습니다.</rules>","sanitizedTooltip":"다음 3회 기본 공격 시마다 가시를 발사해 {{ e1 }} (+{{ a1 }}) + 적 최대 체력의 {{ f1 }}%에 해당하는 마법 피해를 입히고 이동 속도를 {{ e2 }}% 감소시킵니다. 이동 속도는 {{ e3 }}초에 걸쳐 정상으로 돌아옵니다. 가시들은 초가스의 포식 중첩에 비례해 커집니다. 가시는 포식 중첩 하나당 적 최대 체력의 0.5%에 해당하는 추가 피해를 입힙니다. 미니언과 몬스터의 경우 체력 비례 피해량은 최대 {{ e8 }}까지만 입힐 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간","둔화"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"VorpalSpikes.png","sprite":"spell2.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[8,7,6,5,4],"cooldownBurn":"8/7/6/5/4","effect":[null,[20,30,40,50,60],[30,35,40,45,50],[1.5,1.5,1.5,1.5,1.5],[6,6,6,6,6],[3,3,3,3,3],[3,3,3,3,3],[0.5,0.5,0.5,0.5,0.5],[60,80,100,120,140],[6,6,6,6,6],[50,50,50,50,50]],"effectBurn":["","20/30/40/50/60","30/35/40/45/50","1.5","6","3","3","0.5","60/80/100/120/140","6","50"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[40,40,40,40,40],"rangeBurn":"40","key":"VorpalSpikes"},{"name":"포식","description":"적 유닛을 먹어치워 적의 방어력을 무시하고 큰 고정 피해를 입힙니다. 대상을 처치하면 초가스가 성장하며 최대 체력이 증가합니다.","sanitizedDescription":"적 유닛을 먹어치워 적의 방어력을 무시하고 큰 고정 피해를 입힙니다. 대상을 처치하면 초가스가 성장하며 최대 체력이 증가합니다.","tooltip":"적을 게걸스럽게 먹어치워, 챔피언에게는 {{ e2 }} <scaleHealth>(+{{ f2 }})</scaleHealth> <scaleAP>(+{{ a2 }})</scaleAP>의 고정 피해를, 미니언과 몬스터에게는 {{ e1 }} <scaleHealth>(+{{ f2 }}) </scaleHealth><scaleAP>(+{{ a2 }})</scaleAP>의 피해를 입힙니다. 대상이 처치되면 초가스의 포식 중첩이 1 올라, 몸집이 커지며 최대 체력이 {{ e3 }} 오릅니다.<br /><br /><rules>에픽 몬스터가 아닌 일반 몬스터와 미니언 처치로는 최대 {{ e4 }}중첩까지만 얻을 수 있습니다. <span class=\"colorFFF673\">(현재 중첩: {{ f3 }}/{{ e4 }})</span></rules>","sanitizedTooltip":"적을 게걸스럽게 먹어치워, 챔피언에게는 {{ e2 }} (+{{ f2 }}) (+{{ a2 }})의 고정 피해를, 미니언과 몬스터에게는 {{ e1 }} (+{{ f2 }}) (+{{ a2 }})의 피해를 입힙니다. 대상이 처치되면 초가스의 포식 중첩이 1 올라, 몸집이 커지며 최대 체력이 {{ e3 }} 오릅니다. 에픽 몬스터가 아닌 일반 몬스터와 미니언 처치로는 최대 {{ e4 }}중첩까지만 얻을 수 있습니다. (현재 중첩: {{ f3 }}/{{ e4 }})","leveltip":{"label":["챔피언 피해량","중첩 당 추가 체력"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"Feast.png","sprite":"spell2.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[80,80,80],"cooldownBurn":"80","effect":[null,[1000,1000,1000],[300,475,650],[80,120,160],[6,6,6],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","1000","300/475/650","80/120/160","6","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.5]}],"range":[175,175,175],"rangeBurn":"175","key":"Feast"}],"passive":{"name":"육식","description":"초가스는 유닛을 죽이면 체력과 마나를 회복합니다. 회복량은 초가스의 레벨이 높아질수록 증가합니다.","sanitizedDescription":"초가스는 유닛을 죽이면 체력과 마나를 회복합니다. 회복량은 초가스의 레벨이 높아질수록 증가합니다.","image":{"full":"GreenTerror_TailSpike.png","sprite":"passive0.png","group":"passive","x":336,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Chogath","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3105,"count":1},{"id":3001,"count":1},{"id":3110,"count":1},{"id":3083,"count":1}]}]},{"champion":"Chogath","title":"ChogathARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3110,"count":1},{"id":3029,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3102,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Chogath","title":"ChogathCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":3024,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3110,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Chogath","title":"ChogathFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":3024,"count":1},{"id":1001,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3024,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3110,"count":1},{"id":3111,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1401,"count":1},{"id":3110,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Chogath","title":"ChogathKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3110,"count":1},{"id":3027,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Chogath","title":"ChogathSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3110,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]}]},{"champion":"Chogath","title":"ChogathSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":3024,"count":1},{"id":1001,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3111,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3111,"count":1},{"id":1401,"count":1},{"id":3800,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3742,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3193,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3194,"count":1},{"id":3075,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Chogath","title":"ChogathTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":3},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3027,"count":1},{"id":3024,"count":1},{"id":3111,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3024,"count":1},{"id":3117,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3110,"count":1},{"id":3116,"count":1},{"id":3090,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Aatrox":{"id":266,"key":"Aatrox","name":"아트록스","title":"다르킨의 검","image":{"full":"Aatrox.png","sprite":"champion0.png","group":"champion","x":0,"y":0,"w":48,"h":48},"skins":[{"id":266000,"name":"default","num":0},{"id":266001,"name":"정의의 아트록스","num":1},{"id":266002,"name":"메카 아트록스","num":2},{"id":266003,"name":"바다 사냥꾼 아트록스","num":3}],"lore":"고대 종족 다르킨의 일원인 아트록스는 한때 적수가 없던 검술의 대가로 피와 혼돈으로 점철된 전장을 탐닉했다. 적의 강력한 마법에 당해 자신의 검 속에 봉인된 아트록스는 적합한 숙주가 나타날 때까지 천 년을 기다렸다. 이윽고 만난 전사는 자아를 가진 검에 의해 타락하고 변형되었고, 아트록스는 다시 태어났다. 다르킨의 이야기는 낡은 전설이 된 지 오래지만, 일족의 파멸을 선명하게 기억하는 아트록스는 검을 휘두를 때마다 복수를 다짐했다.","blurb":"고대 종족 다르킨의 일원인 아트록스는 한때 적수가 없던 검술의 대가로 피와 혼돈으로 점철된 전장을 탐닉했다. 적의 강력한 마법에 당해 자신의 검 속에 봉인된 아트록스는 적합한 숙주가 나타날 때까지 천 년을 기다렸다. 이윽고 만난 전사는 자아를 가진 검에 의해 타락하고 변형되었고, 아트록스는 다시 태어났다. 다르킨의 이야기는 낡은 전설이 된 지 오래지만, 일족의 파멸을 선명하게 기억하는 아트록스는 검을 휘두를 때마다 복수를 다짐했다.","allytips":["- 광폭 상태는 아트록스의 전투력에서 매우 중요한 역할을 하므로 피의 샘이 비어있다면 교전에 휘말리지 않도록 주의하세요.","- 생명력 흡수 또는 약간의 방어력을 갖추면 광폭 상태를 활용할 수 있는 시간이 늘어납니다.","- 대학살은 전투의 흐름을 뒤바꾸기에 적격인 스킬입니다. 최고의 효과를 볼 수 있는 시기를 잘 노려 사용하세요."],"enemytips":["- 아트록스는 광폭해졌을 때 훨씬 강해집니다. 아트록스가 피의 샘을 채울 수 있을 때에는 주의해서 상대하세요.","- 아트록스가 어둠 강림 스킬을 쓰면 공중으로 뜨지 않도록 충돌 중심부에서 멀리 피하세요.","- 아트록스는 주로 기본 공격을 통해 피해를 입히고 생존력을 확보하므로, 란두인의 예언이나 얼어붙은 심장을 사서 공격 속도를 늦추면 방어하기에 쉽습니다."],"tags":["Fighter","Tank"],"partype":"피의 샘","info":{"attack":8,"defense":4,"magic":3,"difficulty":4},"stats":{"armor":33,"armorperlevel":3.8,"attackdamage":70,"attackdamageperlevel":3.2,"attackrange":150,"attackspeedoffset":-0.04,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":580,"hpperlevel":85,"hpregen":6.59,"hpregenperlevel":0.5,"movespeed":345,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"어둠 강림","description":"아트록스가 날아 올랐다가 지정한 위치에 쿵 내려앉으며 착지 지점 중앙에 있는 적들에게 피해를 입히고 공중으로 띄웁니다.","sanitizedDescription":"아트록스가 날아 올랐다가 지정한 위치에 쿵 내려앉으며 착지 지점 중앙에 있는 적들에게 피해를 입히고 공중으로 띄웁니다.","tooltip":"아트록스가 몸을 날렸다가 지정한 위치에 쿵 내려앉으며 충돌 지점에 있는 적들에게 {{ e1 }}<span class=\"colorF88017\"> (+{{ a1 }})</span>의 물리 피해를 입히고 {{ e4 }}초 동안 공중에 띄웁니다.<br /><br />시전 시 피의 샘이 20% 차오릅니다.","sanitizedTooltip":"아트록스가 몸을 날렸다가 지정한 위치에 쿵 내려앉으며 충돌 지점에 있는 적들에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e4 }}초 동안 공중에 띄웁니다. 시전 시 피의 샘이 20% 차오릅니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AatroxQ.png","sprite":"spell0.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[13,12.5,12,11.5,11],"cooldownBurn":"13/12.5/12/11.5/11","effect":[null,[20,50,80,110,140],[310,310,310,310,310],[190,190,190,190,190],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/50/80/110/140","310","190","1","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.1]}],"range":[25000,25000,25000,25000,25000],"rangeBurn":"25000","key":"AatroxQ"},{"name":"피의 갈증 / 피의 대가","description":"활성화 시 아트록스가 매 세 번째 공격마다 추가 피해를 입히고 피의 샘을 일부 채웁니다. 취소하면 아트록스가 매 세 번째 공격마다 체력을 회복합니다.","sanitizedDescription":"활성화 시 아트록스가 매 세 번째 공격마다 추가 피해를 입히고 피의 샘을 일부 채웁니다. 취소하면 아트록스가 매 세 번째 공격마다 체력을 회복합니다.","tooltip":"<span class=\"colorFF9900\">비활성화:</span><span class=\"colore60000\"> 피의 갈증: </span>매 세 번째 공격마다 아트록스의 체력이 {{ e3 }}<span class=\"colorCC3300\"> (+잃은 체력의 {{ f1*100 }}%)</span>만큼 회복됩니다.<br /><br /><span class=\"colorFF9900\">활성화:</span><span class=\"color9900ff\"> 피의 대가: </span>매 세 번째 공격마다 아트록스가 {{ e2 }}<span class=\"colorF88017\"> (+{{ a2 }})</span>의 추가 물리 피해를 입히며 피의 샘이 20% 차오릅니다.","sanitizedTooltip":"비활성화: 피의 갈증: 매 세 번째 공격마다 아트록스의 체력이 {{ e3 }} (+잃은 체력의 {{ f1*100 }}%)만큼 회복됩니다. 활성화: 피의 대가: 매 세 번째 공격마다 아트록스가 {{ e2 }} (+{{ a2 }})의 추가 물리 피해를 입히며 피의 샘이 20% 차오릅니다.","leveltip":{"label":["치유량","피해량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"AatroxW.png","sprite":"spell0.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[0.5,0.5,0.5,0.5,0.5],"cooldownBurn":"0.5","effect":[null,[200,200,200,200,200],[50,85,120,155,190],[30,45,60,75,90],[50,50,50,50,50],[50,50,50,50,50],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","200","50/85/120/155/190","30/45/60/75/90","50","50","0.5","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.75]}],"range":[1,1,1,1,1],"rangeBurn":"1","key":"AatroxW"},{"name":"고통의 검","description":"아트록스가 검기를 날려, 맞힌 적에게 피해를 입히고 느리게 만듭니다.","sanitizedDescription":"아트록스가 검기를 날려, 맞힌 적에게 피해를 입히고 느리게 만듭니다.","tooltip":"아트록스가 검기를 발사해 맞힌 적에게 {{ e1 }} <span class=\"colorF88017\">(+{{ a2 }})</span>의 물리 피해를 입히고 {{ e3 }}초 동안 {{ e2 }}%의 둔화를 겁니다.<br /><br />시전 시 피의 샘이 20% 차오릅니다.","sanitizedTooltip":"아트록스가 검기를 발사해 맞힌 적에게 {{ e1 }} (+{{ a2 }})의 물리 피해를 입히고 {{ e3 }}초 동안 {{ e2 }}%의 둔화를 겁니다. 시전 시 피의 샘이 20% 차오릅니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AatroxE.png","sprite":"spell0.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"체력 {{ e4 }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[80,120,160,200,240],[30,35,40,45,50],[2,2,2,2,2],[30,30,30,30,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","30/35/40/45/50","2","30","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.7]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"AatroxE"},{"name":"대학살","description":"아트록스가 적의 피를 흡수하여, 자기 주변의 적 챔피언 모두에게 피해를 입히고 잠깐 동안 공격 속도와 공격 사거리가 증가합니다.","sanitizedDescription":"아트록스가 적의 피를 흡수하여, 자기 주변의 적 챔피언 모두에게 피해를 입히고 잠깐 동안 공격 속도와 공격 사거리가 증가합니다.","tooltip":"아트록스가 적의 피를 흡수해 주변의 적 챔피언들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히며, 적중한 챔피언 한 명당 피의 샘이 20%씩 차오릅니다.<br /><br />사용 시 {{ e8 }}초 동안 공격 속도가 {{ e3 }}%, 공격 사거리가 {{ e5 }} 증가합니다.","sanitizedTooltip":"아트록스가 적의 피를 흡수해 주변의 적 챔피언들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히며, 적중한 챔피언 한 명당 피의 샘이 20%씩 차오릅니다. 사용 시 {{ e8 }}초 동안 공격 속도가 {{ e3 }}%, 공격 사거리가 {{ e5 }} 증가합니다.","leveltip":{"label":["피해량","공격 속도","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AatroxR.png","sprite":"spell0.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[100,85,70],"cooldownBurn":"100/85/70","effect":[null,[550,550,550],[200,300,400],[40,50,60],[0,0,0],[225,225,225],[0,0,0],[20,20,20],[12,12,12],[0,0,0],[0,0,0]],"effectBurn":["","550","200/300/400","40/50/60","0","225","0","20","12","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[550,550,550],"rangeBurn":"550","key":"AatroxR"}],"passive":{"name":"피의 샘","description":"아트록스는 스킬을 사용해 피의 샘을 채웁니다. 피의 샘이 차면 적 챔피언이나 몬스터와 전투하는 동안 광폭해져 공격력, 공격 속도가 증가하고 치명적 피해를 입었을 때 생존할 수 있습니다.","sanitizedDescription":"아트록스는 스킬을 사용해 피의 샘을 채웁니다. 피의 샘이 차면 적 챔피언이나 몬스터와 전투하는 동안 광폭해져 공격력, 공격 속도가 증가하고 치명적 피해를 입었을 때 생존할 수 있습니다.","image":{"full":"Aatrox_Passive.png","sprite":"passive0.png","group":"passive","x":0,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Aatrox","title":"AatroxARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1},{"id":3046,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Aatrox","title":"AatroxCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3153,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3156,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Aatrox","title":"AatroxFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3153,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3156,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":1043,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1416,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3156,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Aatrox","title":"AatroxKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1},{"id":3046,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Aatrox","title":"AatroxSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3153,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3156,"count":1},{"id":3065,"count":1}]}]},{"champion":"Aatrox","title":"AatroxSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":1053,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":1043,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3153,"count":1},{"id":3812,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1416,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3156,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3156,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Aatrox","title":"AatroxTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3153,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3074,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3156,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Aatrox","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3068,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]}]}]},"Poppy":{"id":78,"key":"Poppy","name":"뽀삐","title":"망치의 수호자","image":{"full":"Poppy.png","sprite":"champion2.png","group":"champion","x":192,"y":96,"w":48,"h":48},"skins":[{"id":78000,"name":"default","num":0},{"id":78001,"name":"녹서스 뽀삐","num":1},{"id":78002,"name":"롤리뽀삐","num":2},{"id":78003,"name":"대장장이 뽀삐","num":3},{"id":78004,"name":"봉제인형 뽀삐","num":4},{"id":78005,"name":"전투 예복 뽀삐","num":5},{"id":78006,"name":"붉은 망치 뽀삐","num":6},{"id":78007,"name":"별 수호자 뽀삐","num":7},{"id":78014,"name":"눈꽃사슴 뽀삐","num":14}],"lore":"룬테라에 용맹한 챔피언이 많지만 뽀삐만큼 끈질긴 챔피언은 찾기 어렵다. 제 키의 두 배는 되는 망치 오를론을 들고 다니는 뽀삐는 오랫동안 망치의 정당한 주인이자 전설의 주인공인 데마시아의 영웅을 찾아 비밀스럽게 헤매고 있다. 그 때까지 뽀삐는 충실히 전투로 돌격해 망치를 크게 휘둘러 왕국의 적을 모두 날려 버린다.","blurb":"룬테라에 용맹한 챔피언이 많지만 뽀삐만큼 끈질긴 챔피언은 찾기 어렵다. 제 키의 두 배는 되는 망치 오를론을 들고 다니는 뽀삐는 오랫동안 망치의 정당한 주인이자 전설의 주인공인 데마시아의 영웅을 찾아 비밀스럽게 헤매고 있다. 그 때까지 뽀삐는 충실히 전투로 돌격해 망치를 크게 휘둘러 왕국의 적을 모두 날려 버린다.","allytips":["- 강철의 외교관을 사용했을 때 던지는 방패는 보통 벽 옆에 떨어지므로 용감한 돌진 스킬을 연계하면 좋습니다.","- 수호자의 심판은 힘을 모으지 않고도 사용할 수 있습니다. 1대1 상황에서 적에게 바로 수호자의 심판을 써서 밀어내 보세요."],"enemytips":["- 뽀삐는 굳건한 태세를 이용해 근처에서 돌진하는 적을 막을 수 있습니다.","- 뽀삐가 망치를 돌리는 건 궁극기를 위해 힘을 모으고 있다는 뜻입니다.","- 방패를 밟으면 뽀삐가 다시 줍지 못하도록 파괴할 수 있습니다."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":6,"defense":7,"magic":2,"difficulty":6},"stats":{"armor":38,"armorperlevel":3.5,"attackdamage":64,"attackdamageperlevel":4,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":540,"hpperlevel":90,"hpregen":8,"hpregenperlevel":0.8,"movespeed":345,"mp":280,"mpperlevel":40,"mpregen":7,"mpregenperlevel":0.7,"spellblock":32,"spellblockperlevel":1.25},"spells":[{"name":"망치 강타","description":"뽀삐가 망치를 휘둘러 피해를 입히고 적의 움직임을 느리게 만드는 지대를 생성합니다. 지대는 잠시 후 폭발합니다.","sanitizedDescription":"뽀삐가 망치를 휘둘러 피해를 입히고 적의 움직임을 느리게 만드는 지대를 생성합니다. 지대는 잠시 후 폭발합니다.","tooltip":"뽀삐가 땅을 힘껏 내리쳐 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>에 적 최대 체력의 {{ e5 }}%를 합한 만큼 물리 피해를 입히고 지대를 불안정하게 만듭니다.<br /><br />지대 내부의 적은 이동 속도가 {{ e3 }}% 느려집니다. 지대는 {{ e4 }}초 뒤 폭발하며, 이때 피해량은 최초에 입힌 피해량과 동일합니다.","sanitizedTooltip":"뽀삐가 땅을 힘껏 내리쳐 {{ e1 }} (+{{ a1 }})에 적 최대 체력의 {{ e5 }}%를 합한 만큼 물리 피해를 입히고 지대를 불안정하게 만듭니다. 지대 내부의 적은 이동 속도가 {{ e3 }}% 느려집니다. 지대는 {{ e4 }}초 뒤 폭발하며, 이때 피해량은 최초에 입힌 피해량과 동일합니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"PoppyQ.png","sprite":"spell8.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[35,40,45,50,55],"costBurn":"35/40/45/50/55","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[40,60,80,100,120],[0.5,0.5,0.5,0.5,0.5],[20,25,30,35,40],[1,1,1,1,1],[8,8,8,8,8],[40,60,80,100,120],[100,100,100,100,100],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/60/80/100/120","0.5","20/25/30/35/40","1","8","40/60/80/100/120","100","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]}],"range":[430,430,430,430,430],"rangeBurn":"430","key":"PoppyQ"},{"name":"굳건한 태세","description":"기본 지속 효과로 뽀삐가 추가 방어력과 마법 저항력을 얻습니다. 뽀삐의 체력이 낮아지면 이 효과가 더 커집니다. 사용 시에는 뽀삐의 이동 속도가 증가하며 주변에서 돌진하는 적을 막습니다.","sanitizedDescription":"기본 지속 효과로 뽀삐가 추가 방어력과 마법 저항력을 얻습니다. 뽀삐의 체력이 낮아지면 이 효과가 더 커집니다. 사용 시에는 뽀삐의 이동 속도가 증가하며 주변에서 돌진하는 적을 막습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 뽀삐가 <span class=\"colorFFFF00\">{{ f1 }}</span>의 방어력과 <span class=\"colorFF00FF\">{{ f2 }}</span>의 마법 저항력을 추가로 얻습니다. (방어력과 마법 저항력의 {{ e3 }}%) 뽀삐의 체력이 40% 미만일 때는 효과가 두 배로 늘어납니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 다음 {{ e1 }}초 동안 뽀삐의 이동 속도가 {{ e2 }}% 증가하며, 주변에서 돌진하는 적을 막고 {{ e5 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"기본 지속 효과: 뽀삐가 {{ f1 }}의 방어력과 {{ f2 }}의 마법 저항력을 추가로 얻습니다. (방어력과 마법 저항력의 {{ e3 }}%) 뽀삐의 체력이 40% 미만일 때는 효과가 두 배로 늘어납니다. 사용 시: 다음 {{ e1 }}초 동안 뽀삐의 이동 속도가 {{ e2 }}% 증가하며, 주변에서 돌진하는 적을 막고 {{ e5 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["이동 속도","재사용 대기시간","피해량"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ e5 }} -> {{ e5NL }}"]},"image":{"full":"PoppyW.png","sprite":"spell8.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[24,22,20,18,16],"cooldownBurn":"24/22/20/18/16","effect":[null,[2.5,2.5,2.5,2.5,2.5],[32,34,36,38,40],[15,15,15,15,15],[0.5,0.5,0.5,0.5,0.5],[70,110,150,190,230],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2.5","32/34/36/38/40","15","0.5","70/110/150/190/230","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"PoppyW"},{"name":"용감한 돌진","description":"뽀삐가 돌진해 대상을 밀어냅니다. 대상이 지형에 부딪힐 경우 기절합니다.","sanitizedDescription":"뽀삐가 돌진해 대상을 밀어냅니다. 대상이 지형에 부딪힐 경우 기절합니다.","tooltip":"뽀삐가 하나의 적에게 돌진해 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 앞으로 밀어냅니다. 적이 지형에 부딪히면 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 추가 물리 피해를 입고 {{ e3 }} 초간 기절합니다.","sanitizedTooltip":"뽀삐가 하나의 적에게 돌진해 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 앞으로 밀어냅니다. 적이 지형에 부딪히면 {{ e2 }} (+{{ a1 }})의 추가 물리 피해를 입고 {{ e3 }} 초간 기절합니다.","leveltip":{"label":["최초 피해량","지형 충돌 피해량","기절 지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"PoppyE.png","sprite":"spell8.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[55,75,95,115,135],[55,75,95,115,135],[1.6,1.7,1.8,1.9,2],[1800,1800,1800,1800,1800],[400,400,400,400,400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/75/95/115/135","55/75/95/115/135","1.6/1.7/1.8/1.9/2","1800","400","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.5]},{"key":"a1","link":"bonusattackdamage","coeff":[0.5]}],"range":[425,425,425,425,425],"rangeBurn":"425","key":"PoppyE"},{"name":"수호자의 심판","description":"뽀삐가 잠시 정신을 집중한 뒤 망치를 휘둘러 피해를 입히고 적을 굉장히 멀리 날려버립니다.","sanitizedDescription":"뽀삐가 잠시 정신을 집중한 뒤 망치를 휘둘러 피해를 입히고 적을 굉장히 멀리 날려버립니다.","tooltip":"<span class=\"colorFF9900\">첫 번째 시전 시:</span> 뽀삐가 최대 {{ e3 }}초간 정신을 집중하고 이동 속도가 {{ e7 }}% 느려집니다.<br /><br /><span class=\"colorFF9900\">두 번째 시전 시:</span> 뽀삐가 지면에 강력한 일격을 날려 균열을 일으킵니다. 처음 적중한 적 챔피언 근처의 적은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입고 모두 적 기지 쪽으로 밀려납니다. 균열의 길이와 적을 밀어내는 거리는 정신을 집중한 시간에 비례합니다.<br /><br />정신을 집중하지 않고 바로 다시 사용할 경우 적이 즉시 밀려나지만 입는 피해와 밀려나는 시간이 절반으로 줄어듭니다. 적이 밀려나는 동안에는 대상으로 지정할 수 없습니다.","sanitizedTooltip":"첫 번째 시전 시: 뽀삐가 최대 {{ e3 }}초간 정신을 집중하고 이동 속도가 {{ e7 }}% 느려집니다. 두 번째 시전 시: 뽀삐가 지면에 강력한 일격을 날려 균열을 일으킵니다. 처음 적중한 적 챔피언 근처의 적은 {{ e1 }} (+{{ a1 }})의 물리 피해를 입고 모두 적 기지 쪽으로 밀려납니다. 균열의 길이와 적을 밀어내는 거리는 정신을 집중한 시간에 비례합니다. 정신을 집중하지 않고 바로 다시 사용할 경우 적이 즉시 밀려나지만 입는 피해와 밀려나는 시간이 절반으로 줄어듭니다. 적이 밀려나는 동안에는 대상으로 지정할 수 없습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"PoppyR.png","sprite":"spell8.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,120,100],"cooldownBurn":"140/120/100","effect":[null,[200,300,400],[0.25,0.25,0.25],[4,4,4],[2400,2400,2400],[2,2,2],[1,1,1],[15,15,15],[30,30,30],[1,1,1],[0.5,0.5,0.5]],"effectBurn":["","200/300/400","0.25","4","2400","2","1","15","30","1","0.5"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.9]}],"range":[500,500,500],"rangeBurn":"500","key":"PoppyR"}],"passive":{"name":"강철의 외교관","description":"<mainText>뽀삐가 평소보다 늘어난 사거리로 방패를 던져 추가 마법 피해를 입힙니다.<br><br>근처에 떨어진 방패를 주우면 보호막이 생성됩니다. 방패는 적에게 밟히면 파괴됩니다.</mainText>","sanitizedDescription":"뽀삐가 평소보다 늘어난 사거리로 방패를 던져 추가 마법 피해를 입힙니다. 근처에 떨어진 방패를 주우면 보호막이 생성됩니다. 방패는 적에게 밟히면 파괴됩니다.","image":{"full":"Poppy_Passive.png","sprite":"passive2.png","group":"passive","x":192,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Poppy","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1027,"count":1},{"id":3057,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3024,"count":1},{"id":3025,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3742,"count":1},{"id":3068,"count":1},{"id":3102,"count":1}]}]},{"champion":"Poppy","title":"PoppyARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3057,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3068,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Poppy","title":"PoppyCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3078,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Poppy","title":"PoppyFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":1055,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3096,"count":1},{"id":3057,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3069,"count":1},{"id":3146,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Poppy","title":"PoppyKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3057,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3068,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Poppy","title":"PoppySG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3078,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3193,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3078,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Poppy","title":"PoppySIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3078,"count":1}]}]},{"champion":"Poppy","title":"PoppySR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3078,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3193,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3025,"count":1},{"id":3026,"count":1},{"id":3078,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2138,"count":1}]}]},{"champion":"Poppy","title":"PoppyTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3057,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3071,"count":1},{"id":3078,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Taliyah":{"id":163,"key":"Taliyah","name":"탈리야","title":"바위술사","image":{"full":"Taliyah.png","sprite":"champion3.png","group":"champion","x":336,"y":48,"w":48,"h":48},"skins":[{"id":163000,"name":"default","num":0},{"id":163001,"name":"프렐요드 탈리야","num":1}],"lore":"슈리마의 떠돌이 마법사 탈리야는 10대의 호기심과 어른으로서의 책임 사이에서 괴로워한다. 탈리야는 자신 안에서 커져 가는 힘의 본질을 깨닫기 위해 발로란 전역을 누빈 끝에, 최근에는 자신의 부족을 보호하기 위해 돌아왔다. 탈리야의 여린 마음을 약점으로 착각한 사람들은 호되게 대가를 치렀다. 탈리야의 천진난만한 모습 뒤에는 산도 움직이는 불굴의 의지와 대지도 흔드는 강인한 정신이 있기 때문이다.","blurb":"슈리마의 떠돌이 마법사 탈리야는 10대의 호기심과 어른으로서의 책임 사이에서 괴로워한다. 탈리야는 자신 안에서 커져 가는 힘의 본질을 깨닫기 위해 발로란 전역을 누빈 끝에, 최근에는 자신의 부족을 보호하기 위해 돌아왔다. 탈리야의 여린 마음을 약점으로 착각한 사람들은 호되게 대가를 치렀다. 탈리야의 천진난만한 모습 뒤에는 산도 움직이는 불굴의 의지와 대지도 흔드는 강인한 정신이 있기 때문이다.","allytips":["- 지각변동을 사용해 적을 대지의 파동 위로 던져 보세요.","- 바위술사의 벽에 꼭 올라타지 않고 그냥 벽만 생성할 수도 있습니다.","- 라일라이의 수정홀을 구매한 후 추격해오는 적에게 파편 난사를 사용하면 아주 효과적입니다."],"enemytips":["- 공격로에서 탈리야가 대지의 파동을 쓰면 지각변동을 조심하세요. 바위밭에 던져지면 만신창이가 될 가능성이 높습니다.","- 파편 난사는 한 방향으로만 발사됩니다. 탈리야가 바위 조각을 던지기 시작한다면 다른 쪽으로 피하세요."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":1,"defense":7,"magic":8,"difficulty":5},"stats":{"armor":20,"armorperlevel":3.5,"attackdamage":56,"attackdamageperlevel":3.3,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":532,"hpperlevel":90,"hpregen":7,"hpregenperlevel":0.7,"movespeed":325,"mp":340,"mpperlevel":60,"mpregen":7,"mpregenperlevel":0.85,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"파편 난사","description":"탈리야가 지정한 방향으로 바위 조각을 던집니다. 이 때 탈리야는 자유롭게 이동할 수 있으며 탈리야 아래의 땅이 다져집니다. 다져진 땅 위에서 파편 난사를 사용하면 파편을 하나만 발사할 수 있습니다.","sanitizedDescription":"탈리야가 지정한 방향으로 바위 조각을 던집니다. 이 때 탈리야는 자유롭게 이동할 수 있으며 탈리야 아래의 땅이 다져집니다. 다져진 땅 위에서 파편 난사를 사용하면 파편을 하나만 발사할 수 있습니다.","tooltip":"한 방향으로 5개의 바위 조각을 던져 처음으로 맞힌 적 주변 지역에 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 동일한 유닛에게 연달아 바위 조각을 맞힐 경우 피해량이 {{ e2 }}% 감소합니다. <span class=\"colorFFFFFF\">{{ f1 }}</span>초 동안 <span class=\"colora56705\">다져진 땅</span>을 만듭니다.<br /><br />탈리야는 <span class=\"colora56705\">다져진 땅</span> 위에 있으면 이동 속도가 <span class=\"colorffffff\">{{ f2 }}%</span> 증가합니다. 또한 <span class=\"colora56705\">다져진 땅</span> 위에서는 바위 조각을 하나만 던질 수 있지만 대신 사용한 마나의 {{ e7 }}%를 돌려받습니다.","sanitizedTooltip":"한 방향으로 5개의 바위 조각을 던져 처음으로 맞힌 적 주변 지역에 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 동일한 유닛에게 연달아 바위 조각을 맞힐 경우 피해량이 {{ e2 }}% 감소합니다. {{ f1 }}초 동안 다져진 땅을 만듭니다. 탈리야는 다져진 땅 위에 있으면 이동 속도가 {{ f2 }}% 증가합니다. 또한 다져진 땅 위에서는 바위 조각을 하나만 던질 수 있지만 대신 사용한 마나의 {{ e7 }}%를 돌려받습니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TaliyahQ.png","sprite":"spell11.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[9,7.5,6,4.5,3],"cooldownBurn":"9/7.5/6/4.5/3","effect":[null,[70,95,120,145,170],[60,60,60,60,60],[0,0,0,0,0],[0,0,0,0,0],[160,160,160,160,160],[120,120,120,120,120],[50,50,50,50,50],[450,450,450,450,450],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/95/120/145/170","60","0","0","160","120","50","450","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"TaliyahQ"},{"name":"지각변동","description":"탈리야가 특정 지점을 솟구치게 만들어 적을 공중으로 띄워 올립니다.","sanitizedDescription":"탈리야가 특정 지점을 솟구치게 만들어 적을 공중으로 띄워 올립니다.","tooltip":"지역을 지정하면 그곳에 있던 적은 잠시 후 <span class=\"colorffffff\">밀려</span>나며 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다.<br /><br />클릭 후 직선으로 드래그하면 적이 해당 방향으로 <span class=\"colorffffff\">밀려</span>납니다.","sanitizedTooltip":"지역을 지정하면 그곳에 있던 적은 잠시 후 밀려나며 {{ e1 }} (+{{ a1 }})의 마법 피해를 입습니다. 클릭 후 직선으로 드래그하면 적이 해당 방향으로 밀려납니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TaliyahWVC.png","sprite":"spell11.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[60,80,100,120,140],[0.55,0.55,0.55,0.55,0.55],[400,400,400,400,400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/80/100/120/140","0.55","400","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"TaliyahWVC"},{"name":"대지의 파동","description":"적을 둔화시키는 바위밭을 만듭니다. 적이 그 위로 돌진하거나, 밀려나거나, 당겨지면 바위가 폭발합니다.","sanitizedDescription":"적을 둔화시키는 바위밭을 만듭니다. 적이 그 위로 돌진하거나, 밀려나거나, 당겨지면 바위가 폭발합니다.","tooltip":"돌진해 지나가면 폭발하는 바위밭을 만들어 해당 지역의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 <span class=\"color99FF99\">{{ f2 }}%</span>만큼 둔화시킵니다. 바위밭은 {{ e3 }}초 후 폭발하며 다시 한 번 피해를 입힙니다.<br /><br />적이 <span class=\"colorFFFFFF\">돌진</span>하거나 <span class=\"colorFFFFFF\">밀려</span>나거나 <span class=\"colorFFFFFF\">당겨</span>져서 바위밭을 지나가게 되면 바위가 폭발해 {{ f3 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 마법 피해를 입습니다. (최대 4회까지 피해를 입을 수 있으며, 첫 번째 이후로는 피해량이 {{ f4 }}% 감소합니다.)","sanitizedTooltip":"돌진해 지나가면 폭발하는 바위밭을 만들어 해당 지역의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ f2 }}%만큼 둔화시킵니다. 바위밭은 {{ e3 }}초 후 폭발하며 다시 한 번 피해를 입힙니다. 적이 돌진하거나 밀려나거나 당겨져서 바위밭을 지나가게 되면 바위가 폭발해 {{ f3 }} (+{{ f1 }})의 마법 피해를 입습니다. (최대 4회까지 피해를 입을 수 있으며, 첫 번째 이후로는 피해량이 {{ f4 }}% 감소합니다.)","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TaliyahE.png","sprite":"spell11.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,95,100,105,110],"costBurn":"90/95/100/105/110","cooldown":[16,14,12,10,8],"cooldownBurn":"16/14/12/10/8","effect":[null,[70,90,110,130,150],[-0.2,-0.2,-0.2,-0.2,-0.2],[4,4,4,4,4],[85,85,85,85,85],[0.5,0.5,0.5,0.5,0.5],[4,4,4,4,4],[0.15,0.15,0.15,0.15,0.15],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/90/110/130/150","-0.2","4","85","0.5","4","0.15","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"TaliyahE"},{"name":"바위술사의 벽","description":"아주 긴 벽을 세웁니다. 탈리야는 이 벽을 타고 이동할 수 있습니다.","sanitizedDescription":"아주 긴 벽을 세웁니다. 탈리야는 이 벽을 타고 이동할 수 있습니다.","tooltip":"한 번 사용하면 아주 긴 벽을 세웁니다. 즉시 한 번 더 사용하면 벽의 시작 지점에 올라탈 수 있지만 이동하거나 챔피언 혹은 포탑의 공격을 받으면 벽에서 내려오게 됩니다.<br /><br />벽은 {{ e1 }}초 동안 유지되며 이 스킬을 비활성화하면 좀 더 일찍 무너뜨릴 수 있습니다.","sanitizedTooltip":"한 번 사용하면 아주 긴 벽을 세웁니다. 즉시 한 번 더 사용하면 벽의 시작 지점에 올라탈 수 있지만 이동하거나 챔피언 혹은 포탑의 공격을 받으면 벽에서 내려오게 됩니다. 벽은 {{ e1 }}초 동안 유지되며 이 스킬을 비활성화하면 좀 더 일찍 무너뜨릴 수 있습니다.","leveltip":{"label":["지속 시간","벽 길이","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TaliyahR.png","sprite":"spell11.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[180,150,120],"cooldownBurn":"180/150/120","effect":[null,[6,7,8],[3000,4500,6000],[0.1,0.1,0.1],[2500,2500,2500],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","6/7/8","3000/4500/6000","0.1","2500","0","0","0","0","0","0"],"range":[3000,4500,6000],"rangeBurn":"3000/4500/6000","key":"TaliyahR"}],"passive":{"name":"바위타기","description":"벽 근처에서 이동 속도가 상승합니다.","sanitizedDescription":"벽 근처에서 이동 속도가 상승합니다.","image":{"full":"Taliyah_Passive.png","sprite":"passive3.png","group":"passive","x":336,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Taliyah","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3029,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1},{"id":3303,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2049,"count":1},{"id":3020,"count":1},{"id":3098,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3105,"count":1},{"id":3069,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3029,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Taliyah","title":"TaliyahTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Illaoi":{"id":420,"key":"Illaoi","name":"일라오이","title":"크라켄의 여사제","image":{"full":"Illaoi.png","sprite":"champion1.png","group":"champion","x":384,"y":0,"w":48,"h":48},"skins":[{"id":420000,"name":"default","num":0},{"id":420001,"name":"공허 인도자 일라오이","num":1}],"lore":"일라오이의 탄탄한 체격은 굳건한 신앙심만큼이나 압도적입니다. 대 크라켄 신의 여사제인 일라오이는 거대한 황금빛 성상으로 적들의 몸과 영혼을 분리해 상대를 엄청난 혼란에 빠뜨립니다. 나가카보로스 신을 섬기는 '진리의 사도'에게 맞섰다가는 일라오이뿐만이 아닌 바다뱀 군도의 신을 함께 대적해야 한다는 사실을 명심해야 할 것입니다.","blurb":"일라오이의 탄탄한 체격은 굳건한 신앙심만큼이나 압도적입니다. 대 크라켄 신의 여사제인 일라오이는 거대한 황금빛 성상으로 적들의 몸과 영혼을 분리해 상대를 엄청난 혼란에 빠뜨립니다. 나가카보로스 신을 섬기는 '진리의 사도'에게 맞섰다가는 일라오이뿐만이 아닌 바다뱀 군도의 신을 함께 대적해야 한다는 사실을 명심해야 할 것입니다.","allytips":["- 촉수는 엄청난 힘의 원천입니다. 촉수 없이 전투를 시작하지 마세요.","- 영혼은 대상 챔피언의 현재 체력을 그대로 반영합니다. 대상을 ","숙주","로 만들 때는 미리 적 챔피언의 체력을 낮춘 뒤 영혼을 분리해내면 더 쉽게 처치할 수 있습니다.","- 믿음의 도약은 팀 전투가 벌어진 후 연계하여 사용하는 것이 가장 좋으니, 먼저 전투를 시작하지 않도록 주의하세요."],"enemytips":["- 일라오이를 상대할 때는 수시로 촉수를 처치하는 것이 승리의 발판이 됩니다.","- 자신의 영혼이 분리되면 최선을 다해 맞서 싸워야 합니다. 일라오이에게 피해를 입히면 영혼이 분리된 상태의 지속 시간이 줄어듭니다.","- 일라오이가 믿음의 도약을 사용할 때는 최대한 흩어져 있어야 많은 촉수가 소환되는 것을 막을 수 있습니다."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":8,"defense":6,"magic":3,"difficulty":4},"stats":{"armor":35,"armorperlevel":3.8,"attackdamage":68,"attackdamageperlevel":5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":585.6,"hpperlevel":95,"hpregen":9.5,"hpregenperlevel":0.8,"movespeed":340,"mp":300,"mpperlevel":40,"mpregen":7.5,"mpregenperlevel":0.75,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"촉수 강타","description":"촉수의 피해량이 증가합니다. 사용 시 일라오이가 촉수로 내리쳐 물리 피해를 입힙니다.","sanitizedDescription":"촉수의 피해량이 증가합니다. 사용 시 일라오이가 촉수로 내리쳐 물리 피해를 입힙니다.","tooltip":"<span class=\"colorFF8C00\">기본 지속 효과:</span> <span class=\"color85FFAD\">후려치기</span>의 피해량이 {{ e6 }}% (<span class=\"colorFF8C00\">{{ f1 }}</span>) 증가합니다.<br /><br /><span class=\"colorFF8C00\">사용 시:</span> 일라오이가 성상을 휘둘러 촉수가 전방에 <span class=\"color85FFAD\">후려치기</span>를 사용하게 합니다.","sanitizedTooltip":"기본 지속 효과: 후려치기의 피해량이 {{ e6 }}% ({{ f1 }}) 증가합니다. 사용 시: 일라오이가 성상을 휘둘러 촉수가 전방에 후려치기를 사용하게 합니다.","leveltip":{"label":["후려치기 추가 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e6 }}% -> {{ e6NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"IllaoiQ.png","sprite":"spell4.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[10,10,10,10,10],[200,200,200,200,200],[800,800,800,800,800],[10,8,6,4,2],[5,5,5,5,5],[10,15,20,25,30],[1.2,1.2,1.2,1.2,1.2],[-0.3,-0.35,-0.4,-0.45,-0.5],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0]],"effectBurn":["","10","200","800","10/8/6/4/2","5","10/15/20/25/30","1.2","-0.3/-0.35/-0.4/-0.45/-0.5","1.5","0"],"range":[850,850,850,850,850],"rangeBurn":"850","key":"IllaoiQ"},{"name":"혹독한 가르침","description":"일라오이가 대상으로 도약해 물리 피해를 입히며, 근처의 촉수 또한 대상을 공격합니다.","sanitizedDescription":"일라오이가 대상으로 도약해 물리 피해를 입히며, 근처의 촉수 또한 대상을 공격합니다.","tooltip":"다음 기본 공격 시, 일라오이가 대상으로 도약해 대상 최대 체력의 <span class=\"colorFF8C00\">{{ f1*100 }}%</span> 만큼 추가 물리 피해를 입힙니다. [공격력 100당 {{ f2*100 }}% + {{ e1 }}%]<br /><br />일라오이가 공격하면 근처의 촉수도 함께 대상에게 <span class=\"color85FFAD\">후려치기</span>를 사용합니다.<br /><br /><span class=\"color919191\"><i>몬스터 상대로는 혹독한 가르침의 추가 피해량이 제한됩니다. (한 번에 최대 {{ e3 }}의 추가 피해)</i></span>","sanitizedTooltip":"다음 기본 공격 시, 일라오이가 대상으로 도약해 대상 최대 체력의 {{ f1*100 }}% 만큼 추가 물리 피해를 입힙니다. [공격력 100당 {{ f2*100 }}% + {{ e1 }}%] 일라오이가 공격하면 근처의 촉수도 함께 대상에게 후려치기를 사용합니다. 몬스터 상대로는 혹독한 가르침의 추가 피해량이 제한됩니다. (한 번에 최대 {{ e3 }}의 추가 피해)","leveltip":{"label":["기본 피해량"],"effect":["{{ e1 }}% -> {{ e1NL }}%"]},"image":{"full":"IllaoiW.png","sprite":"spell4.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[3,3.5,4,4.5,5],[2,2,2,2,2],[300,300,300,300,300],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","3/3.5/4/4.5/5","2","300","6","0","0","0","0","0","0"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"IllaoiW"},{"name":"영혼의 시험","description":"일라오이가 적의 몸에서 영혼을 분리해 자신의 앞에 서게 만듭니다. 영혼은 자신이 입는 피해량의 일부를 원래의 대상에게 돌려줍니다. 대상이 처치되거나 영혼에서 너무 멀어지면, 대상은 <font color='#669900'>숙주</font>가 되어 촉수를 소환하기 시작합니다.","sanitizedDescription":"일라오이가 적의 몸에서 영혼을 분리해 자신의 앞에 서게 만듭니다. 영혼은 자신이 입는 피해량의 일부를 원래의 대상에게 돌려줍니다. 대상이 처치되거나 영혼에서 너무 멀어지면, 대상은 숙주가 되어 촉수를 소환하기 시작합니다.","tooltip":"일라오이가 {{ e3 }}초 동안 적 챔피언에게서 영혼을 분리합니다. (해당 챔피언이 일라오이를 공격하면 지속 시간이 줄어듭니다.) 영혼에게 피해를 입히면 피해량의 {{ e1 }}% <span class=\"colorFF8C00\">(+{{ f5 }}%)</span>가 해당 적 챔피언에게 전이됩니다.<br /><br />만약 영혼이 처치당하거나 대상이 일정 범위를 벗어나면, 대상은 {{ e2 }}초 동안 <span class=\"color669900\">숙주</span>로 변하고 {{ e5 }}초 동안 {{ e8 }}%만큼 둔화됩니다. <span class=\"color669900\">숙주</span>는 근처에 다른 촉수가 없으면 매 <span class=\"colorFFFFFF\">{{ f1 }}</span>초마다 <span class=\"color85FFAD\">촉수</span>를 소환합니다.<br /><br />촉수는 매 10초마다 영혼과 <span class=\"color669900\">숙주</span>에게 <span class=\"color85FFAD\">후려치기</span>를 사용합니다.","sanitizedTooltip":"일라오이가 {{ e3 }}초 동안 적 챔피언에게서 영혼을 분리합니다. (해당 챔피언이 일라오이를 공격하면 지속 시간이 줄어듭니다.) 영혼에게 피해를 입히면 피해량의 {{ e1 }}% (+{{ f5 }}%)가 해당 적 챔피언에게 전이됩니다. 만약 영혼이 처치당하거나 대상이 일정 범위를 벗어나면, 대상은 {{ e2 }}초 동안 숙주로 변하고 {{ e5 }}초 동안 {{ e8 }}%만큼 둔화됩니다. 숙주는 근처에 다른 촉수가 없으면 매 {{ f1 }}초마다 촉수를 소환합니다. 촉수는 매 10초마다 영혼과 숙주에게 후려치기를 사용합니다.","leveltip":{"label":["전이되는 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ f4 }} -> {{ f6 }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"IllaoiE.png","sprite":"spell4.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[35,40,45,50,55],"costBurn":"35/40/45/50/55","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[25,30,35,40,45],[12,12,12,12,12],[10,10,10,10,10],[1500,1500,1500,1500,1500],[1.5,1.5,1.5,1.5,1.5],[3,3,3,3,3],[20,18,16,14,12],[80,80,80,80,80],[8,8,8,8,8],[4,3,0,0,0]],"effectBurn":["","25/30/35/40/45","12","10","1500","1.5","3","20/18/16/14/12","80","8","4/3/0/0/0"],"range":[900,900,900,900,900],"rangeBurn":"900","key":"IllaoiE"},{"name":"믿음의 도약","description":"일라오이가 자신의 성상을 바닥에 내리쳐 근처 적들에게 물리 피해를 입힙니다. 피해를 입는 적 챔피언 한 명당 하나의 촉수가 소환됩니다.","sanitizedDescription":"일라오이가 자신의 성상을 바닥에 내리쳐 근처 적들에게 물리 피해를 입힙니다. 피해를 입는 적 챔피언 한 명당 하나의 촉수가 소환됩니다.","tooltip":"일라오이가 성상을 바닥에 내리쳐 근처 적들에게 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고, 피해를 입는 적 챔피언 한 명당 촉수를 하나씩 소환합니다.<br /><br />이후 촉수는 {{ e1 }}초 동안 <span class=\"color85FFAD\">후려치기</span>의 사용 속도가 50% 빨라지고 대상으로 지정할 수 없게 됩니다. 혹독한 가르침의 재사용 대기시간이 2초로 줄어듭니다.<br /><br /><span class=\"colorcccccc\"><i>'온화하고 상냥한 신들도 물론 많아. 내가 모시는 분은 그렇지 않을 뿐.'</i></span>","sanitizedTooltip":"일라오이가 성상을 바닥에 내리쳐 근처 적들에게 {{ e2 }} (+{{ a1 }})의 물리 피해를 입히고, 피해를 입는 적 챔피언 한 명당 촉수를 하나씩 소환합니다. 이후 촉수는 {{ e1 }}초 동안 후려치기의 사용 속도가 50% 빨라지고 대상으로 지정할 수 없게 됩니다. 혹독한 가르침의 재사용 대기시간이 2초로 줄어듭니다. '온화하고 상냥한 신들도 물론 많아. 내가 모시는 분은 그렇지 않을 뿐.'","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"IllaoiR.png","sprite":"spell4.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[8,8,8],[150,250,350],[1500,1500,1500],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","8","150/250/350","1500","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.5]}],"range":[450,450,450],"rangeBurn":"450","key":"IllaoiR"}],"passive":{"name":"고대신의 예언자","description":"일라오이와 그녀의 <font color='#669900'>숙주</font>는 근처의 통과할 수 없는 지형에 촉수를 소환합니다. 촉수는 영혼과 <font color='#669900'>숙주</font>, 그리고 혹독한 가르침 스킬의 희생양을 공격합니다. 촉수에게 맞는 적들은 물리 피해를 입습니다.","sanitizedDescription":"일라오이와 그녀의 숙주는 근처의 통과할 수 없는 지형에 촉수를 소환합니다. 촉수는 영혼과 숙주, 그리고 혹독한 가르침 스킬의 희생양을 공격합니다. 촉수에게 맞는 적들은 물리 피해를 입습니다.","image":{"full":"Illaoi_P.png","sprite":"passive1.png","group":"passive","x":384,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Illaoi","title":"IllaoiARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3748,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Illaoi","title":"IllaoiCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3812,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Illaoi","title":"IllaoiFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3748,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Illaoi","title":"IllaoiKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3748,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Illaoi","title":"IllaoiSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3812,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]}]},{"champion":"Illaoi","title":"IllaoiSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3812,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Illaoi","title":"IllaoiTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3078,"count":1},{"id":3748,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Heimerdinger":{"id":74,"key":"Heimerdinger","name":"하이머딩거","title":"위대한 발명가","image":{"full":"Heimerdinger.png","sprite":"champion1.png","group":"champion","x":336,"y":0,"w":48,"h":48},"skins":[{"id":74000,"name":"default","num":0},{"id":74001,"name":"화성인 하이머딩거","num":1},{"id":74002,"name":"발파실패 하이머딩거","num":2},{"id":74003,"name":"필트오버 커스텀 하이머딩거","num":3},{"id":74004,"name":"눈사람 하이머딩거","num":4},{"id":74005,"name":"독극물 하이머딩거","num":5}],"lore":"아주 명석하지만 괴짜 성향이 다분한 요들 과학자 세실 B. 하이머딩거 교수. 그는 필트오버가 배출한 가장 혁신적인 인재 가운데 한 명으로 모든 이의 존경을 받는 발명가다. 자신의 일에 있어서는 과할 정도로 집요하게 파고드는 탓에 신경증적 강박관념이 있을 정도인 하이머딩거는 좀처럼 이해하기 어려웠던 문제들을 하나둘 풀어내고 있다. 그의 이론은 때로 불분명하고 난해해 보이기도 하지만, 하이머딩거는 필트오버에서 가장 기적적이고 치명적인 여러 기계를 발명했고, 그 효율을 더욱 높이기 위해 꾸준히 연구하고 있다.","blurb":"아주 명석하지만 괴짜 성향이 다분한 요들 과학자 세실 B. 하이머딩거 교수. 그는 필트오버가 배출한 가장 혁신적인 인재 가운데 한 명으로 모든 이의 존경을 받는 발명가다. 자신의 일에 있어서는 과할 정도로 집요하게 파고드는 탓에 신경증적 강박관념이 있을 정도인 하이머딩거는 좀처럼 이해하기 어려웠던 문제들을 하나둘 풀어내고 있다. 그의 이론은 때로 불분명하고 난해해 보이기도 하지만, 하이머딩거는 필트오버에서 가장 기적적이고 치명적인 여러 기계를...","allytips":["- 포탑 설치 위치는 전투에 중요한 영향을 미칠 수 있습니다. 대부분의 적에 대해서는 포탑을 여러 개 모아 설치하는 게 제일 좋지만, 적에게 광역 공격 피해를 받으면 순식간에 포탑을 잃게 됩니다. 포탑을 수풀 안에 설치하면 기습 공격으로 유리한 위치를 선점할 수 있습니다.","- 하이머딩거의 생존을 위해서는 전자폭풍 수류탄을 잘 사용하는 것이 매우 중요합니다. 둔화와 기절을 통해 적들을 한 자리에 잡아두고 맹공을 가할 수도 있지만, 적의 급습에 대응하는 우선 방어 수단으로 잘 활용하세요.","- 마법공학 초소형 로켓을 멀리 분산시키면 여러 적에게 확실하게 안정적으로 피해를 가할 수 있지만, 한 대상에게 집중시킬 때 효과는 가장 큽니다."],"enemytips":["- 하이머딩거의 포탑은 하나씩 제거하기보다 미니언의 도움을 받아 한꺼번에 제거하는 편이 낫습니다.","- 하이머딩거는 어떤 곤경에 처해도 거의 다 업그레이드!!! 스킬로 해결할 수 있으니 조심하세요. 궁극기가 빠진 다음 들어가서 처치하시면 됩니다!"],"tags":["Mage","Support"],"partype":"마나","info":{"attack":2,"defense":6,"magic":8,"difficulty":8},"stats":{"armor":19.04,"armorperlevel":3,"attackdamage":55.536,"attackdamageperlevel":2.7,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":488,"hpperlevel":87,"hpregen":7,"hpregenperlevel":0.55,"movespeed":340,"mp":307.2,"mpperlevel":40,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"H-28G 진화형 포탑","description":"하이머딩거가 관통 광선 공격이 추가된 속사포 포탑을 설치합니다. (하이머딩거의 포탑은 적 포탑에 절반의 피해만 줍니다.)","sanitizedDescription":"하이머딩거가 관통 광선 공격이 추가된 속사포 포탑을 설치합니다. (하이머딩거의 포탑은 적 포탑에 절반의 피해만 줍니다.)","tooltip":"포탑을 하나 설치합니다. 포탑은 하이머딩거가 공격하는 대상과 하이머딩거를 공격하는 적을 우선 공격하며, 하이머딩거가 멀리 떨어지면 작동을 멈춥니다. 하이머딩거는 매 <span class=\"colorFFFFFF\">{{ f1 }}</span>초마다 포탑 부품 세트를 하나 생성하며, 한 번에 {{ e3 }}개의 부품 세트를 저장할 수 있습니다. <br /><br /><u><span class=\"colorFFFFFF\">H-28G 진화형 포탑 능력치</span></u><br /><span class=\"colorFFDD77\">체력:</span> <span class=\"colorFFFFFF\">{{ f4 }}</span><span class=\"color99FF99\">(+{{ f2 }})</span><br /><span class=\"colorFFDD77\">공격 - 대포:</span> {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해<br /><span class=\"colorFFDD77\">공격 - 광선:</span> 매 {{ e6 }}초당 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해<br /><span class=\"colorFFDD77\">설치할 수 있는 최대 포탑 수:</span> 3","sanitizedTooltip":"포탑을 하나 설치합니다. 포탑은 하이머딩거가 공격하는 대상과 하이머딩거를 공격하는 적을 우선 공격하며, 하이머딩거가 멀리 떨어지면 작동을 멈춥니다. 하이머딩거는 매 {{ f1 }}초마다 포탑 부품 세트를 하나 생성하며, 한 번에 {{ e3 }}개의 부품 세트를 저장할 수 있습니다. H-28G 진화형 포탑 능력치 체력: {{ f4 }}(+{{ f2 }}) 공격 - 대포: {{ e1 }} (+{{ a1 }})의 마법 피해 공격 - 광선: 매 {{ e6 }}초당 {{ e2 }} (+{{ a2 }})의 마법 피해 설치할 수 있는 최대 포탑 수: 3","leveltip":{"label":["대포 피해량","광선 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"HeimerdingerQ.png","sprite":"spell4.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }} + 포탑 부품  세트","maxrank":5,"cost":[20,20,20,20,20],"costType":" + 포탑 부품  세트","costBurn":"20","cooldown":[1,1,1,1,1],"cooldownBurn":"1","effect":[null,[6,9,12,15,18],[40,60,80,100,120],[3,3,3,3,3],[26,22,18,14,10],[900,900,900,900,900],[90,90,90,90,90],[0,0,0,0,0],[0.25,0.25,0.25,0.25,0.25],[0,0,0,0,0],[20,20,20,20,20]],"effectBurn":["","6/9/12/15/18","40/60/80/100/120","3","26/22/18/14/10","900","90","0","0.25","0","20"],"vars":[{"key":"f1","link":"@cooldownchampion","coeff":[0]},{"key":"f4","link":"@text","coeff":[150,175,200,225,250,275,300,325,350,375,400,425,450,475,500,525,550,575]},{"key":"f2","link":"@cooldownchampion","coeff":[0]},{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a2","link":"spelldamage","coeff":[0.55]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"HeimerdingerQ"},{"name":"마법공학 초소형 로켓","description":"하이머딩거가 마우스 커서 위치로 모이는 초소형 로켓들을 발사합니다. ","sanitizedDescription":"하이머딩거가 마우스 커서 위치로 모이는 초소형 로켓들을 발사합니다.","tooltip":"마우스 커서 위치에 모였다가 다시 벌어지며 날아가는 5개의 로켓을 발사합니다. 로켓은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 여러 발을 맞게 되면 받는 피해가 감소합니다:<br /><br /><span class=\"colorFFDD77\">챔피언과 몬스터:</span> {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해, 최대 총 피해량 {{ e6 }} <span class=\"color99FF99\">(+{{ f2 }})</span><br /><span class=\"colorFFDD77\">미니언:</span> 기본 피해량의 60%<br /><br />챔피언에게 로켓 적중 시 근처의 포탑 광선이  충전됩니다.","sanitizedTooltip":"마우스 커서 위치에 모였다가 다시 벌어지며 날아가는 5개의 로켓을 발사합니다. 로켓은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 여러 발을 맞게 되면 받는 피해가 감소합니다: 챔피언과 몬스터: {{ e2 }} (+{{ a2 }})의 마법 피해, 최대 총 피해량 {{ e6 }} (+{{ f2 }}) 미니언: 기본 피해량의 60% 챔피언에게 로켓 적중 시 근처의 포탑 광선이 충전됩니다.","leveltip":{"label":["재사용 대기시간","피해량","최대 피해량","마나 소모량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e1 }} -> {{ e1NL }}","{{ e6 }} -> {{ e6NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"HeimerdingerW.png","sprite":"spell4.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[11,10,9,8,7],"cooldownBurn":"11/10/9/8/7","effect":[null,[60,90,120,150,180],[12,18,24,30,36],[25,25,25,25,25],[20,20,20,20,20],[30,30,30,30,30],[108,162,216,270,324],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/90/120/150/180","12/18/24/30/36","25","20","30","108/162/216/270/324","5","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]},{"key":"a2","link":"spelldamage","coeff":[0.12]},{"key":"f2","link":"@dynamic.abilitypower","coeff":[0.93]}],"range":[1325,1325,1325,1325,1325],"rangeBurn":"1325","key":"HeimerdingerW"},{"name":"CH-2 전자폭풍 수류탄","description":"하이머딩거가 목표 위치에 수류탄을 던져 적에게 피해를 입힙니다. 수류탄에 직격 당한 적은 기절하며, 빗겨맞은 유닛은 느려집니다.","sanitizedDescription":"하이머딩거가 목표 위치에 수류탄을 던져 적에게 피해를 입힙니다. 수류탄에 직격 당한 적은 기절하며, 빗겨맞은 유닛은 느려집니다.","tooltip":"수류탄을 던져 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 이동 속도를 {{ e3 }}% 늦춥니다. 폭발 반경 중앙에 있는 적들은 추가로 {{ e4 }}초 동안 기절합니다.<br /><br />적 챔피언을 맞히면 근처의 포탑 광선이 최대로 충전됩니다.","sanitizedTooltip":"수류탄을 던져 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 이동 속도를 {{ e3 }}% 늦춥니다. 폭발 반경 중앙에 있는 적들은 추가로 {{ e4 }}초 동안 기절합니다. 적 챔피언을 맞히면 근처의 포탑 광선이 최대로 충전됩니다.","leveltip":{"label":["피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"HeimerdingerE.png","sprite":"spell4.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[85,85,85,85,85],"costBurn":"85","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,100,140,180,220],[2,2,2,2,2],[35,35,35,35,35],[1.25,1.25,1.25,1.25,1.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/100/140/180/220","2","35","1.25","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[970,970,970,970,970],"rangeBurn":"970","key":"HeimerdingerE"},{"name":"업그레이드!!!","description":"하이머딩거가 업그레이드를 개발하여, 다음 스킬의 효과가 증가합니다. ","sanitizedDescription":"하이머딩거가 업그레이드를 개발하여, 다음 스킬의 효과가 증가합니다.","tooltip":"하이머딩거가 다음 스킬을 조건 없이 사용할 수 있으며 추가 효과가 발동됩니다. 취소할 수 있습니다.<br /><br /><span class=\"colorFFFF99\">H-28Q 최첨단 포탑:</span> 포탑을 설치하면 8초 동안 대포로 {{ e7 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를, 광선으로는 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 이 포탑은 광역 피해를 입히고 이동 방해에 면역이며, 대상의 속도를 2초 동안 25% 늦추고, 포탑 최대 제한 갯수에 영향을 받지 않습니다.<br /><br /><span class=\"colorFFFF99\">마법공학 로켓 연사:</span> 로켓들이 4번 연속 발사되며 한 번에 {{ e8 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 마법 피해를 입힙니다. 챔피언과 몬스터의 경우 여러 발에 맞으면 받는 피해량이 줄어듭니다. (최대 {{ e5 }} <span class=\"color99FF99\">(+{{ f2 }})</span>)<br /><br /><span class=\"colorFFFF99\">CH-3X 전격 수류탄:</span> 세 번 튕기며 전류를 방출하는 반동 수류탄을 던져 {{ e0 }} <span class=\"color99FF99\">(+{{ f4 }})</span>의 마법 피해를 입힙니다. 기절과 둔화 적용 범위가 모두 커지며, 둔화 비율이 80%로 상승합니다.","sanitizedTooltip":"하이머딩거가 다음 스킬을 조건 없이 사용할 수 있으며 추가 효과가 발동됩니다. 취소할 수 있습니다. H-28Q 최첨단 포탑: 포탑을 설치하면 8초 동안 대포로 {{ e7 }} (+{{ a2 }})의 마법 피해를, 광선으로는 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이 포탑은 광역 피해를 입히고 이동 방해에 면역이며, 대상의 속도를 2초 동안 25% 늦추고, 포탑 최대 제한 갯수에 영향을 받지 않습니다. 마법공학 로켓 연사: 로켓들이 4번 연속 발사되며 한 번에 {{ e8 }} (+{{ f1 }})의 마법 피해를 입힙니다. 챔피언과 몬스터의 경우 여러 발에 맞으면 받는 피해량이 줄어듭니다. (최대 {{ e5 }} (+{{ f2 }})) CH-3X 전격 수류탄: 세 번 튕기며 전류를 방출하는 반동 수류탄을 던져 {{ e0 }} (+{{ f4 }})의 마법 피해를 입힙니다. 기절과 둔화 적용 범위가 모두 커지며, 둔화 비율이 80%로 상승합니다.","leveltip":{"label":["재사용 대기시간","최첨단 포탑 대포 피해량","포탑 광선 피해량","로켓 연사 피해량","로켓 연사 최대 피해량","전격 수류탄 피해량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e7 }} -> {{ e7NL }}","{{ e1 }} -> {{ e1NL }}","{{ e8 }} -> {{ e8NL }}","{{ e5 }} -> {{ e5NL }}","{{ e0 }} -> {{ e0NL }}"]},"image":{"full":"HeimerdingerR.png","sprite":"spell4.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,85,70],"cooldownBurn":"100/85/70","effect":[null,[200,270,340],[80,80,80],[1.5,1.5,1.5],[0.12,0.12,0.12],[500,690,865],[0.45,0.45,0.45],[80,100,120],[135,180,225],[28,39,49],[150,250,350]],"effectBurn":["","200/270/340","80","1.5","0.12","500/690/865","0.45","80/100/120","135/180/225","28/39/49","150/250/350"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"f1","link":"@dynamic.abilitypower","coeff":[0]},{"key":"f2","link":"@dynamic.abilitypower","coeff":[1.83]},{"key":"f4","link":"@dynamic.abilitypower","coeff":[0.6]}],"range":[1,1,1],"rangeBurn":"1","key":"HeimerdingerR"}],"passive":{"name":"마법공학 전문가","description":"아군 포탑이나 하이머딩거가 설치한 포탑 주변에서 이동 속도가 증가합니다.","sanitizedDescription":"아군 포탑이나 하이머딩거가 설치한 포탑 주변에서 이동 속도가 증가합니다.","image":{"full":"Heimerdinger_Passive.png","sprite":"passive1.png","group":"passive","x":336,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Heimerdinger","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1027,"count":1},{"id":1052,"count":1},{"id":3802,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3108,"count":1},{"id":1052,"count":1},{"id":3802,"count":1},{"id":3165,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3027,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3060,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3116,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3030,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3030,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Heimerdinger","title":"HeimerdingerTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Alistar":{"id":12,"key":"Alistar","name":"알리스타","title":"미노타우로스","image":{"full":"Alistar.png","sprite":"champion0.png","group":"champion","x":144,"y":0,"w":48,"h":48},"skins":[{"id":12000,"name":"default","num":0},{"id":12001,"name":"검은 알리스타","num":1},{"id":12002,"name":"황금 알리스타","num":2},{"id":12003,"name":"투우사 알리스타","num":3},{"id":12004,"name":"OK 목장의 알리스타","num":4},{"id":12005,"name":"해방된 알리스타","num":5},{"id":12006,"name":"지옥의 알리스타","num":6},{"id":12007,"name":"빗장수비 알리스타","num":7},{"id":12008,"name":"습격자 알리스타","num":8},{"id":12009,"name":"SKT T1 알리스타","num":9},{"id":12010,"name":"내가 젖소 알리스타","num":10}],"lore":"알리스타는 무시무시한 명성을 자랑하는 막강한 전사로, 녹서스 제국의 손에 살해된 자신의 부족민의 복수를 꿈꾸고 있다. 알리스타는 비록 노예로 잡혀 검투사로 싸워야 했지만, 꺾을 수 없는 의지가 있어 마음 깊은 곳까지 짐승으로 변하지는 않을 수 있었다. 이제 노예로서의 구속에서 자유를 되찾은 알리스타는 짓밟히고 힘없는 이들을 위해 싸운다. 알리스타에게 분노란 뿔이나 발굽, 주먹보다도 강력한 무기이다.","blurb":"알리스타는 무시무시한 명성을 자랑하는 막강한 전사로, 녹서스 제국의 손에 살해된 자신의 부족민의 복수를 꿈꾸고 있다. 알리스타는 비록 노예로 잡혀 검투사로 싸워야 했지만, 꺾을 수 없는 의지가 있어 마음 깊은 곳까지 짐승으로 변하지는 않을 수 있었다. 이제 노예로서의 구속에서 자유를 되찾은 알리스타는 짓밟히고 힘없는 이들을 위해 싸운다. 알리스타에게 분노란 뿔이나 발굽, 주먹보다도 강력한 무기이다.","allytips":["- 분쇄를 사용하면 박치기를 사용하기 좋은 위치를 잡을 수 있습니다.","- 알리스타에게는 이동 속도가 생명입니다. 어떤 신발을 구입할지 신중하게 생각하십시오.","- 점멸로 방심한 적에게 접근해 분쇄/박치기 스킬 연계를 사용하면 적을 아군 쪽으로 던져버릴 수 있습니다."],"enemytips":["- 알리스타는 방해 효과 스킬을 많이 가지고 있지만 매우 튼튼합니다. 방어력이 약한 공격수를 목표로 삼으십시오.","- 포탑 주변에 있을 때에는 분쇄/박치기 콤보를 조심하십시오.","- 알리스타가 궁극기를 사용하면 그냥 뒤로 물러나 효과가 사라질 때까지 기다렸다가 공격하는 것이 좋습니다."],"tags":["Tank","Support"],"partype":"마나","info":{"attack":6,"defense":9,"magic":5,"difficulty":7},"stats":{"armor":44,"armorperlevel":3.5,"attackdamage":61.1116,"attackdamageperlevel":3.62,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.125,"crit":0,"critperlevel":0,"hp":613.36,"hpperlevel":106,"hpregen":8.678,"hpregenperlevel":0.85,"movespeed":330,"mp":278.84,"mpperlevel":38,"mpregen":8.5,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"분쇄","description":"알리스타가 땅을 내리쳐 주변의 적에게 피해를 입히고 공중에 띄웁니다.","sanitizedDescription":"알리스타가 땅을 내리쳐 주변의 적에게 피해를 입히고 공중에 띄웁니다.","tooltip":"알리스타가 땅을 내리쳐 주변의 적에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히며 {{ e3 }}초 동안 공중에 띄웁니다.","sanitizedTooltip":"알리스타가 땅을 내리쳐 주변의 적에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히며 {{ e3 }}초 동안 공중에 띄웁니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"Pulverize.png","sprite":"spell0.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,70,75,80,85],"costBurn":"65/70/75/80/85","cooldown":[17,16,15,14,13],"cooldownBurn":"17/16/15/14/13","effect":[null,[375,375,375,375,375],[60,105,150,195,240],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","375","60/105/150/195/240","1","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[365,365,365,365,365],"rangeBurn":"365","key":"Pulverize"},{"name":"박치기","description":"알리스타가 적에게 박치기를 하여 피해를 입히고 적을 밀어냅니다.","sanitizedDescription":"알리스타가 적에게 박치기를 하여 피해를 입히고 적을 밀어냅니다.","tooltip":"알리스타가 적을 들이받아 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 뒤로 밀쳐냅니다.","sanitizedTooltip":"알리스타가 적을 들이받아 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히고 뒤로 밀쳐냅니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"Headbutt.png","sprite":"spell0.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,70,75,80,85],"costBurn":"65/70/75/80/85","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[0,0,0,0,0],[55,110,165,220,275],[700,700,700,700,700],[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","55/110/165/220/275","700","0.75","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"Headbutt"},{"name":"짓밟기","description":"알리스타가 근처의 적 유닛을 짓밟아 적 챔피언에게 피해를 입힐 경우 중첩을 얻고, 유닛을 통과해서 다닐 수 있게 됩니다. 최대치까지 중첩되면 알리스타의 적 챔피언에 대한 다음 기본 공격이 강화되어 추가 마법 피해를 입히고 기절시킵니다.","sanitizedDescription":"알리스타가 근처의 적 유닛을 짓밟아 적 챔피언에게 피해를 입힐 경우 중첩을 얻고, 유닛을 통과해서 다닐 수 있게 됩니다. 최대치까지 중첩되면 알리스타의 적 챔피언에 대한 다음 기본 공격이 강화되어 추가 마법 피해를 입히고 기절시킵니다.","tooltip":"알리스타가 땅을 짓밟아 근처의 적에게 {{ e3 }}초 동안 {{ f1 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 마법 피해를 입히고 유닛을 통과해서 다닐 수 있게 됩니다. 이 스킬로 적 챔피언에게 피해를 입힐 때마다 <span class=\"colorFF6E1C\">짓밟기</span> 중첩이 1회 쌓입니다.<br /><br /><span class=\"colorFF6E1C\">짓밟기</span>가 {{ e5 }}회 중첩되면 알리스타의 적 챔피언에 대한 다음 기본 공격이 강화되어 <span class=\"colorFFFFFF\">{{ f3 }}</span>의 추가 마법 피해를 입히고 {{ e6 }}초 동안 기절시킵니다.","sanitizedTooltip":"알리스타가 땅을 짓밟아 근처의 적에게 {{ e3 }}초 동안 {{ f1 }} (+{{ f2 }})의 마법 피해를 입히고 유닛을 통과해서 다닐 수 있게 됩니다. 이 스킬로 적 챔피언에게 피해를 입힐 때마다 짓밟기 중첩이 1회 쌓입니다. 짓밟기가 {{ e5 }}회 중첩되면 알리스타의 적 챔피언에 대한 다음 기본 공격이 강화되어 {{ f3 }}의 추가 마법 피해를 입히고 {{ e6 }}초 동안 기절시킵니다.","leveltip":{"label":["재사용 대기시간","마나 소모량","짓밟기 피해량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"AlistarE.png","sprite":"spell0.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[12,11.5,11,10.5,10],"cooldownBurn":"12/11.5/11/10.5/10","effect":[null,[100,125,150,175,200],[50,50,50,50,50],[5,5,5,5,5],[350,350,350,350,350],[5,5,5,5,5],[1,1,1,1,1],[5,5,5,5,5],[40,40,40,40,40],[15,15,15,15,15],[0,0,0,0,0]],"effectBurn":["","100/125/150/175/200","50","5","350","5","1","5","40","15","0"],"range":[350,350,350,350,350],"rangeBurn":"350","key":"AlistarE"},{"name":"꺾을 수 없는 의지","description":"알리스타가 거친 함성을 지르며 자신에게 걸린 모든 방해 효과를 제거하고 일정 시간 동안 적의 물리 및 마법 피해를 감소시킵니다.","sanitizedDescription":"알리스타가 거친 함성을 지르며 자신에게 걸린 모든 방해 효과를 제거하고 일정 시간 동안 적의 물리 및 마법 피해를 감소시킵니다.","tooltip":"알리스타에게서 모든 방해 효과를 제거하고 알리스타가 {{ e1 }}초 동안 받는 모든 물리 및 마법 피해가 {{ e2 }}% 감소합니다.","sanitizedTooltip":"알리스타에게서 모든 방해 효과를 제거하고 알리스타가 {{ e1 }}초 동안 받는 모든 물리 및 마법 피해가 {{ e2 }}% 감소합니다.","leveltip":{"label":["피해량 감소","재사용 대기시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"FerociousHowl.png","sprite":"spell0.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[7,7,7],[55,65,75],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","7","55/65/75","0","0","0","0","0","0","0","0"],"range":[1,1,1],"rangeBurn":"1","key":"FerociousHowl"}],"passive":{"name":"승리의 포효","description":"근처에서 적이 죽거나, 알리스타가 적 챔피언을 기절 혹은 이동시킬 때마다 포효를 중첩시킵니다. 최대치까지 중첩되면 근처의 모든 아군 챔피언과 자신의 체력을 회복시킵니다.","sanitizedDescription":"근처에서 적이 죽거나, 알리스타가 적 챔피언을 기절 혹은 이동시킬 때마다 포효를 중첩시킵니다. 최대치까지 중첩되면 근처의 모든 아군 챔피언과 자신의 체력을 회복시킵니다.","image":{"full":"Alistar_E.png","sprite":"passive0.png","group":"passive","x":144,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Alistar","title":"AlistarARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3110,"count":1},{"id":3190,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3100,"count":1},{"id":3157,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3050,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Alistar","title":"AlistarCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":2049,"count":1},{"id":3097,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3110,"count":1},{"id":3222,"count":1},{"id":3102,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3143,"count":1},{"id":3060,"count":1},{"id":3512,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Alistar","title":"AlistarFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":2049,"count":1},{"id":3401,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3025,"count":1},{"id":3222,"count":1},{"id":3143,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3800,"count":1},{"id":3050,"count":1},{"id":3504,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3711,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":1409,"count":1},{"id":3742,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3800,"count":1},{"id":3050,"count":1},{"id":3504,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Alistar","title":"AlistarKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3110,"count":1},{"id":3190,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3100,"count":1},{"id":3157,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3401,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Alistar","title":"AlistarSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3110,"count":1},{"id":3222,"count":1},{"id":3102,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3143,"count":1},{"id":3060,"count":1},{"id":3512,"count":1}]}]},{"champion":"Alistar","title":"AlistarSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":2049,"count":1},{"id":3097,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3110,"count":1},{"id":3222,"count":1},{"id":3001,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3143,"count":1},{"id":3050,"count":1},{"id":3060,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3711,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":1409,"count":1},{"id":3742,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3109,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3143,"count":1},{"id":3193,"count":1},{"id":3050,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Alistar","title":"AlistarTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1029,"count":1},{"id":2031,"count":1},{"id":1001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3117,"count":1},{"id":2033,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1413,"count":1},{"id":3117,"count":1},{"id":2032,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3748,"count":1},{"id":3800,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Alistar","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3001,"count":1},{"id":3083,"count":1}]}]}]},"XinZhao":{"id":5,"key":"XinZhao","name":"신 짜오","title":"데마시아의 호위무사","image":{"full":"XinZhao.png","sprite":"champion4.png","group":"champion","x":0,"y":48,"w":48,"h":48},"skins":[{"id":5000,"name":"default","num":0},{"id":5001,"name":"특공대 신 짜오","num":1},{"id":5002,"name":"제국의 신 짜오","num":2},{"id":5003,"name":"검투사 신 짜오","num":3},{"id":5004,"name":"윙드후사르 신 짜오","num":4},{"id":5005,"name":"대장군 신 짜오","num":5},{"id":5006,"name":"비밀요원 신 짜오","num":6},{"id":5013,"name":"용 사냥꾼 신 짜오","num":13}],"lore":"신 짜오는 나라를 다스리는 라이트실드 왕조에 충성을 바치는 결의에 가득 찬 전사이다. 신 짜오는 한 때 녹서스의 검투사로 싸우는 형벌에 처해져 셀 수 없이 많은 시합에서 살아남았지만 데마시아 군이 신 짜오를 해방시켜 준 후, 용감한 해방군인 데마시아 군에 목숨을 다해 충성하기로 맹세했다. 손에 익은 삼조창으로 무장한 신 짜오는 이제 자신을 받아들여 준 데마시아 왕국을 위해 어떤 적이 어떠한 상황에서 달려든다 해도 담대하게 맞선다.","blurb":"신 짜오는 나라를 다스리는 라이트실드 왕조에 충성을 바치는 결의에 가득 찬 전사이다. 신 짜오는 한 때 녹서스의 검투사로 싸우는 형벌에 처해져 셀 수 없이 많은 시합에서 살아남았지만 데마시아 군이 신 짜오를 해방시켜 준 후, 용감한 해방군인 데마시아 군에 목숨을 다해 충성하기로 맹세했다. 손에 익은 삼조창으로 무장한 신 짜오는 이제 자신을 받아들여 준 데마시아 왕국을 위해 어떤 적이 어떠한 상황에서 달려든다 해도 담대하게 맞선다.","allytips":["- 신 짜오는 전투를 시작하는 데 유용한 캐릭터입니다. 선두에서 싸움을 이끌고 궁극기로 적에게 최대한 큰 피해를 주십시오.","- 좋은 위치를 선점하여 궁극기의 밀어내기를 효율적으로 사용할 수 있도록 하십시오."],"enemytips":["- 신 짜오는 돌격 기술과 주변의 모든 유닛에게 큰 피해를 주는 궁극기가 있어 선제 공격에 강합니다. 신 짜오가 궁극기를 쓸 때까지는 진형을 최대한 넓게 펼치는 편이 좋습니다.","- 신 짜오는 피해를 입히고 재사용 대기시간을 초기화시키는 삼조격에 크게 의존하기 때문에, 신 짜오가 연계기를 미처 끝내지 못하도록 방해한다면 큰 효과를 볼 수 있습니다."],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":8,"defense":6,"magic":3,"difficulty":2},"stats":{"armor":35,"armorperlevel":3.5,"attackdamage":66,"attackdamageperlevel":3.3,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":570,"hpperlevel":92,"hpregen":8.176,"hpregenperlevel":0.7,"movespeed":345,"mp":273.8,"mpperlevel":35,"mpregen":7.256,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"삼조격","description":"신 짜오의 다음 세 번의 기본 공격이 더 큰 피해를 입히고, 세 번째 공격에서 상대를 공중으로 띄웁니다.","sanitizedDescription":"신 짜오의 다음 세 번의 기본 공격이 더 큰 피해를 입히고, 세 번째 공격에서 상대를 공중으로 띄웁니다.","tooltip":"신 짜오의 다음 3번의 기본 공격은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 추가 물리 피해를 입히고, 다른 스킬의 재사용 대기시간을 1초 감소시킵니다. 또한 마지막 공격은 적을 {{ e2 }}초 동안 공중으로 띄워 올립니다.","sanitizedTooltip":"신 짜오의 다음 3번의 기본 공격은 {{ e1 }} (+{{ f1 }})의 추가 물리 피해를 입히고, 다른 스킬의 재사용 대기시간을 1초 감소시킵니다. 또한 마지막 공격은 적을 {{ e2 }}초 동안 공중으로 띄워 올립니다.","leveltip":{"label":["추가 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XinZhaoQ.png","sprite":"spell13.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[20,25,30,35,40],[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/25/30/35/40","0.75","0","0","0","0","0","0","0","0"],"range":[375,375,375,375,375],"rangeBurn":"375","key":"XinZhaoQ"},{"name":"풍전참뢰","description":"신 짜오가 창으로 앞을 가른 뒤 그대로 찌릅니다.","sanitizedDescription":"신 짜오가 창으로 앞을 가른 뒤 그대로 찌릅니다.","tooltip":"신 짜오가 창으로 앞을 가른 뒤 그대로 찌릅니다.<br /><br /><span class=\"colorDDDD77\">가르기</span>: {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 피해<br /><span class=\"colorDDDD77\">찌르기</span>: {{ e2 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 피해 및 {{ e7 }}초 동안 {{ e6 }}% 둔화<br /><br />아이템 및 레벨에 따른 공격 속도에 기반해 시전 시간도 감소합니다. (최소 0.4초) 현재 시전 시간: <span class=\"colorFFFFFF\">{{ f5 }}</span><br /><br /><rules>미니언에게는 50%의 피해만 입힙니다.<br />생명력 흡수 효과는 각각의 공격에 33%씩 적용됩니다.<br />다른 스킬의 현재 지속시간이 {{ f5 }}초씩 늘어납니다.</rules>","sanitizedTooltip":"신 짜오가 창으로 앞을 가른 뒤 그대로 찌릅니다. 가르기: {{ e1 }} (+{{ a1 }})의 피해 찌르기: {{ e2 }} (+{{ a2 }})의 피해 및 {{ e7 }}초 동안 {{ e6 }}% 둔화 아이템 및 레벨에 따른 공격 속도에 기반해 시전 시간도 감소합니다. (최소 0.4초) 현재 시전 시간: {{ f5 }} 미니언에게는 50%의 피해만 입힙니다. 생명력 흡수 효과는 각각의 공격에 33%씩 적용됩니다. 다른 스킬의 현재 지속시간이 {{ f5 }}초씩 늘어납니다.","leveltip":{"label":["가르기 피해량","찌르기 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XinZhaoW.png","sprite":"spell13.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[30,40,50,60,70],[30,65,100,135,170],[0.6,0.6,0.6,0.6,0.6],[0.5,0.5,0.5,0.5,0.5],[0.4,0.4,0.4,0.4,0.4],[50,50,50,50,50],[1.5,1.5,1.5,1.5,1.5],[55,55,55,55,55],[110,110,110,110,110],[0,0,0,0,0]],"effectBurn":["","30/40/50/60/70","30/65/100/135/170","0.6","0.5","0.4","50","1.5","55","110","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.3]},{"key":"a2","link":"attackdamage","coeff":[0.75]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"XinZhaoW"},{"name":"무쌍돌격","description":"신 짜오가 적에게 돌격하여 그 지점에 있던 모든 적에게 피해를 입히고 잠깐 동안 둔화시킵니다.","sanitizedDescription":"신 짜오가 적에게 돌격하여 그 지점에 있던 모든 적에게 피해를 입히고 잠깐 동안 둔화시킵니다.","tooltip":"신 짜오가 적에게 돌격해 근처의 적들에게 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 마법 피해를 입히고, 0.5초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 돌격 시 {{ e4 }}초 동안 신 짜오의 공격 속도가 {{ e3 }}% 증가합니다.","sanitizedTooltip":"신 짜오가 적에게 돌격해 근처의 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고, 0.5초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 돌격 시 {{ e4 }}초 동안 신 짜오의 공격 속도가 {{ e3 }}% 증가합니다.","leveltip":{"label":["피해량","공격 속도"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"XinZhaoE.png","sprite":"spell13.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[50,75,100,125,150],[50,50,50,50,50],[40,45,50,55,60],[5,5,5,5,5],[250,250,250,250,250],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/75/100/125/150","50","40/45/50/55/60","5","250","0.5","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"XinZhaoE"},{"name":"현월수호","description":"신 짜오가 주위 적들에게 각 유닛의 현재 체력에 비례한 피해를 입히고 도전 받지 않은 대상을 뒤로 밀어냅니다. 적 챔피언이 일정 거리 밖에 있을 경우 신 짜오를 공격해도 피해를 입히지 못합니다.","sanitizedDescription":"신 짜오가 주위 적들에게 각 유닛의 현재 체력에 비례한 피해를 입히고 도전 받지 않은 대상을 뒤로 밀어냅니다. 적 챔피언이 일정 거리 밖에 있을 경우 신 짜오를 공격해도 피해를 입히지 못합니다.","tooltip":"신 짜오가 창을 휘둘러 적에게 {{ e1 }}<span class=\"colorFF8C00\"> (+{{ a1 }})</span> + 적 현재 체력의 {{ e2 }}%에 해당하는 물리 피해를 입히고 뒤로 밀쳐냅니다. (몬스터 상대로는 최대 600)<br /><br />이 스킬 사용 후 {{ e5 }}초가 지나면 신 짜오의 <span class=\"colorDDDD77\">의식</span>이 극대화되어 일정 거리 밖에 있는 적의 공격에 피해를 입지 않게 됩니다. 신 짜오가 기본 공격을 하거나 스킬을 사용할 때마다 <span class=\"colorDDDD77\">의식</span> 효과의 지속시간이 {{ e7 }}초씩 늘어납니다.<br /><br />신 짜오의 기본 공격이나 무쌍돌격에 마지막으로 맞은 챔피언은 뒤로 밀려나지 않습니다.","sanitizedTooltip":"신 짜오가 창을 휘둘러 적에게 {{ e1 }} (+{{ a1 }}) + 적 현재 체력의 {{ e2 }}%에 해당하는 물리 피해를 입히고 뒤로 밀쳐냅니다. (몬스터 상대로는 최대 600) 이 스킬 사용 후 {{ e5 }}초가 지나면 신 짜오의 의식이 극대화되어 일정 거리 밖에 있는 적의 공격에 피해를 입지 않게 됩니다. 신 짜오가 기본 공격을 하거나 스킬을 사용할 때마다 의식 효과의 지속시간이 {{ e7 }}초씩 늘어납니다. 신 짜오의 기본 공격이나 무쌍돌격에 마지막으로 맞은 챔피언은 뒤로 밀려나지 않습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XinZhaoR.png","sprite":"spell13.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[75,175,275],[15,15,15],[0,0,0],[40,60,80],[3,3,3],[450,450,450],[0.3,0.3,0.3],[3,3,3],[0,0,0],[0,0,0]],"effectBurn":["","75/175/275","15","0","40/60/80","3","450","0.3","3","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1]}],"range":[500,500,500],"rangeBurn":"500","key":"XinZhaoR"}],"passive":{"name":"결심","description":"매 세 번째 기본 공격 시마다 추가 피해를 입히고 자신의 체력을 회복합니다.","sanitizedDescription":"매 세 번째 기본 공격 시마다 추가 피해를 입히고 자신의 체력을 회복합니다.","image":{"full":"XinZhaoP.png","sprite":"passive4.png","group":"passive","x":0,"y":48,"w":48,"h":48}},"recommended":[{"champion":"XinZhao","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3022,"count":1},{"id":3156,"count":1},{"id":3068,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3153,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3022,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3134,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3134,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":1416,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3153,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1},{"id":3361,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3134,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3142,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3022,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3748,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3194,"count":1},{"id":3800,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3111,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3748,"count":1},{"id":3124,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3065,"count":1},{"id":3194,"count":1},{"id":3800,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"XinZhao","title":"XinZhaoTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3134,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3142,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1042,"count":1},{"id":2031,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3252,"count":1},{"id":3142,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Lucian":{"id":236,"key":"Lucian","name":"루시안","title":"정화의 사도","image":{"full":"Lucian.png","sprite":"champion2.png","group":"champion","x":144,"y":0,"w":48,"h":48},"skins":[{"id":236000,"name":"default","num":0},{"id":236001,"name":"용병 루시안","num":1},{"id":236002,"name":"스트라이커 루시안","num":2},{"id":236006,"name":"프로젝트: 루시안","num":6},{"id":236007,"name":"사랑의 추적자 루시안","num":7}],"lore":"한 때 빛의 감시자였던 루시안은 죽지 못한 영혼인 언데드를 지칠 줄 모르고 추적해 고대의 마력이 깃든 한 쌍의 총으로 섬멸하는 죽음의 사냥꾼이다. 죽은 아내의 복수심에 사로잡힌 루시안은 아내의 영혼을 사로잡고 있는 악령인 쓰레쉬가 파괴되기 전까지는 멈추지 않을 것이다. 자비 없고 외골수인 루시안은 복수의 길을 가로막는 그 어떤 것도 용서하지 않는다. 누구든, 어떤 것이든 루시안을 막으려는 멍청한 짓을 한다면 마법의 총의 압도적인 포화에 맞아 나가 떨어질 것이다.","blurb":"한 때 빛의 감시자였던 루시안은 죽지 못한 영혼인 언데드를 지칠 줄 모르고 추적해 고대의 마력이 깃든 한 쌍의 총으로 섬멸하는 죽음의 사냥꾼이다. 죽은 아내의 복수심에 사로잡힌 루시안은 아내의 영혼을 사로잡고 있는 악령인 쓰레쉬가 파괴되기 전까지는 멈추지 않을 것이다. 자비 없고 외골수인 루시안은 복수의 길을 가로막는 그 어떤 것도 용서하지 않는다. 누구든, 어떤 것이든 루시안을 막으려는 멍청한 짓을 한다면 마법의 총의 압도적인 포화에 맞아 나가...","allytips":["- 순간 화력을 극대화하려면 끈질긴 추격과 꿰뚫는 빛을 연계하세요.","- 타는 불길은 별 모양으로 폭발합니다. 별의 뿔 부분이 적 챔피언들에게 적중하도록 잘 맞히세요.","- 빛의 심판 스킬의 방향은 한 번 정한 다음에는 바꿀 수 없습니다. 잘 판단하세요!","- 빛의 사수 효과 때문에 루시안은 공격 속도보다는 공격력을 올리는 편이 훨씬 유리합니다."],"enemytips":["- 루시안은 순간 화력이 강한 대신 지속 피해량은 작은 편입니다.","- 루시안은 빛의 심판을 발사하는 방향을 바꿀 수 없습니다. 이 점을 활용하여 총알이 날아올 각도를 벗어나세요.","- 꿰뚫는 빛을 써도 루시안의 공격 사거리는 늘어나지 않습니다. 이 스킬은 최초에 맞힐 대상이 사거리 내에 있어야 사용할 수 있으므로, 루시안이 공격할 각도를 예측해서 피하세요."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":5,"magic":3,"difficulty":6},"stats":{"armor":33,"armorperlevel":3,"attackdamage":65,"attackdamageperlevel":2.41,"attackrange":500,"attackspeedoffset":-0.02,"attackspeedperlevel":3.3,"crit":0,"critperlevel":0,"hp":554.4,"hpperlevel":80,"hpregen":6.192,"hpregenperlevel":0.65,"movespeed":335,"mp":348.88,"mpperlevel":38,"mpregen":8.176,"mpregenperlevel":0.7,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"꿰뚫는 빛","description":"루시안이 대상을 관통하는 빛 줄기를 발사합니다.","sanitizedDescription":"루시안이 대상을 관통하는 빛 줄기를 발사합니다.","tooltip":"적 유닛 하나를 관통하는 빛 줄기를 발사하여, 일직선 상의 적들에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> (추가 공격력의 {{ e2 }}%)의 물리 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">루시안의 레벨이 오를수록 꿰뚫는 빛의 시전 시간이 감소합니다.</span></rules>","sanitizedTooltip":"적 유닛 하나를 관통하는 빛 줄기를 발사하여, 일직선 상의 적들에게 {{ e1 }} (+{{ f1 }}) (추가 공격력의 {{ e2 }}%)의 물리 피해를 입힙니다. 루시안의 레벨이 오를수록 꿰뚫는 빛의 시전 시간이 감소합니다.","leveltip":{"label":["피해량","추가 공격력","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LucianQ.png","sprite":"spell6.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[85,120,155,190,225],[60,70,80,90,100],[900,900,900,900,900],[0.41,0.41,0.41,0.41,0.41],[100,100,100,100,100],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","85/120/155/190/225","60/70/80/90/100","900","0.41","100","0","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.6,0.75,0.9,1.05,1.2]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"LucianQ"},{"name":"타는 불길","description":"루시안이 별 모양으로 폭발하여 적에게 표식을 남기는 미사일을 발사합니다. 표식이 남아 있는 적을 공격하면 루시안의 이동 속도가 상승합니다.","sanitizedDescription":"루시안이 별 모양으로 폭발하여 적에게 표식을 남기는 미사일을 발사합니다. 표식이 남아 있는 적을 공격하면 루시안의 이동 속도가 상승합니다.","tooltip":"적을 맞히거나 경로 끝에 도달하면 폭발하는 탄환을 발사합니다. 폭발에 맞은 적에게 {{ e1 }} <span class=\"color88FF88\">(+{{ a1 }})</span>의 마법 피해를 입히고 6초 동안 표식을 남깁니다.<br /><br />루시안이나 아군이 표식이 남은 적을 공격하면 루시안의 이동 속도가 1초간 {{ e2 }}만큼 상승합니다.","sanitizedTooltip":"적을 맞히거나 경로 끝에 도달하면 폭발하는 탄환을 발사합니다. 폭발에 맞은 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 6초 동안 표식을 남깁니다. 루시안이나 아군이 표식이 남은 적을 공격하면 루시안의 이동 속도가 1초간 {{ e2 }}만큼 상승합니다.","leveltip":{"label":["피해량","이동 속도","재사용 대기시간</br>"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LucianW.png","sprite":"spell6.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[60,100,140,180,220],[60,65,70,75,80],[900,900,900,900,900],[0,0,0,0,0],[1,1,1,1,1],[200,200,200,200,200],[1,1,1,1,1],[6,6,6,6,6],[1,1,1,1,1],[700,700,700,700,700]],"effectBurn":["","60/100/140/180/220","60/65/70/75/80","900","0","1","200","1","6","1","700"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"LucianW"},{"name":"끈질긴 추격","description":"루시안이 짧은 거리를 빠르게 돌진합니다. 빛의 사수 스킬로 공격하면 끈질긴 추격의 재사용 대기시간이 감소합니다.","sanitizedDescription":"루시안이 짧은 거리를 빠르게 돌진합니다. 빛의 사수 스킬로 공격하면 끈질긴 추격의 재사용 대기시간이 감소합니다.","tooltip":"짧은 거리를 빠르게 돌진합니다.<br /><br />빛의 사수로 적을 맞힐 때마다 끈질긴 추격의 재사용 대기시간이 {{ e1 }}초씩 감소합니다. (적 챔피언의 경우 두 배인 {{ e2 }}초 감소)","sanitizedTooltip":"짧은 거리를 빠르게 돌진합니다. 빛의 사수로 적을 맞힐 때마다 끈질긴 추격의 재사용 대기시간이 {{ e1 }}초씩 감소합니다. (적 챔피언의 경우 두 배인 {{ e2 }}초 감소)","leveltip":{"label":["재사용 대기시간","마나 소모량"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LucianE.png","sprite":"spell6.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,30,20,10,0],"costBurn":"40/30/20/10/0","cooldown":[22,20,18,16,14],"cooldownBurn":"22/20/18/16/14","effect":[null,[1,1,1,1,1],[2,2,2,2,2],[425,425,425,425,425],[200,200,200,200,200],[1350,1350,1350,1350,1350],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1","2","425","200","1350","0","0","0","0","0"],"range":[445,445,445,445,445],"rangeBurn":"445","key":"LucianE"},{"name":"빛의 심판","description":"루시안의 무기에서 총알이 난사됩니다.","sanitizedDescription":"루시안의 무기에서 총알이 난사됩니다.","tooltip":"루시안이 한 방향으로 {{ e1 }}초 동안 빠르게 총을 난사하며 자유롭게 이동합니다. 이 총알들은 처음 맞는 적에게 충돌하며, 각각 {{ e2 }} <span class=\"color88FF88\">(+{{ a1 }})</span> <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 물리 피해를 입힙니다.  빛의 심판은 미니언에게는 {{ e8 }}%의 피해를 입힙니다.<br /><br />루시안은 빛의 심판을 사용하는 동안 끈질긴 추격을 사용할 수 있습니다.<br /><br />빛의 심판을 한 번 더 사용하면 사격을 중지합니다.","sanitizedTooltip":"루시안이 한 방향으로 {{ e1 }}초 동안 빠르게 총을 난사하며 자유롭게 이동합니다. 이 총알들은 처음 맞는 적에게 충돌하며, 각각 {{ e2 }} (+{{ a1 }}) (+{{ a2 }})의 물리 피해를 입힙니다. 빛의 심판은 미니언에게는 {{ e8 }}%의 피해를 입힙니다. 루시안은 빛의 심판을 사용하는 동안 끈질긴 추격을 사용할 수 있습니다. 빛의 심판을 한 번 더 사용하면 사격을 중지합니다.","leveltip":{"label":["피해량","총알 수","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LucianR.png","sprite":"spell6.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,100,90],"cooldownBurn":"110/100/90","effect":[null,[3,3,3],[20,35,50],[2.5,3,3.5],[2.5,2.5,2.5],[20,25,30],[0.75,0.75,0.75],[1050,1050,1050],[400,400,400],[125,125,125],[0.25,0.25,0.25]],"effectBurn":["","3","20/35/50","2.5/3/3.5","2.5","20/25/30","0.75","1050","400","125","0.25"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.1]},{"key":"a2","link":"attackdamage","coeff":[0.2]}],"range":[1400,1400,1400],"rangeBurn":"1400","key":"LucianR"}],"passive":{"name":"빛의 사수","description":"루시안이 스킬을 사용할 때마다 다음 공격이 2연속으로 발사됩니다.","sanitizedDescription":"루시안이 스킬을 사용할 때마다 다음 공격이 2연속으로 발사됩니다.","image":{"full":"Lucian_Passive.png","sprite":"passive2.png","group":"passive","x":144,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Lucian","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3087,"count":1},{"id":3031,"count":1},{"id":3508,"count":1},{"id":3036,"count":1}]}]},{"champion":"Lucian","title":"LucianARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3072,"count":1},{"id":3087,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3094,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Lucian","title":"LucianCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3006,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2055,"count":1}]}]},{"champion":"Lucian","title":"LucianFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3087,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3072,"count":1},{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2043,"count":1},{"id":3363,"count":1}]}]},{"champion":"Lucian","title":"LucianKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3072,"count":1},{"id":3087,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3094,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Lucian","title":"LucianPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3071,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3147,"count":1},{"id":3142,"count":1},{"id":3814,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3812,"count":1},{"id":3139,"count":1},{"id":3078,"count":1}]}]},{"champion":"Lucian","title":"LucianSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1001,"count":1},{"id":3508,"count":1},{"id":3094,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3006,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]}]},{"champion":"Lucian","title":"LucianSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3006,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Lucian","title":"LucianTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3812,"count":1},{"id":3153,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Volibear":{"id":106,"key":"Volibear","name":"볼리베어","title":"울부짖는 천둥","image":{"full":"Volibear.png","sprite":"champion4.png","group":"champion","x":288,"y":0,"w":48,"h":48},"skins":[{"id":106000,"name":"default","num":0},{"id":106001,"name":"천둥 군주 볼리베어 ","num":1},{"id":106002,"name":"북극 폭풍 볼리베어","num":2},{"id":106003,"name":"룬 수호자 볼리베어","num":3},{"id":106004,"name":"볼리베어 경위","num":4},{"id":106005,"name":"프로레슬러 볼리베어","num":5}],"lore":"천 번 찔린 곰이라 불리는 번개의 반신 볼리베어는 프렐요드의 전쟁전문가이다. 수 천 년에 걸쳐 혹한의 겨울에 끊임없이 지속된 지독한 전쟁을 거친 볼리베어는 진정한 불굴의 위력을 갖게 되었다. 볼리베어는 산 꼭대기에서 번개 화살을 집어던지는데, 광폭한 눈보라가 잠잠해졌다고 해도 안심하지 말라. 대신 볼리베어가 한 번 더 공격할 기회를 얻은 셈이니. 겁없이 볼리베어를 직접 보려 한다면 용맹한 어사인 전사로 이루어진 부대에 입대하면 된다. 어사인 부대는 볼리베어의 흉포한 발톱의 희생자가 되지는 않을 테니까.","blurb":"천 번 찔린 곰이라 불리는 번개의 반신 볼리베어는 프렐요드의 전쟁전문가이다. 수 천 년에 걸쳐 혹한의 겨울에 끊임없이 지속된 지독한 전쟁을 거친 볼리베어는 진정한 불굴의 위력을 갖게 되었다. 볼리베어는 산 꼭대기에서 번개 화살을 집어던지는데, 광폭한 눈보라가 잠잠해졌다고 해도 안심하지 말라. 대신 볼리베어가 한 번 더 공격할 기회를 얻은 셈이니. 겁없이 볼리베어를 직접 보려 한다면 용맹한 어사인 전사로 이루어진 부대에 입대하면 된다. 어사인 부대는...","allytips":["- 천둥 몰아치기로 선두에서 돌격하며 적들의 속도를 우렁찬 포효로 늦추십시오.","- 볼리베어는 추가 체력과 재사용 대기시간 감소 효과가 가장 이득이 됩니다.","- 광란 스킬을 사용하려면 세 번 연속 공격을 해야 합니다. 따라서 가능한 한 오래 살아남을 수 있도록 방어력에 투자하십시오."],"enemytips":["- 볼리베어는 적 챔피언을 추격할 때 이동 속도가 크게 상승하지만 도망갈 때는 이동 속도 상승 효과가 보다 떨어집니다.","- 볼리베어는 체력이 일정 수준 이하로 떨어지면 대량의 체력을 빠르게 재생합니다.","- 볼리베어가 아군을 향해 돌격할 때 기절이나 둔화 효과를 걸면 볼리베어를 효과적으로 막을 수 있습니다."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":7,"defense":7,"magic":4,"difficulty":3},"stats":{"armor":35,"armorperlevel":3.5,"attackdamage":68,"attackdamageperlevel":3.3,"attackrange":125,"attackspeedoffset":-0.05,"attackspeedperlevel":2.67,"crit":0,"critperlevel":0,"hp":584.48,"hpperlevel":86,"hpregen":8.092,"hpregenperlevel":0.65,"movespeed":345,"mp":270.4,"mpperlevel":30,"mpregen":8.092,"mpregenperlevel":0.65,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"천둥 몰아치기","description":"볼리베어가 적 챔피언을 추격할 때 네 발로 뛰며 이동 속도가 상승합니다. 적 챔피언을 쫓을 때는 이동 속도가 추가로 상승합니다. 첫 번째로 공격받은 적은 공중에 띄워집니다.","sanitizedDescription":"볼리베어가 적 챔피언을 추격할 때 네 발로 뛰며 이동 속도가 상승합니다. 적 챔피언을 쫓을 때는 이동 속도가 추가로 상승합니다. 첫 번째로 공격받은 적은 공중에 띄워집니다.","tooltip":"볼리베어가 네 발로 뛰어다니며 적을 사냥하며 이동 속도가 {{ e3 }}초간 {{ e4 }}% 상승합니다. 적 챔피언에게 다가갈 때는 이동 속도가 {{ e2 }}%까지 상승합니다.<br /><br />이 때 볼리베어의 다음 공격은 추가로 {{ e1 }}의 물리 피해를 가하며 대상을 등 뒤로 넘겨 버립니다.","sanitizedTooltip":"볼리베어가 네 발로 뛰어다니며 적을 사냥하며 이동 속도가 {{ e3 }}초간 {{ e4 }}% 상승합니다. 적 챔피언에게 다가갈 때는 이동 속도가 {{ e2 }}%까지 상승합니다. 이 때 볼리베어의 다음 공격은 추가로 {{ e1 }}의 물리 피해를 가하며 대상을 등 뒤로 넘겨 버립니다.","leveltip":{"label":["추가 피해량","이동 속도 상승 비율","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VolibearQ.png","sprite":"spell13.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[30,60,90,120,150],[30,35,40,45,50],[4,4,4,4,4],[15,15,15,15,15],[400,400,400,400,400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/60/90/120/150","30/35/40/45/50","4","15","400","0","0","0","0","0"],"range":[300,300,300,300,300],"rangeBurn":"300","key":"VolibearQ"},{"name":"광란","description":"볼리베어가 계속 공격을 하면 공격 속도가 상승합니다. 볼리베어가 세 번 연속 공격을 한 다음에는 적을 포악하게 물어뜯어, 잃은 체력에 비례한 추가 피해를 줄 수 있습니다.","sanitizedDescription":"볼리베어가 계속 공격을 하면 공격 속도가 상승합니다. 볼리베어가 세 번 연속 공격을 한 다음에는 적을 포악하게 물어뜯어, 잃은 체력에 비례한 추가 피해를 줄 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>볼리베어가 공격을 할 때마다 공격 속도가 {{ e1 }}% 상승합니다. 최대 {{ e2 }}번까지 중첩됩니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>볼리베어의 광란 효과가 {{ e2 }}번 중첩되면 적을 물어뜯어 {{ e3 }} <span class=\"colorCC3300\">(+{{ f1 }} [추가 체력의 {{ e4 }}%])</span>의 물리 피해를 줍니다. 물어뜯기 피해량은 적이 체력을 {{ e7 }}% 잃을 때마다 {{ e5 }}% 증가합니다. 볼리베어가 몬스터를 물어뜯으면 광란 스킬 재사용 대기시간이 {{ e6 }}% 줄어듭니다.","sanitizedTooltip":"기본 지속 효과: 볼리베어가 공격을 할 때마다 공격 속도가 {{ e1 }}% 상승합니다. 최대 {{ e2 }}번까지 중첩됩니다. 사용 시: 볼리베어의 광란 효과가 {{ e2 }}번 중첩되면 적을 물어뜯어 {{ e3 }} (+{{ f1 }} [추가 체력의 {{ e4 }}%])의 물리 피해를 줍니다. 물어뜯기 피해량은 적이 체력을 {{ e7 }}% 잃을 때마다 {{ e5 }}% 증가합니다. 볼리베어가 몬스터를 물어뜯으면 광란 스킬 재사용 대기시간이 {{ e6 }}% 줄어듭니다.","leveltip":{"label":["추가 공격 속도","물어뜯기 피해"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"VolibearW.png","sprite":"spell13.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[35,35,35,35,35],"costBurn":"35","cooldown":[18,18,18,18,18],"cooldownBurn":"18","effect":[null,[4,8,12,16,20],[3,3,3,3,3],[60,110,160,210,260],[15,15,15,15,15],[1,1,1,1,1],[50,50,50,50,50],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4/8/12/16/20","3","60/110/160/210/260","15","1","50","1","0","0","0"],"vars":[{"key":"f1","link":"bonushealth","coeff":[0.15]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"VolibearW"},{"name":"우렁찬 포효","description":"볼리베어가 우렁찬 포효를 내질러 주변 적에게 피해를 입히며 둔화 효과를 줍니다. 몬스터와 미니언은 공포 상태에 걸립니다.","sanitizedDescription":"볼리베어가 우렁찬 포효를 내질러 주변 적에게 피해를 입히며 둔화 효과를 줍니다. 몬스터와 미니언은 공포 상태에 걸립니다.","tooltip":"볼리베어가 주위 적에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주고 {{ e3 }}초 동안 {{ e1 }}%의 둔화 효과를 겁니다.<br /><br />미니언과 몬스터는 추가로 공포에 걸립니다.","sanitizedTooltip":"볼리베어가 주위 적에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 주고 {{ e3 }}초 동안 {{ e1 }}%의 둔화 효과를 겁니다. 미니언과 몬스터는 추가로 공포에 걸립니다.","leveltip":{"label":["피해량","둔화","마나 소모량 "],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VolibearE.png","sprite":"spell13.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[11,11,11,11,11],"cooldownBurn":"11","effect":[null,[30,35,40,45,50],[60,105,150,195,240],[3,3,3,3,3],[49,49,49,49,49],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/35/40/45/50","60/105/150/195/240","3","49","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[425,425,425,425,425],"rangeBurn":"425","key":"VolibearE"},{"name":"천둥 발톱","description":"볼리베어가 연쇄 번개를 뿜어내 근처의 적에게 피해를 입힙니다. 폭풍의 힘 덕분에 볼리베어가 공격하면 번개가 발사되어 적 사이를 튕겨다닙니다.","sanitizedDescription":"볼리베어가 연쇄 번개를 뿜어내 근처의 적에게 피해를 입힙니다. 폭풍의 힘 덕분에 볼리베어가 공격하면 번개가 발사되어 적 사이를 튕겨다닙니다.","tooltip":"볼리베어가 연쇄 번개를 뿜어내 최대 {{ e4 }}명의 주변 적을 맞혀 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />다음 {{ e3 }}초 동안 폭풍이 볼리베어를 강화하여 매 기본 공격 시 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주며 근처 {{ e4 }}명의 적에게 연쇄 피해를 입힙니다.","sanitizedTooltip":"볼리베어가 연쇄 번개를 뿜어내 최대 {{ e4 }}명의 주변 적을 맞혀 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 다음 {{ e3 }}초 동안 폭풍이 볼리베어를 강화하여 매 기본 공격 시 {{ e1 }} (+{{ a1 }})의 마법 피해를 주며 근처 {{ e4 }}명의 적에게 연쇄 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VolibearR.png","sprite":"spell13.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[75,115,155],[9,9,9],[12,12,12],[8,8,8],[0.08,0.08,0.08],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","75/115/155","9","12","8","0.08","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[500,500,500],"rangeBurn":"500","key":"VolibearR"}],"passive":{"name":"폭풍이 택한 자","description":"볼리베어가 체력이 매우 낮을 때 몇 초간 체력이 급속도로 재생됩니다.","sanitizedDescription":"볼리베어가 체력이 매우 낮을 때 몇 초간 체력이 급속도로 재생됩니다.","image":{"full":"VolibearPassive.png","sprite":"passive4.png","group":"passive","x":288,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Volibear","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3053,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]}]},{"champion":"Volibear","title":"VolibearARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3083,"count":1},{"id":3742,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3078,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Volibear","title":"VolibearCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Volibear","title":"VolibearFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1},{"id":3340,"count":1},{"id":1054,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Volibear","title":"VolibearKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3083,"count":1},{"id":3742,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3078,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Volibear","title":"VolibearSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3075,"count":1}]}]},{"champion":"Volibear","title":"VolibearSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3075,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Volibear","title":"VolibearTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1028,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3111,"count":1},{"id":3211,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":1401,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3102,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3053,"count":1},{"id":3748,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Sejuani":{"id":113,"key":"Sejuani","name":"세주아니","title":"혹한의 분노","image":{"full":"Sejuani.png","sprite":"champion3.png","group":"champion","x":192,"y":0,"w":48,"h":48},"skins":[{"id":113000,"name":"default","num":0},{"id":113001,"name":"칼날 어금니 세주아니","num":1},{"id":113002,"name":"암흑 기수 세주아니","num":2},{"id":113003,"name":"(구) 세주아니","num":3},{"id":113004,"name":"곰 기병 세주아니","num":4},{"id":113005,"name":"포로를 탄 세주아니","num":5},{"id":113006,"name":"괴물 사냥꾼 세주아니","num":6},{"id":113007,"name":"여명추적자 세주아니","num":7}],"lore":"세주아니는 프렐요드에서 가장 공포스러운 부족 중 하나로 꼽히는 얼음발톱 부족의 잔혹하고 무자비한 냉기의 화신이자 전쟁지도자이다. 세주아니의 부족은 생존을 위해 자연과 끊임 없이 절박한 싸움을 했고, 혹독한 겨울에서 살아남기 위해 녹서스, 데마시아, 아바로사를 침공해야 했다. 세주아니는 가장 위험한 공격의 선봉에서 앞장서서 멧돼지 브리슬의 안장에 타고 얼음 정수의 철퇴를 휘둘러 적을 얼리고 깨뜨린다.","blurb":"세주아니는 프렐요드에서 가장 공포스러운 부족 중 하나로 꼽히는 얼음발톱 부족의 잔혹하고 무자비한 냉기의 화신이자 전쟁지도자이다. 세주아니의 부족은 생존을 위해 자연과 끊임 없이 절박한 싸움을 했고, 혹독한 겨울에서 살아남기 위해 녹서스, 데마시아, 아바로사를 침공해야 했다. 세주아니는 가장 위험한 공격의 선봉에서 앞장서서 멧돼지 브리슬의 안장에 타고 얼음 정수의 철퇴를 휘둘러 적을 얼리고 깨뜨린다.","allytips":["- 시전 시간이 있는 스킬을 방해하거나 도망가는 적을 추격할 때 혹한의 맹습을 사용해 보세요.","- 아군 근접 챔피언도 함께 서리 중첩을 쌓을 수 있으니 아군의 공격 대상을 늘 확인하세요.","- 빙하 감옥은 아군이 있을 때 활용할 수 있도록 아껴 두면 좋습니다."],"enemytips":["- 혹한의 맹습과 빙하 감옥을 피하면 세주아니를 상대하기 쉽습니다.","- 혹한의 서릿발 두 번째 공격은 피해량이 굉장히 크므로 꼭 피하세요.","- 세주아니 팀의 근접 챔피언들도 서리 중첩을 입힐 수 있으므로 역시 주의해야 합니다."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":5,"defense":7,"magic":6,"difficulty":4},"stats":{"armor":31,"armorperlevel":3,"attackdamage":64,"attackdamageperlevel":3,"attackrange":150,"attackspeedoffset":0,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":560,"hpperlevel":95,"hpregen":8.5,"hpregenperlevel":0.85,"movespeed":340,"mp":400,"mpperlevel":40,"mpregen":7,"mpregenperlevel":0.7,"spellblock":27.1,"spellblockperlevel":0.75},"spells":[{"name":"혹한의 맹습","description":"세주아니가 전방으로 돌진해 적들을 공중으로 띄웁니다. 적 챔피언에게 한 번 부딪히면 돌진을 멈춥니다.","sanitizedDescription":"세주아니가 전방으로 돌진해 적들을 공중으로 띄웁니다. 적 챔피언에게 한 번 부딪히면 돌진을 멈춥니다.","tooltip":"세주아니가 돌진하며 적들에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 공중으로 띄웁니다. 적 챔피언에게 충돌하면 돌진을 멈춥니다.","sanitizedTooltip":"세주아니가 돌진하며 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 공중으로 띄웁니다. 적 챔피언에게 충돌하면 돌진을 멈춥니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SejuaniQ.png","sprite":"spell9.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[13,12.5,12,11.5,11],"cooldownBurn":"13/12.5/12/11.5/11","effect":[null,[60,90,120,150,180],[625,625,625,625,625],[1000,1000,1000,1000,1000],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/90/120/150/180","625","1000","0.5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"SejuaniQ"},{"name":"혹한의 서릿발","description":"세주아니가 철퇴를 두 번 휘둘러 피해를 입히고 서리 중첩을 적용시킵니다.","sanitizedDescription":"세주아니가 철퇴를 두 번 휘둘러 피해를 입히고 서리 중첩을 적용시킵니다.","tooltip":"세주아니가 철퇴를 휘두릅니다. 맞은 적은 {{ e1 }} <span class=\"colorFF3300\">(+{{ f1 }})</span>의 물리 피해를 입고 <span class=\"color07F2F1\">서리</span> 중첩이 쌓입니다. 미니언과 몬스터는 뒤로 밀려납니다.<br /><br />잠시 후 세주아니가 철퇴를 내리칩니다. 맞은 적은 {{ e3 }} <span class=\"colorFF3300\">(+{{ f2 }})</span>의 물리 피해를 입고 <span class=\"color07F2F1\">서리</span> 중첩이 쌓이며, 잠깐 동안 느려집니다.","sanitizedTooltip":"세주아니가 철퇴를 휘두릅니다. 맞은 적은 {{ e1 }} (+{{ f1 }})의 물리 피해를 입고 서리 중첩이 쌓입니다. 미니언과 몬스터는 뒤로 밀려납니다. 잠시 후 세주아니가 철퇴를 내리칩니다. 맞은 적은 {{ e3 }} (+{{ f2 }})의 물리 피해를 입고 서리 중첩이 쌓이며, 잠깐 동안 느려집니다.","leveltip":{"label":["첫 번째 피해량","두 번째 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SejuaniW.png","sprite":"spell9.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[20,25,30,35,40],[0.75,0.75,0.75,0.75,0.75],[30,65,100,135,170],[0,0,0,0,0],[75,75,75,75,75],[0.25,0.25,0.25,0.25,0.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/25/30/35/40","0.75","30/65/100/135/170","0","75","0.25","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"SejuaniW"},{"name":"만년 서리","description":"세주아니가 서리가 최대로 중첩된 대상을 얼리고 기절시킵니다.","sanitizedDescription":"세주아니가 서리가 최대로 중첩된 대상을 얼리고 기절시킵니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 근처 아군 근접 챔피언이 적 챔피언이나 대형 몬스터에게 기본 공격을 가하면 <span class=\"color07F2F1\">서리</span> 중첩이 쌓입니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> <span class=\"color07F2F1\">서리</span> 중첩이 4회 쌓인 적에게 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e1 }}초 동안 기절시키며 잠깐 동안 밀어냅니다.<br /><br /><span class=\"size16 color8C8C8C\">세주아니가 기절시킨 적은 {{ f2 }}초 동안 </span><span class=\"size16 color07F2F1\">서리</span><span class=\"size16 color8C8C8C\">중첩이 쌓이지 않습니다.</span>","sanitizedTooltip":"기본 지속 효과: 근처 아군 근접 챔피언이 적 챔피언이나 대형 몬스터에게 기본 공격을 가하면 서리 중첩이 쌓입니다. 사용 시: 서리 중첩이 4회 쌓인 적에게 {{ e3 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e1 }}초 동안 기절시키며 잠깐 동안 밀어냅니다. 세주아니가 기절시킨 적은 {{ f2 }}초 동안 서리중첩이 쌓이지 않습니다.","leveltip":{"label":["피해량","기절 지속시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"SejuaniE.png","sprite":"spell9.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[1.5,1.5,1.5,1.5,1.5],"cooldownBurn":"1.5","effect":[null,[1,1.25,1.5,1.75,2],[0,0,0,0,0],[20,30,40,50,60],[4,4,4,4,4],[5,5,5,5,5],[1100,1100,1100,1100,1100],[0,0,0,0,0],[0,0,0,0,0],[250,250,250,250,250],[0,0,0,0,0]],"effectBurn":["","1/1.25/1.5/1.75/2","0","20/30/40/50/60","4","5","1100","0","0","250","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"SejuaniE"},{"name":"빙하 감옥","description":"세주아니가 올가미를 던져 첫 번째로 맞힌 챔피언을 얼리고 기절시킵니다. 올가미는 적들을 둔화시키는 얼음 폭풍을 일으킵니다.","sanitizedDescription":"세주아니가 올가미를 던져 첫 번째로 맞힌 챔피언을 얼리고 기절시킵니다. 올가미는 적들을 둔화시키는 얼음 폭풍을 일으킵니다.","tooltip":"세주아니가 얼음 정수 올가미를 던져 처음 맞힌 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.<br /><br />올가미는 멀리 날아갈수록 더 강력해져 처음 맞힌 적에게 {{ e7 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 {{ e6 }}초 동안 기절시키며, 최초 대상 이외의 적을 모두 {{ e8 }}% 둔화시키는 얼음 폭풍을 일으킵니다. 얼음 폭풍은 {{ e3 }}초 후 {{ e7 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 {{ e5 }}초 동안 {{ e4 }}% 둔화시킵니다.","sanitizedTooltip":"세주아니가 얼음 정수 올가미를 던져 처음 맞힌 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다. 올가미는 멀리 날아갈수록 더 강력해져 처음 맞힌 적에게 {{ e7 }} (+{{ a2 }})의 마법 피해를 입히고 {{ e6 }}초 동안 기절시키며, 최초 대상 이외의 적을 모두 {{ e8 }}% 둔화시키는 얼음 폭풍을 일으킵니다. 얼음 폭풍은 {{ e3 }}초 후 {{ e7 }} (+{{ a2 }})의 마법 피해를 입히고 {{ e5 }}초 동안 {{ e4 }}% 둔화시킵니다.","leveltip":{"label":["최소 피해량","최대 피해량","재사용 대기시간"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SejuaniR.png","sprite":"spell9.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[100,125,150],[1,1,1],[2,2,2],[80,80,80],[3,3,3],[2,2,2],[150,250,350],[30,30,30],[0,0,0],[0,0,0]],"effectBurn":["","100/125/150","1","2","80","3","2","150/250/350","30","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.8]},{"key":"a2","link":"spelldamage","coeff":[0.8]}],"range":[1300,1300,1300],"rangeBurn":"1300","key":"SejuaniR"}],"passive":{"name":"혹한의 분노","description":"<mainText>세주아니는 일정 시간 동안 피해를 입지 않으면 서리 갑옷이 생겨 추가 방어력과 마법 저항력을 얻고 둔화 효과에 면역됩니다. 서리 갑옷은 세주아니가 피해를 입은 후에도 잠깐 동안 유지됩니다. 기절한 적을 공격하면 막대한 마법 피해를 입힐 수 있습니다.</mainText>","sanitizedDescription":"세주아니는 일정 시간 동안 피해를 입지 않으면 서리 갑옷이 생겨 추가 방어력과 마법 저항력을 얻고 둔화 효과에 면역됩니다. 서리 갑옷은 세주아니가 피해를 입은 후에도 잠깐 동안 유지됩니다. 기절한 적을 공격하면 막대한 마법 피해를 입힐 수 있습니다.","image":{"full":"Sejuani_Passive.png","sprite":"passive3.png","group":"passive","x":192,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Sejuani","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3751,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3751,"count":1},{"id":1031,"count":1},{"id":3068,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3083,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3083,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3109,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3742,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3110,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3742,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3110,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3109,"count":1},{"id":3151,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3143,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3083,"count":1},{"id":3742,"count":2},{"id":3110,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3800,"count":1},{"id":3075,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3083,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3109,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3742,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3110,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3001,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3193,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3194,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1401,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3001,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3194,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sejuani","title":"SejuaniTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3068,"count":1},{"id":3001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3020,"count":1},{"id":1413,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3083,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3170,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Nidalee":{"id":76,"key":"Nidalee","name":"니달리","title":"야성의 사냥꾼","image":{"full":"Nidalee.png","sprite":"champion2.png","group":"champion","x":336,"y":48,"w":48,"h":48},"skins":[{"id":76000,"name":"default","num":0},{"id":76001,"name":"눈토끼 니달리","num":1},{"id":76002,"name":"표범 니달리","num":2},{"id":76003,"name":"프랑스 메이드 니달리","num":3},{"id":76004,"name":"파라오 니달리","num":4},{"id":76005,"name":"마녀 니달리","num":5},{"id":76006,"name":"인간사냥꾼 니달리","num":6},{"id":76007,"name":"대장군 니달리","num":7},{"id":76008,"name":"도전자 니달리","num":8},{"id":76009,"name":"슈퍼 갤럭시 니달리","num":9}],"lore":"깊은 정글에서 자라난 니달리는 자신의 형태를 흉포한 쿠거로 자유자재로 변화시킬 수 있는 추적의 달인이다. 완전한 여인도, 완전한 야수도 아닌 니달리는 신중하게 배치한 덫과 재빠른 창 투척으로 모든 침입자들로부터 자신의 영역을 맹렬하게 지켜낸다. 니달리는 사냥감을 움직이지 못하게 공격한 후 쿠거 형태로 변해 덮친다. 니달리에게서 운 좋게 살아남은 몇 사람은 야생에 사는 여자가 있다는 이야기를 퍼뜨렸다. 본능이 극도로 예리하고, 발톱은 그보다도 더 예리하다고...","blurb":"깊은 정글에서 자라난 니달리는 자신의 형태를 흉포한 쿠거로 자유자재로 변화시킬 수 있는 추적의 달인이다. 완전한 여인도, 완전한 야수도 아닌 니달리는 신중하게 배치한 덫과 재빠른 창 투척으로 모든 침입자들로부터 자신의 영역을 맹렬하게 지켜낸다. 니달리는 사냥감을 움직이지 못하게 공격한 후 쿠거 형태로 변해 덮친다. 니달리에게서 운 좋게 살아남은 몇 사람은 야생에 사는 여자가 있다는 이야기를 퍼뜨렸다. 본능이 극도로 예리하고, 발톱은 그보다도 더...","allytips":["- 수풀을 유리하게 사용하세요! 수풀 안팎으로 이동하면 전투 효율을 높일 수 있습니다.","- 팀 전투 시작 시 투창 던지기로 적을 공격한 후 쿠거로 변신하여 사냥 당하는 대상을 추격하세요.","- 매복 덫은 대상의 현재 체력에 비례한 피해를 입힙니다. 아군이 적의 최전선에 피해를 가할 수 있게끔, 팀 전투가 개시되기 전에 아군 후방에 깔아두세요."],"enemytips":["- 니달리의 사냥 효과는 창 투척과 매복 덫으로만 적용할 수 있습니다. 이 두 스킬만 피하면 후속 피해를 예방할 수 있습니다.","- 니달리의 창 투척은 거리가 멀수록 더 큰 피해를 입힙니다. 니달리가 멀리 있다면 창을 반드시 피하세요.","- 니달리의 숨통 끊기는 사냥 당하는 대상에게 엄청난 피해를 입히는 대신, 사용하려면 가까이 다가가야 합니다. 니달리가 최후의 일격을 날리려 접근할 때에 대비해 군중 제어기나 방어 스킬을 아껴두세요."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":5,"defense":4,"magic":7,"difficulty":8},"stats":{"armor":28,"armorperlevel":3.5,"attackdamage":61,"attackdamageperlevel":3.5,"attackrange":525,"attackspeedoffset":-0.02,"attackspeedperlevel":3.22,"crit":0,"critperlevel":0,"hp":545,"hpperlevel":85,"hpregen":6.008,"hpregenperlevel":0.6,"movespeed":335,"mp":295.6,"mpperlevel":45,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"창 투척 / 숨통 끊기","description":"인간 모습일 때 - 니달리가 가시 달린 창을 대상에게 던집니다. 창이 날아가는 동안 피해가 더욱 커집니다. 쿠거 모습일 때 - 다음 공격 시 적에게 치명적인 공격을 가합니다. 대상의 체력이 낮을수록 더 큰 피해를 입힙니다.","sanitizedDescription":"인간 모습일 때 - 니달리가 가시 달린 창을 대상에게 던집니다. 창이 날아가는 동안 피해가 더욱 커집니다. 쿠거 모습일 때 - 다음 공격 시 적에게 치명적인 공격을 가합니다. 대상의 체력이 낮을수록 더 큰 피해를 입힙니다.","tooltip":"<span class=\"size18 colorFF9900\">인간 형태: </span>니달리가 창을 던져 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다. 창 투척이 니달리의 기본 공격 사거리를 넘어가면 피해량이 늘기 시작하여, 최대 거리에서의 총 피해량은 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>까지 올라갑니다.<br /><br /><span class=\"size18 colorFF9900\">쿠거 형태: </span>니달리가 다음 공격에서 상대가 잃은 체력에 비례해 추가 피해를 입힙니다.","sanitizedTooltip":"인간 형태: 니달리가 창을 던져 {{ e1 }} (+{{ a2 }})의 마법 피해를 입힙니다. 창 투척이 니달리의 기본 공격 사거리를 넘어가면 피해량이 늘기 시작하여, 최대 거리에서의 총 피해량은 {{ e2 }} (+{{ a1 }})까지 올라갑니다. 쿠거 형태: 니달리가 다음 공격에서 상대가 잃은 체력에 비례해 추가 피해를 입힙니다.","leveltip":{"label":["창 최소 피해량","창 최대 피해량","창 마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JavelinToss.png","sprite":"spell8.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[70,85,100,115,130],[210,255,300,345,390],[0,0,0,0,0],[0,0,0,0,0],[0.4,0.4,0.4,0.4,0.4],[1.2,1.2,1.2,1.2,1.2],[525,525,525,525,525],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/85/100/115/130","210/255/300/345/390","0","0","0.4","1.2","525","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.4]},{"key":"a1","link":"spelldamage","coeff":[1.2]}],"range":[1500,1500,1500,1500,1500],"rangeBurn":"1500","key":"JavelinToss"},{"name":"매복 덫 / 급습","description":"인간 모습일 때 - 니달리가 적이 밟으면 피해를 입히며 모습을 드러내는 함정을 깝니다. 쿠거 모습일 때 - 앞으로 살짝 뛰어오르며 착지 시 주위에 피해를 입힙니다.","sanitizedDescription":"인간 모습일 때 - 니달리가 적이 밟으면 피해를 입히며 모습을 드러내는 함정을 깝니다. 쿠거 모습일 때 - 앞으로 살짝 뛰어오르며 착지 시 주위에 피해를 입힙니다.","tooltip":"<span class=\"size18 colorFF9900\">인간 형태: </span>니달리가 2분 동안 유지되는 투명한 덫을 설치합니다. 적이 덫을 밟으면 모습이 드러나고 4초간 {{ e7 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입습니다.<br /><br />덫은 동시에 <span class=\"colorFFFFFF\">{{ f4 }}</span>개까지 설치할 수 있습니다. (6레벨, 11레벨, 16레벨에 덫의 최대 설치 가능 수가 증가합니다.)<br /><br /><span class=\"size18 colorFF9900\">쿠거 형태: </span>니달리가 지정한 방향으로 뛰어오르며 주변 적들에게 피해를 입힙니다.","sanitizedTooltip":"인간 형태: 니달리가 2분 동안 유지되는 투명한 덫을 설치합니다. 적이 덫을 밟으면 모습이 드러나고 4초간 {{ e7 }} (+{{ a2 }})의 마법 피해를 입습니다. 덫은 동시에 {{ f4 }}개까지 설치할 수 있습니다. (6레벨, 11레벨, 16레벨에 덫의 최대 설치 가능 수가 증가합니다.) 쿠거 형태: 니달리가 지정한 방향으로 뛰어오르며 주변 적들에게 피해를 입힙니다.","leveltip":{"label":["덫 피해량","덫 재사용 대기시간","덫 마나 소모량"],"effect":["{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"Bushwhack.png","sprite":"spell8.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[0,0,0,0,0],[0,0,0,0,0],[4,4,4,4,4],[13,12,11,10,9],[10,20,30,40,50],[120,120,120,120,120],[40,80,120,160,200],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","0","4","13/12/11/10/9","10/20/30/40/50","120","40/80/120/160/200","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.2]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"Bushwhack"},{"name":"태고의 생명력 / 할퀴기","description":"인간 모습일 때 - 니달리가 쿠거의 영혼과 교신하여 아군을 치료하고 짧은 시간 아군의 공격 속도를 높입니다. 쿠거 모습일 때 - 니달리가 한쪽 방향을 발톱으로 공격하여, 앞에 있는 적들에게 피해를 입힙니다.","sanitizedDescription":"인간 모습일 때 - 니달리가 쿠거의 영혼과 교신하여 아군을 치료하고 짧은 시간 아군의 공격 속도를 높입니다. 쿠거 모습일 때 - 니달리가 한쪽 방향을 발톱으로 공격하여, 앞에 있는 적들에게 피해를 입힙니다.","tooltip":"<span class=\"size18 colorFF9900\">인간 형태: </span>대상 아군 챔피언이 잃은 체력에 비례해 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span> ~ {{ e2 }} <span class=\"color99FF99\">(+{{ f3 }})</span>만큼 치유하고 7초 동안 공격 속도를 {{ e4 }}% 증가시킵니다.<br /><br /><span class=\"size18 colorFF9900\">쿠거 형태: </span>니달리가 전방의 적들을 발톱으로 공격합니다.","sanitizedTooltip":"인간 형태: 대상 아군 챔피언이 잃은 체력에 비례해 {{ e1 }} (+{{ a2 }}) ~ {{ e2 }} (+{{ f3 }})만큼 치유하고 7초 동안 공격 속도를 {{ e4 }}% 증가시킵니다. 쿠거 형태: 니달리가 전방의 적들을 발톱으로 공격합니다.","leveltip":{"label":["태고의 생명력 치유량","태고의 생명력 공격 속도","태고의 생명력 마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"PrimalSurge.png","sprite":"spell8.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,75,90,105,120],"costBurn":"60/75/90/105/120","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[35,55,75,95,115],[70,110,150,190,230],[0,0,0,0,0],[20,30,40,50,60],[0,0,0,0,0],[0.05,0.05,0.05,0.05,0.05],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/55/75/95/115","70/110/150/190/230","0","20/30/40/50/60","0","0.05","2","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.325]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"PrimalSurge"},{"name":"쿠거의 상","description":"니달리가 쿠거로 변신하여 새로운 스킬을 사용할 수 있게 됩니다.","sanitizedDescription":"니달리가 쿠거로 변신하여 새로운 스킬을 사용할 수 있게 됩니다.","tooltip":"<span class=\"size18 colorFF9900\">인간 형태: </span>니달리가 사나운 쿠거로 변신하여 기본 스킬이 숨통 끊기, 급습, 할퀴기로 바뀝니다.<br /><br /><span class=\"size18 colorFF9900\">쿠거 형태: </span>니달리가 인간 형태로 돌아옵니다. 인간 형태일 때 <span class=\"colorFFF673\">사냥</span>이 발동되면 쿠거의 상 스킬의 재사용 대기시간이 초기화됩니다.","sanitizedTooltip":"인간 형태: 니달리가 사나운 쿠거로 변신하여 기본 스킬이 숨통 끊기, 급습, 할퀴기로 바뀝니다. 쿠거 형태: 니달리가 인간 형태로 돌아옵니다. 인간 형태일 때 사냥이 발동되면 쿠거의 상 스킬의 재사용 대기시간이 초기화됩니다.","leveltip":{"label":["숨통 끊기 피해량","숨통 끊기 추가 피해량","급습 피해량","할퀴기 피해량","강화된 급습 재사용 대기시간"],"effect":["{{ f1 }} -> {{ f6 }}","{{ f4 }}% -> {{ f5 }}%","{{ f7 }} -> {{ f8 }}","{{ f9 }} -> {{ f10 }}","{{ f2 }} -> {{ f3 }}"]},"image":{"full":"AspectOfTheCougar.png","sprite":"spell8.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":4,"cost":[0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[3,3,3,3],"cooldownBurn":"3","effect":[null,[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[6,6,6,6],[0,0,0,0],[10,10,10,10],[0,0,0,0],[0,0,0,0]],"effectBurn":["","0","0","0","0","0","6","0","10","0","0"],"range":[20,20,20,20],"rangeBurn":"20","key":"AspectOfTheCougar"}],"passive":{"name":"수풀 배회","description":"수풀을 통과하면 니달리의 이동 속도가 2초간 10% 상승하며, 1400 범위 안의 눈에 보이는 적 챔피언 쪽으로 갈 때는 30%까지 올라갑니다.<br><br>챔피언이나 몬스터에게 창 투척 또는 매복 덫을 맞히면 <font color='#FFF673'>사냥</font>이 발동되어 4초간 대상에 대한 <font color='#ee91d7'>절대 시야</font>를 얻습니다. 이 동안 니달리는 이동 속도가 10% 상승하고 (<font color='#FFF673'>사냥</font> 당하는 대상을 향해 갈 때 30% 상승) 이들을 사냥할 때 숨통 끊기와 급습이 강화됩니다.","sanitizedDescription":"수풀을 통과하면 니달리의 이동 속도가 2초간 10% 상승하며, 1400 범위 안의 눈에 보이는 적 챔피언 쪽으로 갈 때는 30%까지 올라갑니다. 챔피언이나 몬스터에게 창 투척 또는 매복 덫을 맞히면 사냥이 발동되어 4초간 대상에 대한 절대 시야를 얻습니다. 이 동안 니달리는 이동 속도가 10% 상승하고 (사냥 당하는 대상을 향해 갈 때 30% 상승) 이들을 사냥할 때 숨통 끊기와 급습이 강화됩니다.","image":{"full":"Nidalee_Passive.png","sprite":"passive2.png","group":"passive","x":336,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Nidalee","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3028,"count":1},{"id":3108,"count":1},{"id":3174,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3020,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":1058,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3065,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3020,"count":1},{"id":2032,"count":1},{"id":1410,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3065,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3020,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":1058,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3065,"count":1},{"id":3174,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":1058,"count":1},{"id":3165,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3158,"count":1},{"id":1058,"count":1},{"id":1410,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3174,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nidalee","title":"NidaleeTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3070,"count":1},{"id":3090,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3020,"count":1},{"id":3070,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3003,"count":1},{"id":3135,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3003,"count":1},{"id":3135,"count":1},{"id":3090,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3174,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Garen":{"id":86,"key":"Garen","name":"가렌","title":"데마시아의 힘","image":{"full":"Garen.png","sprite":"champion1.png","group":"champion","x":96,"y":0,"w":48,"h":48},"skins":[{"id":86000,"name":"default","num":0},{"id":86001,"name":"핏빛 가렌","num":1},{"id":86002,"name":"사막 특전사 가렌","num":2},{"id":86003,"name":"특공대 가렌","num":3},{"id":86004,"name":"공포의 기사 가렌","num":4},{"id":86005,"name":"방랑자 가렌","num":5},{"id":86006,"name":"강철 군단 가렌","num":6},{"id":86010,"name":"흉포한 제독 가렌","num":10},{"id":86011,"name":"대장군 가렌","num":11}],"lore":"가렌은 불굴의 선봉대의 일원으로 자랑스럽고 고귀하게 싸우는 전사이다. 가렌은 동료들에게 인망이 높고 적에게도 존경받지만, 그것이 데마시아와 데마시아의 이상을 수호하는 임무를 맡은 크라운가드 가문의 자손이기 때문은 아니다. 마법 저항력을 갖춘 방어구와 날카로운 대검으로 무장한 가렌은 전장에서 마법사에 맞서 정당한 검으로 진정한 칼바람을 일으킬 준비가 되어 있다.","blurb":"가렌은 불굴의 선봉대의 일원으로 자랑스럽고 고귀하게 싸우는 전사이다. 가렌은 동료들에게 인망이 높고 적에게도 존경받지만, 그것이 데마시아와 데마시아의 이상을 수호하는 임무를 맡은 크라운가드 가문의 자손이기 때문은 아니다. 마법 저항력을 갖춘 방어구와 날카로운 대검으로 무장한 가렌은 전장에서 마법사에 맞서 정당한 검으로 진정한 칼바람을 일으킬 준비가 되어 있다.","allytips":["- 가렌은 일정 시간 공격을 당하지 않으면 체력을 빠르게 회복합니다.","- 심판 스킬은 하나의 대상을 맞힐 때 피해량이 최대로 올라갑니다. 유리한 딜 교환을 위해서는 적 챔피언 하나만 스킬에 맞을 수 있도록 위치를 잘 잡으세요.","- 가렌은 재사용 대기시간 외에 제약이 없으므로 칠흑의 양날 도끼 같은 아이템이 효과가 좋습니다."],"enemytips":["- 가렌의 공격으로 입는 물리 피해를 줄이려면 방어력 위주의 아이템을 여러 개 구매하십시오.","- 체력이 낮아지면 가렌이 데마시아의 정의로 플레이어를 빠르게 제거할 수 있으므로 도망가는 것이 좋습니다.","- 수풀에서 가렌을 공격할 때는 조심해야 합니다. 수풀에서 가렌과 마주치면 심판 스킬을 모두 맞고 큰 피해를 입을 수 있습니다.","- 심판은 단일 대상을 맞힐 때 피해량이 최대입니다. 사거리에서 나가거나, 아군 미니언에 붙어서 피해량을 줄이세요."],"tags":["Fighter","Tank"],"partype":"없음","info":{"attack":7,"defense":7,"magic":1,"difficulty":5},"stats":{"armor":36,"armorperlevel":3,"attackdamage":66,"attackdamageperlevel":4.5,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":2.9,"crit":0,"critperlevel":0,"hp":616.28,"hpperlevel":84.25,"hpregen":7.84,"hpregenperlevel":0.5,"movespeed":340,"mp":0,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"결정타","description":"가렌의 이동 속도가 큰 폭으로 증가하고, 현재 걸려 있는 모든 둔화 효과가 제거됩니다. 가렌의 다음 공격은 적의 급소를 가격하여 추가 피해를 입히고 침묵시킵니다.","sanitizedDescription":"가렌의 이동 속도가 큰 폭으로 증가하고, 현재 걸려 있는 모든 둔화 효과가 제거됩니다. 가렌의 다음 공격은 적의 급소를 가격하여 추가 피해를 입히고 침묵시킵니다.","tooltip":"가렌에게 적용된 모든 둔화 효과가 풀리며 {{ e4 }}초 동안 이동 속도가 {{ e2 }}% 상승합니다.<br /><br />{{ e5 }}초 안에 하는 다음 기본 공격은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 대상을 {{ e3 }}초 동안 침묵시킵니다.","sanitizedTooltip":"가렌에게 적용된 모든 둔화 효과가 풀리며 {{ e4 }}초 동안 이동 속도가 {{ e2 }}% 상승합니다. {{ e5 }}초 안에 하는 다음 기본 공격은 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 대상을 {{ e3 }}초 동안 침묵시킵니다.","leveltip":{"label":["추가 피해량","이동 속도 상승 지속 시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}"]},"image":{"full":"GarenQ.png","sprite":"spell3.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[30,55,80,105,130],[30,30,30,30,30],[1.5,1.5,1.5,1.5,1.5],[1.5,2,2.5,3,3.5],[4.5,4.5,4.5,4.5,4.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/55/80/105/130","30","1.5","1.5/2/2.5/3/3.5","4.5","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.4]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"GarenQ"},{"name":"용기","description":"가렌은 적을 처치하면 기본 지속 효과로 방어력과 마법 저항력이 증가합니다. 또한 효과가 활성화되면 잠시 동안 강인함 및 받는 피해량 감소 효과가 크게 부여되며, 이후에는 좀 더 긴 시간 동안 받는 피해량 감소 효과가 약하게 적용됩니다.","sanitizedDescription":"가렌은 적을 처치하면 기본 지속 효과로 방어력과 마법 저항력이 증가합니다. 또한 효과가 활성화되면 잠시 동안 강인함 및 받는 피해량 감소 효과가 크게 부여되며, 이후에는 좀 더 긴 시간 동안 받는 피해량 감소 효과가 약하게 적용됩니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 유닛들을 처치하면 영구적으로 {{ f2 }}의 방어력과 마법 저항력이 부여되어 최대 {{ e2 }}까지 증가합니다. 현재 추가 수치: <span class=\"colorFFFFFF\">{{ f1 }}</span><br /><br /><span class=\"colorFF9900\">사용 시: </span>가렌이 {{ e4 }}초 동안 용기백배합니다. 첫 {{ e7 }}초 동안 {{ e5 }}%의 강인함 효과를 얻고 입는 피해가 {{ e6 }}% 감소합니다. 이후 남은 지속시간 동안 입는 피해가 {{ e3 }}% 감소합니다.","sanitizedTooltip":"기본 지속 효과: 유닛들을 처치하면 영구적으로 {{ f2 }}의 방어력과 마법 저항력이 부여되어 최대 {{ e2 }}까지 증가합니다. 현재 추가 수치: {{ f1 }} 사용 시: 가렌이 {{ e4 }}초 동안 용기백배합니다. 첫 {{ e7 }}초 동안 {{ e5 }}%의 강인함 효과를 얻고 입는 피해가 {{ e6 }}% 감소합니다. 이후 남은 지속시간 동안 입는 피해가 {{ e3 }}% 감소합니다.","leveltip":{"label":["총 지속시간","재사용 대기시간"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GarenW.png","sprite":"spell3.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[24,23,22,21,20],"cooldownBurn":"24/23/22/21/20","effect":[null,[0.25,0.25,0.25,0.25,0.25],[30,30,30,30,30],[30,30,30,30,30],[2,3,4,5,6],[60,60,60,60,60],[60,60,60,60,60],[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0.25","30","30","2/3/4/5/6","60","60","0.75","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"GarenW"},{"name":"심판","description":"가렌이 죽음의 검무를 추며 지속 시간 동안 주변 적에게 피해를 입힙니다. 이 스킬에 맞은 적 챔피언은 방어력이 감소합니다.","sanitizedDescription":"가렌이 죽음의 검무를 추며 지속 시간 동안 주변 적에게 피해를 입힙니다. 이 스킬에 맞은 적 챔피언은 방어력이 감소합니다.","tooltip":"가렌이 {{ e2 }}초 동안 검을 들고 빠르게 회전하여 지속 시간 동안 근처 적에게 {{ f3 }}의 물리 피해를 입힙니다. 즉, {{ e1 }} + 공격력의 {{ e3 }}% <span class=\"colorFF8C00\">(+{{ f1 }})</span>, <span class=\"colorFFFFFF\">{{ f2 }}</span>번 (챔피언 3레벨당 1씩 증가).<br /><br />회전에 {{ e6 }}번 맞은 적은 {{ e7 }}초 동안 방어력이 {{ e5 }}% 감소합니다.<br /><br /><span class=\"color99FF99\">심판은 적 하나만 맞힐 때 피해량이 {{ e4 }}% 증가합니다.<br />심판 시전을 취소하면 남은 지속 시간만큼 재사용 대기시간이 줄어듭니다.<br /><span class=\"color99FF99\">심판은 치명타가 적용되어 추가 피해를 입힐 수 있습니다.</span>","sanitizedTooltip":"가렌이 {{ e2 }}초 동안 검을 들고 빠르게 회전하여 지속 시간 동안 근처 적에게 {{ f3 }}의 물리 피해를 입힙니다. 즉, {{ e1 }} + 공격력의 {{ e3 }}% (+{{ f1 }}), {{ f2 }}번 (챔피언 3레벨당 1씩 증가). 회전에 {{ e6 }}번 맞은 적은 {{ e7 }}초 동안 방어력이 {{ e5 }}% 감소합니다. 심판은 적 하나만 맞힐 때 피해량이 {{ e4 }}% 증가합니다. 심판 시전을 취소하면 남은 지속 시간만큼 재사용 대기시간이 줄어듭니다. 심판은 치명타가 적용되어 추가 피해를 입힐 수 있습니다.","leveltip":{"label":["적중 1회당 피해량","적중 1회당 총 공격력 %"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"GarenE.png","sprite":"spell3.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[14,18,22,26,30],[3,3,3,3,3],[36,37,38,39,40],[33,33,33,33,33],[25,25,25,25,25],[4,4,4,4,4],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","14/18/22/26/30","3","36/37/38/39/40","33","25","4","6","0","0","0"],"range":[325,325,325,325,325],"rangeBurn":"325","key":"GarenE"},{"name":"데마시아의 정의","description":"가장 최근 아군 챔피언을 처치한 적 챔피언이 악당 효과를 받습니다. 이 챔피언에 대한 가렌의 공격은 추가 고정 피해를 가합니다.<br><br>가렌이 데마시아의 힘을 소환하여 적 챔피언이 잃은 체력에 비례한 피해를 최후의 일격으로 날립니다. 이 피해는 악당에 대해서는 고정 피해가 됩니다.","sanitizedDescription":"가장 최근 아군 챔피언을 처치한 적 챔피언이 악당 효과를 받습니다. 이 챔피언에 대한 가렌의 공격은 추가 고정 피해를 가합니다. 가렌이 데마시아의 힘을 소환하여 적 챔피언이 잃은 체력에 비례한 피해를 최후의 일격으로 날립니다. 이 피해는 악당에 대해서는 고정 피해가 됩니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 가장 최근 아군 챔피언을 처치한 적 챔피언은 <span class=\"colorFFF673\">악당</span>이 됩니다. 악당에 대한 심판과 기본 공격은 대상 최대 체력의 {{ e3 }}%에 해당하는 추가 고정 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 가렌이 적 챔피언을 처단할 데마시아의 힘을 소환하여 {{ e1 }}의 마법 피해를 입히고 대상이 잃은 체력의 {{ e2 }}%의 피해를 추가로 입힙니다. <span class=\"colorFFF673\">악당</span>에게는 고정 피해를 입힙니다.","sanitizedTooltip":"기본 지속 효과: 가장 최근 아군 챔피언을 처치한 적 챔피언은 악당이 됩니다. 악당에 대한 심판과 기본 공격은 대상 최대 체력의 {{ e3 }}%에 해당하는 추가 고정 피해를 입힙니다. 사용 시: 가렌이 적 챔피언을 처단할 데마시아의 힘을 소환하여 {{ e1 }}의 마법 피해를 입히고 대상이 잃은 체력의 {{ e2 }}%의 피해를 추가로 입힙니다. 악당에게는 고정 피해를 입힙니다.","leveltip":{"label":["피해량","잃은 체력 비례 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GarenR.png","sprite":"spell3.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[175,350,525],[28,33,40],[1,1,1],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","175/350/525","28/33/40","1","0","0","0","0","0","0","0"],"range":[400,400,400],"rangeBurn":"400","key":"GarenR"}],"passive":{"name":"인내심","description":"가렌이 잠시 적의 기본 공격 및 스킬 공격에 맞지 않으면 1초마다 총 체력의 일정 비율씩 회복됩니다. 미니언으로부터 입는 피해는 인내심에 영향을 주지 않습니다.","sanitizedDescription":"가렌이 잠시 적의 기본 공격 및 스킬 공격에 맞지 않으면 1초마다 총 체력의 일정 비율씩 회복됩니다. 미니언으로부터 입는 피해는 인내심에 영향을 주지 않습니다.","image":{"full":"Garen_Passive.png","sprite":"passive1.png","group":"passive","x":96,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Garen","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1028,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3067,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3068,"count":1},{"id":3083,"count":1},{"id":3742,"count":1},{"id":3026,"count":1}]}]},{"champion":"Garen","title":"GarenARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3083,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Garen","title":"GarenBT","type":"riot","map":"SR","mode":"TUTORIAL","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1001,"count":1},{"id":3044,"count":1},{"id":3067,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Garen","title":"GarenCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3044,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Garen","title":"GarenFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Garen","title":"GarenKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3083,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Garen","title":"GarenSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]}]},{"champion":"Garen","title":"GarenSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3044,"count":1},{"id":3067,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3111,"count":1},{"id":1401,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3742,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Garen","title":"GarenTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":2},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3044,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3742,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3143,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Leona":{"id":89,"key":"Leona","name":"레오나","title":"여명의 빛","image":{"full":"Leona.png","sprite":"champion2.png","group":"champion","x":48,"y":0,"w":48,"h":48},"skins":[{"id":89000,"name":"default","num":0},{"id":89001,"name":"발키리 레오나","num":1},{"id":89002,"name":"수호자 레오나","num":2},{"id":89003,"name":"강철의 솔라리 레오나","num":3},{"id":89004,"name":"수영장 파티 레오나","num":4},{"id":89008,"name":"프로젝트: 레오나","num":8},{"id":89009,"name":"불판 레오나","num":9}],"lore":"솔라리 성전사 레오나는 천공의 검과 여명의 방패로 타곤 산을 수호한다. 레오나의 몸은 태양의 불길로 가득하며, 피부는 별의 광채로 빛나고, 눈동자는 천체들의 기운으로 불타오른다. 황금 갑주와 어마어마한 고대의 지식으로 무장한 레오나는 어떤 이들에게는 깨우침을, 어떤 이들에게는 죽음을 선사한다.","blurb":"솔라리 성전사 레오나는 천공의 검과 여명의 방패로 타곤 산을 수호한다. 레오나의 몸은 태양의 불길로 가득하며, 피부는 별의 광채로 빛나고, 눈동자는 천체들의 기운으로 불타오른다. 황금 갑주와 어마어마한 고대의 지식으로 무장한 레오나는 어떤 이들에게는 깨우침을, 어떤 이들에게는 죽음을 선사한다.","allytips":["- 최전선에서 목표 적을 먼저 공격해 햇빛 효과를 받도록 한 후 아군이 해당 적을 집중 공격하도록 하십시오.","- 여명의 방패와 천공의 검은 궁합이 잘 맞습니다.","- 일식을 사용하여 대량의 피해를 흡수할 수 있지만 유지 시간을 늘이려면 일식 스킬이 적에게 피해를 줄 때 적 근처에 있어야 합니다."],"enemytips":["- 레오나가 일식을 사용하면 피해를 받기 전에 3초 동안 도망칠 시간이 있습니다.","- 흑점 폭발의 한가운데 있는 적만 기절하므로 빠르게 이동하면 이를 피할 수 있습니다."],"tags":["Tank","Support"],"partype":"마나","info":{"attack":4,"defense":8,"magic":3,"difficulty":4},"stats":{"armor":47,"armorperlevel":3.6,"attackdamage":60.04,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.9,"crit":0,"critperlevel":0,"hp":576.16,"hpperlevel":87,"hpregen":8.428,"hpregenperlevel":0.85,"movespeed":335,"mp":302.2,"mpperlevel":40,"mpregen":6,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"여명의 방패","description":"레오나가 다음 기본 공격에서 방패를 사용하여 대상에게 추가 마법 피해를 입히고 기절시킵니다.","sanitizedDescription":"레오나가 다음 기본 공격에서 방패를 사용하여 대상에게 추가 마법 피해를 입히고 기절시킵니다.","tooltip":"다음 기본 공격은 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입히고 {{ e1 }}초 동안 기절시킵니다.","sanitizedTooltip":"다음 기본 공격은 {{ e2 }} (+{{ a1 }})의 추가 마법 피해를 입히고 {{ e1 }}초 동안 기절시킵니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LeonaShieldOfDaybreak.png","sprite":"spell6.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[1,1,1,1,1],[10,35,60,85,110],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1","10/35/60/85/110","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[100,100,100,100,100],"rangeBurn":"100","key":"LeonaShieldOfDaybreak"},{"name":"일식","description":"레오나가 방패를 들어 방어력과 마법 저항력을 높입니다. 지속 시간이 끝날 때 근처에 적이 있으면 마법 피해를 주며 스킬의 지속 시간이 늘어납니다.","sanitizedDescription":"레오나가 방패를 들어 방어력과 마법 저항력을 높입니다. 지속 시간이 끝날 때 근처에 적이 있으면 마법 피해를 주며 스킬의 지속 시간이 늘어납니다.","tooltip":"{{ e3 }}초 동안 {{ e4 }} <span class=\"colorFFFF00\">(+{{ f1 }})</span>의 방어력과 {{ e2 }} <span class=\"colorFF00FF\">(+{{ f2 }})</span>의 마법 저항력을 추가로 받습니다. 지속 시간이 종료될 때, 근처의 적을 공격하면 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 주며 이 경우 레오나는 {{ e3 }}초 동안 추가 방어력과 마법 저항력이 유지됩니다.","sanitizedTooltip":"{{ e3 }}초 동안 {{ e4 }} (+{{ f1 }})의 방어력과 {{ e2 }} (+{{ f2 }})의 마법 저항력을 추가로 받습니다. 지속 시간이 종료될 때, 근처의 적을 공격하면 {{ e1 }} (+{{ a1 }})의 피해를 주며 이 경우 레오나는 {{ e3 }}초 동안 추가 방어력과 마법 저항력이 유지됩니다.","leveltip":{"label":["피해량","방어력","마법 저항력"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"LeonaSolarBarrier.png","sprite":"spell6.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[14,14,14,14,14],"cooldownBurn":"14","effect":[null,[40,80,120,160,200],[20,30,40,50,60],[3,3,3,3,3],[25,35,45,55,65],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/80/120/160/200","20/30/40/50/60","3","25/35/45/55/65","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusarmor","coeff":[0.2]},{"key":"f2","link":"bonusspellblock","coeff":[0.2]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[450,450,450,450,450],"rangeBurn":"450","key":"LeonaSolarBarrier"},{"name":"천공의 검","description":"레오나가 검으로 태양의 형상을 쏘아 일직선에 있는 적에게 마법 피해를 줍니다. 이 형상이 사라지면 마지막으로 공격 당한 챔피언이 일시적으로 이동 불능 상태가 되며 레오나가 그쪽으로 돌격하게 됩니다.","sanitizedDescription":"레오나가 검으로 태양의 형상을 쏘아 일직선에 있는 적에게 마법 피해를 줍니다. 이 형상이 사라지면 마지막으로 공격 당한 챔피언이 일시적으로 이동 불능 상태가 되며 레오나가 그쪽으로 돌격하게 됩니다.","tooltip":"일직선 상의 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 마지막으로 맞은 챔피언은 {{ e2 }}초 동안 이동 불가 상태가 되며 레오나가 그쪽으로 돌격합니다.","sanitizedTooltip":"일직선 상의 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 마지막으로 맞은 챔피언은 {{ e2 }}초 동안 이동 불가 상태가 되며 레오나가 그쪽으로 돌격합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LeonaZenithBlade.png","sprite":"spell6.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[60,100,140,180,220],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/100/140/180/220","0.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[875,875,875,875,875],"rangeBurn":"875","key":"LeonaZenithBlade"},{"name":"흑점 폭발","description":"레오나가 태양 에너지를 소환하여 일정 범위 내 적에게 피해를 줍니다. 이 범위 한가운데 있는 적은 기절하며 외곽에 있는 적은 이동 속도가 느려집니다. 그 후 레오나의 검에 태양의 힘이 깃들어 다음 몇 회의 공격 시 추가 마법 피해를 입힙니다.","sanitizedDescription":"레오나가 태양 에너지를 소환하여 일정 범위 내 적에게 피해를 줍니다. 이 범위 한가운데 있는 적은 기절하며 외곽에 있는 적은 이동 속도가 느려집니다. 그 후 레오나의 검에 태양의 힘이 깃들어 다음 몇 회의 공격 시 추가 마법 피해를 입힙니다.","tooltip":"태양 에너지를 소환하여 눈부신 광선으로 적에게 {{ e4 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 이동 속도를 {{ e1 }}%만큼 늦춥니다. 폭발의 중앙에 있는 적은 기절합니다.<br /><br />레오나의 검에 <span class=\"colorFFBB00\">작열</span>효과가 깃들어 다음 기본 공격 {{ e5 }}회는 사거리가 100 증가하고 적중 시 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입힙니다.","sanitizedTooltip":"태양 에너지를 소환하여 눈부신 광선으로 적에게 {{ e4 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 이동 속도를 {{ e1 }}%만큼 늦춥니다. 폭발의 중앙에 있는 적은 기절합니다. 레오나의 검에 작열효과가 깃들어 다음 기본 공격 {{ e5 }}회는 사거리가 100 증가하고 적중 시 {{ e3 }} (+{{ a2 }})의 추가 마법 피해를 입힙니다.","leveltip":{"label":["피해량","작열 피해량","작열 공격 횟수","재사용 대기시간"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e3 }} -> {{ e3NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LeonaSolarFlare.png","sprite":"spell6.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[90,75,60],"cooldownBurn":"90/75/60","effect":[null,[80,80,80],[1.5,1.5,1.5],[30,40,50],[100,175,250],[3,4,5],[5,5,5],[100,100,100],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","80","1.5","30/40/50","100/175/250","3/4/5","5","100","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]},{"key":"a2","link":"spelldamage","coeff":[0.15]}],"range":[1200,1200,1200],"rangeBurn":"1200","key":"LeonaSolarFlare"}],"passive":{"name":"햇빛","description":"공격 스킬은 대상에게 1.5초 동안 햇빛 효과를 부여합니다. 아군 챔피언이 햇빛에 걸린 적을 공격하면 햇빛 효과가 사라지며 추가 마법 피해를 줍니다.","sanitizedDescription":"공격 스킬은 대상에게 1.5초 동안 햇빛 효과를 부여합니다. 아군 챔피언이 햇빛에 걸린 적을 공격하면 햇빛 효과가 사라지며 추가 마법 피해를 줍니다.","image":{"full":"LeonaSunlight.png","sprite":"passive2.png","group":"passive","x":48,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Leona","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3751,"count":1},{"id":1029,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3751,"count":1},{"id":1031,"count":1},{"id":3068,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3105,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]}]},{"champion":"Leona","title":"LeonaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3110,"count":1},{"id":3190,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Leona","title":"LeonaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3025,"count":1},{"id":3143,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3110,"count":1},{"id":3109,"count":1},{"id":3222,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Leona","title":"LeonaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3302,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1},{"id":3068,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3190,"count":1},{"id":3222,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Leona","title":"LeonaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3110,"count":1},{"id":3190,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Leona","title":"LeonaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3025,"count":1},{"id":3143,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3110,"count":1},{"id":3109,"count":1},{"id":3222,"count":1}]}]},{"champion":"Leona","title":"LeonaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1},{"id":3025,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3143,"count":1},{"id":3109,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Leona","title":"LeonaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3800,"count":1},{"id":3069,"count":1},{"id":3060,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Zed":{"id":238,"key":"Zed","name":"제드","title":"그림자의 주인","image":{"full":"Zed.png","sprite":"champion4.png","group":"champion","x":192,"y":48,"w":48,"h":48},"skins":[{"id":238000,"name":"default","num":0},{"id":238001,"name":"칼날폭풍 제드","num":1},{"id":238002,"name":"SKT T1 제드","num":2},{"id":238003,"name":"프로젝트: 제드","num":3},{"id":238010,"name":"챔피언십 제드","num":10},{"id":238011,"name":"죽음의 사도 제드","num":11}],"lore":"제드는 극도로 무자비하고 인정사정 없는 인물로, 녹서스 침공군을 몰아내기 위해 아이오니아의 무술 전통으로 무장할 의도로 설립한 그림자단의 수장이다. 아이오니아 전쟁 중, 절박한 상황에 빠진 제드는 그 강력함 만큼이나 위험하고 사용자를 타락시키는 금단의 그림자 비급의 봉인을 해제하기에 이르렀다. 제드는 자신의 국가와 자신의 질서에 위협이 될 만한 것을 모조리 파괴하기 위해 모든 금단의 비술에 통달했다.","blurb":"제드는 극도로 무자비하고 인정사정 없는 인물로, 녹서스 침공군을 몰아내기 위해 아이오니아의 무술 전통으로 무장할 의도로 설립한 그림자단의 수장이다. 아이오니아 전쟁 중, 절박한 상황에 빠진 제드는 그 강력함 만큼이나 위험하고 사용자를 타락시키는 금단의 그림자 비급의 봉인을 해제하기에 이르렀다. 제드는 자신의 국가와 자신의 질서에 위협이 될 만한 것을 모조리 파괴하기 위해 모든 금단의 비술에 통달했다.","allytips":["- 궁극기를 쓸 때까지 기력과 스킬 재사용 대기시간을 최대한 아껴두면 죽음의 표식으로 줄 수 있는 피해량이 극대화됩니다.","- 살아있는 그림자를 빠르게 두 번 쓰면 바로 그림자와 위치를 바꿀 수 있어, 빠른 도주가 가능합니다.","- 죽음의 표식을 시전하기 전에 살아있는 그림자를 사용하면 전투에서 안전하게 빠져나갈 수 있습니다."],"enemytips":["- 제드는 공격력 아이템을 구입할 때 추가 효과가 생기기 때문에, 상대할 때는 방어력 아이템을 갖추는 쪽이 효율적입니다.","- 제드는 살아있는 그림자로 피해, 둔화, 기동력이 좌우되기 때문에 이 스킬을 사용한 후에는 가장 취약해집니다.","- 제드의 그림자 베기 스킬은 그림자가 쓰는 스킬에 맞았을 때만 둔화에 걸립니다."],"tags":["Assassin","Fighter"],"partype":"기력","info":{"attack":9,"defense":2,"magic":1,"difficulty":7},"stats":{"armor":32,"armorperlevel":3.5,"attackdamage":63,"attackdamageperlevel":3.4,"attackrange":125,"attackspeedoffset":-0.04,"attackspeedperlevel":2.1,"crit":0,"critperlevel":0,"hp":584,"hpperlevel":85,"hpregen":7.092,"hpregenperlevel":0.65,"movespeed":345,"mp":200,"mpperlevel":0,"mpregen":50,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"예리한 표창","description":"제드와 그림자가 둘 다 회전하는 칼날을 전방으로 던져, 칼날이 통과하는 대상 모두에게 피해를 가합니다.","sanitizedDescription":"제드와 그림자가 둘 다 회전하는 칼날을 전방으로 던져, 칼날이 통과하는 대상 모두에게 피해를 가합니다.","tooltip":"제드와 그림자가 표창을 던져, 각각 처음 맞는 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 이후 추가로 맞히는 적에게는 각각 {{ e3 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 피해를 입힙니다.<br /><br />동일한 적에게 추가로 표창을 맞히면 이전보다 피해량이 25% 감소합니다.","sanitizedTooltip":"제드와 그림자가 표창을 던져, 각각 처음 맞는 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 이후 추가로 맞히는 적에게는 각각 {{ e3 }} (+{{ a2 }})의 피해를 입힙니다. 동일한 적에게 추가로 표창을 맞히면 이전보다 피해량이 25% 감소합니다.","leveltip":{"label":["공격력","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZedQ.png","sprite":"spell13.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[75,70,65,60,55],"costBurn":"75/70/65/60/55","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[80,115,150,185,220],[0.6,0.6,0.6,0.6,0.6],[45,66,87,108,129],[0.75,0.75,0.75,0.75,0.75],[925,925,925,925,925],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/115/150/185/220","0.6","45/66/87/108/129","0.75","925","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.9]},{"key":"a2","link":"bonusattackdamage","coeff":[0.54]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"ZedQ"},{"name":"살아있는 그림자","description":"제드의 그림자가 5초 동안 전방으로 질주하여 제드가 시전하는 스킬을 복제합니다. 제드는 이 스킬을 재시전하여 그림자와 위치를 바꿀 수 있습니다.","sanitizedDescription":"제드의 그림자가 5초 동안 전방으로 질주하여 제드가 시전하는 스킬을 복제합니다. 제드는 이 스킬을 재시전하여 그림자와 위치를 바꿀 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>제드와 그림자가 같은 스킬로 동일한 대상을 공격하면 제드가 {{ e3 }}의 기력을 회복합니다. 기력 회복은 스킬 사용 시마다 한 번씩만 가능합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>제드의 그림자가 전방으로 질주하여, {{ e5 }}초간 그 자리에 유지됩니다. 이 스킬을 다시 사용하면 제드가 그림자와 위치를 바꿉니다.","sanitizedTooltip":"기본 지속 효과: 제드와 그림자가 같은 스킬로 동일한 대상을 공격하면 제드가 {{ e3 }}의 기력을 회복합니다. 기력 회복은 스킬 사용 시마다 한 번씩만 가능합니다. 사용 시: 제드의 그림자가 전방으로 질주하여, {{ e5 }}초간 그 자리에 유지됩니다. 이 스킬을 다시 사용하면 제드가 그림자와 위치를 바꿉니다.","leveltip":{"label":["기력 회복량","소모값","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZedW.png","sprite":"spell13.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[40,35,30,25,20],"costBurn":"40/35/30/25/20","cooldown":[22,20,18,16,14],"cooldownBurn":"22/20/18/16/14","effect":[null,[5.25,5.25,5.25,5.25,5.25],[0.2,0.2,0.2,0.2,0.2],[30,35,40,45,50],[5.25,5.25,5.25,5.25,5.25],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5.25","0.2","30/35/40/45/50","5.25","5","0","0","0","0","0"],"range":[650,650,650,650,650],"rangeBurn":"650","key":"ZedW"},{"name":"그림자 베기","description":"제드와 그림자가 검을 휘둘러 그림자 에너지를 터뜨립니다. 그림자의 검에 맞으면 둔화에 걸립니다.","sanitizedDescription":"제드와 그림자가 검을 휘둘러 그림자 에너지를 터뜨립니다. 그림자의 검에 맞으면 둔화에 걸립니다.","tooltip":"제드와 그림자가 각각 주위 적을 베어 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. <br /><br />제드가 이 스킬로 적 챔피언을 하나 맞힐 때마다 살아있는 그림자의 재사용 대기시간이 {{ e4 }}초씩 감소합니다.<br /><br />그림자의 스킬에 맞은 적은 1.5초 동안 {{ e2 }}% 둔화됩니다. 그림자 베기로 동일한 대상을 여러 번 맞힐 경우, 추가 피해는 입히지 않지만 {{ e3 }}%의 둔화 효과가 적용됩니다.","sanitizedTooltip":"제드와 그림자가 각각 주위 적을 베어 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 제드가 이 스킬로 적 챔피언을 하나 맞힐 때마다 살아있는 그림자의 재사용 대기시간이 {{ e4 }}초씩 감소합니다. 그림자의 스킬에 맞은 적은 1.5초 동안 {{ e2 }}% 둔화됩니다. 그림자 베기로 동일한 대상을 여러 번 맞힐 경우, 추가 피해는 입히지 않지만 {{ e3 }}%의 둔화 효과가 적용됩니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZedE.png","sprite":"spell13.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[5,4.5,4,3.5,3],"cooldownBurn":"5/4.5/4/3.5/3","effect":[null,[70,95,120,145,170],[20,25,30,35,40],[30,37.5,45,52.5,60],[2,2,2,2,2],[1.5,1.5,1.5,1.5,1.5],[315,315,315,315,315],[290,290,290,290,290],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/95/120/145/170","20/25/30/35/40","30/37.5/45/52.5/60","2","1.5","315","290","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]}],"range":[290,290,290,290,290],"rangeBurn":"290","key":"ZedE"},{"name":"죽음의 표식","description":"제드가 뒤에 그림자를 남기며 대상 챔피언에게 돌진하여, 적에게 죽음의 표식을 남깁니다. 3초가 경과하면 표식이 발동하며 표식이 활성화되어 있는 동안 자신이 가한 피해량에 비례한 추가 피해를 입힙니다. 죽음의 표식이 적용된 상태에서 적 챔피언이 죽을 경우, 해당 챔피언 공격력의 일부를 얻습니다.","sanitizedDescription":"제드가 뒤에 그림자를 남기며 대상 챔피언에게 돌진하여, 적에게 죽음의 표식을 남깁니다. 3초가 경과하면 표식이 발동하며 표식이 활성화되어 있는 동안 자신이 가한 피해량에 비례한 추가 피해를 입힙니다. 죽음의 표식이 적용된 상태에서 적 챔피언이 죽을 경우, 해당 챔피언 공격력의 일부를 얻습니다.","tooltip":"제드가 잠시 대상으로 지정할 수 없는 상태가 되어 적 챔피언에게 돌진하며 표식을 남깁니다. 3초가 지나면 표식이 발동되며 표식이 적용된 동안 제드가 대상에게 가한 피해의 {{ e2 }}% + <span class=\"colorFF8C00\">{{ a1 }}</span>에 해당하는 물리 피해를 입힙니다.<br /><br />돌진 시 {{ e4 }}초 동안 유지되는 그림자가 남습니다. 죽음의 표식 스킬을 다시 사용하면 제드가 이 그림자와 위치를 바꿉니다.<br /><br /><span class=\"colorFFFFFF\">그림자 수확: </span>죽음의 표식이 남은 채 처치당한 적 중 가장 강한 적의 그림자를 훔쳐 <span class=\"colorFF8C00\">{{ f2 }}</span>의 공격력을 얻습니다. ({{ e0 }} + 해당 적 공격력의 {{ e9 }}%)","sanitizedTooltip":"제드가 잠시 대상으로 지정할 수 없는 상태가 되어 적 챔피언에게 돌진하며 표식을 남깁니다. 3초가 지나면 표식이 발동되며 표식이 적용된 동안 제드가 대상에게 가한 피해의 {{ e2 }}% + {{ a1 }}에 해당하는 물리 피해를 입힙니다. 돌진 시 {{ e4 }}초 동안 유지되는 그림자가 남습니다. 죽음의 표식 스킬을 다시 사용하면 제드가 이 그림자와 위치를 바꿉니다. 그림자 수확: 죽음의 표식이 남은 채 처치당한 적 중 가장 강한 적의 그림자를 훔쳐 {{ f2 }}의 공격력을 얻습니다. ({{ e0 }} + 해당 적 공격력의 {{ e9 }}%)","leveltip":{"label":["표식 폭발 피해량","훔친 공격력 %","재사용 대기시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e9 }}% -> {{ e9NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZedR.png","sprite":"spell13.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[1,1,1],[25,35,45],[0.5,0.5,0.5],[6,6,6],[6.5,6.5,6.5],[3,3,3],[7.5,7.5,7.5],[4,4,4],[5,10,15],[5,5,5]],"effectBurn":["","1","25/35/45","0.5","6","6.5","3","7.5","4","5/10/15","5"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]}],"range":[625,625,625],"rangeBurn":"625","key":"ZedR"}],"passive":{"name":"약자 멸시","description":"제드가 체력 50% 이하인 적을 기본 공격하면 대상 최대 체력의 6-10%에 해당하는 마법 피해를 추가로 입힙니다. 같은 대상에 대해서는 10초가 지나야 이 효과가 다시 적용됩니다.","sanitizedDescription":"제드가 체력 50% 이하인 적을 기본 공격하면 대상 최대 체력의 6-10%에 해당하는 마법 피해를 추가로 입힙니다. 같은 대상에 대해서는 10초가 지나야 이 효과가 다시 적용됩니다.","image":{"full":"shadowninja_P.png","sprite":"passive4.png","group":"passive","x":192,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Zed","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3071,"count":1},{"id":3031,"count":1},{"id":3022,"count":1},{"id":3035,"count":1}]}]},{"champion":"Zed","title":"KagetoraFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":2},{"id":3342,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3134,"count":1},{"id":3117,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3181,"count":1},{"id":3071,"count":1},{"id":3035,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2044,"count":1}]}]},{"champion":"Zed","title":"ZedARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3035,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3814,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Zed","title":"ZedCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3153,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3072,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Zed","title":"ZedFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3074,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Zed","title":"ZedKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3035,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3034,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Zed","title":"ZedSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3153,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3072,"count":1}]}]},{"champion":"Zed","title":"ZedSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3153,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Zed","title":"ZedTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3134,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3153,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3074,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Blitzcrank":{"id":53,"key":"Blitzcrank","name":"블리츠크랭크","title":"거대 증기 골렘","image":{"full":"Blitzcrank.png","sprite":"champion0.png","group":"champion","x":48,"y":48,"w":48,"h":48},"skins":[{"id":53000,"name":"default","num":0},{"id":53001,"name":"녹슨 블리츠크랭크","num":1},{"id":53002,"name":"골키퍼 블리츠크랭크","num":2},{"id":53003,"name":"핵펀치 블리츠크랭크","num":3},{"id":53004,"name":"필트오버 커스텀 블리츠크랭크","num":4},{"id":53005,"name":"나 블리츠크랭크 아니다","num":5},{"id":53006,"name":"i블리츠크랭크","num":6},{"id":53007,"name":"라이엇 블리츠크랭크","num":7},{"id":53011,"name":"중간보스 블리츠크랭크","num":11},{"id":53020,"name":"악의 창기병 블리츠크랭크","num":20},{"id":53021,"name":"정의의 창기병 블리츠크랭크","num":21}],"lore":"블리츠크랭크는 거대하며 파괴하기가 불가능에 가까운 자운의 기계다. 본래 위험한 폐기물을 처리하기 위해 제작되었으나, 블리츠크랭크는 주목적이 너무 제한적이라 판단하여, 지하도시의 연약한 사람들을 더욱 잘 섬기기 위해 자신의 형태를 변형했다. 블리츠크랭크는 사심 없이 자신의 힘과 내구성을 십분 활용하여 남을 지키고, 강철 주먹을 유용하게 뻗거나 에너지를 분출하여 말썽꾼을 진압한다.","blurb":"블리츠크랭크는 거대하며 파괴하기가 불가능에 가까운 자운의 기계다. 본래 위험한 폐기물을 처리하기 위해 제작되었으나, 블리츠크랭크는 주목적이 너무 제한적이라 판단하여, 지하도시의 연약한 사람들을 더욱 잘 섬기기 위해 자신의 형태를 변형했다. 블리츠크랭크는 사심 없이 자신의 힘과 내구성을 십분 활용하여 남을 지키고, 강철 주먹을 유용하게 뻗거나 에너지를 분출하여 말썽꾼을 진압한다.","allytips":["- 로켓 손, 강철 주먹, 정전기장을 순서대로 사용하면 대상 적에게 치명적인 피해를 줄 수 있습니다.","- 로켓 손에 아군 포탑 근처로 끌려온 적에게 강철 주먹 스킬을 사용하면 포탑이 적을 여러 대 가격할 수 있습니다."],"enemytips":["- 블리츠크랭크의 기본 지속 효과 마나 보호막은 체력이 낮아지면 보호막을 씌워줍니다.","- 미니언 뒤에 숨으면 로켓 손을 피할 수 있습니다. 블리츠크랭크의 로켓 손은 가장 처음 잡히는 적만 잡아당깁니다."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":4,"defense":8,"magic":5,"difficulty":4},"stats":{"armor":44,"armorperlevel":4,"attackdamage":61.54,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":1.13,"crit":0,"critperlevel":0,"hp":582.6,"hpperlevel":95,"hpregen":8.51,"hpregenperlevel":0.75,"movespeed":325,"mp":267.2,"mpperlevel":40,"mpregen":8.5,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"로켓 손","description":"블리츠크랭크가 오른손을 발사하여 앞에 있는 적을 붙잡아 당기면서 피해를 입힙니다.","sanitizedDescription":"블리츠크랭크가 오른손을 발사하여 앞에 있는 적을 붙잡아 당기면서 피해를 입힙니다.","tooltip":"블리츠크랭크가 오른손을 발사하여 피격당하는 적을 기절시키고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히며 적을 자신 쪽으로 끌어당깁니다.","sanitizedTooltip":"블리츠크랭크가 오른손을 발사하여 피격당하는 적을 기절시키고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며 적을 자신 쪽으로 끌어당깁니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RocketGrab.png","sprite":"spell1.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[100,100,100,100,100],"costBurn":"100","cooldown":[20,19,18,17,16],"cooldownBurn":"20/19/18/17/16","effect":[null,[80,135,190,245,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/135/190/245/300","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"RocketGrab"},{"name":"폭주","description":"블리츠크랭크가 힘을 충전하여 이동 및 공격 속도를 크게 향상시킵니다. 이 효과가 끝나면 일시적으로 이동 속도가 느려집니다.","sanitizedDescription":"블리츠크랭크가 힘을 충전하여 이동 및 공격 속도를 크게 향상시킵니다. 이 효과가 끝나면 일시적으로 이동 속도가 느려집니다.","tooltip":"블리츠크랭크가 힘을 충전하여 {{ e4 }}초 동안 이동 속도가 {{ e1 }}%, 공격 속도가 {{ e2 }}% 증가합니다. 이동 속도는 점차 정상으로 돌아옵니다.<br /><br />폭주 효과가 끝나면 블리츠크랭크의 이동 속도는 {{ e5 }}초 동안 {{ e3 }}% 느려집니다.","sanitizedTooltip":"블리츠크랭크가 힘을 충전하여 {{ e4 }}초 동안 이동 속도가 {{ e1 }}%, 공격 속도가 {{ e2 }}% 증가합니다. 이동 속도는 점차 정상으로 돌아옵니다. 폭주 효과가 끝나면 블리츠크랭크의 이동 속도는 {{ e5 }}초 동안 {{ e3 }}% 느려집니다.","leveltip":{"label":["이동 속도","공격 속도 "],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"Overdrive.png","sprite":"spell1.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[75,75,75,75,75],"costBurn":"75","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[70,75,80,85,90],[30,38,46,54,62],[30,30,30,30,30],[5,5,5,5,5],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/75/80/85/90","30/38/46/54/62","30","5","1.5","0","0","0","0","0"],"range":[1,1,1,1,1],"rangeBurn":"1","key":"Overdrive"},{"name":"강철 주먹","description":"블리츠크랭크가 주먹에 힘을 모아 다음 공격 시 적에게 두 배의 피해를 입히고 적을 공중으로 띄웁니다.","sanitizedDescription":"블리츠크랭크가 주먹에 힘을 모아 다음 공격 시 적에게 두 배의 피해를 입히고 적을 공중으로 띄웁니다.","tooltip":"블리츠크랭크가 공격력을 두 배로 높이고 적을 공중에 띄웁니다.","sanitizedTooltip":"블리츠크랭크가 공격력을 두 배로 높이고 적을 공중에 띄웁니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"PowerFist.png","sprite":"spell1.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[25,25,25,25,25],"costBurn":"25","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","0","0","0","0","0","0","0","0","0"],"range":[300,300,300,300,300],"rangeBurn":"300","key":"PowerFist"},{"name":"정전기장","description":"기본 지속 효과로 몇 초 간격으로 번개가 무작위로 떨어져 주변의 적에게 피해를 입힙니다. 활성화할 경우 주변 적에게 피해를 입히고 0.5초 동안 침묵에 걸리게 합니다. 하지만 이렇게 사용할 경우 정전기장이 다시 생성될 때까지 번개 효과는 사라집니다.","sanitizedDescription":"기본 지속 효과로 몇 초 간격으로 번개가 무작위로 떨어져 주변의 적에게 피해를 입힙니다. 활성화할 경우 주변 적에게 피해를 입히고 0.5초 동안 침묵에 걸리게 합니다. 하지만 이렇게 사용할 경우 정전기장이 다시 생성될 때까지 번개 효과는 사라집니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>번개가 블리츠크랭크 주변의 적을 무작위로 내리쳐 2.5초에 한 번씩 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>주변 적에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 주변 적들을 0.5초동안 침묵 상태로 만듭니다. 기본 지속 효과 효과는 재사용 대기시간 중에는 적용되지 않습니다.","sanitizedTooltip":"기본 지속 효과: 번개가 블리츠크랭크 주변의 적을 무작위로 내리쳐 2.5초에 한 번씩 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 사용 시: 주변 적에게 {{ e2 }} (+{{ a2 }})의 마법 피해를 입히고 주변 적들을 0.5초동안 침묵 상태로 만듭니다. 기본 지속 효과 효과는 재사용 대기시간 중에는 적용되지 않습니다.","leveltip":{"label":["번개 피해","사용 시 피해","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"StaticField.png","sprite":"spell1.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[60,40,20],"cooldownBurn":"60/40/20","effect":[null,[100,200,300],[250,375,500],[2.5,2.5,2.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/200/300","250/375/500","2.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"a2","link":"spelldamage","coeff":[1]}],"range":[600,600,600],"rangeBurn":"600","key":"StaticField"}],"passive":{"name":"마나 보호막","description":"블리츠크랭크는 체력이 20% 이하로 내려가면 마나 보호막을 활성화합니다. 마나 방어막은 마나의 50%에 해당하는 방어막으로 10초 동안 유지됩니다. 마나 방어막은 90초에 한 번씩만 발동됩니다.","sanitizedDescription":"블리츠크랭크는 체력이 20% 이하로 내려가면 마나 보호막을 활성화합니다. 마나 방어막은 마나의 50%에 해당하는 방어막으로 10초 동안 유지됩니다. 마나 방어막은 90초에 한 번씩만 발동됩니다.","image":{"full":"Blitzcrank_ManaBarrier.png","sprite":"passive0.png","group":"passive","x":48,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Blitzcrank","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"1)buystarteritems","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1027,"count":1},{"id":1029,"count":1},{"id":3024,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3024,"count":1},{"id":3025,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3105,"count":1},{"id":3001,"count":1},{"id":3102,"count":1},{"id":3083,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3025,"count":1},{"id":3050,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3742,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3097,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3117,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3109,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3340,"count":1},{"id":3302,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":2049,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3025,"count":1},{"id":3190,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3742,"count":1},{"id":3401,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3117,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3109,"count":1},{"id":3102,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3097,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3117,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3050,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3001,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Blitzcrank","title":"BlitzcrankTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3004,"count":1},{"id":3110,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Rammus":{"id":33,"key":"Rammus","name":"람머스","title":"중무장 아르마딜로","image":{"full":"Rammus.png","sprite":"champion2.png","group":"champion","x":336,"y":96,"w":48,"h":48},"skins":[{"id":33000,"name":"default","num":0},{"id":33001,"name":"람머스 왕","num":1},{"id":33002,"name":"크롬 람머스","num":2},{"id":33003,"name":"용암 람머스","num":3},{"id":33004,"name":"프렐요드 람머스","num":4},{"id":33005,"name":"닌자 람머스","num":5},{"id":33006,"name":"풀 메탈 람머스","num":6},{"id":33007,"name":"사막의 수호자 람머스","num":7}],"lore":"알 수 없는 신비의 존재 람머스. 누군가에게는 숭배의 대상이고, 또 누군가에게는 경외의 대상인 우상과도 같은 인물. 더러는 우리와 똑같은 인간으로 여겨지는 경우도 있다. 하지만 한 가지 분명한 것은 그 누구도 람머스의 정체를 제대로 알지 못한다는 것. 베일에 가려진 수수께끼의 존재라는 사실이다. 뾰족한 못이 박힌 갑옷을 입고 다니는 그를 두고 사람들은 여려가지 추측을 내놓는다. 반신반인의 존재라느니, 신성한 사제라느니, 마술에 걸린 야수일 뿐이라는 얘기까지 무척이나 다양하다. 그러나 진실이 무엇이든, 사막을 배회하며 뭐든지 제 생각대로 해버리고 마는 람머스의 의지를 꺾을 자는 아무도 없다.","blurb":"알 수 없는 신비의 존재 람머스. 누군가에게는 숭배의 대상이고, 또 누군가에게는 경외의 대상인 우상과도 같은 인물. 더러는 우리와 똑같은 인간으로 여겨지는 경우도 있다. 하지만 한 가지 분명한 것은 그 누구도 람머스의 정체를 제대로 알지 못한다는 것. 베일에 가려진 수수께끼의 존재라는 사실이다. 뾰족한 못이 박힌 갑옷을 입고 다니는 그를 두고 사람들은 여려가지 추측을 내놓는다. 반신반인의 존재라느니, 신성한 사제라느니, 마술에 걸린 야수일 뿐이라는...","allytips":["- 대회전은 탈출 수단으로도 사용할 수 있습니다.","- 아군의 포탑 근처에 있는 적 챔피언에게 도발을 사용하면 포탑이 해당 챔피언을 공격합니다.","- 게임 후반에는 지진, 몸 말아 웅크리기 스킬을 활용하여 포탑을 손쉽게 파괴할 수 있습니다. 팀 전투에서 제대로 활약할 수 없다면 팀과 별도로 행동하여 포탑을 공략하는 것도 좋은 생각입니다."],"enemytips":["- 람머스의 몸 말아 웅크리기가 풀릴 때를 유심히 관찰하십시오. 람머스가 태세를 취하지 않고 있을 때는 일반 탱커보다 기본 능력치가 훨씬 낮습니다.","- 람머스는 방어력 위주의 아이템을 장착하는 경우가 흔하므로 몸 말아 웅크리기를 하지 않을 때는 마법 공격에 특히 취약합니다."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":4,"defense":10,"magic":5,"difficulty":5},"stats":{"armor":36,"armorperlevel":4.3,"attackdamage":55.88,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.215,"crit":0,"critperlevel":0,"hp":564.48,"hpperlevel":86,"hpregen":7.924,"hpregenperlevel":0.55,"movespeed":335,"mp":310.44,"mpperlevel":33,"mpregen":7.84,"mpregenperlevel":0.5,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"대회전","description":"람머스가 공 모양으로 적을 향해 굴러가며 충돌 시 피해를 입히고 적의 이동 속도를 늦춥니다.","sanitizedDescription":"람머스가 공 모양으로 적을 향해 굴러가며 충돌 시 피해를 입히고 적의 이동 속도를 늦춥니다.","tooltip":"람머스가 공 모양으로 몸을 만 후 돌진하며 이동 속도가 {{ e4 }}초에 걸쳐 <span class=\"colorFFFFFF\">{{ f2 }}%</span>만큼 빨라집니다. 적에게 충돌 시 돌진을 멈추고 근처의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 뒤로 밀어내며, {{ e3 }}초 동안 이동 속도를 {{ e2 }}%만큼 낮춥니다.<br /><br /><rules><span class=\"color8c8c8c\">다시 사용하면 대회전이 원래 지속시간보다 더 빨리 종료되며, 재사용 대기시간이 시작됩니다.<br />대회전은 정신 집중 스킬이므로 정신 집중을 방해하는 스킬의 대상이 될 수 있습니다.<br />대회전을 사용하면 몸 말아 웅크리기가 취소되며 재사용 대기시간이 시작됩니다.</span></rules>","sanitizedTooltip":"람머스가 공 모양으로 몸을 만 후 돌진하며 이동 속도가 {{ e4 }}초에 걸쳐 {{ f2 }}%만큼 빨라집니다. 적에게 충돌 시 돌진을 멈추고 근처의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 뒤로 밀어내며, {{ e3 }}초 동안 이동 속도를 {{ e2 }}%만큼 낮춥니다. 다시 사용하면 대회전이 원래 지속시간보다 더 빨리 종료되며, 재사용 대기시간이 시작됩니다. 대회전은 정신 집중 스킬이므로 정신 집중을 방해하는 스킬의 대상이 될 수 있습니다. 대회전을 사용하면 몸 말아 웅크리기가 취소되며 재사용 대기시간이 시작됩니다.","leveltip":{"label":["피해량 ","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"PowerBall.png","sprite":"spell9.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[16,13.5,11,8.5,6],"cooldownBurn":"16/13.5/11/8.5/6","effect":[null,[100,135,170,205,240],[40,50,60,70,80],[1,1,1,1,1],[6,6,6,6,6],[125,125,125,125,125],[0.35,0.35,0.35,0.35,0.35],[25,25,25,25,25],[0.25,0.25,0.25,0.25,0.25],[50,50,50,50,50],[1000,1000,1000,1000,1000]],"effectBurn":["","100/135/170/205/240","40/50/60/70/80","1","6","125","0.35","25","0.25","50","1000"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"PowerBall"},{"name":"몸 말아 웅크리기","description":"람머스가 방어 자세로 들어가 방어력 및 마법 저항력이 증가합니다. 가시박힌 껍질의 위력이 강화되고 적의 기본 공격을 반사하지만 이동 속도가 느려집니다.","sanitizedDescription":"람머스가 방어 자세로 들어가 방어력 및 마법 저항력이 증가합니다. 가시박힌 껍질의 위력이 강화되고 적의 기본 공격을 반사하지만 이동 속도가 느려집니다.","tooltip":"람머스가 최대 {{ e3 }}초 동안 몸을 말아 웅크려 자신의 방어력을 {{ e1 }} + {{ e6 }}% <span class=\"colorFFFF00\">({{ f1 }})</span>만큼, 마법 저항력을 {{ e8 }} + {{ e7 }}% <span class=\"colorFF00FF\">({{ f2 }})</span>만큼 증가시킵니다. 이동 속도는 {{ e5 }}% 감소합니다.<br /><br />몸 말아 웅크리기를 사용하는 동안 가시박힌 껍질 효과가 {{ e4 }}%로 강화되며, 자신에게 기본 공격을 하는 대상에게도 동일한 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">다시 사용하면 몸 말아 웅크리기가 원래 지속시간보다 더 빨리 종료되며, 재사용 대기시간이 시작됩니다.<br />몸 말아 웅크리기를 사용하면 대회전이 취소되며 재사용 대기시간이 시작됩니다.</span></rules>","sanitizedTooltip":"람머스가 최대 {{ e3 }}초 동안 몸을 말아 웅크려 자신의 방어력을 {{ e1 }} + {{ e6 }}% ({{ f1 }})만큼, 마법 저항력을 {{ e8 }} + {{ e7 }}% ({{ f2 }})만큼 증가시킵니다. 이동 속도는 {{ e5 }}% 감소합니다. 몸 말아 웅크리기를 사용하는 동안 가시박힌 껍질 효과가 {{ e4 }}%로 강화되며, 자신에게 기본 공격을 하는 대상에게도 동일한 피해를 입힙니다. 다시 사용하면 몸 말아 웅크리기가 원래 지속시간보다 더 빨리 종료되며, 재사용 대기시간이 시작됩니다. 몸 말아 웅크리기를 사용하면 대회전이 취소되며 재사용 대기시간이 시작됩니다.","leveltip":{"label":["추가 방어력 %","추가 마법 저항력 %"],"effect":["{{ e6 }}% -> {{ e6NL }}%","{{ e7 }}% -> {{ e7NL }}%"]},"image":{"full":"DefensiveBallCurl.png","sprite":"spell9.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[20,20,20,20,20],[25,35,45,55,65],[6,6,6,6,6],[150,150,150,150,150],[30,30,30,30,30],[50,60,70,80,90],[25,30,35,40,45],[10,10,10,10,10],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20","25/35/45/55/65","6","150","30","50/60/70/80/90","25/30/35/40/45","10","0","0"],"vars":[{"key":"f1","link":"armor","coeff":[0.1]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"DefensiveBallCurl"},{"name":"광란의 도발","description":"람머스가 적 챔피언이나 몬스터를 도발하여 자신을 향해 무모하게 덤벼들도록 합니다. 잠깐 동안 공격 속도가 증가하며, 다른 스킬을 사용하면 이 효과의 지속시간이 늘어납니다.","sanitizedDescription":"람머스가 적 챔피언이나 몬스터를 도발하여 자신을 향해 무모하게 덤벼들도록 합니다. 잠깐 동안 공격 속도가 증가하며, 다른 스킬을 사용하면 이 효과의 지속시간이 늘어납니다.","tooltip":"{{ e1 }}초 동안 람머스의 공격 속도가 {{ e2 }}%증가하고 적 챔피언이나 몬스터를 도발합니다.<br /><br />람머스의 다른 스킬이 활성화된 상태일 경우 광란의 도발 공격 속도 증가 효과가 초기화됩니다.","sanitizedTooltip":"{{ e1 }}초 동안 람머스의 공격 속도가 {{ e2 }}%증가하고 적 챔피언이나 몬스터를 도발합니다. 람머스의 다른 스킬이 활성화된 상태일 경우 광란의 도발 공격 속도 증가 효과가 초기화됩니다.","leveltip":{"label":["지속시간","추가 공격 속도"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"PuncturingTaunt.png","sprite":"spell9.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[1.25,1.5,1.75,2,2.25],[20,25,30,35,40],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.25/1.5/1.75/2/2.25","20/25/30/35/40","0","0","0","0","0","0","0","0"],"range":[325,325,325,325,325],"rangeBurn":"325","key":"PuncturingTaunt"},{"name":"지진","description":"람머스가 무서운 지진을 일으켜 근처의 적에게 피해를 입히고 느려지게 합니다. 포탑은 두 배의 피해를 입습니다.","sanitizedDescription":"람머스가 무서운 지진을 일으켜 근처의 적에게 피해를 입히고 느려지게 합니다. 포탑은 두 배의 피해를 입습니다.","tooltip":"람머스가 {{ e2 }}초 동안 지진을 일으켜 근처의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 {{ e4 }}% 느려지게 합니다. 둔화 효과는 최대 {{ e6 }}회까지 중첩됩니다.<br /><br />포탑에는 {{ e5 }}%의 피해를 입힙니다.","sanitizedTooltip":"람머스가 {{ e2 }}초 동안 지진을 일으켜 근처의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 {{ e4 }}% 느려지게 합니다. 둔화 효과는 최대 {{ e6 }}회까지 중첩됩니다. 포탑에는 {{ e5 }}%의 피해를 입힙니다.","leveltip":{"label":["지진당 피해량","지진당 둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Tremors2.png","sprite":"spell9.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,80,60],"cooldownBurn":"100/80/60","effect":[null,[40,80,120],[7,7,7],[1.5,1.5,1.5],[8,10,12],[200,200,200],[8,8,8],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","40/80/120","7","1.5","8/10/12","200","8","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[375,375,375],"rangeBurn":"375","key":"Tremors2"}],"passive":{"name":"가시박힌 껍질","description":"람머스가 기본 공격 시 방어력에 비례해 추가 마법 피해를 입힙니다.","sanitizedDescription":"람머스가 기본 공격 시 방어력에 비례해 추가 마법 피해를 입힙니다.","image":{"full":"Armordillo_ScavengeArmor.png","sprite":"passive2.png","group":"passive","x":336,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Rammus","title":"RammusARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3075,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3001,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3109,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Rammus","title":"RammusCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Rammus","title":"RammusFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3075,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3800,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Rammus","title":"RammusKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3075,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3109,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Rammus","title":"RammusSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]}]},{"champion":"Rammus","title":"RammusSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3001,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3110,"count":1},{"id":3143,"count":1},{"id":3193,"count":1},{"id":3800,"count":1},{"id":3194,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3009,"count":1},{"id":1401,"count":1},{"id":3364,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3001,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3110,"count":1},{"id":3193,"count":1},{"id":3143,"count":1},{"id":3800,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Rammus","title":"RammusTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3751,"count":1},{"id":3047,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3105,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3025,"count":1},{"id":3143,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3105,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3800,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Velkoz":{"id":161,"key":"Velkoz","name":"벨코즈","title":"공허의 눈","image":{"full":"Velkoz.png","sprite":"champion4.png","group":"champion","x":96,"y":0,"w":48,"h":48},"skins":[{"id":161000,"name":"default","num":0},{"id":161001,"name":"전투 기계 벨코즈","num":1},{"id":161002,"name":"빛의 벨코즈","num":2},{"id":161003,"name":"나 벨코즈 아니다","num":3}],"lore":"벨코즈가 룬테라에 나타난 첫 번째 공허 생명체인지는 확실하지 않다. 다만 벨코즈만큼 잔혹하고 계산적인 지성체는 이제껏 존재하지 않았다. 다른 공허 생명체가 주변에 있는 모든 것을 닥치는 대로 집어삼키고 부패시키는 것과는 달리, 벨코즈는 공허가 이용할 수 있는 약점을 찾아 현실 세계와 그곳에 사는 호전적인 낯선 자들을 자세히 관찰하고 연구한다. 하지만 벨코즈는 수동적인 관찰자와는 거리가 멀어서, 치명적인 플라즈마 광선을 발사하거나 세상의 구성 자체를 분열시키는 방식으로 위협에 반격한다.","blurb":"벨코즈가 룬테라에 나타난 첫 번째 공허 생명체인지는 확실하지 않다. 다만 벨코즈만큼 잔혹하고 계산적인 지성체는 이제껏 존재하지 않았다. 다른 공허 생명체가 주변에 있는 모든 것을 닥치는 대로 집어삼키고 부패시키는 것과는 달리, 벨코즈는 공허가 이용할 수 있는 약점을 찾아 현실 세계와 그곳에 사는 호전적인 낯선 자들을 자세히 관찰하고 연구한다. 하지만 벨코즈는 수동적인 관찰자와는 거리가 멀어서, 치명적인 플라즈마 광선을 발사하거나 세상의 구성 자체를...","allytips":["- 공격로 대치 단계에서 공허 균열을 사용하면 미니언을 처치하면서 적 챔피언에게 유기물 분해 중첩까지 쌓을 수 있습니다. 그 다음 다른 스킬을 연계하세요.","- 플라즈마 분열을 대각선으로 발사해 최대 사거리에서 갈라지게 하면 최초 투사체의 사거리 밖에 있는 적을 맞힐 수 있습니다. 대신 후퇴하기는 더 까다롭습니다.","- 생물 분해 광선을 사용할 때는 이 스킬을 끊을 수 있는 스킬을 가진 챔피언이 많으므로 매우 주의하셔야 합니다."],"enemytips":["- 벨코즈는 전투에서 혼자 남겨지게 되면 매우 위험한 존재가 됩니다. 초반에 먼저 집중 공격해서 처치하세요.","- 벨코즈는 기동력이 상당히 낮아 급습에 취약합니다.","- 생물 분해 광선은 기절, 침묵, 띄우기로 막을 수 있습니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":2,"magic":10,"difficulty":8},"stats":{"armor":21.88,"armorperlevel":3.5,"attackdamage":54.9379,"attackdamageperlevel":3.1416,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":520,"hpperlevel":88,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":340,"mp":375.6,"mpperlevel":42,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"플라즈마 분열","description":"벨코즈가 플라즈마 광선을 발사하고 나서 스킬을 재사용하거나 적에게 맞으면 광선이 둘로 갈라집니다. 이 광선은 적중 시 둔화를 적용하고 피해를 입힙니다.","sanitizedDescription":"벨코즈가 플라즈마 광선을 발사하고 나서 스킬을 재사용하거나 적에게 맞으면 광선이 둘로 갈라집니다. 이 광선은 적중 시 둔화를 적용하고 피해를 입힙니다.","tooltip":"벨코즈가 플라즈마 광선을 발사해 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e5 }}%의 둔화를 적용합니다. 둔화 효과는 {{ e4 }}초에 걸쳐 점차 감소합니다.<br /><br />스킬을 재사용하거나 적을 맞히면 광선이 90도 각도로 두 개로 갈라집니다.<br /><br />플라즈마 분열로 유닛 처치 시 <span class=\"color44DDFF\">마나 소모량</span>의 {{ e2 }}%를 돌려받습니다.","sanitizedTooltip":"벨코즈가 플라즈마 광선을 발사해 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e5 }}%의 둔화를 적용합니다. 둔화 효과는 {{ e4 }}초에 걸쳐 점차 감소합니다. 스킬을 재사용하거나 적을 맞히면 광선이 90도 각도로 두 개로 갈라집니다. 플라즈마 분열로 유닛 처치 시 마나 소모량의 {{ e2 }}%를 돌려받습니다.","leveltip":{"label":["피해량","둔화 지속 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VelkozQ.png","sprite":"spell12.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[7,7,7,7,7],"cooldownBurn":"7","effect":[null,[80,120,160,200,240],[50,50,50,50,50],[0.25,0.25,0.25,0.25,0.25],[1,1.4,1.8,2.2,2.6],[70,70,70,70,70],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","50","0.25","1/1.4/1.8/2.2/2.6","70","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[1050,1050,1050,1050,1050],"rangeBurn":"1050","key":"VelkozQ"},{"name":"공허 균열","description":"벨코즈가 공허로 통하는 균열을 열어 최초 피해를 입힌 다음, 잠시 시간이 지난 후 두 번째 폭발로 피해를 가합니다.","sanitizedDescription":"벨코즈가 공허로 통하는 균열을 열어 최초 피해를 입힌 다음, 잠시 시간이 지난 후 두 번째 폭발로 피해를 가합니다.","tooltip":"벨코즈가 공허로 통하는 균열을 열어 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 잠시 후 추가로 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다. 두 공격 모두 유기물 분해 중첩을 올려줍니다.<br /><br />공허 균열 사용 시 중간에 2초의 재사용 대기시간이 있습니다.","sanitizedTooltip":"벨코즈가 공허로 통하는 균열을 열어 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 잠시 후 추가로 {{ e2 }} (+{{ a2 }})의 마법 피해를 입힙니다. 두 공격 모두 유기물 분해 중첩을 올려줍니다. 공허 균열 사용 시 중간에 2초의 재사용 대기시간이 있습니다.","leveltip":{"label":["최초 피해량","이차 피해량","탄환 재장전 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VelkozW.png","sprite":"spell12.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[1.5,1.5,1.5,1.5,1.5],"cooldownBurn":"1.5","effect":[null,[30,50,70,90,110],[45,75,105,135,165],[100,100,100,100,100],[0,0,0,0,0],[0.25,0.25,0.25,0.25,0.25],[0.5,0.5,0.5,0.5,0.5],[88,88,88,88,88],[500,500,500,500,500],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","45/75/105/135/165","100","0","0.25","0.5","88","500","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.15]},{"key":"a2","link":"spelldamage","coeff":[0.25]}],"range":[1050,1050,1050,1050,1050],"rangeBurn":"1050","key":"VelkozW"},{"name":"지각 붕괴","description":"벨코즈가 일정 범위를 폭발시켜 적을 띄우고, 가까이 있는 적들은 약간 멀리 밀어냅니다.","sanitizedDescription":"벨코즈가 일정 범위를 폭발시켜 적을 띄우고, 가까이 있는 적들은 약간 멀리 밀어냅니다.","tooltip":"벨코즈가 가까운 지면을 붕괴시켜, 잠시 후 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 여기 맞은 적들을 {{ e2 }}초간 공중에 띄웁니다.<br /><br />벨코즈와 가까이 있다가 이 공격에 맞은 적들은 스킬을 시전한 방향으로 약간 밀려납니다.","sanitizedTooltip":"벨코즈가 가까운 지면을 붕괴시켜, 잠시 후 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 여기 맞은 적들을 {{ e2 }}초간 공중에 띄웁니다. 벨코즈와 가까이 있다가 이 공격에 맞은 적들은 스킬을 시전한 방향으로 약간 밀려납니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VelkozE.png","sprite":"spell12.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[70,100,130,160,190],[0.75,0.75,0.75,0.75,0.75],[0,0,0,0,0],[225,225,225,225,225],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/100/130/160/190","0.75","0","225","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[810,810,810,810,810],"rangeBurn":"810","key":"VelkozE"},{"name":"생물 분해 광선","description":"벨코즈가 정신을 집중하고 광선을 발사하면, 광선이 2.5초 동안 커서 위치를 따라가며 마법 피해를 입히고 적을 둔화시킵니다. 유기물 분해 연구가 완료된 적 챔피언은 마법 피해 대신 고정 피해를 입습니다.","sanitizedDescription":"벨코즈가 정신을 집중하고 광선을 발사하면, 광선이 2.5초 동안 커서 위치를 따라가며 마법 피해를 입히고 적을 둔화시킵니다. 유기물 분해 연구가 완료된 적 챔피언은 마법 피해 대신 고정 피해를 입습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 적 챔피언을 분해하면 {{ e2 }}초 동안 <span class=\"colorFFFFFF\">연구</span>합니다. 기본 공격 및 스킬 사용 시 연구의 지속시간이 초기화됩니다.<br /><br /><span class=\"colorFF9900\">사용 효과: </span>벨코즈가 정신을 집중하여, 2.5초 동안 마우스 커서를 따라가는 에너지 광선을 발사합니다. 이 때 마법 피해가 총 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>까지 상승하며, 광선에 맞은 적들은 속도가 {{ e3 }}% 느려집니다.<br /><br />광선을 맞는 적에게는 주기적으로 <span class=\"colorFFFFFF\">유기물 분해</span> 중첩이 쌓입니다. <span class=\"colorFFFFFF\">연구 완료</span>된 유닛은 마법 피해 대신 고정 피해를 입습니다.","sanitizedTooltip":"기본 지속 효과: 적 챔피언을 분해하면 {{ e2 }}초 동안 연구합니다. 기본 공격 및 스킬 사용 시 연구의 지속시간이 초기화됩니다. 사용 효과: 벨코즈가 정신을 집중하여, 2.5초 동안 마우스 커서를 따라가는 에너지 광선을 발사합니다. 이 때 마법 피해가 총 {{ e1 }} (+{{ a1 }})까지 상승하며, 광선에 맞은 적들은 속도가 {{ e3 }}% 느려집니다. 광선을 맞는 적에게는 주기적으로 유기물 분해 중첩이 쌓입니다. 연구 완료된 유닛은 마법 피해 대신 고정 피해를 입습니다.","leveltip":{"label":["총 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VelkozR.png","sprite":"spell12.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나","maxrank":3,"cost":[100,100,100],"costType":"마나","costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[450,625,800],[7,7,7],[20,20,20],[40,40,40],[175,175,175],[7,7,7],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","450/625/800","7","20","40","175","7","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1.25]}],"range":[1575,1575,1575],"rangeBurn":"1575","key":"VelkozR"}],"passive":{"name":"유기물 분해","description":"벨코즈가 스킬을 적중시키면 대상에게 <font color='#FFFFFF'>유기물 분해</font>중첩이 쌓입니다. 3회 중첩 시 대상은 큰 고정 피해를 입습니다.","sanitizedDescription":"벨코즈가 스킬을 적중시키면 대상에게 유기물 분해중첩이 쌓입니다. 3회 중첩 시 대상은 큰 고정 피해를 입습니다.","image":{"full":"Velkoz_Passive.png","sprite":"passive4.png","group":"passive","x":96,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Velkoz","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]}]},{"champion":"Velkoz","title":"VelkozARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Velkoz","title":"VelkozCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3165,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3029,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Velkoz","title":"VelkozFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1058,"count":1},{"id":3028,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3174,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3089,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Velkoz","title":"VelkozKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Velkoz","title":"VelkozSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3029,"count":1}]}]},{"champion":"Velkoz","title":"VelkozSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3165,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3027,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Velkoz","title":"VelkozTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":3},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3170,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Caitlyn":{"id":51,"key":"Caitlyn","name":"케이틀린","title":"필트오버의 보안관","image":{"full":"Caitlyn.png","sprite":"champion0.png","group":"champion","x":192,"y":48,"w":48,"h":48},"skins":[{"id":51000,"name":"default","num":0},{"id":51001,"name":"저항군 케이틀린","num":1},{"id":51002,"name":"보안관 케이틀린","num":2},{"id":51003,"name":"사파리 케이틀린","num":3},{"id":51004,"name":"극지 저격수 케이틀린","num":4},{"id":51005,"name":"케이틀린 경관","num":5},{"id":51006,"name":"인간사냥꾼 케이틀린","num":6},{"id":51010,"name":"달빛 악령 케이틀린","num":10},{"id":51011,"name":"펄스 건 케이틀린","num":11}],"lore":"최고의 평화 감시자로 그 명성이 자자한 케이틀린은 잡기 어렵다는 범죄 조직들을 도시에서 제거하는 필트오버의 명사수이기도 하다. 케이틀린은 주로 바이와 짝을 이루어, 성미 급한 바이를 보완하며 멋진 콤비로 활약한다. 케이틀린이 독보적으로 우수한 마법공학 소총을 가지고 있긴 하지만, 케이틀린의 가장 강력한 무기는 진보의 도시 필트오버에서 활개칠 생각을 할 정도로 멍청한 모든 범죄자를 노려 정교하게 덫을 놓을 수 있는 그녀의 우월한 지능이다.","blurb":"최고의 평화 감시자로 그 명성이 자자한 케이틀린은 잡기 어렵다는 범죄 조직들을 도시에서 제거하는 필트오버의 명사수이기도 하다. 케이틀린은 주로 바이와 짝을 이루어, 성미 급한 바이를 보완하며 멋진 콤비로 활약한다. 케이틀린이 독보적으로 우수한 마법공학 소총을 가지고 있긴 하지만, 케이틀린의 가장 강력한 무기는 진보의 도시 필트오버에서 활개칠 생각을 할 정도로 멍청한 모든 범죄자를 노려 정교하게 덫을 놓을 수 있는 그녀의 우월한 지능이다.","allytips":["- 요들잡이 덫을 사용할 때는 한 개를 깔고, 나머지 한 개를 언제든지 배치할 수 있도록 하는 게 좋습니다.","- 팀간 전투에서 비장의 한 발 스킬을 사용하면 의도하지 않은 대상이 스킬을 대신 막을 수 있으므로 주의하십시오.","- 90구경 투망 스킬은 거리를 좁히거나 벽을 뛰어넘는 용도로도 사용할 수 있습니다."],"enemytips":["- 케이틀린이 필트오버 피스메이커를 사용하여 견제를 시도한다면 완전히 피하거나 아군 미니언 뒤에 계십시오. (타겟을 많이 맞힐수록 피해가 감소합니다)","- 플레이어가 비장의 한 발 스킬의 공격 방향에 서 있다면 아군이 탄환에 맞지 않도록 중간에서 탄을 차단할 수 있습니다."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":2,"magic":2,"difficulty":6},"stats":{"armor":32,"armorperlevel":3.5,"attackdamage":62,"attackdamageperlevel":2.18,"attackrange":650,"attackspeedoffset":0.1,"attackspeedperlevel":4,"crit":0,"critperlevel":0,"hp":475,"hpperlevel":85,"hpregen":5.65,"hpregenperlevel":0.55,"movespeed":325,"mp":313.7,"mpperlevel":35,"mpregen":7.4,"mpregenperlevel":0.55,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"필트오버 피스메이커","description":"케이틀린이 소총을 1초 동안 조준한 후 관통하는 탄환을 발사하여 물리 피해를 입힙니다. (다음 명중하는 대상에게는 더 낮은 피해가 들어갑니다.)","sanitizedDescription":"케이틀린이 소총을 1초 동안 조준한 후 관통하는 탄환을 발사하여 물리 피해를 입힙니다. (다음 명중하는 대상에게는 더 낮은 피해가 들어갑니다.)","tooltip":"{{ e4 }}초 동안 조준한 후 좁게 적을 관통하는 총알을 발사하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다. 적중 시 탄도체 유효 범위가 넓어지지만, {{ e2 }}% 줄어든 피해를 입힙니다.<br /><br />덫으로 위치가 드러난 대상에게는 항상 100%의 피해를 입힙니다.","sanitizedTooltip":"{{ e4 }}초 동안 조준한 후 좁게 적을 관통하는 총알을 발사하여 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 적중 시 탄도체 유효 범위가 넓어지지만, {{ e2 }}% 줄어든 피해를 입힙니다. 덫으로 위치가 드러난 대상에게는 항상 100%의 피해를 입힙니다.","leveltip":{"label":["피해량","총 공격력 계수","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"CaitlynPiltoverPeacemaker.png","sprite":"spell1.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[30,70,110,150,190],[33,33,33,33,33],[50,50,50,50,50],[1,1,1,1,1],[130,140,150,160,170],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/70/110/150/190","33","50","1","130/140/150/160/170","0","0","0","0","0"],"range":[1250,1250,1250,1250,1250],"rangeBurn":"1250","key":"CaitlynPiltoverPeacemaker"},{"name":"요들잡이 덫","description":"케이틀린이 요들을 잡기 위한 함정을 설치합니다. 함정이 발동하면 함정에 걸린 적 챔피언은 1.5초간 모습이 드러나며 이동할 수 없게 됩니다.","sanitizedDescription":"케이틀린이 요들을 잡기 위한 함정을 설치합니다. 함정이 발동하면 함정에 걸린 적 챔피언은 1.5초간 모습이 드러나며 이동할 수 없게 됩니다.","tooltip":"적 챔피언이 걸리면 {{ e6 }}초 동안 이동 불가 상태로 만들고 이후 짧은 시간 동안 <span class=\"coloree91d7\">절대 시야</span>를 얻을 수 있는 덫을 설치합니다.<br /><br />덫은 {{ e3 }}초 동안 지속되며, 한 번에 {{ e5 }}개의 덫만 설치할 수 있습니다.<br /><br />덫에 걸린 적은 헤드샷으로 {{ e2 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 추가 피해를 입습니다.","sanitizedTooltip":"적 챔피언이 걸리면 {{ e6 }}초 동안 이동 불가 상태로 만들고 이후 짧은 시간 동안 절대 시야를 얻을 수 있는 덫을 설치합니다. 덫은 {{ e3 }}초 동안 지속되며, 한 번에 {{ e5 }}개의 덫만 설치할 수 있습니다. 덫에 걸린 적은 헤드샷으로 {{ e2 }} (+{{ f1 }})의 추가 피해를 입습니다.","leveltip":{"label":["덫에 걸린 대상에 입히는 헤드샷 추가 피해량","추가 공격력 %","재충전 시간","최대 덫 개수","덫 지속 시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e7 }}% -> {{ e7NL }}%","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}","{{ e4 }} -> {{ e4NL }}","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"CaitlynYordleTrap.png","sprite":"spell1.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[0.5,0.5,0.5,0.5,0.5],"cooldownBurn":"0.5","effect":[null,[2,2,2,2,2],[40,90,140,190,240],[30,35,40,45,50],[3,3,4,4,5],[3,3,4,4,5],[1.5,1.5,1.5,1.5,1.5],[40,55,70,85,100],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2","40/90/140/190/240","30/35/40/45/50","3/3/4/4/5","3/3/4/4/5","1.5","40/55/70/85/100","0","0","0"],"range":[800,800,800,800,800],"rangeBurn":"800","key":"CaitlynYordleTrap"},{"name":"90구경 투망","description":"케이틀린이 무거운 그물을 발사하여 적을 느리게 합니다. 그 반동으로 케이틀린은 뒤로 밀려납니다.","sanitizedDescription":"케이틀린이 무거운 그물을 발사하여 적을 느리게 합니다. 그 반동으로 케이틀린은 뒤로 밀려납니다.","tooltip":"투망을 발사하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 적의 이동 속도를 {{ e2 }}초 동안 {{ e3 }}% 늦춥니다. 케이틀린은 뒤로 밀려납니다.","sanitizedTooltip":"투망을 발사하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 적의 이동 속도를 {{ e2 }}초 동안 {{ e3 }}% 늦춥니다. 케이틀린은 뒤로 밀려납니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CaitlynEntrapment.png","sprite":"spell1.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[75,75,75,75,75],"costBurn":"75","cooldown":[16,14.5,13,11.5,10],"cooldownBurn":"16/14.5/13/11.5/10","effect":[null,[70,110,150,190,230],[1,1,1,1,1],[50,50,50,50,50],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","1","50","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"CaitlynEntrapment"},{"name":"비장의 한 발","description":"케이틀린이 공을 들인 완벽한 사격을 하여 먼 거리에서 하나의 대상에게 큰 피해를 입힙니다. 적 챔피언이 자신의 아군을 위해 총알을 막아낼 수 있습니다.","sanitizedDescription":"케이틀린이 공을 들인 완벽한 사격을 하여 먼 거리에서 하나의 대상에게 큰 피해를 입힙니다. 적 챔피언이 자신의 아군을 위해 총알을 막아낼 수 있습니다.","tooltip":"공을 들인 완벽한 사격을 하여 거리 {{ e2 }} 내의 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다. 다른 적 챔피언이 총알을 대신 맞을 수도 있습니다.<br /><br />정신을 집중하는 동안 대상에 대한 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다.","sanitizedTooltip":"공을 들인 완벽한 사격을 하여 거리 {{ e2 }} 내의 적에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 다른 적 챔피언이 총알을 대신 맞을 수도 있습니다. 정신을 집중하는 동안 대상에 대한 절대 시야를 얻습니다.","leveltip":{"label":["피해량","사거리","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CaitlynAceintheHole.png","sprite":"spell1.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[90,75,60],"cooldownBurn":"90/75/60","effect":[null,[250,475,700],[2000,2500,3000],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","250/475/700","2000/2500/3000","0","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[2]}],"range":[2000,2500,3000],"rangeBurn":"2000/2500/3000","key":"CaitlynAceintheHole"}],"passive":{"name":"헤드샷","description":"케이틀린은 일정 횟수 이상의 기본 공격 및 덫에 걸리거나 투망에 맞은 대상에 대한 공격 시 헤드샷을 발사하여 치명타 확률에 비례한 추가 피해를 입힙니다. 덫에 걸리거나 투망에 맞은 대상에게는 케이틀린의 헤드샷 공격 사거리가 두 배가 됩니다.","sanitizedDescription":"케이틀린은 일정 횟수 이상의 기본 공격 및 덫에 걸리거나 투망에 맞은 대상에 대한 공격 시 헤드샷을 발사하여 치명타 확률에 비례한 추가 피해를 입힙니다. 덫에 걸리거나 투망에 맞은 대상에게는 케이틀린의 헤드샷 공격 사거리가 두 배가 됩니다.","image":{"full":"Caitlyn_Headshot.png","sprite":"passive0.png","group":"passive","x":192,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Caitlyn","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3033,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3026,"count":1},{"id":3508,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3072,"count":1},{"id":3139,"count":1},{"id":3026,"count":1},{"id":3508,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3033,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3139,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3508,"count":1},{"id":3046,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3147,"count":1},{"id":3142,"count":1},{"id":3139,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3026,"count":1},{"id":3508,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3026,"count":1},{"id":3508,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Caitlyn","title":"CaitlynTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3087,"count":1},{"id":3812,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Trundle":{"id":48,"key":"Trundle","name":"트런들","title":"트롤 왕","image":{"full":"Trundle.png","sprite":"champion3.png","group":"champion","x":144,"y":96,"w":48,"h":48},"skins":[{"id":48000,"name":"default","num":0},{"id":48001,"name":"국민타자 트런들","num":1},{"id":48002,"name":"쓰레기장 트런들","num":2},{"id":48003,"name":"(구) 트런들","num":3},{"id":48004,"name":"순경 트런들","num":4},{"id":48005,"name":"파괴의 신 트런들","num":5}],"lore":"트런들은 몸집이 크고 교활한데다 잔인한 면모를 두루 갖춘 트롤로, 일단 트런들이 몽둥이를 들면 굴복시키지 못할 상대는 없다. 심지어 프렐요드 전역을 통틀어서 말이다. 영역 본능이 매우 강한 트런들은 자신의 영토에 발을 디딘 멍청한 자들을 쫓아가서, 거대한 얼음 정수의 몽둥이를 들고 적을 뼛속까지 얼린 채 서서히 죽어가는 모습을 보고 껄껄 웃는다.","blurb":"트런들은 몸집이 크고 교활한데다 잔인한 면모를 두루 갖춘 트롤로, 일단 트런들이 몽둥이를 들면 굴복시키지 못할 상대는 없다. 심지어 프렐요드 전역을 통틀어서 말이다. 영역 본능이 매우 강한 트런들은 자신의 영토에 발을 디딘 멍청한 자들을 쫓아가서, 거대한 얼음 정수의 몽둥이를 들고 적을 뼛속까지 얼린 채 서서히 죽어가는 모습을 보고 껄껄 웃는다.","allytips":["- 트런들은 얼음 왕국에서 싸울 때 가장 유리합니다. 적들을 해당 지역으로 유인하십시오.","- 진압을 사용하면 강력한 적 방어 담당을 약화시키거나 아군이 공격을 집중할 수 있는 대상으로 만들 수 있습니다.","- 깨물기는 적의 공격력을 낮출 수 있습니다. 적 물리 공격수를 목표로 하는 게 좋습니다."],"enemytips":["- 트런들은 스킬 적용 범위 안에서 전투 시 매우 강해집니다. 얼음 왕국에서 끌어낸 후 상대하십시오.","- 얼음 기둥은 이동 속도를 상당히 느리게 하므로 최대한 빨리 벗어나십시오."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":7,"defense":6,"magic":2,"difficulty":5},"stats":{"armor":37,"armorperlevel":2.7,"attackdamage":68,"attackdamageperlevel":3,"attackrange":175,"attackspeedoffset":-0.0672,"attackspeedperlevel":2.9,"crit":0,"critperlevel":0,"hp":616.28,"hpperlevel":96,"hpregen":6,"hpregenperlevel":0.75,"movespeed":350,"mp":281.6,"mpperlevel":45,"mpregen":7.508,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"깨물기","description":"트런들이 상대를 물어뜯어 피해를 입히고 잠깐 둔화 효과를 주며 적의 공격력을 약간 흡수합니다.","sanitizedDescription":"트런들이 상대를 물어뜯어 피해를 입히고 잠깐 둔화 효과를 주며 적의 공격력을 약간 흡수합니다.","tooltip":"트런들이 다음 기본 공격으로 적에게 돌진해 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 잠깐 동안 대상 적을 둔화 효과에 빠뜨립니다.<br /><br />이 공격으로 트런들의 공격력은 {{ e6 }}초간 {{ e3 }}만큼 증가하고 상대의 공격력은 해당 수치의 절반 만큼 감소합니다.","sanitizedTooltip":"트런들이 다음 기본 공격으로 적에게 돌진해 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 잠깐 동안 대상 적을 둔화 효과에 빠뜨립니다. 이 공격으로 트런들의 공격력은 {{ e6 }}초간 {{ e3 }}만큼 증가하고 상대의 공격력은 해당 수치의 절반 만큼 감소합니다.","leveltip":{"label":["피해량","공격력","공격력 %"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"TrundleTrollSmash.png","sprite":"spell11.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[20,40,60,80,100],[100,105,110,115,120],[20,25,30,35,40],[-10,-12.5,-15,-17.5,-20],[7,7,7,7,7],[8,8,8,8,8],[0.75,0.75,0.75,0.75,0.75],[0.1,0.1,0.1,0.1,0.1],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/40/60/80/100","100/105/110/115/120","20/25/30/35/40","-10/-12.5/-15/-17.5/-20","7","8","0.75","0.1","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.8,0.9,1,1.1,1.2]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"TrundleTrollSmash"},{"name":"얼음 왕국","description":"트런들이 목표 지점을 자기 왕국으로 바꿔, 해당 지역에 있는 동안 공격 속도와 이동 속도가 증가하고 모든 시전자로부터 오는 치유 효과가 증가합니다.","sanitizedDescription":"트런들이 목표 지점을 자기 왕국으로 바꿔, 해당 지역에 있는 동안 공격 속도와 이동 속도가 증가하고 모든 시전자로부터 오는 치유 효과가 증가합니다.","tooltip":"트런들이 목표 지역을 얼음으로 {{ e4 }}초간 뒤덮습니다. 트런들은 이동 속도가 {{ e1 }}%, 공격 속도가 {{ e2 }}% 상승하며 모든 시전자에게서 받는 치유와 재생 효과가 {{ e3 }}% 상승합니다.","sanitizedTooltip":"트런들이 목표 지역을 얼음으로 {{ e4 }}초간 뒤덮습니다. 트런들은 이동 속도가 {{ e1 }}%, 공격 속도가 {{ e2 }}% 상승하며 모든 시전자에게서 받는 치유와 재생 효과가 {{ e3 }}% 상승합니다.","leveltip":{"label":["이동 속도","공격 속도 "],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"trundledesecrate.png","sprite":"spell11.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[20,25,30,35,40],[20,35,50,65,80],[25,25,25,25,25],[8,8,8,8,8],[775,775,775,775,775],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/25/30/35/40","20/35/50/65/80","25","8","775","0","0","0","0","0"],"range":[750,750,750,750,750],"rangeBurn":"750","key":"trundledesecrate"},{"name":"얼음 기둥","description":"트런들이 목표 지점에 지나갈 수 없는 얼음 돌기둥을 생성합니다. 얼음 기둥 주변을 지나가는 모든 적 유닛의 이동 속도가 낮아집니다.","sanitizedDescription":"트런들이 목표 지점에 지나갈 수 없는 얼음 돌기둥을 생성합니다. 얼음 기둥 주변을 지나가는 모든 적 유닛의 이동 속도가 낮아집니다.","tooltip":"트런들이 목표 지점에 {{ e1 }}초 동안 얼음 기둥을 생성하여 통과할 수 없는 지역을 만들고, 기둥 주변의 모든 적의 이동 속도를 {{ e2 }}% 늦춥니다.","sanitizedTooltip":"트런들이 목표 지점에 {{ e1 }}초 동안 얼음 기둥을 생성하여 통과할 수 없는 지역을 만들고, 기둥 주변의 모든 적의 이동 속도를 {{ e2 }}% 늦춥니다.","leveltip":{"label":["재사용 대기시간","둔화"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"TrundleCircle.png","sprite":"spell11.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[75,75,75,75,75],"costBurn":"75","cooldown":[22,20,18,16,14],"cooldownBurn":"22/20/18/16/14","effect":[null,[6,6,6,6,6],[30,35,40,45,50],[360,360,360,360,360],[225,225,225,225,225],[150,150,150,150,150],[225,225,225,225,225],[400,400,400,400,400],[60,60,60,60,60],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","6","30/35/40/45/50","360","225","150","225","400","60","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"TrundleCircle"},{"name":"진압","description":"트런들이 대상에게서 일정 비율의 체력과 방어력 및 마법 저항력을 즉시 훔칩니다. 다음 4초 동안 훔친 체력, 방어력, 마법 저항력이 두 배로 증가합니다.","sanitizedDescription":"트런들이 대상에게서 일정 비율의 체력과 방어력 및 마법 저항력을 즉시 훔칩니다. 다음 4초 동안 훔친 체력, 방어력, 마법 저항력이 두 배로 증가합니다.","tooltip":"트런들이 적 챔피언의 최대 체력에서 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>%만큼의 체력을 흡수하고, 방어력과 마법 저항력의 {{ e2 }}%만큼을 흡수합니다. 절반은 즉시, 나머지 절반은 {{ e3 }}초 후에 적용됩니다. 흡수 효과가 끝난 다음 {{ e3 }}초 후에 방어력과 마법 저항력이 회복됩니다.","sanitizedTooltip":"트런들이 적 챔피언의 최대 체력에서 {{ e1 }} (+{{ a1 }})%만큼의 체력을 흡수하고, 방어력과 마법 저항력의 {{ e2 }}%만큼을 흡수합니다. 절반은 즉시, 나머지 절반은 {{ e3 }}초 후에 적용됩니다. 흡수 효과가 끝난 다음 {{ e3 }}초 후에 방어력과 마법 저항력이 회복됩니다.","leveltip":{"label":["체력 흡수량","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TrundlePain.png","sprite":"spell11.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,90,70],"cooldownBurn":"110/90/70","effect":[null,[20,27.5,35],[40,40,40],[4,4,4],[4,4,4],[8,8,8],[0.5,0.5,0.5],[5,5,5],[0.02,0.02,0.02],[0,0,0],[0,0,0]],"effectBurn":["","20/27.5/35","40","4","4","8","0.5","5","0.02","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.02]}],"range":[650,650,650],"rangeBurn":"650","key":"TrundlePain"}],"passive":{"name":"헌납","description":"트런들은 근처에서 적 유닛이 쓰러질 때마다 죽은 유닛의 최대 체력의 일정 비율만큼 체력이 회복됩니다.","sanitizedDescription":"트런들은 근처에서 적 유닛이 쓰러질 때마다 죽은 유닛의 최대 체력의 일정 비율만큼 체력이 회복됩니다.","image":{"full":"Trundle_Passive.png","sprite":"passive3.png","group":"passive","x":144,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Trundle","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3110,"count":1}]}]},{"champion":"Trundle","title":"TrundleARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3748,"count":1},{"id":3111,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3190,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Trundle","title":"TrundleCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Trundle","title":"TrundleFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3102,"count":1},{"id":3110,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Trundle","title":"TrundleKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3748,"count":1},{"id":3111,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3190,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Trundle","title":"TrundleSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3065,"count":1}]}]},{"champion":"Trundle","title":"TrundleSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3742,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Trundle","title":"TrundleTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3053,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3748,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Kindred":{"id":203,"key":"Kindred","name":"킨드레드","title":"영겁의 사냥꾼","image":{"full":"Kindred.png","sprite":"champion1.png","group":"champion","x":288,"y":96,"w":48,"h":48},"skins":[{"id":203000,"name":"default","num":0},{"id":203001,"name":"그림자 불꽃 킨드레드","num":1},{"id":203002,"name":"슈퍼 갤럭시 킨드레드","num":2}],"lore":"킨드레드는 따로지만 언제나 함께인 죽음의 양면을 지닌 존재다. 운명을 받아들인 자에게는 양의 화살로 빠른 죽음을 선사하고, 운명을 거부하고 도망치는 자에게는 늑대가 달려드는 잔혹한 최후를 안겨준다. 룬테라에서는 지역마다 킨드레드의 본성에 다른 의미를 부여했지만, 필멸의 존재라면 결국 진정한 죽음을 선택해야만 한다는 점은 같았다.","blurb":"킨드레드는 따로지만 언제나 함께인 죽음의 양면을 지닌 존재다. 운명을 받아들인 자에게는 양의 화살로 빠른 죽음을 선사하고, 운명을 거부하고 도망치는 자에게는 늑대가 달려드는 잔혹한 최후를 안겨준다. 룬테라에서는 지역마다 킨드레드의 본성에 다른 의미를 부여했지만, 필멸의 존재라면 결국 진정한 죽음을 선택해야만 한다는 점은 같았다.","allytips":["- 정글 사냥 시 공격하는 사이사이 움직이면 몬스터의 공격을 피할 수 있을 뿐더러 늑대의 광기 스킬로 인한 치유 효과가 활성화됩니다.","- 어떤 대상을 사냥할지 신중하게 선택하세요. 게임이 진행될수록 사냥에 많이 성공해야만 승리를 기약할 수 있습니다.","- 대규모 교전 시엔 선두에서 들어가지 마세요. 아군이 공격을 개시하길 기다리는 편이 좋습니다."],"enemytips":["- 킨드레드는 몸이 약한 편입니다. 압박을 주면 소극적인 플레이를 펼칠 수 밖에 없습니다.","- 사냥 효과 지우기 - 늑대가 사냥을 활성화한 정글 캠프의 몬스터를 모두 처치하면 킨드레드의 피해량이 커지는 것을 지연시킬 수 있습니다.","- 킨드레드가 양의 안식처 스킬을 사용하면 영역 안으로 들어가세요. 어떤 챔피언이든 죽지 않게 됩니다."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":2,"magic":2,"difficulty":4},"stats":{"armor":29,"armorperlevel":3.5,"attackdamage":65,"attackdamageperlevel":2.26,"attackrange":500,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":540,"hpperlevel":85,"hpregen":7,"hpregenperlevel":0.55,"movespeed":325,"mp":300,"mpperlevel":35,"mpregen":6.972,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"화살 세례","description":"킨드레드가 구르며 근처의 대상들에게 최대 세 발의 화살을 발사합니다.","sanitizedDescription":"킨드레드가 구르며 근처의 대상들에게 최대 세 발의 화살을 발사합니다.","tooltip":"양이 도약하여 근처 적들에게 최대 3발의 화살을 발사해 {{ e1 }}<span class=\"colorFF8C00\"> (+{{ a1 }})</span>의 물리 피해를 입히고 {{ e8 }}초 동안 <scaleLevel>{{ f2 }}%</scaleLevel>의 추가 공격 속도를 얻습니다.<br /><br /><span class=\"colorFFFFFF\">늑대의 광기</span>를 시전하거나 효과 범위 안에서 도약하면 이 스킬의 재사용 대기시간이 {{ e4 }}초로 감소합니다.","sanitizedTooltip":"양이 도약하여 근처 적들에게 최대 3발의 화살을 발사해 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e8 }}초 동안 {{ f2 }}%의 추가 공격 속도를 얻습니다. 늑대의 광기를 시전하거나 효과 범위 안에서 도약하면 이 스킬의 재사용 대기시간이 {{ e4 }}초로 감소합니다.","leveltip":{"label":["기본 피해량","늑대의 광기 지대 내부 재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}"]},"image":{"full":"KindredQ.png","sprite":"spell6.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[35,35,35,35,35],"costBurn":"35","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[60,80,100,120,140],[0,0,0,0,0],[500,500,500,500,500],[4,3.5,3,2.5,2],[100,100,100,100,100],[12,12,12,12,12],[0.1,0.1,0.1,0.1,0.1],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/80/100/120/140","0","500","4/3.5/3/2.5/2","100","12","0.1","4","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.65]}],"range":[340,340,340,340,340],"rangeBurn":"340","key":"KindredQ"},{"name":"늑대의 광기","description":"늑대가 분노하여 주변의 적들을 공격합니다.","sanitizedDescription":"늑대가 분노하여 주변의 적들을 공격합니다.","tooltip":"늑대가 지대를 형성하여 그 안에 있는 적들을 {{ e4 }}초 동안 공격합니다. 양은 대상을 공격하여 늑대의 공격 대상을 바꿀 수 있습니다. 양이 늑대가 형성한 지대를 벗어나면 늑대는 공격을 멈추고 양을 따라갑니다.<br /><br />늑대의 공격은 {{ e5 }}<span class=\"colorFF8C00\"> (+{{ a1 }})</span> + 대상 현재 체력의 <scaleLevel>{{ f3 }}%</scaleLevel>에 해당하는 마법 피해를 입힙니다.<br /><br /><rules>늑대의 공격 속도는 킨드레드의 공격 속도에 따라 빨라집니다. 몬스터 상대로는 피해량이 {{ e7 }}% 증가하고 몬스터의 공격 속도와 이동 속도를 2초 동안 {{ e8 }}% 감소시킵니다.</rules>","sanitizedTooltip":"늑대가 지대를 형성하여 그 안에 있는 적들을 {{ e4 }}초 동안 공격합니다. 양은 대상을 공격하여 늑대의 공격 대상을 바꿀 수 있습니다. 양이 늑대가 형성한 지대를 벗어나면 늑대는 공격을 멈추고 양을 따라갑니다. 늑대의 공격은 {{ e5 }} (+{{ a1 }}) + 대상 현재 체력의 {{ f3 }}%에 해당하는 마법 피해를 입힙니다. 늑대의 공격 속도는 킨드레드의 공격 속도에 따라 빨라집니다. 몬스터 상대로는 피해량이 {{ e7 }}% 증가하고 몬스터의 공격 속도와 이동 속도를 2초 동안 {{ e8 }}% 감소시킵니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KindredW.png","sprite":"spell6.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[40,45,50,55,60],[1,1,1,1,1],[1.5,1.5,1.5,1.5,1.5],[8.5,8.5,8.5,8.5,8.5],[25,30,35,40,45],[800,800,800,800,800],[50,50,50,50,50],[50,50,50,50,50],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/45/50/55/60","1","1.5","8.5","25/30/35/40/45","800","50","50","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.2]}],"range":[560,560,560,560,560],"rangeBurn":"560","key":"KindredW"},{"name":"차오르는 공포","description":"양이 신중하게 화살을 발사해 대상의 속도를 늦춥니다. 양이 대상을 두 번 더 공격하면 세 번째 공격 시 늑대가 적을 덮치게 만들어, 흉포한 공격으로 큰 피해를 입힙니다.","sanitizedDescription":"양이 신중하게 화살을 발사해 대상의 속도를 늦춥니다. 양이 대상을 두 번 더 공격하면 세 번째 공격 시 늑대가 적을 덮치게 만들어, 흉포한 공격으로 큰 피해를 입힙니다.","tooltip":"적 하나를 마비시켜 {{ e8 }}초 동안 이동 속도를 {{ e2 }}%만큼 늦춥니다.<br /><br />양이 대상을 두 번 더 공격하면 세 번째 공격 시 늑대가 적을 덮치게 만들어 큰 피해를 입힙니다.<br /><br />늑대는 {{ e1 }}<span class=\"colorFF8C00\"> (+{{ a1 }})</span> + 대상 잃은 체력의 <scaleLevel>{{ f2 }}%</scaleLevel>에 해당하는 추가 물리 피해를 입힙니다.<br /><br />대상의 체력이 {{ e5 }}% <span class=\"colorFF5802\">(+{{ f3 }}%)</span> 이하일 경우 늑대의 공격은 치명타로 적중해 피해가 {{ e6 }}% 증가합니다. (<span class=\"colorFF5802\">치명타 확률</span>에 따라 증가)<br /><br /><rules>[몬스터 상대로는 최대 {{ e0 }}]</rules>","sanitizedTooltip":"적 하나를 마비시켜 {{ e8 }}초 동안 이동 속도를 {{ e2 }}%만큼 늦춥니다. 양이 대상을 두 번 더 공격하면 세 번째 공격 시 늑대가 적을 덮치게 만들어 큰 피해를 입힙니다. 늑대는 {{ e1 }} (+{{ a1 }}) + 대상 잃은 체력의 {{ f2 }}%에 해당하는 추가 물리 피해를 입힙니다. 대상의 체력이 {{ e5 }}% (+{{ f3 }}%) 이하일 경우 늑대의 공격은 치명타로 적중해 피해가 {{ e6 }}% 증가합니다. (치명타 확률에 따라 증가) [몬스터 상대로는 최대 {{ e0 }}]","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KindredEWrapper.png","sprite":"spell6.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[65,85,105,125,145],[50,50,50,50,50],[0.5,0.5,0.5,0.5,0.5],[8,8,8,8,8],[15,15,15,15,15],[50,50,50,50,50],[4,4,4,4,4],[1,1,1,1,1],[4,4,4,4,4],[300,300,300,300,300]],"effectBurn":["","65/85/105/125/145","50","0.5","8","15","50","4","1","4","300"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"KindredEWrapper"},{"name":"양의 안식처","description":"양은 안식처 영역 안에 있는 모든 생명체를 죽음으로부터 지켜줍니다. 효과가 끝날 때까지는 아무도 죽지 않습니다. 효과가 끝나면 유닛들이 치유됩니다.","sanitizedDescription":"양은 안식처 영역 안에 있는 모든 생명체를 죽음으로부터 지켜줍니다. 효과가 끝날 때까지는 아무도 죽지 않습니다. 효과가 끝나면 유닛들이 치유됩니다.","tooltip":"양이 {{ e2 }}초 동안 킨드레드 밑의 땅을 축복하여 <span class=\"color99FF99\">아군</span>이든 <span class=\"colorFF9999\">적</span>이든 살아있는 생명체라면 죽지 않는 영역을 만들어냅니다. 체력이 10%로 떨어지면 유닛들이 면역 상태가 되어 더 이상 피해를 받지도 치유되지도 않습니다.<br /><br />축복이 끝나면 영역 안의 생명체는 모두 {{ e1 }}만큼 치유됩니다.","sanitizedTooltip":"양이 {{ e2 }}초 동안 킨드레드 밑의 땅을 축복하여 아군이든 적이든 살아있는 생명체라면 죽지 않는 영역을 만들어냅니다. 체력이 10%로 떨어지면 유닛들이 면역 상태가 되어 더 이상 피해를 받지도 치유되지도 않습니다. 축복이 끝나면 영역 안의 생명체는 모두 {{ e1 }}만큼 치유됩니다.","leveltip":{"label":["치료","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KindredR.png","sprite":"spell6.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[0,0,0],"costBurn":"0","cooldown":[160,130,100],"cooldownBurn":"160/130/100","effect":[null,[200,250,300],[4,4,4],[530,530,530],[400,600,800],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","200/250/300","4","530","400/600/800","0","0","0","0","0","0"],"range":[500,500,500],"rangeBurn":"500","key":"KindredR"}],"passive":{"name":"킨드레드의 표식","description":"킨드레드는 사냥감에게 표식을 남길 수 있습니다. 사냥에 성공하면 영구적으로 킨드레드의 기본 스킬이 강화됩니다. 사냥에 4회 성공하면 킨드레드의 기본 공격 사거리가 증가합니다.","sanitizedDescription":"킨드레드는 사냥감에게 표식을 남길 수 있습니다. 사냥에 성공하면 영구적으로 킨드레드의 기본 스킬이 강화됩니다. 사냥에 4회 성공하면 킨드레드의 기본 공격 사거리가 증가합니다.","image":{"full":"Kindred_Passive.png","sprite":"passive1.png","group":"passive","x":288,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Kindred","title":"KindredARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3072,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kindred","title":"KindredCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1043,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3085,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3071,"count":1},{"id":3022,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3156,"count":1},{"id":3094,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kindred","title":"KindredFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3144,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3006,"count":1},{"id":1400,"count":1},{"id":3153,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3036,"count":1},{"id":3046,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3022,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kindred","title":"KindredKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3072,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3102,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kindred","title":"KindredSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3085,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3071,"count":1},{"id":3022,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3156,"count":1},{"id":3094,"count":1},{"id":3026,"count":1}]}]},{"champion":"Kindred","title":"KindredSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1043,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3156,"count":1},{"id":3026,"count":1},{"id":3036,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kindred","title":"KindredTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3085,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3006,"count":1},{"id":1419,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3022,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Quinn":{"id":133,"key":"Quinn","name":"퀸","title":"데마시아의 날개","image":{"full":"Quinn.png","sprite":"champion2.png","group":"champion","x":240,"y":96,"w":48,"h":48},"skins":[{"id":133000,"name":"default","num":0},{"id":133001,"name":"불사조 퀸","num":1},{"id":133002,"name":"북방 정찰대 퀸","num":2},{"id":133003,"name":"해적 퀸","num":3},{"id":133004,"name":"사랑의 추적자 퀸","num":4}],"lore":"퀸은 데마시아의 정예 기동대원으로, 적의 영토 한복판에 잠입해 위험한 임무를 수행한다. 깨뜨릴 수 없는 결속력을 자랑하는 퀸과 퀸의 전설적인 매 발러는, 적이 자신과 싸우는 상대가 데마시아 최고의 영웅 하나가 아니라 둘이라는 사실을 미처 알기도 전에 처치해버린다. 날렵하고 상황에 따라 곡예와도 같은 움직임을 보여 주는 퀸과 발러는, 퀸이 석궁으로 적을 조준하는 동안 발러가 잽싸게 도망치는 적을 공중에서 추적하며 전장에서 공포의 콤비를 이루고 있다.","blurb":"퀸은 데마시아의 정예 기동대원으로, 적의 영토 한복판에 잠입해 위험한 임무를 수행한다. 깨뜨릴 수 없는 결속력을 자랑하는 퀸과 퀸의 전설적인 매 발러는, 적이 자신과 싸우는 상대가 데마시아 최고의 영웅 하나가 아니라 둘이라는 사실을 미처 알기도 전에 처치해버린다. 날렵하고 상황에 따라 곡예와도 같은 움직임을 보여 주는 퀸과 발러는, 퀸이 석궁으로 적을 조준하는 동안 발러가 잽싸게 도망치는 적을 공중에서 추적하며 전장에서 공포의 콤비를 이루고 있다.","allytips":["- 발러가 ","취약"," 표식을 남긴 적을 공격하면 매사냥의 재사용 대기시간이 시작됩니다. 표식을 빠르게 소모하면 다음 표식이 더 빠르게 생성됩니다.","- 공중제비 스킬이 강력하긴 하지만, 적이 이 때를 노려 퀸에게 반격할 수 있으니 주의해서 사용해야 합니다. 공중제비는 벽을 등지고 있을 때 활용하면 좋습니다.","- 후방 지원 스킬로 아주 먼 거리를 신속하게 이동할 수 있으니 다른 라인의 미니언을 정리하고 싶을 때나 부상 당한 적을 추격할 때 활용하세요."],"enemytips":["- 발러의 표식이 찍혔다면, 퀸이 이득을 취할 수 없도록 일단 후퇴하세요.","- 퀸의 현재 위치를 예의주시하세요. 후방 지원 스킬로 발러가 아주 빠르게 맵을 가로질러와 급습할 수 있습니다.","- 퀸이 후방 지원 스킬을 사용 중일 때 피해를 입히면 효과를 끝낼 수 있습니다."],"tags":["Marksman","Fighter"],"partype":"마나","info":{"attack":9,"defense":4,"magic":2,"difficulty":5},"stats":{"armor":32,"armorperlevel":3.5,"attackdamage":62,"attackdamageperlevel":2.41,"attackrange":525,"attackspeedoffset":-0.065,"attackspeedperlevel":3.1,"crit":0,"critperlevel":0,"hp":532.8,"hpperlevel":85,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":335,"mp":268.8,"mpperlevel":35,"mpregen":6.972,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"실명 공격","description":"퀸이 발러를 보내 하나의 적에게 표식을 남기고 대상의 시야를 크게 좁힙니다. 또한 근처의 모든 적에게 피해를 입힙니다.","sanitizedDescription":"퀸이 발러를 보내 하나의 적에게 표식을 남기고 대상의 시야를 크게 좁힙니다. 또한 근처의 모든 적에게 피해를 입힙니다.","tooltip":"발러가 직선으로 날아가 처음 적중한 적에게 <span class=\"colorFFF673\">취약</span> 표식을 남기고 {{ e3 }}초간 대상의 시야를 매우 좁게 만듭니다. 이후 주변의 모든 적에게 {{ e1 }} <scaleAD>(+{{ f2 }})</scaleAD> <scaleAP>(+{{ a1 }})</scaleAP>의 물리 피해를 입힙니다.<br /><br />최초 대상이 챔피언이 아닌 경우 대상은 {{ e3 }}초 동안 공격 불가 상태가 됩니다.","sanitizedTooltip":"발러가 직선으로 날아가 처음 적중한 적에게 취약 표식을 남기고 {{ e3 }}초간 대상의 시야를 매우 좁게 만듭니다. 이후 주변의 모든 적에게 {{ e1 }} (+{{ f2 }}) (+{{ a1 }})의 물리 피해를 입힙니다. 최초 대상이 챔피언이 아닌 경우 대상은 {{ e3 }}초 동안 공격 불가 상태가 됩니다.","leveltip":{"label":["기본 피해량","총 공격력 계수","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"QuinnQ.png","sprite":"spell8.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[11,10.5,10,9.5,9],"cooldownBurn":"11/10.5/10/9.5/9","effect":[null,[20,45,70,95,120],[-1000,-1000,-1000,-1000,-1000],[1.5,1.5,1.5,1.5,1.5],[0.8,0.9,1,1.1,1.2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/45/70/95/120","-1000","1.5","0.8/0.9/1/1.1/1.2","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[1025,1025,1025,1025,1025],"rangeBurn":"1025","key":"QuinnQ"},{"name":"예리한 감각","description":"기본 지속 효과로 퀸이 <font color='#FFF673'>취약</font>해진 대상을 공격한 이후 공격 속도와 이동 속도가 상승합니다. 사용하면 발러가 주변의 넓은 지역을 드러냅니다.","sanitizedDescription":"기본 지속 효과로 퀸이 취약해진 대상을 공격한 이후 공격 속도와 이동 속도가 상승합니다. 사용하면 발러가 주변의 넓은 지역을 드러냅니다.","tooltip":"<spellPassive>기본 지속 효과:</spellPassive> <span class=\"colorFFF673\">취약</span>해진 대상을 공격하면 {{ e1 }}초 동안 퀸의 공격 속도가 {{ e2 }}%, 이동 속도가 {{ e3 }}%만큼 상승합니다.<br /><br /><spellActive>사용 시:</spellActive> 발러가 {{ e5 }}초 동안 주변의 넓은 지역을 드러냅니다.","sanitizedTooltip":"기본 지속 효과: 취약해진 대상을 공격하면 {{ e1 }}초 동안 퀸의 공격 속도가 {{ e2 }}%, 이동 속도가 {{ e3 }}%만큼 상승합니다. 사용 시: 발러가 {{ e5 }}초 동안 주변의 넓은 지역을 드러냅니다.","leveltip":{"label":["추가 공격 속도","추가 이동 속도","재사용 대기시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"QuinnW.png","sprite":"spell9.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[50,45,40,35,30],"cooldownBurn":"50/45/40/35/30","effect":[null,[2,2,2,2,2],[20,35,50,65,80],[20,25,30,35,40],[2100,2100,2100,2100,2100],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2","20/35/50/65/80","20/25/30/35/40","2100","2","0","0","0","0","0"],"range":[2100,2100,2100,2100,2100],"rangeBurn":"2100","key":"QuinnW"},{"name":"공중제비","description":"퀸이 적에게 돌진하여 물리 피해를 입히고 적의 이동 속도를 늦춥니다. 대상에게 도달하면 공중제비를 넘어 대상을 잠깐 방해하고, 최대 공격 사거리로 물러나 착지합니다.","sanitizedDescription":"퀸이 적에게 돌진하여 물리 피해를 입히고 적의 이동 속도를 늦춥니다. 대상에게 도달하면 공중제비를 넘어 대상을 잠깐 방해하고, 최대 공격 사거리로 물러나 착지합니다.","tooltip":"퀸이 적에게 돌진해 {{ e2 }} <scaleAD>(+{{ a1 }})</scaleAD>의 물리 피해를 입히고 발러가 대상에게 <span class=\"colorFFF673\">취약</span> 표식을 남깁니다.<br /><br />대상에게 도달하면 퀸이 뛰어오르며 대상을 잠시 밀어내고 이동 속도를 {{ e1 }}% 감소시킵니다. (이동 속도 감소 효과는 {{ e3 }}초에 걸쳐 줄어듭니다.)","sanitizedTooltip":"퀸이 적에게 돌진해 {{ e2 }} (+{{ a1 }})의 물리 피해를 입히고 발러가 대상에게 취약 표식을 남깁니다. 대상에게 도달하면 퀸이 뛰어오르며 대상을 잠시 밀어내고 이동 속도를 {{ e1 }}% 감소시킵니다. (이동 속도 감소 효과는 {{ e3 }}초에 걸쳐 줄어듭니다.)","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"QuinnE.png","sprite":"spell9.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[50,50,50,50,50],[40,70,100,130,160],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50","40/70/100/130/160","1.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.2]}],"range":[675,675,675,675,675],"rangeBurn":"675","key":"QuinnE"},{"name":"후방 지원","description":"퀸과 발러가 뭉쳐 엄청난 속도로 날아다닙니다.","sanitizedDescription":"퀸과 발러가 뭉쳐 엄청난 속도로 날아다닙니다.","tooltip":"퀸이 발러를 불러 자신을 돕게 합니다. 2초간 정신 집중 후 둘은 하나가 되어 총 이동 속도가 {{ e3 }}% 증가합니다. 공격하거나 후방 지원 스킬을 다시 사용하면 공중 강습을 사용하여 주변의 적을 공격합니다.<br /><br />적 챔피언 혹은 포탑에게 피해를 입으면 후방 지원 스킬에 3초의 재사용 대기시간이 생깁니다.","sanitizedTooltip":"퀸이 발러를 불러 자신을 돕게 합니다. 2초간 정신 집중 후 둘은 하나가 되어 총 이동 속도가 {{ e3 }}% 증가합니다. 공격하거나 후방 지원 스킬을 다시 사용하면 공중 강습을 사용하여 주변의 적을 공격합니다. 적 챔피언 혹은 포탑에게 피해를 입으면 후방 지원 스킬에 3초의 재사용 대기시간이 생깁니다.","leveltip":{"label":["이동 속도 증가","마나 소모량"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ e7 }} -> {{ e7NL }}"]},"image":{"full":"QuinnR.png","sprite":"spell9.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,50,0],"costBurn":"100/50/0","cooldown":[3,3,3],"cooldownBurn":"3","effect":[null,[0,0,0],[0,0,0],[70,100,130],[25000,25000,25000],[0,0,0],[8,8,8],[100,50,0],[0.4,0.4,0.4],[0,0,0],[0,0,0]],"effectBurn":["","0","0","70/100/130","25000","0","8","100/50/0","0.4","0","0"],"range":[700,700,700],"rangeBurn":"700","key":"QuinnR"}],"passive":{"name":"매사냥","description":"발러가 주기적으로 적에게 <font color='#FFF673'>취약</font> 표식을 남깁니다. <font color='#FFF673'>취약</font>해진 대상에 대한 퀸의 첫 번째 기본 공격은 추가 물리 피해를 입힙니다.","sanitizedDescription":"발러가 주기적으로 적에게 취약 표식을 남깁니다. 취약해진 대상에 대한 퀸의 첫 번째 기본 공격은 추가 물리 피해를 입힙니다.","image":{"full":"Quinn_Passive.png","sprite":"passive2.png","group":"passive","x":240,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Quinn","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1042,"count":1},{"id":1051,"count":1},{"id":3086,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3086,"count":1},{"id":3044,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":1038,"count":1},{"id":1037,"count":1},{"id":3031,"count":1}]}]},{"champion":"Quinn","title":"QuinnARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3085,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Quinn","title":"QuinnCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":3134,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3147,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Quinn","title":"QuinnFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3087,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3156,"count":1},{"id":3026,"count":1},{"id":3153,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Quinn","title":"QuinnKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3085,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3102,"count":1},{"id":3812,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Quinn","title":"QuinnSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3147,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3156,"count":1}]}]},{"champion":"Quinn","title":"QuinnSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":3134,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3147,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"selective","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3156,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":1412,"count":1},{"id":3147,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3046,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3156,"count":1},{"id":3139,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Quinn","title":"QuinnTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3153,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Ekko":{"id":245,"key":"Ekko","name":"에코","title":"시간을 달리는 소년","image":{"full":"Ekko.png","sprite":"champion0.png","group":"champion","x":144,"y":96,"w":48,"h":48},"skins":[{"id":245000,"name":"default","num":0},{"id":245001,"name":"모래폭풍 에코","num":1},{"id":245002,"name":"전학생 에코","num":2},{"id":245003,"name":"프로젝트: 에코","num":3},{"id":245011,"name":"SKT T1 에코","num":11}],"lore":"자운 뒷골목 출신의 천재 소년 에코는 언제든 자신에게 유리하게 시간을 조작할 수 있다. 그는 직접 발명한 Z 드라이브를 이용해 다양한 시공간의 무한한 가능성을 탐험하며 완벽한 순간을 포착한다. 누구보다도 자유로운 영혼을 가졌지만 소중한 친구들을 구하기 위해서라면 어떤 위험도 무릅쓴다. 에코를 잘 모르는 사람들은 그가 어떻게 한 번의 시행착오도 없이 매번 완벽하게 불가능한 일을 해내는지 놀라움을 금치 못한다.","blurb":"자운 뒷골목 출신의 천재 소년 에코는 언제든 자신에게 유리하게 시간을 조작할 수 있다. 그는 직접 발명한 Z 드라이브를 이용해 다양한 시공간의 무한한 가능성을 탐험하며 완벽한 순간을 포착한다. 누구보다도 자유로운 영혼을 가졌지만 소중한 친구들을 구하기 위해서라면 어떤 위험도 무릅쓴다. 에코를 잘 모르는 사람들은 그가 어떻게 한 번의 시행착오도 없이 매번 완벽하게 불가능한 일을 해내는지 놀라움을 금치 못한다.","allytips":["- 시공간 붕괴는 탈출기로도 좋지만, 공격적으로도 활용할 수 있는 강력한 스킬입니다. 이 스킬의 피해량을 잘 활용하세요.","- Z 드라이브 공진은 가능한 한 적 챔피언에게 발동시키세요. 이동 속도 상승 효과로 인해 탈출이 쉬워집니다.","- 시간 도약은 에코의 다른 스킬과 연계하기 좋습니다. 이 스킬을 활용해 시간의 톱니바퀴를 두 번 적중시키거나 평행 시간 교차를 터뜨리기 좋은 위치를 잡으세요."],"enemytips":["- 에코는 궁극기가 재사용 대기에 들어가면 현저하게 약해집니다. 에코의 뒤에 남는 자취를 보고 시공간 붕괴를 쓸 수 있는지 판단하세요.","- 에코의 기절 지대는 3초간 충전한 뒤 작동됩니다. 어디에 설치될 지, 스킬을 시전할 때 생기는 이미지를 잘 보세요.","- 시간의 톱니바퀴는 두 번째 맞을 때 첫 번째보다 더 큰 피해를 입습니다. 잘 보고 피하세요."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":5,"defense":3,"magic":7,"difficulty":8},"stats":{"armor":32,"armorperlevel":3,"attackdamage":55,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":3.3,"crit":0,"critperlevel":0,"hp":585,"hpperlevel":85,"hpregen":9,"hpregenperlevel":0.9,"movespeed":340,"mp":280,"mpperlevel":50,"mpregen":7,"mpregenperlevel":0.8,"spellblock":32,"spellblockperlevel":1.25},"spells":[{"name":"시간의 톱니바퀴","description":"에코가 적 챔피언에게 맞으면 펼쳐져서 시간 왜곡 지대를 만들고, 지대 안에 있는 적 모두를 둔화시키며 피해를 입히는 시간 톱니바퀴를 던집니다. 잠시 후 톱니바퀴는 되감겨 에코에게 돌아오며, 경로 상에 있는 적에게 피해를 입힙니다.","sanitizedDescription":"에코가 적 챔피언에게 맞으면 펼쳐져서 시간 왜곡 지대를 만들고, 지대 안에 있는 적 모두를 둔화시키며 피해를 입히는 시간 톱니바퀴를 던집니다. 잠시 후 톱니바퀴는 되감겨 에코에게 돌아오며, 경로 상에 있는 적에게 피해를 입힙니다.","tooltip":"에코가 장치를 던져 관통하는 적들에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 장치는 처음 맞힌 챔피언에게서 펼쳐져 둔화 역장을 만들며, 안에 있는 모두를 {{ e2 }}%만큼 느리게 만듭니다. 그리고 잠시 후 에코에게 돌아오면서 경로 상에 있는 모든 대상에게 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"에코가 장치를 던져 관통하는 적들에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 장치는 처음 맞힌 챔피언에게서 펼쳐져 둔화 역장을 만들며, 안에 있는 모두를 {{ e2 }}%만큼 느리게 만듭니다. 그리고 잠시 후 에코에게 돌아오면서 경로 상에 있는 모든 대상에게 {{ e3 }} (+{{ a2 }})의 마법 피해를 입힙니다.","leveltip":{"label":["나갈 때의 피해량","돌아올 때의 피해량","둔화","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EkkoQ.png","sprite":"spell2.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[9,8.5,8,7.5,7],"cooldownBurn":"9/8.5/8/7.5/7","effect":[null,[60,75,90,105,120],[32,39,46,53,60],[40,65,90,115,140],[100,100,100,100,100],[0,0,0,0,0],[165,165,165,165,165],[1.75,1.75,1.75,1.75,1.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/75/90/105/120","32/39/46/53/60","40/65/90/115/140","100","0","165","1.75","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"EkkoQ"},{"name":"평행 시간 교차","description":"에코가 시간의 균열을 열어 몇 초 후에 퍼져나가는 불안정한 특이점을 만들어내며, 이 안에 갇힌 적들을 둔화시킵니다. 에코가 특이점 안에 들어가면 자신은 보호막을 얻으며, 특이점을 폭발시켜 적들의 시간을 멈추며 기절시킵니다.","sanitizedDescription":"에코가 시간의 균열을 열어 몇 초 후에 퍼져나가는 불안정한 특이점을 만들어내며, 이 안에 갇힌 적들을 둔화시킵니다. 에코가 특이점 안에 들어가면 자신은 보호막을 얻으며, 특이점을 폭발시켜 적들의 시간을 멈추며 기절시킵니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 에코의 기본 공격은 체력이 30% 미만인 적에게 잃은 체력의 {{ e3 }}% <span class=\"color99FF99\">(+{{ a2 }}%)</span>에 해당하는 추가 마법 피해를 입힙니다. 미니언과 몬스터에게는 최소 {{ e6 }} / 최대 {{ e5 }}의 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 3초간 지연된 후 에코가 대상 위치에 잠깐 동안 유지되는 시간의 구체를 만들어, 여기에 들어오는 적의 속도를 {{ e0 }}% 둔화시킵니다. 에코가 이 구체 안에 들어가면 구체가 폭발하며, 2초 동안 최대 {{ e4 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 흡수하는 보호막이 생깁니다. 구체 안에 있는 적들은 {{ e2 }}초 동안 기절합니다.","sanitizedTooltip":"기본 지속 효과: 에코의 기본 공격은 체력이 30% 미만인 적에게 잃은 체력의 {{ e3 }}% (+{{ a2 }}%)에 해당하는 추가 마법 피해를 입힙니다. 미니언과 몬스터에게는 최소 {{ e6 }} / 최대 {{ e5 }}의 피해를 입힙니다. 사용 시: 3초간 지연된 후 에코가 대상 위치에 잠깐 동안 유지되는 시간의 구체를 만들어, 여기에 들어오는 적의 속도를 {{ e0 }}% 둔화시킵니다. 에코가 이 구체 안에 들어가면 구체가 폭발하며, 2초 동안 최대 {{ e4 }} (+{{ a1 }})의 피해를 흡수하는 보호막이 생깁니다. 구체 안에 있는 적들은 {{ e2 }}초 동안 기절합니다.","leveltip":{"label":["보호막 체력","재사용 대기시간","마나 소모량"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}<"]},"image":{"full":"EkkoW.png","sprite":"spell2.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[22,20,18,16,14],"cooldownBurn":"22/20/18/16/14","effect":[null,[375,375,375,375,375],[1.75,1.75,1.75,1.75,1.75],[3,3,3,3,3],[80,100,120,140,160],[150,150,150,150,150],[15,15,15,15,15],[1.5,1.5,1.5,1.5,1.5],[3,3,3,3,3],[2,2,2,2,2],[40,40,40,40,40]],"effectBurn":["","375","1.75","3","80/100/120/140/160","150","15","1.5","3","2","40"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.03]},{"key":"a1","link":"spelldamage","coeff":[1.5]}],"range":[1600,1600,1600,1600,1600],"rangeBurn":"1600","key":"EkkoW"},{"name":"시간 도약","description":"에코가 회피하며 굴러 Z 드라이브를 충전합니다. 다음 번 공격은 추가 피해를 입히며 시공간을 왜곡하여 에코가 대상 쪽으로 순간이동합니다.","sanitizedDescription":"에코가 회피하며 굴러 Z 드라이브를 충전합니다. 다음 번 공격은 추가 피해를 입히며 시공간을 왜곡하여 에코가 대상 쪽으로 순간이동합니다.","tooltip":" 에코가 지정한 방향으로 짧은 거리를 도약합니다. 다음 번 공격은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입히고 대상 쪽으로 순간이동합니다.","sanitizedTooltip":"에코가 지정한 방향으로 짧은 거리를 도약합니다. 다음 번 공격은 {{ e1 }} (+{{ a1 }})의 추가 마법 피해를 입히고 대상 쪽으로 순간이동합니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EkkoE.png","sprite":"spell2.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,50,60,70,80],"costBurn":"40/50/60/70/80","cooldown":[9,8.5,8,7.5,7],"cooldownBurn":"9/8.5/8/7.5/7","effect":[null,[40,65,90,115,140],[350,350,350,350,350],[3,3,3,3,3],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/65/90/115/140","350","3","300","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"EkkoE"},{"name":"시공간 붕괴","description":"에코가 시공간을 붕괴시켜 대상으로 지정할 수 없게 되며 더 유리한 지점으로 시간을 되돌립니다. 몇 초 전 아무 때로나 돌아가며, 이 동안 입은 피해의 일부가 회복됩니다. 에코가 착지하는 지역 부근의 적들은 큰 피해를 입습니다.","sanitizedDescription":"에코가 시공간을 붕괴시켜 대상으로 지정할 수 없게 되며 더 유리한 지점으로 시간을 되돌립니다. 몇 초 전 아무 때로나 돌아가며, 이 동안 입은 피해의 일부가 회복됩니다. 에코가 착지하는 지역 부근의 적들은 큰 피해를 입습니다.","tooltip":"에코가 시간을 되돌려 잠시 동안 대상으로 지정할 수 없게 되며 무적 상태가 됩니다. 에코는 4초 전에 있던 지점으로 되돌아가며 착지 시 근처의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 체력을 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span> 회복합니다. 회복량은 이 4초 동안 잃은 체력에 비해 증가하며, 체력의 1%를 잃었을 경우 회복량은 {{ e5 }}% 증가합니다.","sanitizedTooltip":"에코가 시간을 되돌려 잠시 동안 대상으로 지정할 수 없게 되며 무적 상태가 됩니다. 에코는 4초 전에 있던 지점으로 되돌아가며 착지 시 근처의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 체력을 {{ e3 }} (+{{ a2 }}) 회복합니다. 회복량은 이 4초 동안 잃은 체력에 비해 증가하며, 체력의 1%를 잃었을 경우 회복량은 {{ e5 }}% 증가합니다.","leveltip":{"label":["피해량","기본 치유량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"EkkoR.png","sprite":"spell2.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,90,70],"cooldownBurn":"110/90/70","effect":[null,[150,300,450],[20,20,20],[100,150,200],[375,375,375],[3,3,3],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/300/450","20","100/150/200","375","3","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1.5]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[850,850,850],"rangeBurn":"850","key":"EkkoR"}],"passive":{"name":"Z 드라이브 공진","description":"에코의 Z 드라이브는 스킬과 기본 공격에 시간 에너지를 충전해 줍니다. 세 번째 적중 시 추가 피해를 입힙니다. 대상이 챔피언일 경우, 에코의 이동 속도가 빨라집니다.","sanitizedDescription":"에코의 Z 드라이브는 스킬과 기본 공격에 시간 에너지를 충전해 줍니다. 세 번째 적중 시 추가 피해를 입힙니다. 대상이 챔피언일 경우, 에코의 이동 속도가 빨라집니다.","image":{"full":"Ekko_P.png","sprite":"passive0.png","group":"passive","x":144,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Ekko","title":"Beginner","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Ekko","title":"EkkoARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3025,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Ekko","title":"EkkoCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":3802,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3001,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ekko","title":"EkkoFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3742,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2043,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2139,"count":1},{"id":2043,"count":1}]}]},{"champion":"Ekko","title":"EkkoKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3001,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3025,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Ekko","title":"EkkoSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3001,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]}]},{"champion":"Ekko","title":"EkkoSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":3802,"count":1},{"id":1001,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1},{"id":3102,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3100,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3152,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ekko","title":"EkkoTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3100,"count":1},{"id":3116,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2003,"count":3}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1401,"count":1},{"id":3742,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3025,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Nami":{"id":267,"key":"Nami","name":"나미","title":"파도 소환사","image":{"full":"Nami.png","sprite":"champion2.png","group":"champion","x":192,"y":48,"w":48,"h":48},"skins":[{"id":267000,"name":"default","num":0},{"id":267001,"name":"비단인어 나미","num":1},{"id":267002,"name":"강의 정령 나미","num":2},{"id":267003,"name":"바다나미 우르프","num":3},{"id":267007,"name":"깊은 바다 나미","num":7},{"id":267008,"name":"SKT T1 나미","num":8}],"lore":"바다의 바스타야 종족으로 어리고 고집 센 나미는 타곤 인과의 고대의 약속이 깨지자, 마라이 종족 처음으로 파도를 떠나 마른 땅으로 모험을 떠났다. 다른 방도가 없었던 나미는 자신의 종족의 안전을 지켜줄 성스러운 의식을 완수할 임무를 스스로 떠안았다. 새로운 시대의 혼란 속에서 나미는 바다의 힘을 소환하는 파도 소환사의 지팡이를 들고 용기와 결단력으로 불확실한 미래를 마주한다.","blurb":"바다의 바스타야 종족으로 어리고 고집 센 나미는 타곤 인과의 고대의 약속이 깨지자, 마라이 종족 처음으로 파도를 떠나 마른 땅으로 모험을 떠났다. 다른 방도가 없었던 나미는 자신의 종족의 안전을 지켜줄 성스러운 의식을 완수할 임무를 스스로 떠안았다. 새로운 시대의 혼란 속에서 나미는 바다의 힘을 소환하는 파도 소환사의 지팡이를 들고 용기와 결단력으로 불확실한 미래를 마주한다.","allytips":["- 물의 감옥은 재사용 대기시간이 길기 때문에 적절한 타이밍에 사용해야 합니다.","- 적과의 교전 시에 밀물 썰물을 활용하면 전세를 유리하게 이끌 수 있습니다.","- 나미의 궁극기는 멀리 있는 적에 대한 전투 개시용으로 활용하기에 좋습니다."],"enemytips":["- 물의 감옥은 강력한 스킬이지만 재사용 대기시간도 깁니다. 이 점을 이용해서 물의 감옥 스킬을 사용할 수 없을 때를 노리세요.","- 해일은 사거리가 길지만 천천히 발사되므로, 잘 살피면 피할 수 있습니다.","- 파도 소환사의 축복을 받은 적과는 싸움을 피하세요. 지속 시간이 짧기 때문에 조금만 기다리면 유리해집니다."],"tags":["Support","Mage"],"partype":"마나","info":{"attack":4,"defense":3,"magic":7,"difficulty":5},"stats":{"armor":29,"armorperlevel":4,"attackdamage":51.208,"attackdamageperlevel":3.1,"attackrange":550,"attackspeedoffset":-0.03,"attackspeedperlevel":2.61,"crit":0,"critperlevel":0,"hp":489.32,"hpperlevel":74,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":335,"mp":377.24,"mpperlevel":43,"mpregen":11.5,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"물의 감옥","description":"거대한 물방울을 지정한 위치로 발사하면, 닿은 적에게 피해를 입히고 닿는 순간 기절시킵니다.","sanitizedDescription":"거대한 물방울을 지정한 위치로 발사하면, 닿은 적에게 피해를 입히고 닿는 순간 기절시킵니다.","tooltip":"지정한 위치로 물방울을 보내면, 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.","sanitizedTooltip":"지정한 위치로 물방울을 보내면, 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }} ","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NamiQ.png","sprite":"spell7.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[75,130,185,240,295],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/130/185/240/295","1.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[875,875,875,875,875],"rangeBurn":"875","key":"NamiQ"},{"name":"밀물 썰물","description":"밀려드는 파도를 보내 아군 및 적 챔피언을 번갈아 맞히면서, 아군은 치유하고 적에게는 피해를 입힙니다.","sanitizedDescription":"밀려드는 파도를 보내 아군 및 적 챔피언을 번갈아 맞히면서, 아군은 치유하고 적에게는 피해를 입힙니다.","tooltip":"밀려드는 파도를 보내 아군 및 적 챔피언을 번갈아 맞힙니다.<br /><br /><span class=\"colorCCFF99\">아군을 맞힐 때: </span>{{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>만큼 치유하고, 근처 적 챔피언에게 튕깁니다.<br /><br /><span class=\"colorFF9999\">적을 맞힐 때: </span>{{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 가하고, 근처 아군 챔피언에게 튕깁니다.<br /><br />각 대상에는 한 번만 튕기며, 최대 {{ e2 }}명의 대상에게 튕깁니다. 피해량과 치유량은 한 번 튕길 때마다 <span class=\"color99FF99\">({{ f1 }}%)</span>씩 조정됩니다.","sanitizedTooltip":"밀려드는 파도를 보내 아군 및 적 챔피언을 번갈아 맞힙니다. 아군을 맞힐 때: {{ e3 }} (+{{ a2 }})만큼 치유하고, 근처 적 챔피언에게 튕깁니다. 적을 맞힐 때: {{ e1 }} (+{{ a1 }})의 마법 피해를 가하고, 근처 아군 챔피언에게 튕깁니다. 각 대상에는 한 번만 튕기며, 최대 {{ e2 }}명의 대상에게 튕깁니다. 피해량과 치유량은 한 번 튕길 때마다 ({{ f1 }}%)씩 조정됩니다.","leveltip":{"label":["치유량","공격력","마나 소모량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NamiW.png","sprite":"spell7.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,85,100,115,130],"costBurn":"70/85/100/115/130","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[70,110,150,190,230],[3,3,3,3,3],[65,95,125,155,185],[15,15,15,15,15],[0.075,0.075,0.075,0.075,0.075],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","3","65/95/125/155/185","15","0.08","0","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[725,725,725,725,725],"rangeBurn":"725","key":"NamiW"},{"name":"파도 소환사의 축복","description":"잠시 동안 아군 챔피언들을 강화시켜, 기본 공격 시 추가 마법 피해를 입히고 대상에게 둔화를 걸 수 있게 만듭니다.","sanitizedDescription":"잠시 동안 아군 챔피언들을 강화시켜, 기본 공격 시 추가 마법 피해를 입히고 대상에게 둔화를 걸 수 있게 만듭니다.","tooltip":"아군 챔피언의 다음 기본 공격 {{ e4 }}회를 강화시켜 {{ e3 }}초 동안 {{ e2 }}% <span class=\"color99FF99\">(+{{ a2 }})</span>만큼 둔화시키고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입히게 합니다. 이 효과는 {{ e5 }}초 동안 유지됩니다.","sanitizedTooltip":"아군 챔피언의 다음 기본 공격 {{ e4 }}회를 강화시켜 {{ e3 }}초 동안 {{ e2 }}% (+{{ a2 }})만큼 둔화시키고 {{ e1 }} (+{{ a1 }})의 추가 마법 피해를 입히게 합니다. 이 효과는 {{ e5 }}초 동안 유지됩니다.","leveltip":{"label":["피해량","둔화","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NamiE.png","sprite":"spell7.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,60,65,70,75],"costBurn":"55/60/65/70/75","cooldown":[11,11,11,11,11],"cooldownBurn":"11","effect":[null,[25,40,55,70,85],[15,20,25,30,35],[1,1,1,1,1],[3,3,3,3,3],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","25/40/55/70/85","15/20/25/30/35","1","3","6","0","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.05]},{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"NamiE"},{"name":"해일","description":"적들을 공중으로 띄우고 둔화를 걸면서 피해를 입히는 거대한 해일을 소환합니다. 여기에 맞은 아군은 밀려오는 파도의 효과를 두 배로 받습니다.","sanitizedDescription":"적들을 공중으로 띄우고 둔화를 걸면서 피해를 입히는 거대한 해일을 소환합니다. 여기에 맞은 아군은 밀려오는 파도의 효과를 두 배로 받습니다.","tooltip":"나미가 있는 위치에서 해일을 소환합니다. 해일은 적들을 공중에 띄우며 {{ e4 }}% 둔화를 적용하고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 해일이 이동한 거리가 길수록 둔화 지속 시간도 길어지며, 최소 {{ e3 }}초에서 최장 {{ e5 }}초 지속됩니다.<br /><br />파도에 맞은 아군은 밀려오는 파도의 효과를 두 배로 받습니다.","sanitizedTooltip":"나미가 있는 위치에서 해일을 소환합니다. 해일은 적들을 공중에 띄우며 {{ e4 }}% 둔화를 적용하고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 해일이 이동한 거리가 길수록 둔화 지속 시간도 길어지며, 최소 {{ e3 }}초에서 최장 {{ e5 }}초 지속됩니다. 파도에 맞은 아군은 밀려오는 파도의 효과를 두 배로 받습니다.","leveltip":{"label":["피해량","재사용 대기시간","둔화"],"effect":[" "," {{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e4 }}% -> {{ e4NL }}%"]},"image":{"full":"NamiR.png","sprite":"spell7.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[150,250,350],[0.5,0.5,0.5],[2,2,2],[50,60,70],[4,4,4],[0.002,0.002,0.002],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","0.5","2","50/60/70","4","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[2550,2550,2550],"rangeBurn":"2550","key":"NamiR"}],"passive":{"name":"밀려오는 파도","description":"나미의 스킬에 맞은 아군 챔피언은 짧은 시간 동안 이동 속도가 상승합니다.","sanitizedDescription":"나미의 스킬에 맞은 아군 챔피언은 짧은 시간 동안 이동 속도가 상승합니다.","image":{"full":"NamiPassive.png","sprite":"passive2.png","group":"passive","x":192,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Nami","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Nami","title":"NamiARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3028,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3089,"count":1},{"id":3060,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3069,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nami","title":"NamiCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3107,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nami","title":"namiFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3190,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3041,"count":1},{"id":3165,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nami","title":"NamiKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3096,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3028,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3089,"count":1},{"id":3060,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3069,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nami","title":"NamiSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3107,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]}]},{"champion":"Nami","title":"namiSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3107,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3174,"count":1},{"id":3504,"count":1},{"id":3116,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nami","title":"namiTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3028,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3027,"count":1},{"id":3174,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Swain":{"id":50,"key":"Swain","name":"스웨인","title":"전략의 대가","image":{"full":"Swain.png","sprite":"champion3.png","group":"champion","x":192,"y":48,"w":48,"h":48},"skins":[{"id":50000,"name":"default","num":0},{"id":50001,"name":"북부전선 스웨인","num":1},{"id":50002,"name":"빌지워터 스웨인","num":2},{"id":50003,"name":"폭군 스웨인","num":3}],"lore":"스웨인은 녹서스의 사령관으로, 오로지 힘만을 숭상하는 확장주의 국가의 앞을 내다보는 통치자이다. 스웨인은 아이오니아 전쟁에서 넘어져 다리를 절게 되었지만, 무자비한 결단력으로 녹서스 제국의 통치권을 거머쥐었다. 이제 스웨인은 자신만이 볼 수 있는 다가오는 어둠에 맞서 전투지휘관들을 전선에 내보낸다. 희생과 비밀의 소용돌이 속에서 가장 큰 비밀은 진정한 적이 내부에 있다는 것이다.","blurb":"스웨인은 녹서스의 사령관으로, 오로지 힘만을 숭상하는 확장주의 국가의 앞을 내다보는 통치자이다. 스웨인은 아이오니아 전쟁에서 넘어져 다리를 절게 되었지만, 무자비한 결단력으로 녹서스 제국의 통치권을 거머쥐었다. 이제 스웨인은 자신만이 볼 수 있는 다가오는 어둠에 맞서 전투지휘관들을 전선에 내보낸다. 희생과 비밀의 소용돌이 속에서 가장 큰 비밀은 진정한 적이 내부에 있다는 것이다.","allytips":["- 부동진을 맞히기 어렵다면 노쇠화를 사용하여 적의 움직임을 늦춘 후 사용해 보세요.","- 공격로 대치 단계에서 굶주린 새떼를 사용하려면 적의 상태를 잘 살피십시오. 적이 더 강하면 뒤로 물러나 부동진이나 고통을 사용하는 편이 나을 수도 있습니다."],"enemytips":["- 스웨인은 한 명 정도는 쉽게 무력화시킬 수 있습니다. 스웨인을 습격할 때는 팀원들과 함께 공격하십시오.","- 이동 속도가 높으면 스웨인의 모든 기본 스킬은 쓸모가 없어집니다. 까마귀에서 물러나면 둔화 효과를 제거할 수 있고, 부동진을 피하기도 쉬워지며 고통 스킬을 맞은 상태에서도 집중 공격을 피하기가 쉬워집니다."],"tags":["Mage","Fighter"],"partype":"마나","info":{"attack":2,"defense":6,"magic":9,"difficulty":8},"stats":{"armor":22.72,"armorperlevel":4,"attackdamage":52.04,"attackdamageperlevel":3,"attackrange":500,"attackspeedoffset":0,"attackspeedperlevel":2.11,"crit":0,"critperlevel":0,"hp":528,"hpperlevel":102,"hpregen":7.842,"hpregenperlevel":0.65,"movespeed":335,"mp":374,"mpperlevel":47,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"노쇠화","description":"스웨인이 베아트리스를 풀어 대상 지역에 있는 적을 무력화합니다. 무력화된 대상은 이동 속도가 감소하고 지속적으로 피해를 입습니다.","sanitizedDescription":"스웨인이 베아트리스를 풀어 대상 지역에 있는 적을 무력화합니다. 무력화된 대상은 이동 속도가 감소하고 지속적으로 피해를 입습니다.","tooltip":"베아트리스가 {{ e3 }}초 동안 대상 지역에 머무르며 가장 가까이 있는 적 중 챔피언을 우선적으로 공격해 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 <span class=\"colorFFFFFF\">{{ e2 }}%</span>만큼 둔화시킵니다. 미니언에게는 피해량이 두 배로 늘어 {{ f1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.<br /><br />베아트리스는 공격 대상이 이동하거나 죽으면 다른 대상을 찾습니다. 근처 적 유닛이 <span class=\"colorFFFF00\">고통</span>에 걸릴 경우 새로운 공격 대상이 됩니다.<br /><br />최대 피해량: 미니언 외의 대상 - {{ f2 }} <span class=\"color99FF99\">(+{{ f3 }})</span>, 적 미니언 - {{ f4 }} <span class=\"color99FF99\">(+{{ f5 }})</span>","sanitizedTooltip":"베아트리스가 {{ e3 }}초 동안 대상 지역에 머무르며 가장 가까이 있는 적 중 챔피언을 우선적으로 공격해 초당 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}%만큼 둔화시킵니다. 미니언에게는 피해량이 두 배로 늘어 {{ f1 }} (+{{ a2 }})의 마법 피해를 입힙니다. 베아트리스는 공격 대상이 이동하거나 죽으면 다른 대상을 찾습니다. 근처 적 유닛이 고통에 걸릴 경우 새로운 공격 대상이 됩니다. 최대 피해량: 미니언 외의 대상 - {{ f2 }} (+{{ f3 }}), 적 미니언 - {{ f4 }} (+{{ f5 }})","leveltip":{"label":["초당 피해량","둔화","마나 소모량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SwainDecrepify.png","sprite":"spell10.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[30,48,65,83,100],[20,25,30,35,40],[4,4,4,4,4],[350,350,350,350,350],[0.5,0.5,0.5,0.5,0.5],[0.25,0.25,0.25,0.25,0.25],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/48/65/83/100","20/25/30/35/40","4","350","0.5","0.25","2","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"SwainDecrepify"},{"name":"부동진","description":"스웨인이 목표 지역에 표식을 합니다. 잠시 뒤 강력한 발톱이 나타나 적을 붙잡으며 피해를 입히고 속박합니다.","sanitizedDescription":"스웨인이 목표 지역에 표식을 합니다. 잠시 뒤 강력한 발톱이 나타나 적을 붙잡으며 피해를 입히고 속박합니다.","tooltip":"스웨인이 목표 지점을 표시합니다. 잠시 후 해당 지점에 있는 적 유닛은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 <span class=\"colorFFFFFF\">{{ e2 }}</span>초 동안 속박됩니다.","sanitizedTooltip":"스웨인이 목표 지점을 표시합니다. 잠시 후 해당 지점에 있는 적 유닛은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 {{ e2 }}초 동안 속박됩니다.","leveltip":{"label":["피해량","속박 지속 시간","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SwainShadowGrasp.png","sprite":"spell10.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,85,90,95,100],"costBurn":"80/85/90/95/100","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[80,120,160,200,240],[1,1.25,1.5,1.75,2],[0.875,0.875,0.875,0.875,0.875],[0,0,0,0,0],[0.875,0.875,0.875,0.875,0.875],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","1/1.25/1.5/1.75/2","0.88","0","0.88","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"SwainShadowGrasp"},{"name":"고통","description":"스웨인이 대상 적을 괴롭혀 지속적으로 피해를 줍니다. 고통 스킬에 맞은 적은 스웨인으로부터 더 많은 피해를 입고, 노쇠화가 활성화된 동안 베아트리스에게 집중적으로 공격당합니다.","sanitizedDescription":"스웨인이 대상 적을 괴롭혀 지속적으로 피해를 줍니다. 고통 스킬에 맞은 적은 스웨인으로부터 더 많은 피해를 입고, 노쇠화가 활성화된 동안 베아트리스에게 집중적으로 공격당합니다.","tooltip":"스웨인이 대상에게 저주를 걸어 4초에 걸쳐 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 대상에 대한 자신의 피해량을 {{ e2 }}% 늘립니다.","sanitizedTooltip":"스웨인이 대상에게 저주를 걸어 4초에 걸쳐 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 대상에 대한 자신의 피해량을 {{ e2 }}% 늘립니다.","leveltip":{"label":["시간에 따른 기본 피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SwainTorment.png","sprite":"spell10.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,70,75,80,85],"costBurn":"65/70/75/80/85","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[50,80,110,140,170],[20,20,20,20,20],[6,7,8,9,10],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/80/110/140/170","20","6/7/8/9/10","4","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"SwainTorment"},{"name":"굶주린 새떼","description":"스웨인이 짧은 시간 까마귀로 변신하여 적에게 공포를 불러일으킵니다. 변신한 동안 까마귀들이 주변의 적을 최대 다섯 명까지 공격합니다. 각 까마귀는 적에게 피해를 입히며, 스웨인의 체력이 일정량 회복됩니다.","sanitizedDescription":"스웨인이 짧은 시간 까마귀로 변신하여 적에게 공포를 불러일으킵니다. 변신한 동안 까마귀들이 주변의 적을 최대 다섯 명까지 공격합니다. 각 까마귀는 적에게 피해를 입히며, 스웨인의 체력이 일정량 회복됩니다.","tooltip":"<span class=\"colorFF9900\">활성/비활성화: </span>스웨인이 괴물 까마귀로 변신합니다. 활성화 되면 최대 {{ e7 }}마리의 작은 까마귀를 매 초 소환합니다. 작은 까마귀는 근처 적 중 챔피언을 우선적으로 공격합니다. 각 까마귀는 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 챔피언에게 피해를 입히면 {{ e2 }} <span class=\"color99FF99\">(+{{ f9 }})</span>만큼, 미니언과 몬스터에게 피해를 입히면 {{ e9 }} <span class=\"color99FF99\">(+{{ f10 }})</span>만큼 스웨인의 체력이 회복됩니다.<br /><br />까마귀들은 1초간 같은 대상을 공격할 수 없으며, 굶주린 새떼를 유지하는 마나 소모량은 매 초 {{ e8 }}만큼 증가합니다.","sanitizedTooltip":"활성/비활성화: 스웨인이 괴물 까마귀로 변신합니다. 활성화 되면 최대 {{ e7 }}마리의 작은 까마귀를 매 초 소환합니다. 작은 까마귀는 근처 적 중 챔피언을 우선적으로 공격합니다. 각 까마귀는 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 챔피언에게 피해를 입히면 {{ e2 }} (+{{ f9 }})만큼, 미니언과 몬스터에게 피해를 입히면 {{ e9 }} (+{{ f10 }})만큼 스웨인의 체력이 회복됩니다. 까마귀들은 1초간 같은 대상을 공격할 수 없으며, 굶주린 새떼를 유지하는 마나 소모량은 매 초 {{ e8 }}만큼 증가합니다.","leveltip":{"label":["피해량","챔피언에게서 얻은 치유량","미니언 및 몬스터에게서 얻은 치유량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e9 }} -> {{ e9NL }}"]},"image":{"full":"SwainMetamorphism.png","sprite":"spell10.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"초기 초당 마나 소모량 {{ cost }}","maxrank":3,"cost":[25,25,25],"costBurn":"25","cooldown":[20,20,20],"cooldownBurn":"20","effect":[null,[50,70,90],[20,30,40],[0.12,0.12,0.12],[25,25,25],[2,2,2],[25000,25000,25000],[5,5,5],[5,5,5],[8,11,14],[0.03,0.03,0.03]],"effectBurn":["","50/70/90","20/30/40","0.12","25","2","25000","5","5","8/11/14","0.03"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[625,625,625],"rangeBurn":"625","key":"SwainMetamorphism"}],"passive":{"name":"시체 흡수","description":"스웨인은 유닛을 하나 처치할 때마다 마나를 회복합니다. 마나 회복량은 레벨이 높아질수록 증가합니다.","sanitizedDescription":"스웨인은 유닛을 하나 처치할 때마다 마나를 회복합니다. 마나 회복량은 레벨이 높아질수록 증가합니다.","image":{"full":"SwainCarrionRenewal.png","sprite":"passive3.png","group":"passive","x":192,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Swain","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]}]},{"champion":"Swain","title":"SwainARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3020,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3089,"count":1},{"id":3102,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Swain","title":"SwainCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3145,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3030,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Swain","title":"SwainFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3027,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3165,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Swain","title":"SwainKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3065,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Swain","title":"SwainSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3030,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3065,"count":1}]}]},{"champion":"Swain","title":"SwainSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3145,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3030,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Swain","title":"SwainTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3030,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Taric":{"id":44,"key":"Taric","name":"타릭","title":"발로란의 방패","image":{"full":"Taric.png","sprite":"champion3.png","group":"champion","x":432,"y":48,"w":48,"h":48},"skins":[{"id":44000,"name":"default","num":0},{"id":44001,"name":"에메랄드 타릭","num":1},{"id":44002,"name":"다섯번째 성기사 타릭","num":2},{"id":44003,"name":"혈석 타릭","num":3},{"id":44004,"name":"수영장 파티 타릭","num":4}],"lore":"타릭은 초월적인 힘으로 룬테라의 생명과 사랑, 아름다움을 수호하는 수호자의 성위이다. 고국 데마시아에서 직무태만죄를 범하고 수치스럽게 추방당한 타릭은 속죄를 위해 타곤 산을 올랐고, 이 산 정상에서 하늘의 별들에게 더 큰 소명을 부여받았다. 고대 타곤의 신비한 힘을 가득 받아 끔찍한 공허의 침식으로부터 밤낮없이 세계를 지키는 발로란의 방패가 된 것이다.","blurb":"타릭은 초월적인 힘으로 룬테라의 생명과 사랑, 아름다움을 수호하는 수호자의 성위이다. 고국 데마시아에서 직무태만죄를 범하고 수치스럽게 추방당한 타릭은 속죄를 위해 타곤 산을 올랐고, 이 산 정상에서 하늘의 별들에게 더 큰 소명을 부여받았다. 고대 타곤의 신비한 힘을 가득 받아 끔찍한 공허의 침식으로부터 밤낮없이 세계를 지키는 발로란의 방패가 된 것이다.","allytips":["- 담대함에 재사용 대기시간 감소 효과가 있기 때문에 타릭에게는 얼어붙은 심장, 얼어붙은 건틀릿, 정령의 형상 등의 아이템이 특히 좋습니다.","- 별빛 손길은 충전량이 낮을 때 사용하면 마나 효율이 좋지 않지만 기본 지속 효과 덕분에 기본 공격이 강화되어 유용할 수 있습니다.","- 우주의 광휘를 마지막 순간까지 아끼다가 아군이 처치당할 수도 있으니 팀 전투가 시작되기 직전에 미리 사용하는 편이 낫습니다."],"enemytips":["- 타릭의 궁극기 우주의 광휘는 사용 후 실제 효과가 발동되기까지 시간이 조금 걸립니다. 타릭이 궁극기를 사용했다면 아예 일단 전투를 피하거나, 효과가 발동되기 전에 킬을 올리거나 둘 중 하나를 선택해야 합니다.","- 타릭은 기본 지속 효과인 담대함 덕분에 스킬의 재사용 대기시간을 단축시킬 수 있습니다. 대규모 전투에서는 카이팅으로 대응하고, 공격로 전투에서는 타릭이 미니언을 처치하러 다가올 때를 노려보세요."],"tags":["Support","Fighter"],"partype":"마나","info":{"attack":4,"defense":8,"magic":5,"difficulty":3},"stats":{"armor":40,"armorperlevel":3.4,"attackdamage":55,"attackdamageperlevel":3.5,"attackrange":150,"attackspeedoffset":0,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":575,"hpperlevel":90,"hpregen":6,"hpregenperlevel":0.5,"movespeed":340,"mp":300,"mpperlevel":60,"mpregen":8.5,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"별빛 손길","description":"충전량을 모두 소모해 근처의 아군 챔피언을 회복시킵니다.<br><br>담대함으로 강화된 기본 공격 시 충전 대기시간이 줄어듭니다.","sanitizedDescription":"충전량을 모두 소모해 근처의 아군 챔피언을 회복시킵니다. 담대함으로 강화된 기본 공격 시 충전 대기시간이 줄어듭니다.","tooltip":"충전량을 모두 소모해 근처 아군 챔피언 모두의 체력을 충전 1회 당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorFF3300\">(+{{ f1 }})</span> (최대 체력의 {{ e2 }}%)만큼 회복시킵니다. 최대치까지 충전 시 체력이 최대 {{ e5 }} <span class=\"color99FF99\">(+{{ f3 }})</span> <span class=\"colorFF3300\">(+{{ f2 }})</span>만큼 회복됩니다.<br />최대 충전량: {{ e6 }}<br /><br />담대함으로 강화된 공격 시 별빛 손길이 1회 충전됩니다.","sanitizedTooltip":"충전량을 모두 소모해 근처 아군 챔피언 모두의 체력을 충전 1회 당 {{ e1 }} (+{{ a1 }}) (+{{ f1 }}) (최대 체력의 {{ e2 }}%)만큼 회복시킵니다. 최대치까지 충전 시 체력이 최대 {{ e5 }} (+{{ f3 }}) (+{{ f2 }})만큼 회복됩니다. 최대 충전량: {{ e6 }} 담대함으로 강화된 공격 시 별빛 손길이 1회 충전됩니다.","leveltip":{"label":["최대 충전량","최대 회복량","마나 소모량"],"effect":["{{ e6 }} -> {{ e6NL }}","{{ e5 }} -> {{ e5NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TaricQ.png","sprite":"spell11.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}, 현재 충전량","maxrank":5,"cost":[70,80,90,100,110],"costType":", 현재 충전량","costBurn":"70/80/90/100/110","cooldown":[3,3,3,3,3],"cooldownBurn":"3","effect":[null,[30,30,30,30,30],[1,1,1,1,1],[0.2,0.4,0.6,0.8,1],[1,2,3,4,5],[30,60,90,120,150],[1,2,3,4,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30","1","0.2/0.4/0.6/0.8/1","1/2/3/4/5","30/60/90/120/150","1/2/3/4/5","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"TaricQ"},{"name":"수호의 고리","description":"수호의 고리로 연결된 아군 챔피언과 타릭의 방어력이 상승합니다.<br><br>연결된 아군 챔피언이 타릭 근처에 있는 동안 수호의 고리를 사용하면 연결된 아군에게 보호막을 씌웁니다. 타릭이 스킬을 사용하면 연결된 아군도 같은 스킬을 사용합니다.","sanitizedDescription":"수호의 고리로 연결된 아군 챔피언과 타릭의 방어력이 상승합니다. 연결된 아군 챔피언이 타릭 근처에 있는 동안 수호의 고리를 사용하면 연결된 아군에게 보호막을 씌웁니다. 타릭이 스킬을 사용하면 연결된 아군도 같은 스킬을 사용합니다.","tooltip":"타릭이 스킬을 사용하면 수호의 고리로 연결된 근처의 아군도 같은 스킬을 사용합니다.<br /><br /><span class=\"colorFF9900\">기본 지속 효과: </span>방어력이 <span class=\"colorFFFF00\">{{ f1 }}</span> (타릭 방어력의 {{ e1 }}%)만큼 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>수호의 고리로 아군을 축복해 {{ e3 }}초 동안 해당 아군 최대 체력의 {{ e2 }}%에 해당하는 피해를 흡수하는 보호막을 씌웁니다. 수호의 고리는 다른 아군에게 사용되기 전까지 유지됩니다.","sanitizedTooltip":"타릭이 스킬을 사용하면 수호의 고리로 연결된 근처의 아군도 같은 스킬을 사용합니다. 기본 지속 효과: 방어력이 {{ f1 }} (타릭 방어력의 {{ e1 }}%)만큼 증가합니다. 사용 시: 수호의 고리로 아군을 축복해 {{ e3 }}초 동안 해당 아군 최대 체력의 {{ e2 }}%에 해당하는 피해를 흡수하는 보호막을 씌웁니다. 수호의 고리는 다른 아군에게 사용되기 전까지 유지됩니다.","leveltip":{"label":["기본 방어력","보호막 계수 "],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"TaricW.png","sprite":"spell11.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[10,12.5,15,17.5,20],[8,9,10,11,12],[2.5,2.5,2.5,2.5,2.5],[1000,1000,1000,1000,1000],[1300,1300,1300,1300,1300],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/12.5/15/17.5/20","8/9/10/11/12","2.5","1000","1300","0","0","0","0","0"],"range":[800,800,800,800,800],"rangeBurn":"800","key":"TaricW"},{"name":"황홀한 강타","description":"타릭이 천상의 별빛을 준비해 잠시 후 적에게 마법 피해를 입히고 기절시킵니다.","sanitizedDescription":"타릭이 천상의 별빛을 준비해 잠시 후 적에게 마법 피해를 입히고 기절시킵니다.","tooltip":"천상의 별빛을 준비해 {{ e3 }}초 후 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorFFFF00\">(+{{ f1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.","sanitizedTooltip":"천상의 별빛을 준비해 {{ e3 }}초 후 적에게 {{ e1 }} (+{{ a1 }}) (+{{ f1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TaricE.png","sprite":"spell11.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[17,16,15,14,13],"cooldownBurn":"17/16/15/14/13","effect":[null,[105,150,195,240,285],[1.25,1.25,1.25,1.25,1.25],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","105/150/195/240/285","1.25","1","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[610,610,610,610,610],"rangeBurn":"610","key":"TaricE"},{"name":"우주의 광휘","description":"잠시 후 근처의 아군 챔피언을 모두 우주의 에너지로 감싸 잠깐 동안 무적 상태로 만듭니다.","sanitizedDescription":"잠시 후 근처의 아군 챔피언을 모두 우주의 에너지로 감싸 잠깐 동안 무적 상태로 만듭니다.","tooltip":"사용 시 {{ e4 }}초 후 근처의 아군 챔피언을 모두 우주의 에너지로 감싸 {{ e5 }}초 동안 무적 상태로 만듭니다.","sanitizedTooltip":"사용 시 {{ e4 }}초 후 근처의 아군 챔피언을 모두 우주의 에너지로 감싸 {{ e5 }}초 동안 무적 상태로 만듭니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TaricR.png","sprite":"spell11.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[160,130,100],"cooldownBurn":"160/130/100","effect":[null,[150,275,400],[25,35,45],[2.5,2.5,2.5],[2.5,2.5,2.5],[2.5,2.5,2.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/275/400","25/35/45","2.5","2.5","2.5","0","0","0","0","0"],"range":[400,400,400],"rangeBurn":"400","key":"TaricR"}],"passive":{"name":"담대함","description":"타릭이 스킬을 사용하면 다음 2회의 기본 공격에 추가 마법 피해가 적용되고 공격 속도가 빨라지며 스킬의 재사용 대기시간이 단축됩니다.","sanitizedDescription":"타릭이 스킬을 사용하면 다음 2회의 기본 공격에 추가 마법 피해가 적용되고 공격 속도가 빨라지며 스킬의 재사용 대기시간이 단축됩니다.","image":{"full":"Taric_Passive.png","sprite":"passive3.png","group":"passive","x":432,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Taric","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":2049,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3097,"count":1},{"id":3067,"count":1},{"id":3401,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3190,"count":1},{"id":3050,"count":1},{"id":3222,"count":1}]}]},{"champion":"Taric","title":"TaricARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3190,"count":1},{"id":3047,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3025,"count":1},{"id":3107,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Taric","title":"TaricCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3024,"count":1},{"id":3341,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Taric","title":"TaricFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1},{"id":3302,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":2045,"count":1},{"id":3024,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3050,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3190,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Taric","title":"TaricKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3047,"count":1},{"id":3190,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3025,"count":1},{"id":3174,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3110,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Taric","title":"TaricSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3024,"count":1},{"id":3341,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]}]},{"champion":"Taric","title":"TaricSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3111,"count":1},{"id":3364,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3190,"count":1},{"id":3050,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3109,"count":1},{"id":3110,"count":1},{"id":3025,"count":1},{"id":3143,"count":1},{"id":3065,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3111,"count":1},{"id":3364,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Taric","title":"TaricTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3024,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3050,"count":1},{"id":3068,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3075,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Syndra":{"id":134,"key":"Syndra","name":"신드라","title":"어둠의 여제","image":{"full":"Syndra.png","sprite":"champion3.png","group":"champion","x":240,"y":48,"w":48,"h":48},"skins":[{"id":134000,"name":"default","num":0},{"id":134001,"name":"정의의 신드라","num":1},{"id":134002,"name":"아틀란티스 신드라","num":2},{"id":134003,"name":"다이아몬드의 퀸 신드라","num":3},{"id":134004,"name":"눈싸움 여왕 신드라","num":4},{"id":134005,"name":"SKT T1 신드라","num":5},{"id":134006,"name":"별 수호자 신드라","num":6}],"lore":"신드라는 무시무시한 어둠의 마법사로 강대한 힘을 다룰 수 있다. 아이오니아 출신인 그녀는 어렸을 때부터 타고난 마법을 함부로 사용하여 마을의 장로들을 아연실색하게 만들었다. 근심이 끊이지 않았던 장로들은 신드라가 엄격한 통제하에 훈련되도록 멀리 보냈으나, 그녀는 곧 스승을 뛰어넘었고, 그가 자신의 힘을 제한했다는 사실을 알게 되자 배신감에 몸서리쳤다. 이런 비겁함에 역겨움을 느낀 신드라는 그녀의 스승을 제거했다. 이제 신드라는 마음껏 어둠의 구체를 휘두르며 감히 그녀의 잠재력에 족쇄를 채우려 한 모두를 파멸로 몰아넣고자 한다.","blurb":"신드라는 무시무시한 어둠의 마법사로 강대한 힘을 다룰 수 있다. 아이오니아 출신인 그녀는 어렸을 때부터 타고난 마법을 함부로 사용하여 마을의 장로들을 아연실색하게 만들었다. 근심이 끊이지 않았던 장로들은 신드라가 엄격한 통제하에 훈련되도록 멀리 보냈으나, 그녀는 곧 스승을 뛰어넘었고, 그가 자신의 힘을 제한했다는 사실을 알게 되자 배신감에 몸서리쳤다. 이런 비겁함에 역겨움을 느낀 신드라는 그녀의 스승을 제거했다. 이제 신드라는 마음껏 어둠의 구체를...","allytips":["- 궁극기의 피해량을 극대화하려면 전장에 어둠 구체가 많이 떠 있을 때 사용하세요.","- 의지의 힘으로 적 챔피언을 맞힌 다음에는 어둠 구체를 연계하세요. 이동 속도가 감소되므로 잘 피하지 못할 겁니다.","- 스킬 중 하나는 초기에 5랭크까지 쭉 올리세요. 끝까지 올리면 강력한 추가 효과가 부여됩니다."],"enemytips":["- 신드라를 상대할 때는 스킬 공격을 피할 수 있게끔 신발을 일찍 사는 게 좋습니다.","- 적군 와해는 재사용 대기시간이 깁니다. 신드라가 이 스킬을 사용하고 나면 취약해지니 바로 공격하세요.","- 신드라의 스킬은 끝까지 올리면 추가 효과가 생기고 모양도 달라집니다."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":2,"defense":3,"magic":9,"difficulty":8},"stats":{"armor":24.712,"armorperlevel":3.4,"attackdamage":53.872,"attackdamageperlevel":2.9,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":523,"hpperlevel":90,"hpregen":6.508,"hpregenperlevel":0.6,"movespeed":330,"mp":384,"mpperlevel":60,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"어둠 구체","description":"신드라가 어둠 구체를 만들어내 마법 피해를 가합니다. 구체는 제자리에 유지되며, 신드라의 다른 스킬로 조종할 수도 있습니다.","sanitizedDescription":"신드라가 어둠 구체를 만들어내 마법 피해를 가합니다. 구체는 제자리에 유지되며, 신드라의 다른 스킬로 조종할 수도 있습니다.","tooltip":"어둠의 구체를 소환하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 구체는 <span class=\"colorFFFFFF\">{{ f1 }}</span>초간 유지되며 신드라의 다른 스킬로 움직일 수 있습니다.<br /><br /><span class=\"color99FF99\">이 스킬은 이동하며 사용할 수 있습니다.</span>","sanitizedTooltip":"어둠의 구체를 소환하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 구체는 {{ f1 }}초간 유지되며 신드라의 다른 스킬로 움직일 수 있습니다. 이 스킬은 이동하며 사용할 수 있습니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }} ","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SyndraQ.png","sprite":"spell10.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,50,60,70,80],"costBurn":"40/50/60/70/80","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[50,95,140,185,230],[6,6,6,6,6],[2,2.2,2.4,2.6,2.8],[8,8,8,8,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/95/140/185/230","6","2/2.2/2.4/2.6/2.8","8","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.65]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"SyndraQ"},{"name":"의지의 힘","description":"신드라가 적 미니언 혹은 어둠 구체를 잡아서 던져 마법 피해를 입히고, 적의 이동 속도를 감소시킵니다. ","sanitizedDescription":"신드라가 적 미니언 혹은 어둠 구체를 잡아서 던져 마법 피해를 입히고, 적의 이동 속도를 감소시킵니다.","tooltip":"<span class=\"colorFF9900\">최초 시전 시:</span> 대상 어둠 구체 혹은 적 미니언을 잡습니다. 대상을 지정하지 않은 경우에는 가장 가까이 있는 어둠 구체를 잡습니다.<br /><br /><span class=\"colorFF9900\">두 번째 시전 시:</span> 붙잡은 유닛을 던집니다. 부딪친 적들은 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 {{ f2 }}초 동안 <span class=\"colorFFFFFF\">{{ e1 }}%</span>의 둔화 효과를 받습니다.<br /><br /><span class=\"color99FF99\">이 스킬은 이동하며 사용할 수 있습니다.</span>","sanitizedTooltip":"최초 시전 시: 대상 어둠 구체 혹은 적 미니언을 잡습니다. 대상을 지정하지 않은 경우에는 가장 가까이 있는 어둠 구체를 잡습니다. 두 번째 시전 시: 붙잡은 유닛을 던집니다. 부딪친 적들은 {{ e2 }} (+{{ a1 }})의 마법 피해를 입고 {{ f2 }}초 동안 {{ e1 }}%의 둔화 효과를 받습니다. 이 스킬은 이동하며 사용할 수 있습니다.","leveltip":{"label":["피해량","마나 소모량","둔화","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }} ","{{ cost }} -> {{ costNL }} ","{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SyndraW.png","sprite":"spell11.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[25,30,35,40,45],[70,110,150,190,230],[12,11,10,9,8],[1.5,1.5,1.5,1.5,1.5],[400,400,400,400,400],[0.2,0.2,0.2,0.2,0.2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","25/30/35/40/45","70/110/150/190/230","12/11/10/9/8","1.5","400","0.2","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"f2","link":"@text","coeff":[1.5]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"SyndraW"},{"name":"적군 와해","description":"신드라가 어둠 구체와 적들을 뒤로 밀어내며 마법 피해를 입힙니다. 어둠 구체에 맞은 적은 기절합니다.","sanitizedDescription":"신드라가 어둠 구체와 적들을 뒤로 밀어내며 마법 피해를 입힙니다. 어둠 구체에 맞은 적은 기절합니다.","tooltip":"어둠 구체와 적들을 뒤로 밀어내며, 충돌하는 적에게까지 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />뒤로 밀려난 어둠 구체는 경로에 있는 적을 {{ e2 }}초 동안 기절시킵니다.","sanitizedTooltip":"어둠 구체와 적들을 뒤로 밀어내며, 충돌하는 적에게까지 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 뒤로 밀려난 어둠 구체는 경로에 있는 적을 {{ e2 }}초 동안 기절시킵니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }} ","{{ cooldown }} -> {{ cooldownNL }} "]},"image":{"full":"SyndraE.png","sprite":"spell11.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[70,115,160,205,250],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","1.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"SyndraE"},{"name":"풀려난 힘","description":"신드라가 적 챔피언 하나에게 어둠 구체를 모두 날려 집중 포격을 가합니다.","sanitizedDescription":"신드라가 적 챔피언 하나에게 어둠 구체를 모두 날려 집중 포격을 가합니다.","tooltip":"신드라가 엄청난 파멸의 힘을 끌어내어 적 챔피언에게 어둠 구체를 보내 마법 피해를 입힙니다. 풀려난 힘은 이전에 생성한 어둠 구체 최대 네 개와 신드라 주위를 도는 어둠 구체 세 개를 함께 조종합니다.<br /><br />구체 하나 당 피해량: {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>.<br />최소 총 피해량: {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>.","sanitizedTooltip":"신드라가 엄청난 파멸의 힘을 끌어내어 적 챔피언에게 어둠 구체를 보내 마법 피해를 입힙니다. 풀려난 힘은 이전에 생성한 어둠 구체 최대 네 개와 신드라 주위를 도는 어둠 구체 세 개를 함께 조종합니다. 구체 하나 당 피해량: {{ e1 }} (+{{ a1 }}). 최소 총 피해량: {{ e2 }} (+{{ a2 }}).","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }} ","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SyndraR.png","sprite":"spell11.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[90,135,180],[270,405,540],[7,7,7],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","90/135/180","270/405/540","7","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[675,675,675],"rangeBurn":"675","key":"SyndraR"}],"passive":{"name":"초월","description":"스킬을 끝까지 올리면 추가 효과가 부여됩니다.<br><br><font color='#FF9900'>어둠 구체</font>: 구체의 지속 시간이 8초로 늘어납니다.<br><font color='#FF9900'>의지의 힘</font>: 20%의 추가 고정 피해를 입힙니다.<br><font color='#FF9900'>적군 와해</font>: 스킬 적용 범위 폭이 50% 증가합니다.<br><font color='#FF9900'>풀려난 힘</font>: 사거리가 75 증가합니다.","sanitizedDescription":"스킬을 끝까지 올리면 추가 효과가 부여됩니다. 어둠 구체: 구체의 지속 시간이 8초로 늘어납니다. 의지의 힘: 20%의 추가 고정 피해를 입힙니다. 적군 와해: 스킬 적용 범위 폭이 50% 증가합니다. 풀려난 힘: 사거리가 75 증가합니다.","image":{"full":"SyndraPassive.png","sprite":"passive3.png","group":"passive","x":240,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Syndra","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Syndra","title":"SyndraARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3802,"count":1},{"id":1001,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Syndra","title":"SyndraCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Syndra","title":"SyndraFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3028,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3174,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Syndra","title":"SyndraKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":2031,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Syndra","title":"SyndraSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Syndra","title":"SyndraSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1}]}]},{"champion":"Syndra","title":"SyndraSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Syndra","title":"SyndraTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Rakan":{"id":497,"key":"Rakan","name":"라칸","title":"매혹하는 자","image":{"full":"Rakan.png","sprite":"champion2.png","group":"champion","x":288,"y":96,"w":48,"h":48},"skins":[{"id":497000,"name":"default","num":0},{"id":497001,"name":"여명 우주 라칸","num":1}],"lore":"활달하고 변덕스러우면서도 거부하기 힘든 매혹을 발산하는 라칸은 악명 높은 바스타야 말썽꾼이자 로틀란 부족 역사상 가장 훌륭한 전장의 춤꾼이다. 아이오니아 고원 지대에 사는 사람들에게 라칸이라는 이름은 꽤 오래 전부터 시끌벅적한 축제, 흥이 넘치는 파티, 기존의 규칙을 거부하는 음악과 동일시되고 있다. 하지만 타고난 춤꾼이자 활력 넘치는 방랑자인 라칸이 저항 운동을 하는 자야와 동반자 관계가 되었으며, 자야의 대의에 헌신하고 있다는 사실을 아는 사람은 극히 드물다.","blurb":"활달하고 변덕스러우면서도 거부하기 힘든 매혹을 발산하는 라칸은 악명 높은 바스타야 말썽꾼이자 로틀란 부족 역사상 가장 훌륭한 전장의 춤꾼이다. 아이오니아 고원 지대에 사는 사람들에게 라칸이라는 이름은 꽤 오래 전부터 시끌벅적한 축제, 흥이 넘치는 파티, 기존의 규칙을 거부하는 음악과 동일시되고 있다. 하지만 타고난 춤꾼이자 활력 넘치는 방랑자인 라칸이 저항 운동을 하는 자야와 동반자 관계가 되었으며, 자야의 대의에 헌신하고 있다는 사실을 아는 사람은...","allytips":["- 라칸은 모든 스킬을 잘 활용하려면 근처에 아군이 함께 있어야 합니다.","- 라칸은 이동 속도가 증가하면 도약 속도도 증가합니다. 적을 깜짝 놀라게 해 보세요.","- 위험해 보이는 상황도 충분히 즐길 수 있는 게 라칸입니다."],"enemytips":["- 라칸의 이동 스킬은 모두 착지 지점을 미리 확인할 수 있으니 이 점을 활용하세요.","- 라칸을 상대할 때는 빠르게 군중 제어 스킬을 사용할 수 있는 챔피언이 특히 유리합니다.","- 라칸은 주위에 아군이 없으면 기동력이 크게 떨어집니다. 혼자 있을 때를 노리세요."],"tags":["Support"],"partype":"마나","info":{"attack":2,"defense":4,"magic":8,"difficulty":5},"stats":{"armor":36,"armorperlevel":3.9,"attackdamage":70,"attackdamageperlevel":3.5,"attackrange":300,"attackspeedoffset":0,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":510,"hpperlevel":85,"hpregen":5,"hpregenperlevel":0.5,"movespeed":335,"mp":315,"mpperlevel":50,"mpregen":8.75,"mpregenperlevel":0.5,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"빛나는 깃털","description":"마법이 깃든 깃털을 던져 마법 피해를 입힙니다. 챔피언이나 에픽 몬스터에게 깃털을 맞히면 라칸 주변 아군의 체력을 회복시킬 수 있습니다.","sanitizedDescription":"마법이 깃든 깃털을 던져 마법 피해를 입힙니다. 챔피언이나 에픽 몬스터에게 깃털을 맞히면 라칸 주변 아군의 체력을 회복시킬 수 있습니다.","tooltip":"마법이 깃든 깃털을 던져 처음 적중한 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />챔피언 또는 에픽 몬스터를 맞힐 경우 {{ e4 }}초 뒤 라칸과 주변 아군의 체력이 <span class=\"colorFFFFFF\">{{ f1 }}</span> <span class=\"color99FF99\">(+{{ a2 }})</span>만큼 회복됩니다. 라칸이 아군에게 닿으면 회복 효과가 즉시 발동됩니다.","sanitizedTooltip":"마법이 깃든 깃털을 던져 처음 적중한 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 챔피언 또는 에픽 몬스터를 맞힐 경우 {{ e4 }}초 뒤 라칸과 주변 아군의 체력이 {{ f1 }} (+{{ a2 }})만큼 회복됩니다. 라칸이 아군에게 닿으면 회복 효과가 즉시 발동됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f3 }} -> {{ f2 }}"]},"image":{"full":"RakanQ.png","sprite":"spell9.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[70,115,160,205,250],[15,15,15,15,15],[7.5,7.5,7.5,7.5,7.5],[3,3,3,3,3],[12,10.5,9,7.5,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","15","7.5","3","12/10.5/9/7.5/6","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.7]}],"range":[850,850,850,850,850],"rangeBurn":"850","key":"RakanQ"},{"name":"화려한 등장","description":"목표 지점으로 도약해 착지 시 근처의 적을 모두 공중으로 띄워올립니다.","sanitizedDescription":"목표 지점으로 도약해 착지 시 근처의 적을 모두 공중으로 띄워올립니다.","tooltip":"라칸이 목표 지점으로 도약합니다. 착지 후 공중으로 날아 오르며, 주변 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 공중으로 띄워올립니다.","sanitizedTooltip":"라칸이 목표 지점으로 도약합니다. 착지 후 공중으로 날아 오르며, 주변 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 공중으로 띄워올립니다.","leveltip":{"label":["피해량","재사용 대기시간","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"RakanW.png","sprite":"spell9.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[18,16.5,15,13.5,12],"cooldownBurn":"18/16.5/15/13.5/12","effect":[null,[70,115,160,205,250],[2050,2050,2050,2050,2050],[1,1,1,1,1],[0.3,0.3,0.3,0.3,0.3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","2050","1","0.3","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"RakanW"},{"name":"전쟁무도","description":"아군 챔피언에게로 도약해 보호막을 씌웁니다. 몇 초 안에 소모값 없이 다시 사용할 수 있습니다.","sanitizedDescription":"아군 챔피언에게로 도약해 보호막을 씌웁니다. 몇 초 안에 소모값 없이 다시 사용할 수 있습니다.","tooltip":"아군 챔피언에게 도약해 {{ e3 }}초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 흡수하는 보호막을 씌웁니다.<br /><br />{{ e2 }}초 안에 다시 한 번 사용할 수 있으며, 이 경우 마나가 소모되지 않습니다.<br /><br /><span class=\"colore5c100\">자야에게 사용할 경우 전쟁무도의 사거리가 늘어납니다.</span></i>","sanitizedTooltip":"아군 챔피언에게 도약해 {{ e3 }}초 동안 {{ e1 }} (+{{ a1 }})의 피해를 흡수하는 보호막을 씌웁니다. {{ e2 }}초 안에 다시 한 번 사용할 수 있으며, 이 경우 마나가 소모되지 않습니다. 자야에게 사용할 경우 전쟁무도의 사거리가 늘어납니다.","leveltip":{"label":["보호막 흡수량","재사용 대기시간","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f2 }} -> {{ f6 }}","{{ e5 }} -> {{ e5NL }}"]},"image":{"full":"RakanE.png","sprite":"spell9.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[50,75,100,125,150],[5,5,5,5,5],[3,3,3,3,3],[20,18,16,14,12],[60,70,80,90,100],[600,600,600,600,600],[1000,1000,1000,1000,1000],[1150,1150,1150,1150,1150],[1250,1250,1250,1250,1250],[0,0,0,0,0]],"effectBurn":["","50/75/100/125/150","5","3","20/18/16/14/12","60/70/80/90/100","600","1000","1150","1250","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"RakanE"},{"name":"매혹의 질주","description":"이동 속도가 증가하며 닿은 적을 모두 매혹하고 마법 피해를 입힙니다.","sanitizedDescription":"이동 속도가 증가하며 닿은 적을 모두 매혹하고 마법 피해를 입힙니다.","tooltip":"{{ e2 }}초 동안 이동 속도가 {{ e5 }}% 증가합니다.<br /><br />적에게 닿으면 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 매혹합니다. 매혹 효과는 한 챔피언당 한 번씩만 적용됩니다. 라칸이 처음으로 챔피언에게 닿으면 이동 속도가 {{ e6 }}% 빨라졌다가 점차 정상으로 돌아옵니다.","sanitizedTooltip":"{{ e2 }}초 동안 이동 속도가 {{ e5 }}% 증가합니다. 적에게 닿으면 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 매혹합니다. 매혹 효과는 한 챔피언당 한 번씩만 적용됩니다. 라칸이 처음으로 챔피언에게 닿으면 이동 속도가 {{ e6 }}% 빨라졌다가 점차 정상으로 돌아옵니다.","leveltip":{"label":["매혹 지속시간","피해량","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RakanR.png","sprite":"spell9.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[100,200,300],[4,4,4],[1,1.25,1.5],[0.25,0.25,0.25],[50,50,50],[150,150,150],[150,150,150],[120,100,80],[0,0,0],[0,0,0]],"effectBurn":["","100/200/300","4","1/1.25/1.5","0.25","50","150","150","120/100/80","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[200,200,200],"rangeBurn":"200","key":"RakanR"}],"passive":{"name":"요술 망토","description":"라칸에게 주기적으로 보호막이 생성됩니다.","sanitizedDescription":"라칸에게 주기적으로 보호막이 생성됩니다.","image":{"full":"Rakan_P.png","sprite":"passive2.png","group":"passive","x":288,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Rakan","title":"Beginner","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":2049,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3096,"count":1},{"id":2053,"count":1},{"id":3069,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3800,"count":1},{"id":3504,"count":1},{"id":3050,"count":1}]}]},{"champion":"Rakan","title":"RakanARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3107,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3504,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rakan","title":"RakanCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3096,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3069,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3109,"count":1},{"id":3504,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3050,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rakan","title":"RakanKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3107,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3504,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rakan","title":"RakanSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3069,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3109,"count":1},{"id":3504,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3050,"count":1},{"id":3102,"count":1}]}]},{"champion":"Rakan","title":"RakanSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3096,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3069,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3109,"count":1},{"id":3504,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3050,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Rakan","title":"RakanTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3107,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3170,"count":1},{"id":3504,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Skarner":{"id":72,"key":"Skarner","name":"스카너","title":"수정 선봉장","image":{"full":"Skarner.png","sprite":"champion3.png","group":"champion","x":48,"y":48,"w":48,"h":48},"skins":[{"id":72000,"name":"default","num":0},{"id":72001,"name":"사막의 재앙 스카너","num":1},{"id":72002,"name":"대지룬 스카너","num":2},{"id":72003,"name":"전투 기계 알파 스카너","num":3},{"id":72004,"name":"사막의 수호자 스카너","num":4}],"lore":"슈리마의 깊은 계곡에 서식하는 강력한 수정 전갈, 스카너. 고대 브래컨 혈통을 지닌 스카너와 그 동족은 뛰어난 지혜를 갖춘 것으로 잘 알려져 있다. 브래컨의 영혼은 선조대의 모든 사상과 기억이 내재되어 있는 생명 수정과 결합되어 있는데, 이것은 브래컨이 물속뿐만 아니라 육지와도 긴밀한 관계에 놓여 있음을 의미한다. 아주 오래전 어느 날, 이들 브래컨 종족은 생명 수정의 마법이 풀려나가는 것을 막기 위해 동면에 들어갔다. 그런데 최근 들어 발생한 매우 위협적인 사건들로 스카너가 이 깊은 잠에서 깨어났다. 수많은 브래컨 가운데 오직 혼자서만 깨어난 스카너는 위해를 가하는 적들로부터 동족을 보호하기 위해 홀로 외로운 사투를 벌이고 있다.","blurb":"슈리마의 깊은 계곡에 서식하는 강력한 수정 전갈, 스카너. 고대 브래컨 혈통을 지닌 스카너와 그 동족은 뛰어난 지혜를 갖춘 것으로 잘 알려져 있다. 브래컨의 영혼은 선조대의 모든 사상과 기억이 내재되어 있는 생명 수정과 결합되어 있는데, 이것은 브래컨이 물속뿐만 아니라 육지와도 긴밀한 관계에 놓여 있음을 의미한다. 아주 오래전 어느 날, 이들 브래컨 종족은 생명 수정의 마법이 풀려나가는 것을 막기 위해 동면에 들어갔다. 그런데 최근 들어 발생한 매우...","allytips":["- 기본 공격이 수정 베기의 재사용 대기시간을 줄여줍니다. 수정 베기 사이사이에 기본 공격을 추가하면 적에게 피해를 최대한 줄 수 있습니다.","- 중립 목표물이나 대규모 교전이 일어나기 전에 근처 수정 첨탑을 점령해 두면 스카너의 위력이 엄청나게 커집니다.","- 꿰뚫기를 사용하여 아군이 공격할 수 있는 위치로 적을 옮길 수 있습니다."],"enemytips":["- 스카너는 상대에게 접근해야 큰 피해를 줄 수 있으므로 항상 거리를 벌리십시오!","- 스카너의 이동 속도는 수정 외골격이 유지되는 동안 점점 높아지므로 공격하면서 그를 방해하십시오.","- 스카너는 자기 팀의 수정 첨탑 지역 안에 있을 때 특히 위협적입니다. 이런 곳에서 교전이 벌어지기 전에 먼저 수정 첨탑을 점령해 보세요."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":7,"defense":6,"magic":5,"difficulty":5},"stats":{"armor":38,"armorperlevel":3.8,"attackdamage":65,"attackdamageperlevel":4.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.1,"crit":0,"critperlevel":0,"hp":601.28,"hpperlevel":90,"hpregen":8.928,"hpregenperlevel":0.85,"movespeed":335,"mp":272.2,"mpperlevel":40,"mpregen":7.206,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"수정 베기","description":"스카너가 갈퀴를 휘둘러 주위에 있는 모든 적에게 물리 피해를 주고 공격이 명중하면 몇 초 동안 수정 에너지를 충전합니다. 수정 에너지가 충전된 상태로 수정 베기를 하면 명중된 상대에게 추가 마법 피해를 입힙니다.","sanitizedDescription":"스카너가 갈퀴를 휘둘러 주위에 있는 모든 적에게 물리 피해를 주고 공격이 명중하면 몇 초 동안 수정 에너지를 충전합니다. 수정 에너지가 충전된 상태로 수정 베기를 하면 명중된 상대에게 추가 마법 피해를 입힙니다.","tooltip":"스카너가 주위에 있는 모든 적에게 <span class=\"colorFF8C00\">{{ f1 }}</span>의 물리 피해를 입힙니다. 유닛에게 공격이 명중하면 {{ e2 }}초 동안 수정 에너지를 충전합니다.<br /><br />수정 에너지가 충전된 상태로 수정 베기를 하면 명중한 상대에게 <span class=\"colorFF8C00\">{{ f1 }}</span> <span class=\"color99FF99\">(+{{ a1 }})</span>만큼의 추가 마법 피해를 입힙니다.<br /><br />구조물이 아닌 대상에게 기본 공격 시 수정 베기의 재사용 대기시간이 0.25초 줄어듭니다. (챔피언을 공격하면 이 효과가 네 배가 됩니다.)","sanitizedTooltip":"스카너가 주위에 있는 모든 적에게 {{ f1 }}의 물리 피해를 입힙니다. 유닛에게 공격이 명중하면 {{ e2 }}초 동안 수정 에너지를 충전합니다. 수정 에너지가 충전된 상태로 수정 베기를 하면 명중한 상대에게 {{ f1 }} (+{{ a1 }})만큼의 추가 마법 피해를 입힙니다. 구조물이 아닌 대상에게 기본 공격 시 수정 베기의 재사용 대기시간이 0.25초 줄어듭니다. (챔피언을 공격하면 이 효과가 네 배가 됩니다.)","leveltip":{"label":["총 공격력 비율","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SkarnerVirulentSlash.png","sprite":"spell10.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[10,11,12,13,14],"costBurn":"10/11/12/13/14","cooldown":[3.5,3.25,3,2.75,2.5],"cooldownBurn":"3.5/3.25/3/2.75/2.5","effect":[null,[33,36,39,42,45],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","33/36/39/42/45","4","0","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.8]},{"key":"f1","link":"bonusattackdamage","coeff":[0.8]},{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"SkarnerVirulentSlash"},{"name":"수정 외골격","description":"스카너가 방어막을 얻습니다. 방어막이 유지되는 동안 스카너의 이동 속도가 증가합니다.","sanitizedDescription":"스카너가 방어막을 얻습니다. 방어막이 유지되는 동안 스카너의 이동 속도가 증가합니다.","tooltip":"스카너가 {{ e4 }}초 동안 <span class=\"colorCC3300\">{{ f1 }}</span> (스카너 최대 체력의 {{ e1 }}%) <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 막는 방어막을 얻습니다. 방어막이 유지되는 동안 스카너의 이동 속도가 3초에 걸쳐 {{ e5 }}%까지 점차 증가합니다.","sanitizedTooltip":"스카너가 {{ e4 }}초 동안 {{ f1 }} (스카너 최대 체력의 {{ e1 }}%) (+{{ a1 }})의 피해를 막는 방어막을 얻습니다. 방어막이 유지되는 동안 스카너의 이동 속도가 3초에 걸쳐 {{ e5 }}%까지 점차 증가합니다.","leveltip":{"label":["최대 체력 피해량 흡수","이동 속도 상승분","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SkarnerExoskeleton.png","sprite":"spell10.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[13,12.5,12,11.5,11],"cooldownBurn":"13/12.5/12/11.5/11","effect":[null,[10,11,12,13,14],[30,35,40,45,50],[8,10,12,14,16],[6,6,6,6,6],[16,20,24,28,32],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/11/12/13/14","30/35/40/45/50","8/10/12/14/16","6","16/20/24/28/32","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[1,1,1,1,1],"rangeBurn":"1","key":"SkarnerExoskeleton"},{"name":"균열","description":"스카너가 수정 에너지를 소환하여 적에게 피해를 주고 표식을 남기고 속도를 늦춥니다. 이런 적을 짧은 시간 안에 공격하면 기절시킵니다.","sanitizedDescription":"스카너가 수정 에너지를 소환하여 적에게 피해를 주고 표식을 남기고 속도를 늦춥니다. 이런 적을 짧은 시간 안에 공격하면 기절시킵니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 균열과 꿰뚫기 스킬로 적을 제압하면 이동 불가 상태의 지속 시간만큼 <span class=\"colorFFF673\">수정 충전량</span>이 오르고, 같은 수치만큼 재사용 대기시간이 감소합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 스카너가 수정 에너지를 소환하여 여기 맞는 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e7 }}초 동안 {{ e8 }}%만큼 둔화시키며 수정 에너지 폭발의 속도도 감소합니다.<br /><br />균열에 맞은 적들은 {{ e6 }}초 동안 수정 독에 중독되어, 이 대상에 대한 스카너의 다음 기본 공격은 {{ e2 }}의 추가 물리 피해를 입히며 {{ e3 }}초 동안 대상을 기절시킵니다.","sanitizedTooltip":"기본 지속 효과: 균열과 꿰뚫기 스킬로 적을 제압하면 이동 불가 상태의 지속 시간만큼 수정 충전량이 오르고, 같은 수치만큼 재사용 대기시간이 감소합니다. 사용 시: 스카너가 수정 에너지를 소환하여 여기 맞는 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e7 }}초 동안 {{ e8 }}%만큼 둔화시키며 수정 에너지 폭발의 속도도 감소합니다. 균열에 맞은 적들은 {{ e6 }}초 동안 수정 독에 중독되어, 이 대상에 대한 스카너의 다음 기본 공격은 {{ e2 }}의 추가 물리 피해를 입히며 {{ e3 }}초 동안 대상을 기절시킵니다.","leveltip":{"label":["폭발 피해 / 공격력","둔화","재사용 대기시간"],"effect":["{{ e1 }} / {{ e2 }} -> {{ e1NL }} / {{ e2NL }}","{{ e8 }}% -> {{ e8NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SkarnerFracture.png","sprite":"spell10.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,55,55,55,55],"costBurn":"55","cooldown":[14,13.5,13,12.5,12],"cooldownBurn":"14/13.5/13/12.5/12","effect":[null,[40,65,90,115,140],[25,35,45,55,65],[1,1,1,1,1],[50,50,50,50,50],[6,6,6,6,6],[5,5,5,5,5],[2.5,2.5,2.5,2.5,2.5],[30,35,40,45,50],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/65/90/115/140","25/35/45/55/65","1","50","6","5","2.5","30/35/40/45/50","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[980,980,980,980,980],"rangeBurn":"980","key":"SkarnerFracture"},{"name":"꿰뚫기","description":"스카너가 적 챔피언을 제압하고 마법 피해를 줍니다. 스킬이 지속되는 동안 스카너는 저항하지 못하는 대상을 끌고 마음껏 돌아다닐 수 있습니다. 효과가 끝나면 대상이 추가 피해를 받습니다.","sanitizedDescription":"스카너가 적 챔피언을 제압하고 마법 피해를 줍니다. 스킬이 지속되는 동안 스카너는 저항하지 못하는 대상을 끌고 마음껏 돌아다닐 수 있습니다. 효과가 끝나면 대상이 추가 피해를 받습니다.","tooltip":"스카너가 {{ e1 }}초 동안 적 챔피언을 제압하고 <span class=\"colorFF8C00\">{{ a2 }}</span>의 물리 피해 + {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 스킬이 지속되는 동안 스카너는 저항하지 못하는 대상을 끌고 마음껏 돌아다닐 수 있습니다. 효과가 끝나면 스카너의 대상이 같은 양의 피해를 한 번 더 받습니다.","sanitizedTooltip":"스카너가 {{ e1 }}초 동안 적 챔피언을 제압하고 {{ a2 }}의 물리 피해 + {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 스킬이 지속되는 동안 스카너는 저항하지 못하는 대상을 끌고 마음껏 돌아다닐 수 있습니다. 효과가 끝나면 스카너의 대상이 같은 양의 피해를 한 번 더 받습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SkarnerImpale.png","sprite":"spell10.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[1.75,1.75,1.75],[20,60,100],[50,75,100],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","1.75","20/60/100","50/75/100","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"attackdamage","coeff":[0.6]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[350,350,350],"rangeBurn":"350","key":"SkarnerImpale"}],"passive":{"name":"수정 첨탑","description":"스카너의 존재로 인해 맵의 정해진 위치에서 수정이 생겨납니다. 자기 팀이 점령한 수정 첨탑 지역 안에서는 스카너의 이동 속도, 공격 속도, 마나 재생력이 대폭 상승합니다.","sanitizedDescription":"스카너의 존재로 인해 맵의 정해진 위치에서 수정이 생겨납니다. 자기 팀이 점령한 수정 첨탑 지역 안에서는 스카너의 이동 속도, 공격 속도, 마나 재생력이 대폭 상승합니다.","image":{"full":"Skarner_Passive.png","sprite":"passive3.png","group":"passive","x":48,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Skarner","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":1011,"count":1},{"id":1031,"count":1},{"id":3742,"count":1}]}]},{"champion":"Skarner","title":"SkarnerARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3025,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3078,"count":1},{"id":3091,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3105,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Skarner","title":"SkarnerCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3078,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Skarner","title":"SkarnerFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3078,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Skarner","title":"SkarnerKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3025,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3078,"count":1},{"id":3091,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3105,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Skarner","title":"SkarnerSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3078,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]}]},{"champion":"Skarner","title":"SkarnerSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3044,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3078,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3143,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Skarner","title":"SkarnerTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":1},{"id":1028,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":1039,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":1011,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":2032,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3742,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3748,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3102,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Braum":{"id":201,"key":"Braum","name":"브라움","title":"프렐요드의 심장","image":{"full":"Braum.png","sprite":"champion0.png","group":"champion","x":144,"y":48,"w":48,"h":48},"skins":[{"id":201000,"name":"default","num":0},{"id":201001,"name":"용 사냥꾼 브라움","num":1},{"id":201002,"name":"프로레슬러 브라움","num":2},{"id":201003,"name":"용맹한 브라움","num":3},{"id":201010,"name":"산타 브라움","num":10}],"lore":"축복받은 거대 이두박근과 그보다 큰 마음을 가진 브라움은 프렐요드가 사랑하는 영웅이다. 프로스트헬드 북방의 모든 연회장은 하룻밤 새 오크나무 숲 하나를 전부 베어 넘기고, 산 하나를 주먹으로 때려 통째로 자갈로 만들었다고 전해지는 브라움의 전설적인 힘에 축배를 든다. 도움이 필요한 모든 이들의 진정한 친구 브라움은 마법이 깃든 금고 문짝을 방패 삼아 들고, 근육만큼이나 큰 콧수염으로 미소를 뽐내며 얼어붙은 북방을 배회한다.","blurb":"축복받은 거대 이두박근과 그보다 큰 마음을 가진 브라움은 프렐요드가 사랑하는 영웅이다. 프로스트헬드 북방의 모든 연회장은 하룻밤 새 오크나무 숲 하나를 전부 베어 넘기고, 산 하나를 주먹으로 때려 통째로 자갈로 만들었다고 전해지는 브라움의 전설적인 힘에 축배를 든다. 도움이 필요한 모든 이들의 진정한 친구 브라움은 마법이 깃든 금고 문짝을 방패 삼아 들고, 근육만큼이나 큰 콧수염으로 미소를 뽐내며 얼어붙은 북방을 배회한다.","allytips":["- 아군과 협동하여 뇌진탕 펀치 중첩을 쌓는 게 좋습니다. 아군에게 표식이 생긴 대상을 기본 공격하라고 알려주세요.","- 불굴 스킬을 사용하면 방어력이 약한 아군 앞으로 도약하여 투사체 공격을 막아줄 수 있습니다.","- 빙하 균열은 강력한 둔화 구역을 남깁니다. 팀간 전투 시 적들을 갈라놓고 다가오는 속도를 늦출 수 있는 위치에 사용하세요."],"enemytips":["- 브라움은 동상 스킬 혹은 기본 공격을 맞혀야만 뇌진탕 펀치 중첩을 시작할 수 있습니다. 일단 뇌진탕 표식이 생긴 후 3번 더 맞으면 기절하게 되므로 빠르게 사거리 밖으로 나가세요.","- 브라움의 궁극기는 시전 시간이 길기 때문에 그 동안 피할 수 있습니다. 얼어붙은 지면 궤적 위를 통과하면 둔화가 적용되니, 지나가지 않아도 되도록 미리 좋은 위치를 잡아 두세요.","- 불굴 덕에 브라움은 한 방향 방어력이 강합니다. 지속 시간이 끝날 때까지 기다리거나 사거리 밖에서 공격하세요."],"tags":["Support","Tank"],"partype":"마나","info":{"attack":3,"defense":9,"magic":4,"difficulty":3},"stats":{"armor":47,"armorperlevel":4.5,"attackdamage":55.376,"attackdamageperlevel":3.2,"attackrange":125,"attackspeedoffset":-0.03,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":576.16,"hpperlevel":87,"hpregen":8.18,"hpregenperlevel":1,"movespeed":335,"mp":310.6,"mpperlevel":45,"mpregen":6,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"동상","description":"브라움이 방패에서 빙결을 뿜어내 둔화를 적용하고 마법 피해를 입힙니다.<br><br><font color='#FFF673'>뇌진탕 펀치</font> 중첩이 1회 쌓입니다.","sanitizedDescription":"브라움이 방패에서 빙결을 뿜어내 둔화를 적용하고 마법 피해를 입힙니다. 뇌진탕 펀치 중첩이 1회 쌓입니다.","tooltip":"브라움이 방패에서 빙결을 뿜어내어 {{ e1 }} <span class=\"colorCC3300\">(+{{ f1 }}) [브라움 최대 체력의 2.5%]</span>의 마법 피해를 처음 맞는 적에게 입히고, 대상 적에게 {{ e2 }}%의 둔화를 겁니다. 둔화 효과는 이후 {{ e5 }}초간 점차 감소합니다.<br /><br />이 스킬로 <span class=\"colorFFF673\">뇌진탕</span> 중첩이 오릅니다. ","sanitizedTooltip":"브라움이 방패에서 빙결을 뿜어내어 {{ e1 }} (+{{ f1 }}) [브라움 최대 체력의 2.5%]의 마법 피해를 처음 맞는 적에게 입히고, 대상 적에게 {{ e2 }}%의 둔화를 겁니다. 둔화 효과는 이후 {{ e5 }}초간 점차 감소합니다. 이 스킬로 뇌진탕 중첩이 오릅니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"BraumQ.png","sprite":"spell1.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,60,65,70,75],"costBurn":"55/60/65/70/75","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[60,105,150,195,240],[70,70,70,70,70],[30,30,30,30,30],[0.02,0.02,0.02,0.02,0.02],[2,2,2,2,2],[1050,1050,1050,1050,1050],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/105/150/195/240","70","30","0.02","2","1050","4","0","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"BraumQ"},{"name":"내가 지킨다","description":"브라움이 대상 아군 챔피언이나 미니언에게 도약합니다. 대상에게 다다르면 브라움과 아군은 몇 초 동안 방어력과 마법 저항력이 오릅니다.","sanitizedDescription":"브라움이 대상 아군 챔피언이나 미니언에게 도약합니다. 대상에게 다다르면 브라움과 아군은 몇 초 동안 방어력과 마법 저항력이 오릅니다.","tooltip":"브라움이 대상 아군 챔피언이나 미니언에게 도약합니다.<br /><br />대상에게 다다르면 브라움과 아군은 {{ e1 }}초 동안 방어력이 <span class=\"colorFFFF00\">{{ f3 }}</span>, 마법 저항력이 <span class=\"colorFF00FF\">{{ f4 }}</span> 증가합니다. ({{ e4 }} + 브라움의 추가 방어력/마법 저항력의 {{ e3 }}%)","sanitizedTooltip":"브라움이 대상 아군 챔피언이나 미니언에게 도약합니다. 대상에게 다다르면 브라움과 아군은 {{ e1 }}초 동안 방어력이 {{ f3 }}, 마법 저항력이 {{ f4 }} 증가합니다. ({{ e4 }} + 브라움의 추가 방어력/마법 저항력의 {{ e3 }}%)","leveltip":{"label":["기본 방어력","기본 마법 저항력","방어 증가 %","재사용 대기시간","마나 소모량"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e5 }} -> {{ e5NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"BraumW.png","sprite":"spell1.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[3,3,3,3,3],[750,750,750,750,750],[10,11.5,13,14.5,16],[17.5,20,22.5,25,27.5],[15,17.5,20,22.5,25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","3","750","10/11.5/13/14.5/16","17.5/20/22.5/25/27.5","15/17.5/20/22.5/25","0","0","0","0","0"],"vars":[{"key":"f3","link":"@special.BraumWArmor","coeff":[0]},{"key":"f4","link":"@special.BraumWMR","coeff":[0]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"BraumW"},{"name":"불굴","description":"브라움이 몇 초 동안 한 방향으로 방패를 들어 올려, 날아오는 투사체를 대신 맞고 파괴합니다. 첫 번째 공격은 아무 피해도 주지 않고, 이후 해당 방향에서 오는 공격은 피해량이 줄어듭니다.","sanitizedDescription":"브라움이 몇 초 동안 한 방향으로 방패를 들어 올려, 날아오는 투사체를 대신 맞고 파괴합니다. 첫 번째 공격은 아무 피해도 주지 않고, 이후 해당 방향에서 오는 공격은 피해량이 줄어듭니다.","tooltip":"<span class=\"colorFFFFFF\">브라움이 받는 피해를 줄이며, 뒤에 있는 아군을 안전하게 막아줍니다.</span><br />브라움이 {{ e2 }}초 동안 원하는 방향으로 방패를 들어올려 그 쪽에서 오는 다음번 공격의 피해를 취소합니다. 그 후 이어지는 공격은 피해량이 {{ e3 }}% 감소합니다.<br /><br />브라움이 투사체를 <span class=\"colorFFF673\">가로막아</span>, 자신이 대신 맞고서 소멸시킵니다.<br /><br />이 동안 브라움의 이동 속도가 {{ e4 }}% 상승합니다.","sanitizedTooltip":"브라움이 받는 피해를 줄이며, 뒤에 있는 아군을 안전하게 막아줍니다. 브라움이 {{ e2 }}초 동안 원하는 방향으로 방패를 들어올려 그 쪽에서 오는 다음번 공격의 피해를 취소합니다. 그 후 이어지는 공격은 피해량이 {{ e3 }}% 감소합니다. 브라움이 투사체를 가로막아, 자신이 대신 맞고서 소멸시킵니다. 이 동안 브라움의 이동 속도가 {{ e4 }}% 상승합니다.","leveltip":{"label":["지속 시간","피해량 감소","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"BraumE.png","sprite":"spell1.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,35,40,45,50],"costBurn":"30/35/40/45/50","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[0,0,0,0,0],[3,3.25,3.5,3.75,4],[30,32.5,35,37.5,40],[10,10,10,10,10],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","3/3.25/3.5/3.75/4","30/32.5/35/37.5/40","10","0","0","0","0","0","0"],"range":[25000,25000,25000,25000,25000],"rangeBurn":"25000","key":"BraumE"},{"name":"빙하 균열","description":"브라움이 지면을 내리쳐 부근과 전방 직선상의 적들을 띄워올립니다. 이 직선을 따라 균열이 가며 적들을 둔화시킵니다.","sanitizedDescription":"브라움이 지면을 내리쳐 부근과 전방 직선상의 적들을 띄워올립니다. 이 직선을 따라 균열이 가며 적들을 둔화시킵니다.","tooltip":"브라움이 지면을 내리쳐 부근과 전방 직선상의 적들을 띄워올립니다. 바닥에는 {{ e3 }}초 동안 균열이 남아 그 위를 밟는 적을 {{ e4 }}% 느려지게 합니다.<br /><br />맞은 적들은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다. 첫 번째로 맞은 적 챔피언은 {{ e5 }}초 동안 공중에 뜨고, 이후의 적들은 잠깐 동안 띄워집니다.","sanitizedTooltip":"브라움이 지면을 내리쳐 부근과 전방 직선상의 적들을 띄워올립니다. 바닥에는 {{ e3 }}초 동안 균열이 남아 그 위를 밟는 적을 {{ e4 }}% 느려지게 합니다. 맞은 적들은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입습니다. 첫 번째로 맞은 적 챔피언은 {{ e5 }}초 동안 공중에 뜨고, 이후의 적들은 잠깐 동안 띄워집니다.","leveltip":{"label":["피해량","띄워올리기 지속 시간","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BraumRWrapper.png","sprite":"spell1.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,120,100],"cooldownBurn":"140/120/100","effect":[null,[150,250,350],[0.3,0.3,0.3],[4,4,4],[40,50,60],[1,1.25,1.5],[0.25,0.25,0.25],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","0.3","4","40/50/60","1/1.25/1.5","0.25","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[1250,1250,1250],"rangeBurn":"1250","key":"BraumRWrapper"}],"passive":{"name":"뇌진탕 펀치","description":"브라움은 기본 공격 및 동상으로 적에게 뇌진탕 펀치 중첩을 쌓습니다. 브라움과 아군들의 기본 공격은 뇌진탕 펀치 중첩을 누적하여, 중첩이 4가 되면 대상이 기절합니다.","sanitizedDescription":"브라움은 기본 공격 및 동상으로 적에게 뇌진탕 펀치 중첩을 쌓습니다. 브라움과 아군들의 기본 공격은 뇌진탕 펀치 중첩을 누적하여, 중첩이 4가 되면 대상이 기절합니다.","image":{"full":"Braum_Passive.png","sprite":"passive0.png","group":"passive","x":144,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Braum","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3067,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3067,"count":1},{"id":3211,"count":1},{"id":3065,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3025,"count":1},{"id":3068,"count":1},{"id":3022,"count":1}]}]},{"champion":"Braum","title":"BraumARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3190,"count":1},{"id":3047,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3001,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3742,"count":1},{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Braum","title":"BraumCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3097,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3117,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Braum","title":"BraumFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":2049,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Braum","title":"BraumKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3190,"count":1},{"id":3047,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3075,"count":1},{"id":3800,"count":1},{"id":3401,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Braum","title":"BraumSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3117,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3109,"count":1}]}]},{"champion":"Braum","title":"BraumSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":1001,"count":1},{"id":3097,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3117,"count":1},{"id":3401,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3050,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3193,"count":1},{"id":3107,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Braum","title":"BraumTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":1011,"count":1},{"id":3068,"count":1},{"id":3024,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3110,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Veigar":{"id":45,"key":"Veigar","name":"베이가","title":"악의 작은 지배자","image":{"full":"Veigar.png","sprite":"champion4.png","group":"champion","x":48,"y":0,"w":48,"h":48},"skins":[{"id":45000,"name":"default","num":0},{"id":45001,"name":"백마법사 베이가","num":1},{"id":45002,"name":"컬링 베이가","num":2},{"id":45003,"name":"회색의 베이가","num":3},{"id":45004,"name":"레프러칸 베이가","num":4},{"id":45005,"name":"베이가 남작","num":5},{"id":45006,"name":"슈퍼 악당 베이가","num":6},{"id":45007,"name":"나쁜 산타 베이가","num":7},{"id":45008,"name":"끝판왕 베이가","num":8},{"id":45009,"name":"오메가 분대 베이가","num":9}],"lore":"베이가는 열정적인 흑마법의 대가로, 필멸자가 감히 엄두조차 내지 못하는 힘을 손에 넣었다. 밴들 시티에 사는 자유로운 영혼인 베이가는 수 천 년 동안 감춰져 왔던 신비로운 문헌을 연구하며 요들 마법의 한계를 뛰어넘고자 염원했다. 끝없는 호기심으로 우주의 수수께끼를 고집스럽게 탐구하는 베이가를 얕잡아 보는 자들도 많지만, 베이가는 스스로를 궁극의 악이라 굳게 믿는다. 베이가의 내면에서 솟아나는 궁금증은 스스로를 더욱 더 깊은 수수께끼로 빠져들게 한다.","blurb":"베이가는 열정적인 흑마법의 대가로, 필멸자가 감히 엄두조차 내지 못하는 힘을 손에 넣었다. 밴들 시티에 사는 자유로운 영혼인 베이가는 수 천 년 동안 감춰져 왔던 신비로운 문헌을 연구하며 요들 마법의 한계를 뛰어넘고자 염원했다. 끝없는 호기심으로 우주의 수수께끼를 고집스럽게 탐구하는 베이가를 얕잡아 보는 자들도 많지만, 베이가는 스스로를 궁극의 악이라 굳게 믿는다. 베이가의 내면에서 솟아나는 궁금증은 스스로를 더욱 더 깊은 수수께끼로 빠져들게 한다.","allytips":["- 사건의 지평선 스킬을 사용하여 암흑 물질을 확실히 맞힐 수 있습니다.","- 마나 및 재사용 대기시간 감소 아이템 위주로 구매해 기본 지속 효과와 사악한 일격 스킬의 효과를 극대화해 보세요.","- 베이가는 체력이 매우 낮습니다. 점멸같은 주문을 적어도 하나는 사용해 방어용으로 쓰도록 하십시오."],"enemytips":["- 암흑 물질 스킬은 매우 높은 피해를 입히지만 피할 수 있습니다. 주의를 기울여 주문이 언제, 어디에 명중할지 확인하십시오.","- 사건의 지평선 스킬은 항상 가장자리에 있는 유닛만을 기절시킵니다. 스킬 영역 안에 있다면 계속 움직이고 공격할 수 있습니다.","- 베이가의 궁극기는 잃은 체력에 비례하여 피해를 입힙니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":2,"magic":10,"difficulty":7},"stats":{"armor":22.55,"armorperlevel":3.75,"attackdamage":50.71,"attackdamageperlevel":2.625,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2.24,"crit":0,"critperlevel":0,"hp":505,"hpperlevel":94,"hpregen":6.5,"hpregenperlevel":0.6,"movespeed":340,"mp":392.4,"mpperlevel":52,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"사악한 일격","description":"베이가가 어둠의 에너지를 발사하여 처음 맞은 적 둘에게 마법 피해를 입힙니다. 이 스킬로 적 유닛을 처치하면 베이가의 주문력이 영구적으로 상승합니다.","sanitizedDescription":"베이가가 어둠의 에너지를 발사하여 처음 맞은 적 둘에게 마법 피해를 입힙니다. 이 스킬로 적 유닛을 처치하면 베이가의 주문력이 영구적으로 상승합니다.","tooltip":"적에게 암흑의 에너지 줄기를 쏟아내어 처음 맞는 두 명의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />사악한 일격으로 대상을 하나 처치할 때마다 <span class=\"colorFFF673\">극악</span> 중첩이 하나 쌓입니다. 대형 미니언, 대형 몬스터의 경우 중첩이 두 번 쌓입니다.","sanitizedTooltip":"적에게 암흑의 에너지 줄기를 쏟아내어 처음 맞는 두 명의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 사악한 일격으로 대상을 하나 처치할 때마다 극악 중첩이 하나 쌓입니다. 대형 미니언, 대형 몬스터의 경우 중첩이 두 번 쌓입니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VeigarBalefulStrike.png","sprite":"spell12.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[70,110,150,190,230],[1,1,1,1,1],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","1","1","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"VeigarBalefulStrike"},{"name":"암흑 물질","description":"베이가가 하늘에서 거대한 암흑 물질을 떨어뜨려 마법 피해를 입힙니다. 극악 중첩이 쌓이면 암흑 물질의 재사용 대기시간이 감소합니다.","sanitizedDescription":"베이가가 하늘에서 거대한 암흑 물질을 떨어뜨려 마법 피해를 입힙니다. 극악 중첩이 쌓이면 암흑 물질의 재사용 대기시간이 감소합니다.","tooltip":"1.2초 뒤 목표 위치에 암흑 물질이 떨어져 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFFF673\">극악</span>이 50번 중첩될 때마다 암흑 물질의 재사용 대기시간이 10%씩 감소합니다. (현재 <span class=\"colorFFF673\">{{ f2.0*100 }}%</span>)","sanitizedTooltip":"1.2초 뒤 목표 위치에 암흑 물질이 떨어져 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 극악이 50번 중첩될 때마다 암흑 물질의 재사용 대기시간이 10%씩 감소합니다. (현재 {{ f2.0*100 }}%)","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VeigarDarkMatter.png","sprite":"spell12.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[100,150,200,250,300],[1.2,1.2,1.2,1.2,1.2],[8,8,8,8,8],[0,0,0,0,0],[0.02,0.02,0.02,0.02,0.02],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","100/150/200/250/300","1.2","8","0","0.02","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"VeigarDarkMatter"},{"name":"사건의 지평선","description":"잠시 후 베이가가 목표 위치의 가장자리를 3초 동안 왜곡시켜 해당 구역을 지나는 적을 짧은 시간 동안 기절시킵니다.","sanitizedDescription":"잠시 후 베이가가 목표 위치의 가장자리를 3초 동안 왜곡시켜 해당 구역을 지나는 적을 짧은 시간 동안 기절시킵니다.","tooltip":"{{ e2 }}초가 지난 후 베이가가 목표 위치의 가장자리를 3초 동안 왜곡시켜 오각형의 벽을 세웁니다. 이 경계선은 지나려는 적을 멈춰세우고 {{ e1 }}초 동안 기절시킵니다.","sanitizedTooltip":"{{ e2 }}초가 지난 후 베이가가 목표 위치의 가장자리를 3초 동안 왜곡시켜 오각형의 벽을 세웁니다. 이 경계선은 지나려는 적을 멈춰세우고 {{ e1 }}초 동안 기절시킵니다.","leveltip":{"label":["기절 지속 시간","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"VeigarEventHorizon.png","sprite":"spell12.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[1.5,1.75,2,2.25,2.5],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.5/1.75/2/2.25/2.5","0.5","0","0","0","0","0","0","0","0"],"range":[725,725,725,725,725],"rangeBurn":"725","key":"VeigarEventHorizon"},{"name":"태초의 폭발","description":"적 챔피언을 맞춰 매우 큰 마법 피해를 입힙니다. 피해량은 대상의 잃은 체력에 비례해 증가합니다.","sanitizedDescription":"적 챔피언을 맞춰 매우 큰 마법 피해를 입힙니다. 피해량은 대상의 잃은 체력에 비례해 증가합니다.","tooltip":"대상에게 태초의 마법을 날려 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> ~ {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다. 피해량은 <span class=\"colorCC3300\">대상의 잃은 체력</span>에 비례합니다.<br /><br />체력이 33% 밑으로 떨어진 적에게 피해가 극대화됩니다.","sanitizedTooltip":"대상에게 태초의 마법을 날려 {{ e1 }} (+{{ a1 }}) ~ {{ e2 }} (+{{ a2 }})의 마법 피해를 입힙니다. 피해량은 대상의 잃은 체력에 비례합니다. 체력이 33% 밑으로 떨어진 적에게 피해가 극대화됩니다.","leveltip":{"label":["기본 피해","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VeigarR.png","sprite":"spell12.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[175,250,325],[350,500,650],[1,1,1],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","175/250/325","350/500/650","1","2","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]},{"key":"a2","link":"spelldamage","coeff":[1.5]}],"range":[650,650,650],"rangeBurn":"650","key":"VeigarR"}],"passive":{"name":"극악무도","description":"룬테라에서 가장 강력한 악의 원천인 베이가는 점점 더 강해지고 있습니다. 적 챔피언에게 스킬을 적중시키거나 처치할 때마다 주문력이 영구적으로 증가합니다.","sanitizedDescription":"룬테라에서 가장 강력한 악의 원천인 베이가는 점점 더 강해지고 있습니다. 적 챔피언에게 스킬을 적중시키거나 처치할 때마다 주문력이 영구적으로 증가합니다.","image":{"full":"Veigar_Entropy.png","sprite":"passive4.png","group":"passive","x":48,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Veigar","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3165,"count":1},{"id":3116,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]}]},{"champion":"Veigar","title":"VeigarARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3802,"count":1},{"id":1001,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Veigar","title":"VeigarCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3135,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3007,"count":1},{"id":3001,"count":1},{"id":3029,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Veigar","title":"VeigarFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3152,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3135,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Veigar","title":"VeigarKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Veigar","title":"VeigarSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3135,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3007,"count":1},{"id":3001,"count":1},{"id":3029,"count":1}]}]},{"champion":"Veigar","title":"VeigarSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3135,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3157,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3003,"count":1},{"id":3027,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Veigar","title":"VeigarTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3108,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Xerath":{"id":101,"key":"Xerath","name":"제라스","title":"초월한 마법사","image":{"full":"Xerath.png","sprite":"champion4.png","group":"champion","x":432,"y":0,"w":48,"h":48},"skins":[{"id":101000,"name":"default","num":0},{"id":101001,"name":"룬 제라스","num":1},{"id":101002,"name":"전투 기계 제라스","num":2},{"id":101003,"name":"용광로 제라스","num":3},{"id":101004,"name":"사막의 수호자 제라스","num":4}],"lore":"고대 슈리마의 초월한 마법사 제라스는 신비의 에너지가 석관의 파편에 둘러싸인 형상을 하고 있다. 그는 사막 아래의 고대 감옥 속에 수천 년 동안 갇혀 있다가 슈리마 제국의 부활과 함께 자유의 몸이 되었다. 막강한 힘을 손에 넣은 제라스는 응당 자신의 것이라 여기는 것들을 찬탈하고 신흥 문명 정복으로 자신만의 제국을 세우고자 광기의 질주를 시작한다.","blurb":"고대 슈리마의 초월한 마법사 제라스는 신비의 에너지가 석관의 파편에 둘러싸인 형상을 하고 있다. 그는 사막 아래의 고대 감옥 속에 수천 년 동안 갇혀 있다가 슈리마 제국의 부활과 함께 자유의 몸이 되었다. 막강한 힘을 손에 넣은 제라스는 응당 자신의 것이라 여기는 것들을 찬탈하고 신흥 문명 정복으로 자신만의 제국을 세우고자 광기의 질주를 시작한다.","allytips":["- 비전 파동은 제라스에게 다가오거나, 도망가는 적에게 사용할 때 가장 잘 적중합니다.","- 파멸의 눈으로 대상의 속도를 늦추면 비전 파동을 더 쉽게 맞힐 수 있습니다.","- 충격 구체로 적을 기절시킨 후 파멸의 눈 중앙에 정확히 맞히세요."],"enemytips":["- 제라스의 스킬 사거리는 분명 위협적이지만, 접근할 방법이 있는 대부분의 챔피언은 제라스를 쉽게 상대할 수 있습니다.","- 비전 의식 스킬은 시전 시간이 깁니다. 스킬 사용 모션을 보고 대비하십시오.","- 밴시의 장막을 사 두면 제라스가 충격 구체로 맞히기 어렵게 됩니다."],"tags":["Mage","Assassin"],"partype":"마나","info":{"attack":1,"defense":3,"magic":10,"difficulty":8},"stats":{"armor":21.88,"armorperlevel":3.5,"attackdamage":54.7,"attackdamageperlevel":3,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":526,"hpperlevel":92,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":340,"mp":366.96,"mpperlevel":44,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"비전 파동","description":"긴 사거리를 지닌 에너지 포를 쏘아 적중한 모든 적에게 마법 피해를 줍니다.","sanitizedDescription":"긴 사거리를 지닌 에너지 포를 쏘아 적중한 모든 적에게 마법 피해를 줍니다.","tooltip":"<span class=\"colorFF9900\">최초 시전 시:</span> 제라스가 비전 파동을 충전하며, 이동 속도가 서서히 줄어들면서 스킬 사거리가 점점 증가합니다.<br /><br /><span class=\"colorFF9900\">두 번째 시전 시:</span> 제라스가 비전 파동을 발사하여, 직선 상의 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />제라스는 비전 파동을 충전하는 동안 기본 공격이나 스킬 공격을 할 수 없습니다. 제라스가 이 스킬을 발사하지 않을 경우, 소모된 마나의 절반이 회복됩니다.","sanitizedTooltip":"최초 시전 시: 제라스가 비전 파동을 충전하며, 이동 속도가 서서히 줄어들면서 스킬 사거리가 점점 증가합니다. 두 번째 시전 시: 제라스가 비전 파동을 발사하여, 직선 상의 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 제라스는 비전 파동을 충전하는 동안 기본 공격이나 스킬 공격을 할 수 없습니다. 제라스가 이 스킬을 발사하지 않을 경우, 소모된 마나의 절반이 회복됩니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"XerathArcanopulseChargeUp.png","sprite":"spell13.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,90,100,110,120],"costBurn":"80/90/100/110/120","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[80,120,160,200,240],[4,4,4,4,4],[0.5,0.5,0.5,0.5,0.5],[145,145,145,145,145],[0.5,0.5,0.5,0.5,0.5],[-0.2,-0.2,-0.2,-0.2,-0.2],[0.1,0.1,0.1,0.1,0.1],[0.5,0.5,0.5,0.5,0.5],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","4","0.5","145","0.5","-0.2","0.1","0.5","1.5","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"XerathArcanopulseChargeUp"},{"name":"파멸의 눈","description":"비전 에너지 폭격을 가하여 목표 지역에 있는 모든 적의 속도를 늦추고 마법 피해를 가합니다. 범위 중앙에 있는 대상은 추가 피해를 입고, 더 강한 둔화 효과를 적용 받습니다.","sanitizedDescription":"비전 에너지 폭격을 가하여 목표 지역에 있는 모든 적의 속도를 늦추고 마법 피해를 가합니다. 범위 중앙에 있는 대상은 추가 피해를 입고, 더 강한 둔화 효과를 적용 받습니다.","tooltip":"제라스가 비전 에너지포를 소환하여 목표 지점에 있는 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고, {{ e4 }}초 동안 속도를 {{ e8 }}% 느리게 만듭니다. 폭발 반경 중심에 있는 적들은 {{ f1 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 마법 피해를 입고 속도는 {{ e3 }}% 느려집니다. 이 둔화 효과는 빠르게 감소합니다.","sanitizedTooltip":"제라스가 비전 에너지포를 소환하여 목표 지점에 있는 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고, {{ e4 }}초 동안 속도를 {{ e8 }}% 느리게 만듭니다. 폭발 반경 중심에 있는 적들은 {{ f1 }} (+{{ f2 }})의 마법 피해를 입고 속도는 {{ e3 }}% 느려집니다. 이 둔화 효과는 빠르게 감소합니다.","leveltip":{"label":["피해량","재사용 대기시간","둔화","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"XerathArcaneBarrage2.png","sprite":"spell13.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[1,1,1,1,1],"cooldownBurn":"1","effect":[null,[60,90,120,150,180],[2,2,2,2,2],[60,65,70,75,80],[2.5,2.5,2.5,2.5,2.5],[0.5,0.5,0.5,0.5,0.5],[50,50,50,50,50],[50,50,50,50,50],[25,25,25,25,25],[0.8,0.8,0.8,0.8,0.8],[-0.25,-0.25,-0.25,-0.25,-0.25]],"effectBurn":["","60/90/120/150/180","2","60/65/70/75/80","2.5","0.5","50","50","25","0.8","-0.25"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"XerathArcaneBarrage2"},{"name":"충격 구체","description":"적 한 명에게 마법 피해를 주며 기절시킵니다.","sanitizedDescription":"적 한 명에게 마법 피해를 주며 기절시킵니다.","tooltip":"제라스가 순수한 마법의 구체를 발사합니다. 첫 번째로 맞은 적은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 {{ e8 }}초에서 {{ e2 }}초 기절합니다. 기절 지속 시간은 구체가 날아간 이동 거리에 비례합니다.","sanitizedTooltip":"제라스가 순수한 마법의 구체를 발사합니다. 첫 번째로 맞은 적은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 {{ e8 }}초에서 {{ e2 }}초 기절합니다. 기절 지속 시간은 구체가 날아간 이동 거리에 비례합니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"XerathMageSpear.png","sprite":"spell13.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[13,12.5,12,11.5,11],"cooldownBurn":"13/12.5/12/11.5/11","effect":[null,[80,110,140,170,200],[2,2,2,2,2],[0.17,0.17,0.17,0.17,0.17],[1125,1125,1125,1125,1125],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/110/140/170/200","2","0.17","1125","0.5","0","0","0.5","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]}],"range":[1050,1050,1050,1050,1050],"rangeBurn":"1050","key":"XerathMageSpear"},{"name":"비전 의식","description":"제라스가 이동 불가 상태가 되며, 원거리 공격을 여러 발 발사할 수 있게 됩니다.","sanitizedDescription":"제라스가 이동 불가 상태가 되며, 원거리 공격을 여러 발 발사할 수 있게 됩니다.","tooltip":"제라스가 순수한 모습으로 승화하면서 제자리에 고정되고, {{ e2 }}번의 비전 폭격이 생깁니다. 이 마법 공격은 적중한 적 모두에게 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />고정 효과는 비전 폭격을 모두 발사했을 때, 이동 명령을 통해 스킬을 취소시켰을 때 또는 {{ e1 }}초 후에 끝납니다. 한 발도 발사되지 않았을 경우, 재사용 대기시간이 {{ e7 }}% 줄어듭니다.","sanitizedTooltip":"제라스가 순수한 모습으로 승화하면서 제자리에 고정되고, {{ e2 }}번의 비전 폭격이 생깁니다. 이 마법 공격은 적중한 적 모두에게 {{ e3 }} (+{{ a1 }})의 마법 피해를 입힙니다. 고정 효과는 비전 폭격을 모두 발사했을 때, 이동 명령을 통해 스킬을 취소시켰을 때 또는 {{ e1 }}초 후에 끝납니다. 한 발도 발사되지 않았을 경우, 재사용 대기시간이 {{ e7 }}% 줄어듭니다.","leveltip":{"label":["피해량","발사 횟수","사거리","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e2 }} -> {{ e2NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XerathLocusOfPower2.png","sprite":"spell13.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[130,115,100],"cooldownBurn":"130/115/100","effect":[null,[10,10,10],[3,4,5],[200,240,280],[200,200,200],[3200,4400,5600],[0.8,0.8,0.8],[50,50,50],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","10","3/4/5","200/240/280","200","3200/4400/5600","0.8","50","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.43]}],"range":[3200,4400,5600],"rangeBurn":"3200/4400/5600","key":"XerathLocusOfPower2"}],"passive":{"name":"마나 쇄도","description":"제라스의 기본 공격이 주기적으로 마나를 회복해 줍니다.","sanitizedDescription":"제라스의 기본 공격이 주기적으로 마나를 회복해 줍니다.","image":{"full":"Xerath_Passive1.png","sprite":"passive4.png","group":"passive","x":432,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Xerath","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Xerath","title":"XerathARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Xerath","title":"XerathCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3029,"count":1},{"id":3007,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Xerath","title":"XerathFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1058,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3003,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Xerath","title":"XerathKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Xerath","title":"XerathSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3029,"count":1},{"id":3007,"count":1},{"id":3151,"count":1}]}]},{"champion":"Xerath","title":"XerathSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3027,"count":1},{"id":3003,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Xerath","title":"XerathTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3136,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Corki":{"id":42,"key":"Corki","name":"코르키","title":"대담한 폭격수","image":{"full":"Corki.png","sprite":"champion0.png","group":"champion","x":384,"y":48,"w":48,"h":48},"skins":[{"id":42000,"name":"default","num":0},{"id":42001,"name":"UFO 코르키","num":1},{"id":42002,"name":"얼음 썰매 코르키","num":2},{"id":42003,"name":"붉은 남작 코르키","num":3},{"id":42004,"name":"스피드광 코르키","num":4},{"id":42005,"name":"우르프 라이더 코르키","num":5},{"id":42006,"name":"불꽃놀이 코르키","num":6},{"id":42007,"name":"Fnatic 코르키","num":7},{"id":42008,"name":"아케이드 코르키","num":8}],"lore":"요들 비행기 조종사 코르키는 다른 어떤 것보다 좋아하는 두 가지가 있다. 바로 비행과 멋들어진 콧수염이다. 좋아하는 순서대로 나열한 것은 아니지만. 코르키는 밴들 시티를 떠난 후 필트오버에 정착하며 찾아낸 경이로운 비행기와 사랑에 빠졌다. 코르키는 비행장치를 개발하기 위해 혼신의 노력을 쏟았고, 시끄러운 뱀 편대라 불리는 베테랑 공군 정예 부대를 이끌게 되었다. 포화 속에서도 평정심을 잃지 않으며 제2의 고향의 창공을 누비는 코르키에게 마음껏 미사일 포화를 퍼부어 해결하지 못했던 문제는 하나도 없다.","blurb":"요들 비행기 조종사 코르키는 다른 어떤 것보다 좋아하는 두 가지가 있다. 바로 비행과 멋들어진 콧수염이다. 좋아하는 순서대로 나열한 것은 아니지만. 코르키는 밴들 시티를 떠난 후 필트오버에 정착하며 찾아낸 경이로운 비행기와 사랑에 빠졌다. 코르키는 비행장치를 개발하기 위해 혼신의 노력을 쏟았고, 시끄러운 뱀 편대라 불리는 베테랑 공군 정예 부대를 이끌게 되었다. 포화 속에서도 평정심을 잃지 않으며 제2의 고향의 창공을 누비는 코르키에게 마음껏 미사일...","allytips":["- 인광탄 스킬은 주변 수풀에 숨은 적을 찾을 때 유용합니다.","- 발키리 스킬은 방어용으로 사용할 수 있으니 탈출시에 활용해 보십시오.","- 코르키는 개틀링 건 스킬을 사용하는 동안에도 계속 공격이 가능합니다. 코르키를 완벽하게 사용하려면 개틀링 건 스킬을 최대한 활용하십시오."],"enemytips":["- 코르키의 미사일 폭격 스킬에 주의하세요. 미사일 폭격 스킬은 광역 피해를 입히기 때문에 미니언 뒤에 숨어있어도 피해를 입을 수 있습니다.","- 코르키는 발키리나 특급 폭탄 배송을 사용하고 나면 도망갈 수단이 사라집니다. 이 스킬 이후 코르키를 집중적으로 공격하세요."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":3,"magic":6,"difficulty":6},"stats":{"armor":28,"armorperlevel":3.5,"attackdamage":60,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":-0.02,"attackspeedperlevel":2.3,"crit":0,"critperlevel":0,"hp":518,"hpperlevel":87,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":325,"mp":350.16,"mpperlevel":34,"mpregen":7.424,"mpregenperlevel":0.55,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"인광탄","description":"코르키가 지정 위치에 인광탄을 던져, 해당 지역 안의 적들에게 마법 피해를 입힙니다. 또한, 이 공격은 지속 시간 동안 해당 지역의 유닛들을 드러내 줍니다.","sanitizedDescription":"코르키가 지정 위치에 인광탄을 던져, 해당 지역 안의 적들에게 마법 피해를 입힙니다. 또한, 이 공격은 지속 시간 동안 해당 지역의 유닛들을 드러내 줍니다.","tooltip":"코르키가 폭탄을 던져 대상 지역에 있는 적들에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 또한 {{ e2 }}초 동안 폭탄에 맞은 지역과 챔피언이 드러납니다 (은신한 적은 드러나지 않습니다).","sanitizedTooltip":"코르키가 폭탄을 던져 대상 지역에 있는 적들에게 {{ e1 }} (+{{ a1 }}) (+{{ a1 }})의 마법 피해를 입힙니다. 또한 {{ e2 }}초 동안 폭탄에 맞은 지역과 챔피언이 드러납니다 (은신한 적은 드러나지 않습니다).","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"PhosphorusBomb.png","sprite":"spell2.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[75,120,165,210,255],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/120/165/210/255","6","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.5]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[825,825,825,825,825],"rangeBurn":"825","key":"PhosphorusBomb"},{"name":"발키리","description":"코르키가 목표 위치로 비행하며 폭탄을 투하하여 불타는 흔적을 남겨, 그 안에 있는 적에게 피해를 입힙니다.","sanitizedDescription":"코르키가 목표 위치로 비행하며 폭탄을 투하하여 불타는 흔적을 남겨, 그 안에 있는 적에게 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">사용 시:</span> 코르키가 단거리를 폭격하여, 지나간 폭격 지역 위에 있는 적에게 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">특급 폭탄 배송:</span> 코르키가 멀리까지 폭격하며 폭탄을 투하하여 적들을 옆으로 밀어내며, 5초 동안 지나간 경로를 불태웁니다. 이 경로에 있는 적은 속도가 {{ e2 }}% 둔화되며, 불에 타서 초당 {{ f1 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span> <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입습니다.","sanitizedTooltip":"사용 시: 코르키가 단거리를 폭격하여, 지나간 폭격 지역 위에 있는 적에게 초당 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 특급 폭탄 배송: 코르키가 멀리까지 폭격하며 폭탄을 투하하여 적들을 옆으로 밀어내며, 5초 동안 지나간 경로를 불태웁니다. 이 경로에 있는 적은 속도가 {{ e2 }}% 둔화되며, 불에 타서 초당 {{ f1 }} (+{{ f2 }}) (+{{ a2 }})의 마법 피해를 입습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CarpetBomb.png","sprite":"spell2.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[100,100,100,100,100],"costBurn":"100","cooldown":[20,19,18,17,16],"cooldownBurn":"20/19/18/17/16","effect":[null,[60,90,120,150,180],[90,90,90,90,90],[0,0,0,0,0],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/90/120/150/180","90","0","4","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.2]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"CarpetBomb"},{"name":"개틀링 건","description":"코르키가 정면에 원뿔 형태로 개틀링 건을 발사하여 적의 방어력과 마법 저항력을 낮추고 피해를 입힙니다.","sanitizedDescription":"코르키가 정면에 원뿔 형태로 개틀링 건을 발사하여 적의 방어력과 마법 저항력을 낮추고 피해를 입힙니다.","tooltip":"코르키가 {{ e2 }}초 동안 전방의 적들에게 개틀링 건을 연사하여 최대 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 피해를 입히고 방어력과 마법 저항력을 최대 {{ e4 }}만큼 낮춥니다.<br /><br /><span class=\"color919191\"><i>개틀링 건은 {{ e7 }}% 물리 피해, {{ e8 }}% 마법 피해를 입힙니다.<br />방어력과 마법 저항력 감소 효과는 마지막으로 개틀링 건에 의해 피해를 입은 순간부터 {{ e6 }}초 동안 지속됩니다.</i></span>","sanitizedTooltip":"코르키가 {{ e2 }}초 동안 전방의 적들에게 개틀링 건을 연사하여 최대 {{ e1 }} (+{{ a1 }})의 피해를 입히고 방어력과 마법 저항력을 최대 {{ e4 }}만큼 낮춥니다. 개틀링 건은 {{ e7 }}% 물리 피해, {{ e8 }}% 마법 피해를 입힙니다. 방어력과 마법 저항력 감소 효과는 마지막으로 개틀링 건에 의해 피해를 입은 순간부터 {{ e6 }}초 동안 지속됩니다.","leveltip":{"label":["피해량","방어력 / 마법 저항력 감소"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}"]},"image":{"full":"GGun.png","sprite":"spell2.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[16,16,16,16,16],"cooldownBurn":"16","effect":[null,[80,140,200,260,320],[4,4,4,4,4],[4,4,4,4,4],[4,8,12,16,20],[8,8,8,8,8],[2,2,2,2,2],[50,50,50,50,50],[50,50,50,50,50],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/140/200/260/320","4","4","4/8/12/16/20","8","2","50","50","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.6]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"GGun"},{"name":"미사일 폭격","description":"코르키가 목표 지점에 충돌 시 폭발하는 미사일을 발사하여 해당 지역에 있는 적들에게 피해를 입힙니다. 코르키는 시간이 지날수록 미사일을 저장하여 최대치까지 장전해 둘 수 있습니다. 3번째 발사하는 미사일은 '큰 놈'으로, 추가 피해를 입힙니다.","sanitizedDescription":"코르키가 목표 지점에 충돌 시 폭발하는 미사일을 발사하여 해당 지역에 있는 적들에게 피해를 입힙니다. 코르키는 시간이 지날수록 미사일을 저장하여 최대치까지 장전해 둘 수 있습니다. 3번째 발사하는 미사일은 '큰 놈'으로, 추가 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">사용 시:</span> 코르키가 첫 번째 맞는 적에게서 폭발하는 미사일을 발사하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />코르키는 최대 7개까지 미사일을 장전할 수 있으며, 매 3번째마다 강화된 미사일을 발사하여 {{ f2 }}%의 피해({{ f3 }})를 입힙니다.","sanitizedTooltip":"사용 시: 코르키가 첫 번째 맞는 적에게서 폭발하는 미사일을 발사하여 {{ e1 }} (+{{ f1 }}) (+{{ a1 }})의 마법 피해를 입힙니다. 코르키는 최대 7개까지 미사일을 장전할 수 있으며, 매 3번째마다 강화된 미사일을 발사하여 {{ f2 }}%의 피해({{ f3 }})를 입힙니다.","leveltip":{"label":["기본 피해량","공격력 계수","미사일 재장전 시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}"]},"image":{"full":"MissileBarrage.png","sprite":"spell2.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[20,20,20],"costBurn":"20","cooldown":[2,2,2],"cooldownBurn":"2","effect":[null,[75,100,125],[15,45,75],[300,300,300],[2,2,2],[0.15,0.45,0.75],[0,0,0],[50,50,50],[200,200,200],[200,200,200],[0,0,0]],"effectBurn":["","75/100/125","15/45/75","300","2","0.15/0.45/0.75","0","50","200","200","0"],"vars":[{"key":"f1","link":"@cooldownchampion","coeff":[10]},{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"f3","link":"@dynamic.attackdamage","coeff":[0]}],"range":[1225,1225,1225],"rangeBurn":"1225","key":"MissileBarrage"}],"passive":{"name":"마법공학 탄약","description":"코르키의 기본 공격은 물리 피해를 입히지만 일정 비율 마법 피해로 전환됩니다. 가끔씩 제단에 폭탄 꾸러미가 도착해 코르키가 집을 수 있으며, 이 경우 비전투 시 이동 속도가 증가하고 발키리가 특급 폭탄 배송으로 업그레이드됩니다.","sanitizedDescription":"코르키의 기본 공격은 물리 피해를 입히지만 일정 비율 마법 피해로 전환됩니다. 가끔씩 제단에 폭탄 꾸러미가 도착해 코르키가 집을 수 있으며, 이 경우 비전투 시 이동 속도가 증가하고 발키리가 특급 폭탄 배송으로 업그레이드됩니다.","image":{"full":"Corki_RapidReload.png","sprite":"passive0.png","group":"passive","x":384,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Corki","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3072,"count":1},{"id":3031,"count":1},{"id":3508,"count":1}]}]},{"champion":"Corki","title":"CorkiARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Corki","title":"CorkiCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Corki","title":"CorkiFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Corki","title":"CorkiKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3094,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Corki","title":"CorkiPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3020,"count":1},{"id":3078,"count":1},{"id":3146,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3124,"count":1},{"id":3091,"count":1},{"id":3135,"count":1}]}]},{"champion":"Corki","title":"CorkiSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3135,"count":1}]}]},{"champion":"Corki","title":"CorkiSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3135,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Corki","title":"CorkiTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3508,"count":1},{"id":3072,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3102,"count":1},{"id":3156,"count":1},{"id":3033,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Nautilus":{"id":111,"key":"Nautilus","name":"노틸러스","title":"심해의 타이탄","image":{"full":"Nautilus.png","sprite":"champion2.png","group":"champion","x":288,"y":48,"w":48,"h":48},"skins":[{"id":111000,"name":"default","num":0},{"id":111001,"name":"아틀란티스 노틸러스","num":1},{"id":111002,"name":"지하 세계 노틸러스","num":2},{"id":111003,"name":"우주비행사 노틸러스","num":3},{"id":111004,"name":"심판자 노틸러스","num":4},{"id":111005,"name":"파괴의 신 노틸러스","num":5}],"lore":"빌지워터에서 바다에 고수레를 바치는 뱃사람이라면 모두 아는 이야기가 있다. 시간이 시작되기 전부터 노틸러스는 푸른 불꽃 제도 해안의 어두운 해역을 방황하며 무례한 선원을 죽음으로 끌어당긴다. 방어구를 갖춰 입은 노틸러스의 공격에는 예고가 없으며, 거침없는 발소리가 바닷물을 소용돌이치게 하는가 싶으면 노틸러스가 거대한 닻을 위로 치켜들어 배의 돛대와 용골을 한꺼번에 박살낸다. 그리고서 노틸러스는 파도 아래에서 표류물을 끌어당겨 수염 달린 여신의 분노를 달래는 것이다.","blurb":"빌지워터에서 바다에 고수레를 바치는 뱃사람이라면 모두 아는 이야기가 있다. 시간이 시작되기 전부터 노틸러스는 푸른 불꽃 제도 해안의 어두운 해역을 방황하며 무례한 선원을 죽음으로 끌어당긴다. 방어구를 갖춰 입은 노틸러스의 공격에는 예고가 없으며, 거침없는 발소리가 바닷물을 소용돌이치게 하는가 싶으면 노틸러스가 거대한 닻을 위로 치켜들어 배의 돛대와 용골을 한꺼번에 박살낸다. 그리고서 노틸러스는 파도 아래에서 표류물을 끌어당겨 수염 달린 여신의 분노를...","allytips":["- 기습할 때 닻줄 견인으로 근처 지형을 맞힌 다음 역조 스킬을 연계하면 공격 성공률을 높일 수 있습니다.","- 역조 스킬은 사용 시 폭발하기까지 지연 시간이 있습니다. 달아날 때나 다가오는 적들을 방해할 때는 이 지연시간을 계산해서 활용하세요."],"enemytips":["- 노틸러스가 곁에서 역조 스킬을 사용할 때는, 그 자리에서 버티다가 물결 효과가 끝난 다음 달아나세요. 미리 달아나면 이차 폭발에 맞아 추가 피해와 둔화 효과에 걸릴 수 있습니다.","- 노틸러스는 보호막이 지속되는 동안은 기본 공격으로 큰 광역 피해와 둔화를 줄 수 있습니다. 시간이 있으면 보호막이 사라질 때까지 기다리세요."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":4,"defense":6,"magic":6,"difficulty":6},"stats":{"armor":35.46,"armorperlevel":3.75,"attackdamage":57.54,"attackdamageperlevel":3.3,"attackrange":175,"attackspeedoffset":0.02,"attackspeedperlevel":1,"crit":0,"critperlevel":0,"hp":576.48,"hpperlevel":86,"hpregen":8.374,"hpregenperlevel":0.55,"movespeed":325,"mp":334,"mpperlevel":47,"mpregen":8.626,"mpregenperlevel":0.5,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"닻줄 견인","description":"노틸러스가 닻을 전방으로 던집니다. 챔피언에게 맞을 경우 자신과 상대방이 가까이 당겨집니다. 지형에 맞으면 대신 노틸러스가 닻 쪽으로 당겨지며, 닻줄 견인의 재사용 대기시간이 절반으로 줄어들고 소모된 마나의 절반이 회복됩니다.","sanitizedDescription":"노틸러스가 닻을 전방으로 던집니다. 챔피언에게 맞을 경우 자신과 상대방이 가까이 당겨집니다. 지형에 맞으면 대신 노틸러스가 닻 쪽으로 당겨지며, 닻줄 견인의 재사용 대기시간이 절반으로 줄어들고 소모된 마나의 절반이 회복됩니다.","tooltip":"노틸러스가 전방으로 닻을 던집니다. 적 유닛에게 맞으면 노틸러스와 대상이 가까이 당겨지며 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 적에게 입히고 잠깐 기절시킵니다.<br /><br />닻이 지형을 맞히면 노틸러스가 전방으로 끌려가며 재사용 대기시간이 {{ e3 }}% (<totalValue>{{ f1 }}</totalValue>) 감소하고, 소모된 마나의 {{ e4 }}%가 회복됩니다.","sanitizedTooltip":"노틸러스가 전방으로 닻을 던집니다. 적 유닛에게 맞으면 노틸러스와 대상이 가까이 당겨지며 {{ e1 }} (+{{ a1 }})의 마법 피해를 적에게 입히고 잠깐 기절시킵니다. 닻이 지형을 맞히면 노틸러스가 전방으로 끌려가며 재사용 대기시간이 {{ e3 }}% ({{ f1 }}) 감소하고, 소모된 마나의 {{ e4 }}%가 회복됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NautilusAnchorDrag.png","sprite":"spell8.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[80,120,160,200,240],[0,0,0,0,0],[50,50,50,50,50],[50,50,50,50,50],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","0","50","50","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]},{"key":"f1","link":"@special.nautilusq","coeff":[0.5]}],"range":[950,950,950,950,950],"rangeBurn":"950","key":"NautilusAnchorDrag"},{"name":"타이탄의 분노","description":"노틸러스가 어둠의 기운으로 자신을 감싸 피해를 막아주는 보호막을 생성합니다. 보호막이 지속되는 동안에는 노틸러스가 공격할 때 대상 주위의 적들에게 지속 피해가 적용됩니다.","sanitizedDescription":"노틸러스가 어둠의 기운으로 자신을 감싸 피해를 막아주는 보호막을 생성합니다. 보호막이 지속되는 동안에는 노틸러스가 공격할 때 대상 주위의 적들에게 지속 피해가 적용됩니다.","tooltip":"노틸러스가 {{ e3 }}초 동안 어둠의 기운으로 자신을 감싸, 다음 {{ e1 }} <scaleHealth>(+{{ f1 }})</scaleHealth> (최대 체력의 {{ e2 }}%)의 피해를 흡수합니다.<br /><br />보호막이 지속되는 동안, 노틸러스의 기본 공격은 2초에 걸쳐 공격 대상 주위의 모든 적에게 {{ e4 }} <scaleAP>(+{{ a1 }})</scaleAP>의 추가 마법 피해를 줍니다.","sanitizedTooltip":"노틸러스가 {{ e3 }}초 동안 어둠의 기운으로 자신을 감싸, 다음 {{ e1 }} (+{{ f1 }}) (최대 체력의 {{ e2 }}%)의 피해를 흡수합니다. 보호막이 지속되는 동안, 노틸러스의 기본 공격은 2초에 걸쳐 공격 대상 주위의 모든 적에게 {{ e4 }} (+{{ a1 }})의 추가 마법 피해를 줍니다.","leveltip":{"label":["보호막 흡수량","추가 마법 피해량","최대 체력 %"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"NautilusPiercingGaze.png","sprite":"spell8.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[18,18,18,18,18],"cooldownBurn":"18","effect":[null,[65,70,75,80,85],[9,11,13,15,17],[10,10,10,10,10],[30,40,50,60,70],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/70/75/80/85","9/11/13/15/17","10","30/40/50/60/70","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonushealth","coeff":[0.1]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"NautilusPiercingGaze"},{"name":"역조","description":"노틸러스가 지면을 강타하여 주위의 땅이 세 번 연속으로 폭발합니다. 폭발할 때마다 적들에게 피해를 주고 속도를 감소시킵니다.","sanitizedDescription":"노틸러스가 지면을 강타하여 주위의 땅이 세 번 연속으로 폭발합니다. 폭발할 때마다 적들에게 피해를 주고 속도를 감소시킵니다.","tooltip":"노틸러스가 지면을 내리쳐 주위의 땅을 폭발시킵니다. 폭발할 때마다 범위 내의 모든 적에게 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 주고, {{ e4 }}초간 {{ e2 }}%만큼 둔화시킵니다. 이 둔화 효과는 시간이 지나면 사라집니다.<br /><br />한 유닛이 폭발에 여러 번 맞을 수도 있지만, 추가 폭발에 입는 피해는 {{ e3 }}% 감소합니다.","sanitizedTooltip":"노틸러스가 지면을 내리쳐 주위의 땅을 폭발시킵니다. 폭발할 때마다 범위 내의 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 주고, {{ e4 }}초간 {{ e2 }}%만큼 둔화시킵니다. 이 둔화 효과는 시간이 지나면 사라집니다. 한 유닛이 폭발에 여러 번 맞을 수도 있지만, 추가 폭발에 입는 피해는 {{ e3 }}% 감소합니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NautilusSplashZone.png","sprite":"spell8.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[55,85,115,145,175],[30,35,40,45,50],[50,50,50,50,50],[1.25,1.25,1.25,1.25,1.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/85/115/145/175","30/35/40/45/50","50","1.25","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"NautilusSplashZone"},{"name":"폭뢰","description":"지면에 충격파를 발사하면 상대방을 추적해 갑니다. 충격파는 위의 지면을 찢으며 적들을 공중으로 띄웁니다. 충격파가 상대방에게 닿으면 폭발하여 대상을 공중으로 띄우고 기절시킵니다.","sanitizedDescription":"지면에 충격파를 발사하면 상대방을 추적해 갑니다. 충격파는 위의 지면을 찢으며 적들을 공중으로 띄웁니다. 충격파가 상대방에게 닿으면 폭발하여 대상을 공중으로 띄우고 기절시킵니다.","tooltip":"노틸러스가 적 챔피언을 추격하는 충격파를 발사합니다. 추격 중 다른 적을 관통하면 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 주고 공중으로 띄워 {{ e5 }}초 동안 기절시킵니다.<br /><br />충격파가 목표 대상에게 맞으면 폭발하면서 {{ e2 }} <scaleAP>(+{{ a2 }})</scaleAP>의 마법 피해를 주고, 공중으로 띄우며 {{ e5 }}초 동안 기절시킵니다. ","sanitizedTooltip":"노틸러스가 적 챔피언을 추격하는 충격파를 발사합니다. 추격 중 다른 적을 관통하면 {{ e1 }} (+{{ a1 }})의 마법 피해를 주고 공중으로 띄워 {{ e5 }}초 동안 기절시킵니다. 충격파가 목표 대상에게 맞으면 폭발하면서 {{ e2 }} (+{{ a2 }})의 마법 피해를 주고, 공중으로 띄우며 {{ e5 }}초 동안 기절시킵니다.","leveltip":{"label":["관통 피해","폭발 피해","기절 지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NautilusGrandLine.png","sprite":"spell8.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[125,175,225],[200,325,450],[0,0,0],[0,0,0],[1,1.5,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","125/175/225","200/325/450","0","0","1/1.5/2","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.8]}],"range":[825,825,825],"rangeBurn":"825","key":"NautilusGrandLine"}],"passive":{"name":"강력한 일격","description":"노틸러스의 기본 공격이 추가 물리 피해를 주고 대상들을 이동 불가 상태로 만듭니다. 이 효과는 동일한 대상에 대해서는 몇 초에 한 번씩만 적용될 수 있습니다.","sanitizedDescription":"노틸러스의 기본 공격이 추가 물리 피해를 주고 대상들을 이동 불가 상태로 만듭니다. 이 효과는 동일한 대상에 대해서는 몇 초에 한 번씩만 적용될 수 있습니다.","image":{"full":"Nautilus_StaggeringBlow.png","sprite":"passive2.png","group":"passive","x":288,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Nautilus","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":3302,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3068,"count":1},{"id":3110,"count":1},{"id":3001,"count":1},{"id":3151,"count":1}]}]},{"champion":"Nautilus","title":"NautilusARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3800,"count":1},{"id":3102,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3001,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nautilus","title":"NautilusCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3097,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3401,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nautilus","title":"NautilusFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2049,"count":1},{"id":3401,"count":1},{"id":3117,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3110,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nautilus","title":"NautilusKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3001,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nautilus","title":"NautilusSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2045,"count":1},{"id":3401,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3190,"count":1},{"id":3143,"count":1}]}]},{"champion":"Nautilus","title":"NautilusSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3211,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3194,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3110,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3193,"count":1},{"id":3075,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nautilus","title":"NautilusSupport","type":"riot-support","map":"any","mode":"any","blocks":[{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3097,"count":1},{"id":2049,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":2045,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3193,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nautilus","title":"NautilusTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3190,"count":1},{"id":1401,"count":1},{"id":3047,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3302,"count":1},{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3401,"count":1},{"id":3190,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3091,"count":1},{"id":3025,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3110,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Ahri":{"id":103,"key":"Ahri","name":"아리","title":"구미호","image":{"full":"Ahri.png","sprite":"champion0.png","group":"champion","x":48,"y":0,"w":48,"h":48},"skins":[{"id":103000,"name":"default","num":0},{"id":103001,"name":"한복 아리","num":1},{"id":103002,"name":"어둠여우 아리","num":2},{"id":103003,"name":"불여우 아리","num":3},{"id":103004,"name":"팝스타 아리","num":4},{"id":103005,"name":"도전자 아리","num":5},{"id":103006,"name":"고교 여신 아리","num":6},{"id":103007,"name":"아케이드 아리","num":7},{"id":103014,"name":"별 수호자 아리","num":14}],"lore":"룬테라가 가진 잠재력과 선천적으로 연결된 아리는 마법을 순수한 에너지의 구체로 변환할 수 있는 바스타야다. 아리는 먹잇감의 감정을 질리도록 조종하며 가지고 놀다가 마지막에 생명의 정수를 흡수하는 것을 즐긴다. 타고난 포식자지만, 먹어치우는 영혼에 담긴 기억의 편린을 받아들일 때마다 거기에 감정 이입하게 된다.","blurb":"룬테라가 가진 잠재력과 선천적으로 연결된 아리는 마법을 순수한 에너지의 구체로 변환할 수 있는 바스타야다. 아리는 먹잇감의 감정을 질리도록 조종하며 가지고 놀다가 마지막에 생명의 정수를 흡수하는 것을 즐긴다. 타고난 포식자지만, 먹어치우는 영혼에 담긴 기억의 편린을 받아들일 때마다 거기에 감정 이입하게 된다.","allytips":["- 스킬을 연속으로 쓸 때 매혹으로 시작하면 현혹의 구슬과 여우불의 적중률이 크게 올라갑니다.","- 매혹을 사용해서 팀간 전투를 시작하고, 도망가는 적들은 혼령 질주로 처리하세요.","- 혼령 질주를 쓰면 매혹을 맞히기 쉬워지고, 현혹의 구슬을 두 번 다 맞힐 수도 있으며, 거리를 좁혀 여우불을 사용하기도 쉬워집니다."],"enemytips":["- 아리는 궁극기 혼령 질주가 없으면 생존력이 극도로 낮아집니다.","- 미니언 뒤에 숨어서 매혹 스킬을 쓰기 힘들게 만들면 아리가 제대로 피해를 줄 수 없습니다."],"tags":["Mage","Assassin"],"partype":"마나","info":{"attack":3,"defense":4,"magic":8,"difficulty":5},"stats":{"armor":20.88,"armorperlevel":3.5,"attackdamage":53.04,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":-0.065,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":526,"hpperlevel":92,"hpregen":6.508,"hpregenperlevel":0.6,"movespeed":330,"mp":334,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"현혹의 구슬","description":"아리가 구슬을 던지고 다시 받습니다. 던질 때는 마법 피해를 주며 돌아올 때는 고정 피해를 줍니다. 아리의 이동속도가 상승했다가 구슬이 움직이는 동안 서서히 감소합니다.","sanitizedDescription":"아리가 구슬을 던지고 다시 받습니다. 던질 때는 마법 피해를 주며 돌아올 때는 고정 피해를 줍니다. 아리의 이동속도가 상승했다가 구슬이 움직이는 동안 서서히 감소합니다.","tooltip":"구슬을 던져 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주며 구슬이 돌아올 때 적중한 적에게는 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 고정 피해를 줍니다.<br /><br />아리의 이동속도가 상승했다가 구슬이 움직이는 동안 서서히 감소합니다.","sanitizedTooltip":"구슬을 던져 {{ e1 }} (+{{ a1 }})의 마법 피해를 주며 구슬이 돌아올 때 적중한 적에게는 {{ e1 }} (+{{ a1 }})의 고정 피해를 줍니다. 아리의 이동속도가 상승했다가 구슬이 움직이는 동안 서서히 감소합니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","  {{ cost }} -> {{ costNL }}"]},"image":{"full":"AhriOrbofDeception.png","sprite":"spell0.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,70,75,80,85],"costBurn":"65/70/75/80/85","cooldown":[7,7,7,7,7],"cooldownBurn":"7","effect":[null,[40,65,90,115,140],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/65/90/115/140","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]},{"key":"a1","link":"spelldamage","coeff":[0.35]}],"range":[880,880,880,880,880],"rangeBurn":"880","key":"AhriOrbofDeception"},{"name":"여우불","description":"아리가 여우불 세 개를 생성하면, 각각 자동으로 적을 찾아 공격합니다.","sanitizedDescription":"아리가 여우불 세 개를 생성하면, 각각 자동으로 적을 찾아 공격합니다.","tooltip":"근처의 적(챔피언 우선)을 추적해 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히는 여우불 3개를 발사합니다.<br /><br /> 여우불 하나 이상에 명중 당한 적은 두 번째 여우불부터 30%의 피해를 입으며, 단일 대상이 입을 수 있는 최대 피해량은 {{ f1 }}입니다.","sanitizedTooltip":"근처의 적(챔피언 우선)을 추적해 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히는 여우불 3개를 발사합니다. 여우불 하나 이상에 명중 당한 적은 두 번째 여우불부터 30%의 피해를 입으며, 단일 대상이 입을 수 있는 최대 피해량은 {{ f1 }}입니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AhriFoxFire.png","sprite":"spell0.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[40,65,90,115,140],[12,19.5,27,34.5,42],[64,104,144,184,224],[30,30,30,30,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/65/90/115/140","12/19.5/27/34.5/42","64/104/144/184/224","30","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"AhriFoxFire"},{"name":"매혹","description":"아리가 키스를 날려 피해를 주며 맞은 적을 홀립니다. 홀린 적은 아리 쪽으로 무작정 다가갑니다.","sanitizedDescription":"아리가 키스를 날려 피해를 주며 맞은 적을 홀립니다. 홀린 적은 아리 쪽으로 무작정 다가갑니다.","tooltip":"키스를 날려 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 줍니다. 첫 번째로 맞은 적은 홀려서 {{ e2 }}초 동안 아리 쪽으로 무작정 걸어옵니다.","sanitizedTooltip":"키스를 날려 {{ e1 }} (+{{ a1 }})의 마법 피해를 줍니다. 첫 번째로 맞은 적은 홀려서 {{ e2 }}초 동안 아리 쪽으로 무작정 걸어옵니다.","leveltip":{"label":["피해량","지속 시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }} -> {{ e2NL }}"]},"image":{"full":"AhriSeduce.png","sprite":"spell0.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[85,85,85,85,85],"costBurn":"85","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,95,130,165,200],[1,1.25,1.5,1.75,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/95/130/165/200","1/1.25/1.5/1.75/2","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[975,975,975,975,975],"rangeBurn":"975","key":"AhriSeduce"},{"name":"혼령 질주","description":"아리가 전방으로 질주하며 근처 세 명의 적 챔피언에게 혼령의 정기를 쏘아냅니다. (적 챔피언 우선) 최대 3번 사용한 다음 재사용 대기시간이 적용됩니다.","sanitizedDescription":"아리가 전방으로 질주하며 근처 세 명의 적 챔피언에게 혼령의 정기를 쏘아냅니다. (적 챔피언 우선) 최대 3번 사용한 다음 재사용 대기시간이 적용됩니다.","tooltip":"전방으로 민첩하게 질주하며 근처 세 명의 적에게 (챔피언 우선) 혼령의 정기를 쏘아내 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 줍니다. 10초 안에 최대 세 번까지 사용한 뒤 재사용 대기시간이 적용됩니다.","sanitizedTooltip":"전방으로 민첩하게 질주하며 근처 세 명의 적에게 (챔피언 우선) 혼령의 정기를 쏘아내 {{ e1 }} (+{{ a1 }})의 마법 피해를 줍니다. 10초 안에 최대 세 번까지 사용한 뒤 재사용 대기시간이 적용됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AhriTumble.png","sprite":"spell0.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,95,80],"cooldownBurn":"110/95/80","effect":[null,[70,110,150],[10,20,30],[28,23,18],[2,2,2],[1,1,1],[10,10,10],[10,10,10],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","70/110/150","10/20/30","28/23/18","2","1","10","10","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.25]}],"range":[450,450,450],"rangeBurn":"450","key":"AhriTumble"}],"passive":{"name":"정기 흡수","description":"스킬이 적에게 적중할 때마다 정기 흡수 수치를 얻습니다. (스킬 한 번당 최대 3번) 9번 중첩되면 아리가 다음 번 스킬을 사용할 때 적중 시마다 체력을 회복합니다.","sanitizedDescription":"스킬이 적에게 적중할 때마다 정기 흡수 수치를 얻습니다. (스킬 한 번당 최대 3번) 9번 중첩되면 아리가 다음 번 스킬을 사용할 때 적중 시마다 체력을 회복합니다.","image":{"full":"Ahri_SoulEater.png","sprite":"passive0.png","group":"passive","x":48,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Ahri","title":"AhriARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"AhriCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"AhriFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3114,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"AhriKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"AhriSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"AhriSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]}]},{"champion":"Ahri","title":"AhriSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"AhriTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ahri","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]}]},"Jayce":{"id":126,"key":"Jayce","name":"제이스","title":"미래의 수호자","image":{"full":"Jayce.png","sprite":"champion1.png","group":"champion","x":192,"y":48,"w":48,"h":48},"skins":[{"id":126000,"name":"default","num":0},{"id":126001,"name":"풀 메탈 제이스","num":1},{"id":126002,"name":"연미복 제이스","num":2},{"id":126003,"name":"악에 물든 제이스","num":3},{"id":126004,"name":"성기사 제이스","num":4}],"lore":"영민한 발명가 제이스는 필트오버의 수호와 진보를 위해서라면 무엇이든 할 수 있는 필트오버의 영웅이다. 마법공학 변신 해머를 전용무기로 사용하는 그는 자신의 힘과 용기, 지능을 언제든 조국을 위해 바칠 각오가 되어있다. 필트오버의 전 국민이 제이스를 영웅으로 추대하지만 정작 그는 이러한 관심을 반기지 않는다. 그에 대한 국민들의 칭송과 감탄이 적을 도발할 수 있다는 것을 누구보다 잘 알고 있기 때문이다. 조국에 대한 제이스의 충성심을 모르는 사람은 아무도 없으며 그의 능력을 시기하는 이들조차 진보의 도시를 수호하는 제이스의 노고에 감사를 표한다.","blurb":"영민한 발명가 제이스는 필트오버의 수호와 진보를 위해서라면 무엇이든 할 수 있는 필트오버의 영웅이다. 마법공학 변신 해머를 전용무기로 사용하는 그는 자신의 힘과 용기, 지능을 언제든 조국을 위해 바칠 각오가 되어있다. 필트오버의 전 국민이 제이스를 영웅으로 추대하지만 정작 그는 이러한 관심을 반기지 않는다. 그에 대한 국민들의 칭송과 감탄이 적을 도발할 수 있다는 것을 누구보다 잘 알고 있기 때문이다. 조국에 대한 제이스의 충성심을 모르는 사람은...","allytips":["- 무기를 되도록 자주 변환하십시오. 무기를 바꿀 때마다 공격력이 강화되며 순간적으로 이동 속도를 증가시킬 수 있습니다.","- 적의 공격으로 받는 피해가 클 경우, 무기를 해머로 변환하면 방어력이 향상됩니다.","- 전격 폭발 스킬을 사용할 때 가속 관문을 통과하도록 하면 사거리와 피해량이 대폭 증가합니다."],"enemytips":["- 제이스는 근접과 원거리 공격이 모두 가능합니다. 제이스의 자세와 무기 색깔을 보고 현재 근접인지 원거리인지 파악하도록 하세요.","- 가속 관문을 열었다면 이어서 전격 폭발을 시전할 가능성이 크므로 주의해야 합니다.","- 제이스는 게임 초반에 강력합니다. 제이스가 추가 효과를 받은 경우 방어적으로 플레이하십시오."],"tags":["Fighter","Marksman"],"partype":"마나","info":{"attack":8,"defense":4,"magic":3,"difficulty":7},"stats":{"armor":27,"armorperlevel":3.5,"attackdamage":58,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":-0.05,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":576,"hpperlevel":95,"hpregen":7.344,"hpregenperlevel":0.8,"movespeed":335,"mp":357.2,"mpperlevel":37,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"하늘로! / 전격 폭발","description":"해머 사용 시: 공중으로 도약해 적들에게 물리 피해를 입히고 이동 속도를 감소시킵니다.<br><br>캐논 사용 시: 적을 맞히거나 사거리 끝에 닿으면 폭발하는 전기 구체를 발사해 맞은 적 모두에게 물리 피해를 입힙니다.","sanitizedDescription":"해머 사용 시: 공중으로 도약해 적들에게 물리 피해를 입히고 이동 속도를 감소시킵니다. 캐논 사용 시: 적을 맞히거나 사거리 끝에 닿으면 폭발하는 전기 구체를 발사해 맞은 적 모두에게 물리 피해를 입힙니다.","tooltip":"공중으로 도약해 근처 적에게{{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 가하고 이동 속도를 {{ e5 }}초 동안 {{ e3 }}% 감소시킵니다.","sanitizedTooltip":"공중으로 도약해 근처 적에게{{ e1 }} (+{{ a1 }})의 물리 피해를 가하고 이동 속도를 {{ e5 }}초 동안 {{ e3 }}% 감소시킵니다.","leveltip":{"label":["피해량","재사용 대기시간","둔화"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"JayceToTheSkies.png","sprite":"spell4.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":6,"cost":[40,40,40,40,40,40],"costBurn":"40","cooldown":[16,14,12,10,8,6],"cooldownBurn":"16/14/12/10/8/6","effect":[null,[45,80,115,150,185,220],[1.5,1.5,1.5,1.5,1.5,2],[30,35,40,45,50,55],[20,40,60,80,0,0],[2,2,2,2,2,2],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],"effectBurn":["","45/80/115/150/185/220","1.5/1.5/1.5/1.5/1.5/2","30/35/40/45/50/55","20/40/60/80/0/0","2","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.2]}],"range":[600,600,600,600,600,600],"rangeBurn":"600","key":"JayceToTheSkies"},{"name":"전류 역장 / 초전하","description":"해머 사용 시: 기본 지속 효과: 매 공격 시마다 마나가 회복됩니다. 사용 시: 몇 초 동안 주위 적에게 피해를 입히는 전류 역장을 생성합니다.<br><br>캐논 사용 시: 동력이 대폭 증가하여 다음 몇 차례의 공격에 대한 공격 속도가 최대로 증가합니다.","sanitizedDescription":"해머 사용 시: 기본 지속 효과: 매 공격 시마다 마나가 회복됩니다. 사용 시: 몇 초 동안 주위 적에게 피해를 입히는 전류 역장을 생성합니다. 캐논 사용 시: 동력이 대폭 증가하여 다음 몇 차례의 공격에 대한 공격 속도가 최대로 증가합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 해머를 사용하는 동안은 매 타격 당 {{ e5 }}의 마나를 얻습니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> {{ e2 }}초 동안 전류 오오라를 생성하여 주위 적에게 {{ e4 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"기본 지속 효과: 해머를 사용하는 동안은 매 타격 당 {{ e5 }}의 마나를 얻습니다. 사용 시: {{ e2 }}초 동안 전류 오오라를 생성하여 주위 적에게 {{ e4 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","마나 회복량"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e5 }} -> {{ e5NL }}"]},"image":{"full":"JayceStaticField.png","sprite":"spell4.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":6,"cost":[40,40,40,40,40,40],"costBurn":"40","cooldown":[10,10,10,10,10,10],"cooldownBurn":"10","effect":[null,[25,35,45,55,65,75],[4,4,4,4,4,4],[25,30,35,40,45,50],[100,160,220,280,340,400],[6,8,10,12,14,16],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],"effectBurn":["","25/35/45/55/65/75","4","25/30/35/40/45/50","100/160/220/280/340/400","6/8/10/12/14/16","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[285,285,285,285,285,285],"rangeBurn":"285","key":"JayceStaticField"},{"name":"천둥 강타 / 가속 관문","description":"해머 사용 시: 적에게 마법 피해를 가하고 짧은 거리 만큼 뒤로 밀쳐냅니다.<br><br>캐논 사용 시: 가속 관문을 열어 관문을 통과하는 아군 챔피언의 이동 속도를 증가시킵니다. 이 관문을 통해 전격 폭발을 발사할 경우 전기 구체의 이동 속도와 사거리가 증가하며, 피해량 또한 증가합니다.","sanitizedDescription":"해머 사용 시: 적에게 마법 피해를 가하고 짧은 거리 만큼 뒤로 밀쳐냅니다. 캐논 사용 시: 가속 관문을 열어 관문을 통과하는 아군 챔피언의 이동 속도를 증가시킵니다. 이 관문을 통해 전격 폭발을 발사할 경우 전기 구체의 이동 속도와 사거리가 증가하며, 피해량 또한 증가합니다.","tooltip":"대상 최대 체력의 {{ e4 }}% <span class=\"colorFF8C00\">(+{{ a1 }})</span>에 해당하는 마법 피해를 가하고, 짧은 거리만큼 뒤로 밀쳐냅니다. (몬스터에게 가하는 최대 피해량 {{ e1 }})","sanitizedTooltip":"대상 최대 체력의 {{ e4 }}% (+{{ a1 }})에 해당하는 마법 피해를 가하고, 짧은 거리만큼 뒤로 밀쳐냅니다. (몬스터에게 가하는 최대 피해량 {{ e1 }})","leveltip":{"label":["최대 체력 %","재사용 대기시간","몬스터에 대한 최대 피해량"],"effect":["{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"JayceThunderingBlow.png","sprite":"spell4.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":6,"cost":[55,55,55,55,55,55],"costBurn":"55","cooldown":[20,18,16,14,12,10],"cooldownBurn":"20/18/16/14/12/10","effect":[null,[200,300,400,500,600,700],[0.25,0.25,0.25,0.25,0.25,0.25],[10,20,30,40,50,60],[8,10.4,12.8,15.2,17.6,20],[40,70,100,130,160,190],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],"effectBurn":["","200/300/400/500/600/700","0.25","10/20/30/40/50/60","8/10.4/12.8/15.2/17.6/20","40/70/100/130/160/190","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1]}],"range":[240,240,240,240,240,240],"rangeBurn":"240","key":"JayceThunderingBlow"},{"name":"머큐리 캐논 / 머큐리 해머","description":"해머 사용 시: 머큐리 해머를 머큐리 캐논으로 변환하여 새로운 스킬을 사용하며 사거리가 늘어납니다. 변환 후 첫 번째 공격은 적의 방어력과 마법 저항력을 감소시킵니다.<br><br>캐논 사용 시: 머큐리 캐논을 머큐리 해머로 변환하여 새로운 스킬을 사용하며 방어력과 마법 저항력이 증가합니다. 변환 후 첫 번째 공격은 추가 마법 피해를 입힙니다.","sanitizedDescription":"해머 사용 시: 머큐리 해머를 머큐리 캐논으로 변환하여 새로운 스킬을 사용하며 사거리가 늘어납니다. 변환 후 첫 번째 공격은 적의 방어력과 마법 저항력을 감소시킵니다. 캐논 사용 시: 머큐리 캐논을 머큐리 해머로 변환하여 새로운 스킬을 사용하며 방어력과 마법 저항력이 증가합니다. 변환 후 첫 번째 공격은 추가 마법 피해를 입힙니다.","tooltip":"<span class=\"colorFF8C00\">사용 시: </span>머큐리 해머를 머큐리 캐논으로 변환하여 새로운 스킬을 사용하며 원거리에서 공격합니다.<br /><br />변환 후 머큐리 캐논으로 가하는 다음 공격은 대상의 방어력과 마법 저항력을 {{ e3 }}초 동안 {{ f3 }}%감소시킵니다.","sanitizedTooltip":"사용 시: 머큐리 해머를 머큐리 캐논으로 변환하여 새로운 스킬을 사용하며 원거리에서 공격합니다. 변환 후 머큐리 캐논으로 가하는 다음 공격은 대상의 방어력과 마법 저항력을 {{ e3 }}초 동안 {{ f3 }}%감소시킵니다.","image":{"full":"JayceStanceHtG.png","sprite":"spell4.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":1,"cost":[0],"costType":"소모값 없음","costBurn":"0","cooldown":[6],"cooldownBurn":"6","effect":[null,[5],[10],[5],[5],[20],[0],[0],[0],[0],[0]],"effectBurn":["","5","10","5","5","20","0","0","0","0","0"],"range":[600],"rangeBurn":"600","key":"JayceStanceHtG"}],"passive":{"name":"마법공학 축전기","description":"무기를 변환할 때마다 1.25초 동안 이동 속도가 40 증가하며, 유닛을 통과할 수 있게 됩니다.","sanitizedDescription":"무기를 변환할 때마다 1.25초 동안 이동 속도가 40 증가하며, 유닛을 통과할 수 있게 됩니다.","image":{"full":"Jayce_Passive.png","sprite":"passive1.png","group":"passive","x":192,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Jayce","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3072,"count":1},{"id":3508,"count":1},{"id":3031,"count":1}]}]},{"champion":"Jayce","title":"JayceARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1001,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3008,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jayce","title":"JayceCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3134,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jayce","title":"JayceFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3004,"count":1},{"id":1038,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3035,"count":1},{"id":3071,"count":1},{"id":3508,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3155,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jayce","title":"JayceKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":2003,"count":5},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jayce","title":"JayceSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3102,"count":1},{"id":3156,"count":1}]}]},{"champion":"Jayce","title":"JayceSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3134,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Jayce","title":"JayceTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3004,"count":1},{"id":3044,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3142,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Darius":{"id":122,"key":"Darius","name":"다리우스","title":"녹서스의 실력자","image":{"full":"Darius.png","sprite":"champion0.png","group":"champion","x":432,"y":48,"w":48,"h":48},"skins":[{"id":122000,"name":"default","num":0},{"id":122001,"name":"다리우스 경","num":1},{"id":122002,"name":"생체공학 다리우스","num":2},{"id":122003,"name":"북방의 왕 다리우스","num":3},{"id":122004,"name":"덩크왕 다리우스","num":4},{"id":122008,"name":"반항아 다리우스","num":8},{"id":122014,"name":"행성 파괴자 다리우스","num":14}],"lore":"녹서스에서 두려움의 대상이자 역전의 용사로 알려진 다리우스만큼 녹서스를 상징하는 인물이 있을까. 다리우스는 어려운 환경에서 출발해 녹서스의 실력자가 되기까지 녹서스 제국의 적들을 베어 넘겼다. 그리고 그 중 다수가 녹서스인이었다. 다리우스에게는 정당한 이유가 있고, 한 번 치켜든 도끼에 망설임이란 없으니, 트리파르 군단의 사령관에게 맞서는 자들에게 자비란 없다.","blurb":"녹서스에서 두려움의 대상이자 역전의 용사로 알려진 다리우스만큼 녹서스를 상징하는 인물이 있을까. 다리우스는 어려운 환경에서 출발해 녹서스의 실력자가 되기까지 녹서스 제국의 적들을 베어 넘겼다. 그리고 그 중 다수가 녹서스인이었다. 다리우스에게는 정당한 이유가 있고, 한 번 치켜든 도끼에 망설임이란 없으니, 트리파르 군단의 사령관에게 맞서는 자들에게 자비란 없다.","allytips":["- 학살은 강력한 견제기입니다. 사거리 끝에서 적을 가격하면 효과가 극대화됩니다.","- 녹서스의 단두대를 사용하기 전에 공격을 많이 적중시킬수록 더 큰 피해를 입힙니다. 녹서스의 힘 효과를 활용하여 피해량을 극대화하세요.","- 다리우스는 생존력을 강화할 때 큰 혜택을 볼 수 있습니다. 교전을 오래 끌수록 위력도 커집니다."],"enemytips":["- 다리우스는 포획 스킬이 재사용 대기에 들어가고 나면 견제 공격에 취약해집니다.","- 다리우스는 교전 시 탈출기가 별로 없습니다. 유리한 상황일 때는 강하게 압박하세요."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":9,"defense":5,"magic":1,"difficulty":2},"stats":{"armor":39,"armorperlevel":4,"attackdamage":64,"attackdamageperlevel":5,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":1,"crit":0,"critperlevel":0,"hp":582.24,"hpperlevel":100,"hpregen":9.846,"hpregenperlevel":0.95,"movespeed":340,"mp":263,"mpperlevel":37.5,"mpregen":6.6,"mpregenperlevel":0.35,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"학살","description":"다리우스가 도끼를 큰 원의 형태로 휘두릅니다. 도끼날에 맞은 적들은 도끼자루에 맞은 적들보다 더 큰 피해를 입습니다. 다리우스는 도끼날에 맞은 적 챔피언 수에 비례하여 체력이 회복됩니다.","sanitizedDescription":"다리우스가 도끼를 큰 원의 형태로 휘두릅니다. 도끼날에 맞은 적들은 도끼자루에 맞은 적들보다 더 큰 피해를 입습니다. 다리우스는 도끼날에 맞은 적 챔피언 수에 비례하여 체력이 회복됩니다.","tooltip":"잠시 후 다리우스가 도끼를 주위로 휘둘러 경로 상의 적들을 가격합니다. 도끼날에 맞은 적들은 {{ e2 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입습니다. 도끼 자루에 맞은 적들은 {{ e6 }}%의 피해를 입습니다. (도끼 자루에 맞으면 과다출혈 중첩이 적용되지 않습니다.)<br /><br />다리우스는 도끼날로 맞힌 적 챔피언 하나 당<span class=\"colorFF0000\"> 잃은 체력의 {{ e5 }}%</span>가 회복됩니다. (최대: {{ e7 }}%)","sanitizedTooltip":"잠시 후 다리우스가 도끼를 주위로 휘둘러 경로 상의 적들을 가격합니다. 도끼날에 맞은 적들은 {{ e2 }} (+{{ f1 }})의 물리 피해를 입습니다. 도끼 자루에 맞은 적들은 {{ e6 }}%의 피해를 입습니다. (도끼 자루에 맞으면 과다출혈 중첩이 적용되지 않습니다.) 다리우스는 도끼날로 맞힌 적 챔피언 하나 당 잃은 체력의 {{ e5 }}%가 회복됩니다. (최대: {{ e7 }}%)","leveltip":{"label":["피해량","공격력 증가","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"DariusCleave.png","sprite":"spell2.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,35,40,45,50],"costBurn":"30/35/40/45/50","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[100,110,120,130,140],[40,70,100,130,160],[99,99,99,99,99],[0.1,0.1,0.1,0.1,0.1],[12,12,12,12,12],[35,35,35,35,35],[36,36,36,36,36],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","100/110/120/130/140","40/70/100/130/160","99","0.1","12","35","36","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1.05]}],"range":[1,1,1,1,1],"rangeBurn":"1","key":"DariusCleave"},{"name":"마비의 일격","description":"다리우스의 다음 공격은 적의 대동맥을 가격합니다. 적들이 출혈을 일으키면서 이동 속도가 감소합니다.","sanitizedDescription":"다리우스의 다음 공격은 적의 대동맥을 가격합니다. 적들이 출혈을 일으키면서 이동 속도가 감소합니다.","tooltip":" 다리우스의 다음 기본 공격은 <span class=\"colorFF8C00\">{{ f1 }}</span>의 물리 피해를 입히고, {{ e5 }}초 동안 대상을 {{ e2 }}% 둔화시킵니다.<br /><br />마비의 일격으로 대상을 처치하면 소모한 마나를 되돌려받고, 재사용 대기시간의 {{ e3 }}%가 감소합니다.","sanitizedTooltip":"다리우스의 다음 기본 공격은 {{ f1 }}의 물리 피해를 입히고, {{ e5 }}초 동안 대상을 {{ e2 }}% 둔화시킵니다. 마비의 일격으로 대상을 처치하면 소모한 마나를 되돌려받고, 재사용 대기시간의 {{ e3 }}%가 감소합니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DariusNoxianTacticsONH.png","sprite":"spell2.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[0,0,0,0,0],[90,90,90,90,90],[50,50,50,50,50],[1.4,1.4,1.4,1.4,1.4],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","90","50","1.4","1","0","0","0","0","0"],"range":[300,300,300,300,300],"rangeBurn":"300","key":"DariusNoxianTacticsONH"},{"name":"포획","description":"다리우스가 도끼날을 날카롭게 세워, 물리 피해를 가할 때 대상의 방어력 중 일정량을 무시합니다.  스킬을 사용하면 다리우스가 도끼의 갈고리 부분으로 적들을 휘감아 자기 쪽으로 끌어당깁니다.","sanitizedDescription":"다리우스가 도끼날을 날카롭게 세워, 물리 피해를 가할 때 대상의 방어력 중 일정량을 무시합니다. 스킬을 사용하면 다리우스가 도끼의 갈고리 부분으로 적들을 휘감아 자기 쪽으로 끌어당깁니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>다리우스의 방어구 관통력이 {{ e1 }}% 상승합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>다리우스 전방에 있는 모든 적을 끌어당기고, {{ e3 }}초 동안 {{ e2 }}% 둔화시킵니다.","sanitizedTooltip":"기본 지속 효과: 다리우스의 방어구 관통력이 {{ e1 }}% 상승합니다. 사용 시: 다리우스 전방에 있는 모든 적을 끌어당기고, {{ e3 }}초 동안 {{ e2 }}% 둔화시킵니다.","leveltip":{"label":["방어구 관통력","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DariusAxeGrabCone.png","sprite":"spell2.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[24,21,18,15,12],"cooldownBurn":"24/21/18/15/12","effect":[null,[5,10,15,20,25],[40,40,40,40,40],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/10/15/20/25","40","1","0","0","0","0","0","0","0"],"range":[535,535,535,535,535],"rangeBurn":"535","key":"DariusAxeGrabCone"},{"name":"녹서스의 단두대","description":"다리우스가 적 챔피언에게 뛰어올라 치명적 타격을 가해 고정 피해를 입힙니다. 대상에 중첩된 과다출혈에 비례하여 피해량이 증가합니다. 녹서스의 단두대로 적을 처치하는 경우, 잠시 동안 재사용 대기시간이 초기화됩니다.","sanitizedDescription":"다리우스가 적 챔피언에게 뛰어올라 치명적 타격을 가해 고정 피해를 입힙니다. 대상에 중첩된 과다출혈에 비례하여 피해량이 증가합니다. 녹서스의 단두대로 적을 처치하는 경우, 잠시 동안 재사용 대기시간이 초기화됩니다.","tooltip":"대상 적 챔피언에게 뛰어올라 치명적 타격을 가하여, {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 고정 피해를 입힙니다. 대상에 중첩된 과다출혈 당 녹서스의 단두대 스킬에 {{ e3 }}%의 추가 피해가 적용됩니다.<span class=\"size8 colorFF9900\"><br /><br /></span><span class=\"colorF50F00\">최대 피해량: {{ f3 }}</span><span class=\"size8\"><br /><br /></span>녹서스의 단두대로 대상을 처치할 경우, 20초 동안 다리우스가 소모값 없이 녹서스의 단두대를 재시전할 수 있습니다.<span class=\"size8\"><br /><br /></span>녹서스의 단두대 스킬 3레벨 <i>도달 시</i> - 챔피언을 처치하면 재사용 대기시간이 완전히 초기화되며 마나 소모 없이 한 번 더 시전할 수 있습니다.","sanitizedTooltip":"대상 적 챔피언에게 뛰어올라 치명적 타격을 가하여, {{ e1 }} (+{{ f1 }})의 고정 피해를 입힙니다. 대상에 중첩된 과다출혈 당 녹서스의 단두대 스킬에 {{ e3 }}%의 추가 피해가 적용됩니다. 최대 피해량: {{ f3 }} 녹서스의 단두대로 대상을 처치할 경우, 20초 동안 다리우스가 소모값 없이 녹서스의 단두대를 재시전할 수 있습니다. 녹서스의 단두대 스킬 3레벨 도달 시 - 챔피언을 처치하면 재사용 대기시간이 완전히 초기화되며 마나 소모 없이 한 번 더 시전할 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DariusExecute.png","sprite":"spell2.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,0],"costBurn":"100/100/0","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[100,200,300],[0.75,0.75,0.75],[20,20,20],[25,50,100],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/200/300","0.75","20","25/50/100","2","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.75]},{"key":"f3","link":"@special.dariusr3","coeff":[0]}],"range":[460,460,460],"rangeBurn":"460","key":"DariusExecute"}],"passive":{"name":"과다출혈","description":"다리우스가 전략적으로 공격하여 대상에게 출혈을 일으킵니다. 이 효과는 최대 5번까지 중첩됩니다. 적에게 과다출혈 최대 중첩이 쌓이면 다리우스가 녹서스의 힘 효과를 받아, 피해량이 대폭 상승합니다.","sanitizedDescription":"다리우스가 전략적으로 공격하여 대상에게 출혈을 일으킵니다. 이 효과는 최대 5번까지 중첩됩니다. 적에게 과다출혈 최대 중첩이 쌓이면 다리우스가 녹서스의 힘 효과를 받아, 피해량이 대폭 상승합니다.","image":{"full":"Darius_PassiveBuff.png","sprite":"passive0.png","group":"passive","x":432,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Darius","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3067,"count":1},{"id":3044,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]}]},{"champion":"Darius","title":"DariusARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3748,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Darius","title":"DariusCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3075,"count":1},{"id":3143,"count":1},{"id":3748,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Darius","title":"DariusFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3075,"count":1},{"id":3143,"count":1},{"id":3748,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Darius","title":"DariusKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3748,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Darius","title":"DariusSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3075,"count":1},{"id":3143,"count":1},{"id":3748,"count":1}]}]},{"champion":"Darius","title":"DariusSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3075,"count":1},{"id":3143,"count":1},{"id":3748,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2138,"count":1}]}]},{"champion":"Darius","title":"DariusTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3022,"count":1},{"id":3143,"count":1},{"id":3748,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1},{"id":1041,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3022,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Tryndamere":{"id":23,"key":"Tryndamere","name":"트린다미어","title":"야만전사 왕","image":{"full":"Tryndamere.png","sprite":"champion3.png","group":"champion","x":192,"y":96,"w":48,"h":48},"skins":[{"id":23000,"name":"default","num":0},{"id":23001,"name":"최후의 전사 트린다미어","num":1},{"id":23002,"name":"국왕 트린다미어 ","num":2},{"id":23003,"name":"바이킹 트린다미어","num":3},{"id":23004,"name":"마검 트린다미어","num":4},{"id":23005,"name":"술탄 트린다미어","num":5},{"id":23006,"name":"대장군 트린다미어","num":6},{"id":23007,"name":"악몽의 트린다미어","num":7},{"id":23008,"name":"괴물 사냥꾼 트린다미어","num":8},{"id":23009,"name":"화학공학 트린다미어","num":9}],"lore":"걷잡을 수 없는 분노와 증오의 힘을 원동력으로 삼는 트린다미어는 한 때 프렐요드를 돌아다니며 북방의 위대한 전사들에게 공개적으로 도전하며 앞으로 닥칠 암울한 미래를 대비했다. 분노의 야만전사 트린다미어는 부족을 말살시킨 원수에게 복수할 날만을 고대하고 있었지만, 최근에는 아바로사의 전쟁지도자 애쉬의 동료가 되어 아바로사 부족민들과 함께 살게 되었다. 트린다미어의 초인적인 힘과 전설적인 불굴의 용기에 힘입어, 트린다미어 자신과 새로운 아군인 아바로사 부족은 극도로 불리한 상황에서도 셀 수 없이 많은 승리를 거두었다.","blurb":"걷잡을 수 없는 분노와 증오의 힘을 원동력으로 삼는 트린다미어는 한 때 프렐요드를 돌아다니며 북방의 위대한 전사들에게 공개적으로 도전하며 앞으로 닥칠 암울한 미래를 대비했다. 분노의 야만전사 트린다미어는 부족을 말살시킨 원수에게 복수할 날만을 고대하고 있었지만, 최근에는 아바로사의 전쟁지도자 애쉬의 동료가 되어 아바로사 부족민들과 함께 살게 되었다. 트린다미어의 초인적인 힘과 전설적인 불굴의 용기에 힘입어, 트린다미어 자신과 새로운 아군인 아바로사...","allytips":["- 불사의 분노를 아껴두면 적 챔피언이 방심하고 덤벼들도록 유인할 수 있습니다.","- 트린다미어는 피의 갈망으로 체력을 회복할 수 있습니다. 스킬이 사라지기 전에 사용하십시오.","- 적이 방어력을 위주로 아이템을 장착했다면 최후의 속삭임이나 요우무의 유령검 같은 아이템을 사용해 보십시오."],"enemytips":["- 트린다미어가 미니언을 제거한 후 피의 갈망으로 체력을 회복하지 못하도록 게임 초반부에 그를 공격하십시오.","- 트린다미어에게 등을 돌린 경우에만 이동 속도가 감소한다는 점을 기억해 주세요.","- 트린다미어의 공격 스킬 대부분은 물리 피해를 줍니다. 트린다미어가 너무 강력해지면 가시 갑옷을 구매하는 것도 좋은 방법입니다."],"tags":["Fighter","Assassin"],"partype":"분노","info":{"attack":10,"defense":5,"magic":2,"difficulty":5},"stats":{"armor":33,"armorperlevel":3.1,"attackdamage":69,"attackdamageperlevel":3.2,"attackrange":125,"attackspeedoffset":-0.0672,"attackspeedperlevel":2.9,"crit":0,"critperlevel":0,"hp":625.64,"hpperlevel":98,"hpregen":8.512,"hpregenperlevel":0.9,"movespeed":345,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"피의 갈망","description":"트린다미어는 전투의 스릴에 희열을 느낍니다. 트린다미어의 체력이 낮으면 낮을수록 공격력이 상승합니다. 피의 갈망 스킬 사용 시 트린다미어는 분노 수치를 소모하여 체력을 회복할 수 있습니다.","sanitizedDescription":"트린다미어는 전투의 스릴에 희열을 느낍니다. 트린다미어의 체력이 낮으면 낮을수록 공격력이 상승합니다. 피의 갈망 스킬 사용 시 트린다미어는 분노 수치를 소모하여 체력을 회복할 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>트린다미어가 피에 굶주려 {{ e1 }}의 공격력을 얻으며 체력 1%를 잃을 때마다 {{ e2 }}의 공격력을 추가로 얻습니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>트린다미어가 분노를 소모하여 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 체력과 소모한 분노 당 {{ e4 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 체력을 회복합니다.","sanitizedTooltip":"기본 지속 효과: 트린다미어가 피에 굶주려 {{ e1 }}의 공격력을 얻으며 체력 1%를 잃을 때마다 {{ e2 }}의 공격력을 추가로 얻습니다. 사용 시: 트린다미어가 분노를 소모하여 {{ e3 }} (+{{ a1 }})의 체력과 소모한 분노 당 {{ e4 }} (+{{ f2 }})의 체력을 회복합니다.","leveltip":{"label":["공격력","잃은 체력 % 당 공격력","체력 회복량","분노 소모 당 체력 회복량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ e4 }} -> {{ e4NL }}"]},"image":{"full":"TryndamereQ.png","sprite":"spell11.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[5,10,15,20,25],[0.15,0.2,0.25,0.3,0.35],[30,40,50,60,70],[0.5,0.95,1.4,1.85,2.3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/10/15/20/25","0.15/0.2/0.25/0.3/0.35","30/40/50/60/70","0.5/0.95/1.4/1.85/2.3","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"TryndamereQ"},{"name":"조롱의 외침","description":"트린다미어가 모욕적인 외침으로 주변 챔피언들의 공격력을 낮춥니다. 트린다미어에게서 등을 돌린 챔피언들은 이동 속도 역시 느려집니다.","sanitizedDescription":"트린다미어가 모욕적인 외침으로 주변 챔피언들의 공격력을 낮춥니다. 트린다미어에게서 등을 돌린 챔피언들은 이동 속도 역시 느려집니다.","tooltip":"{{ e3 }}초 동안 주변에 있는 적 챔피언의 공격력을 {{ e1 }} 낮추고, 등 돌리고 있는 적의 이동 속도도 {{ e4 }}초 동안 {{ e2 }}% 늦춥니다.","sanitizedTooltip":"{{ e3 }}초 동안 주변에 있는 적 챔피언의 공격력을 {{ e1 }} 낮추고, 등 돌리고 있는 적의 이동 속도도 {{ e4 }}초 동안 {{ e2 }}% 늦춥니다.","leveltip":{"label":["공격력 감소량","이동 속도 감소량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"TryndamereW.png","sprite":"spell11.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[14,14,14,14,14],"cooldownBurn":"14","effect":[null,[20,35,50,65,80],[30,37.5,45,52.5,60],[4,4,4,4,4],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/35/50/65/80","30/37.5/45/52.5/60","4","4","0","0","0","0","0","0"],"range":[850,850,850,850,850],"rangeBurn":"850","key":"TryndamereW"},{"name":"회전 베기","description":"트린다미어가 공격 경로에 있는 적 유닛을 칼로 베어 피해를 입힙니다.","sanitizedDescription":"트린다미어가 공격 경로에 있는 적 유닛을 칼로 베어 피해를 입힙니다.","tooltip":"트린다미어가 검을 들고 회전하며 적을 베어넘겨 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입히고 분노가 생성됩니다.<br /><br />트린다미어가 치명타를 입힐 때마다 회전 베기의 재사용 대기시간이 {{ e2 }}초 감소합니다. 챔피언 상대로는 {{ e3 }}초 감소합니다.","sanitizedTooltip":"트린다미어가 검을 들고 회전하며 적을 베어넘겨 {{ e1 }} (+{{ f1 }}) (+{{ a1 }})의 물리 피해를 입히고 분노가 생성됩니다. 트린다미어가 치명타를 입힐 때마다 회전 베기의 재사용 대기시간이 {{ e2 }}초 감소합니다. 챔피언 상대로는 {{ e3 }}초 감소합니다.","leveltip":{"label":["기본 피해","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TryndamereE.png","sprite":"spell11.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[80,110,140,170,200],[1,1,1,1,1],[2,2,2,2,2],[2,2,2,2,2],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/110/140/170/200","1","2","2","5","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"TryndamereE"},{"name":"불사의 분노","description":"전투를 향한 트린다미어의 욕망이 너무나도 강해 죽을 수 없는 몸이 됩니다.","sanitizedDescription":"전투를 향한 트린다미어의 욕망이 너무나도 강해 죽을 수 없는 몸이 됩니다.","tooltip":"트린다미어의 체력이 {{ e3 }}초 동안 {{ e2 }} 아래로 내려가지 않으며 즉시 {{ e1 }}의 분노를 얻습니다.","sanitizedTooltip":"트린다미어의 체력이 {{ e3 }}초 동안 {{ e2 }} 아래로 내려가지 않으며 즉시 {{ e1 }}의 분노를 얻습니다.","leveltip":{"label":["분노 획득량","최소 체력","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"UndyingRage.png","sprite":"spell11.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[110,100,90],"cooldownBurn":"110/100/90","effect":[null,[50,75,100],[30,50,70],[5,5,5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","50/75/100","30/50/70","5","0","0","0","0","0","0","0"],"range":[400,400,400],"rangeBurn":"400","key":"UndyingRage"}],"passive":{"name":"격노","description":"트린다미어가 일반 공격, 치명타 공격 그리고 마지막 일격을 날릴 때마다 분노를 획득합니다. 분노는 트린다미어의 치명타 확률을 높이며 피의 갈망을 사용하면 소모됩니다.","sanitizedDescription":"트린다미어가 일반 공격, 치명타 공격 그리고 마지막 일격을 날릴 때마다 분노를 획득합니다. 분노는 트린다미어의 치명타 확률을 높이며 피의 갈망을 사용하면 소모됩니다.","image":{"full":"Tryndamere_Passive.png","sprite":"passive3.png","group":"passive","x":192,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Tryndamere","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3065,"count":1},{"id":3031,"count":1},{"id":3035,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3087,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3046,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3086,"count":1},{"id":2015,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3087,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3302,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3087,"count":1},{"id":3006,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3046,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3087,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3086,"count":1},{"id":2015,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3087,"count":1},{"id":3031,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":1043,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3006,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3153,"count":1},{"id":3046,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Tryndamere","title":"TryndamereTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3086,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3046,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Janna":{"id":40,"key":"Janna","name":"잔나","title":"폭풍의 분노","image":{"full":"Janna.png","sprite":"champion1.png","group":"champion","x":48,"y":48,"w":48,"h":48},"skins":[{"id":40000,"name":"default","num":0},{"id":40001,"name":"폭풍의 잔나","num":1},{"id":40002,"name":"마법공학 잔나","num":2},{"id":40003,"name":"서리 여왕 잔나","num":3},{"id":40004,"name":"승리의 잔나","num":4},{"id":40005,"name":"기상캐스터 잔나","num":5},{"id":40006,"name":"Fnatic 잔나","num":6},{"id":40007,"name":"별 수호자 잔나","num":7},{"id":40008,"name":"불멸의 영웅 잔나","num":8}],"lore":"룬테라의 돌풍이라는 강력한 무기를 지닌, 그러나 모든 것이 베일에 싸인 잔나. 그녀는 이제 폐허가 되어버린 자운을 지키는 바람의 정령이다. 그런 그녀를 두고 떠도는 이야기는 많다. 그중에서 가장 그럴듯한 설은 바로 수호신으로서의 잔나. 악천후 속에서 폭풍우를 뚫고 나아가며 부디 순항할 수 있기를 기원하는 룬테라 선원들의 간구 속에서 등장했다고 여기는 것이다. 사람들은 잔나가 남다른 애정으로 자운의 선원들을 보호한다고 믿었다. 잔나와 자운, 이 둘의 관계가 결코 뗄 수 없을 정도로 가까워진 데에는 바로 이러한 사연이 있다고 생각했다. 그 결과 잔나는 도움의 손길이 필요한 모든 자운 사람들에게 있어 마치 등대와 같은 역할을 하게 되었다. 그런 그녀가 언제 어디서 나타날지는 아무도 모른다. 하지만 도움이 필요한 순간에는 어김없이 나타나 구원의 손길을 내밀었다.","blurb":"룬테라의 돌풍이라는 강력한 무기를 지닌, 그러나 모든 것이 베일에 싸인 잔나. 그녀는 이제 폐허가 되어버린 자운을 지키는 바람의 정령이다. 그런 그녀를 두고 떠도는 이야기는 많다. 그중에서 가장 그럴듯한 설은 바로 수호신으로서의 잔나. 악천후 속에서 폭풍우를 뚫고 나아가며 부디 순항할 수 있기를 기원하는 룬테라 선원들의 간구 속에서 등장했다고 여기는 것이다. 사람들은 잔나가 남다른 애정으로 자운의 선원들을 보호한다고 믿었다. 잔나와 자운, 이 둘의...","allytips":["- 폭풍의 눈은 아군 포탑에 사용할 수 있습니다.","- 울부짖는 돌풍을 충전 없이 빠르게 발사하여 적 팀을 방해할 수 있습니다.","- 잔나의 궁극기를 시기 적절하게 사용하여 적들을 갈라놓거나 부상 당한 아군에게서 적을 멀리 날려버릴 수 있습니다."],"enemytips":["- 잔나가 궁극기를 사용할 때까지 방해 효과가 있는 스킬을 아껴두십시오.","- 잔나가 보이지 않는 곳에서 울부짖는 돌풍으로 공격할 수도 있으므로 효과음에 집중하십시오.","- 잔나는 아군에게 이로운 효과를 걸어주고 있을 때 가장 강력합니다. 잔나의 아군을 공격하면 잔나의 위력 또한 감소합니다."],"tags":["Support","Mage"],"partype":"마나","info":{"attack":3,"defense":5,"magic":7,"difficulty":7},"stats":{"armor":28,"armorperlevel":3.8,"attackdamage":46,"attackdamageperlevel":1.5,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2.95,"crit":0,"critperlevel":0,"hp":500,"hpperlevel":70,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":320,"mp":350,"mpperlevel":64,"mpregen":11.5,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"울부짖는 돌풍","description":"잔나가 기압과 온도를 국지적으로 변경하여 시간이 지나면 점점 커지는 작은 폭풍을 생성합니다. 스킬을 다시 사용하면 폭풍을 날려보낼 수 있습니다. 폭풍은 스킬을 사용한 방향으로 날아가며, 중간에 있는 적들에게 피해를 입히고 공중으로 띄워 올립니다.","sanitizedDescription":"잔나가 기압과 온도를 국지적으로 변경하여 시간이 지나면 점점 커지는 작은 폭풍을 생성합니다. 스킬을 다시 사용하면 폭풍을 날려보낼 수 있습니다. 폭풍은 스킬을 사용한 방향으로 날아가며, 중간에 있는 적들에게 피해를 입히고 공중으로 띄워 올립니다.","tooltip":"회오리바람을 소환하여 바람이 지나는 길목에 있는 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e4 }}초 동안 공중으로 띄워 올립니다.<br /><br />돌풍은 최대 {{ e6 }}초까지 충전할 수 있습니다. 돌풍은 충전 시간 1초마다 다음의 추가 효과를 얻습니다.<br /><li>{{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 피해를 입힙니다.<br />적을 띄워올리는 시간이 {{ e5 }}초씩 늘어납니다.<br />이동 거리가 {{ e3 }}%씩 증가합니다.</li><br />울부짖는 돌풍은 반드시 {{ e8 }}초 안에 목표 지점에 도달합니다.<br /><br /><rules><span class=\"color8c8c8c\">스킬을 재사용하면 회오리 바람이 더 일찍 발사됩니다.</span></rules>","sanitizedTooltip":"회오리바람을 소환하여 바람이 지나는 길목에 있는 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e4 }}초 동안 공중으로 띄워 올립니다. 돌풍은 최대 {{ e6 }}초까지 충전할 수 있습니다. 돌풍은 충전 시간 1초마다 다음의 추가 효과를 얻습니다. {{ e2 }} (+{{ a2 }})의 추가 피해를 입힙니다. 적을 띄워올리는 시간이 {{ e5 }}초씩 늘어납니다. 이동 거리가 {{ e3 }}%씩 증가합니다. 울부짖는 돌풍은 반드시 {{ e8 }}초 안에 목표 지점에 도달합니다. 스킬을 재사용하면 회오리 바람이 더 일찍 발사됩니다.","leveltip":{"label":["기본 피해량","충전 시간당 피해 증가량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }} ","{{ e2 }} -> {{ e2NL }} ","{{ cost }} -> {{ costNL }}"]},"image":{"full":"HowlingGale.png","sprite":"spell4.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,80,100,120,140],"costBurn":"60/80/100/120/140","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,85,110,135,160],[15,20,25,30,35],[25,25,25,25,25],[0.5,0.5,0.5,0.5,0.5],[0.25,0.25,0.25,0.25,0.25],[3,3,3,3,3],[0,0,0,0,0],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/85/110/135/160","15/20/25/30/35","25","0.5","0.25","3","0","1.5","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]},{"key":"a2","link":"spelldamage","coeff":[0.1]}],"range":[1700,1700,1700,1700,1700],"rangeBurn":"1700","key":"HowlingGale"},{"name":"서풍","description":"잔나가 기본 지속 효과로 정령을 소환하여 이동 속도를 높이고 다른 유닛 사이로 지나갈 수 있게 됩니다. 스킬을 활성화할 경우 적에게 피해를 입히고 이동 속도를 늦출 수 있습니다. 스킬 재사용 대기 중에는 기본 지속 효과가 사라집니다.","sanitizedDescription":"잔나가 기본 지속 효과로 정령을 소환하여 이동 속도를 높이고 다른 유닛 사이로 지나갈 수 있게 됩니다. 스킬을 활성화할 경우 적에게 피해를 입히고 이동 속도를 늦출 수 있습니다. 스킬 재사용 대기 중에는 기본 지속 효과가 사라집니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 서풍이 재사용 대기 중이 아닐 때 잔나의 이동 속도가 {{ e1 }}% <span class=\"color99FF99\">(+{{ f1 }}%)</span> 증가하고 유닛을 통과해 움직일 수 있습니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>적에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorFFF673\">(+{{ f3 }})</span>의 마법 피해를 입히고, {{ e4 }}초 동안 적의 이동 속도를 {{ e3 }}% <span class=\"color99FF99\">(+{{ f2 }}%)</span> 늦춥니다.","sanitizedTooltip":"기본 지속 효과: 서풍이 재사용 대기 중이 아닐 때 잔나의 이동 속도가 {{ e1 }}% (+{{ f1 }}%) 증가하고 유닛을 통과해 움직일 수 있습니다. 사용 시: 적에게 {{ e2 }} (+{{ a1 }}) (+{{ f3 }})의 마법 피해를 입히고, {{ e4 }}초 동안 적의 이동 속도를 {{ e3 }}% (+{{ f2 }}%) 늦춥니다.","leveltip":{"label":["추가 이동 속도","피해량","둔화","마나 소모량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }} ","{{ e3 }}% -> {{ e3NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SowTheWind.png","sprite":"spell4.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[6,7,8,9,10],[60,105,150,195,240],[24,28,32,36,40],[2,2,2,2,2],[0.0002,0.0002,0.0002,0.0002,0.0002],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","6/7/8/9/10","60/105/150/195/240","24/28/32/36/40","2","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"spelldamage","coeff":[0.02]},{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"f2","link":"spelldamage","coeff":[0.06]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"SowTheWind"},{"name":"폭풍의 눈","description":"잔나가 방어용 광풍을 만들어 아군 챔피언이나 포탑을 공격에서 보호하고 공격력을 높여줍니다.","sanitizedDescription":"잔나가 방어용 광풍을 만들어 아군 챔피언이나 포탑을 공격에서 보호하고 공격력을 높여줍니다.","tooltip":"{{ e3 }}초 동안 아군 챔피언이나 포탑을 보호합니다. 보호막은 최대 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 흡수하고, 사라지기 전까지 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 공격력을 부여해 줍니다.","sanitizedTooltip":"{{ e3 }}초 동안 아군 챔피언이나 포탑을 보호합니다. 보호막은 최대 {{ e1 }} (+{{ a1 }})의 피해를 흡수하고, 사라지기 전까지 {{ e2 }} (+{{ a2 }})의 공격력을 부여해 줍니다.","leveltip":{"label":["보호막 흡수량","추가 공격력","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }} ","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EyeOfTheStorm.png","sprite":"spell4.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[70,105,140,175,210],[10,17.5,25,32.5,40],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/105/140/175/210","10/17.5/25/32.5/40","5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"a2","link":"spelldamage","coeff":[0.1]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"EyeOfTheStorm"},{"name":"계절풍","description":"잔나가 자신을 마법의 폭풍으로 둘러싸며 적을 뒤로 밀어냅니다. 폭풍이 잦아들면 능력의 효과가 끝날 때까지 부드러운 바람이 아군을 치료합니다.","sanitizedDescription":"잔나가 자신을 마법의 폭풍으로 둘러싸며 적을 뒤로 밀어냅니다. 폭풍이 잦아들면 능력의 효과가 끝날 때까지 부드러운 바람이 아군을 치료합니다.","tooltip":"주위 적을 밀쳐내며 치유 효과가 있는 강력한 바람을 일으켜 {{ e3 }}초에 걸쳐 주변 아군의 체력을 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>만큼 회복시킵니다.","sanitizedTooltip":"주위 적을 밀쳐내며 치유 효과가 있는 강력한 바람을 일으켜 {{ e3 }}초에 걸쳐 주변 아군의 체력을 초당 {{ e1 }} (+{{ a1 }})만큼 회복시킵니다.","leveltip":{"label":["초당 체력 회복량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ReapTheWhirlwind.png","sprite":"spell4.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[150,135,120],"cooldownBurn":"150/135/120","effect":[null,[100,150,200],[300,450,600],[3,3,3],[700,700,700],[875,875,875],[875,875,875],[1200,1200,1200],[10,10,10],[0.5,0.5,0.5],[0,0,0]],"effectBurn":["","100/150/200","300/450/600","3","700","875","875","1200","10","0.5","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[725,725,725],"rangeBurn":"725","key":"ReapTheWhirlwind"}],"passive":{"name":"순풍","description":"잔나의 기본 이동 속도가 8% 증가합니다. 근처의 아군 챔피언이 잔나를 향해 움직이면 같은 효과를 받습니다.<br><br>또한 잔나의 기본 공격은 추가 이동 속도에 비례하여 추가 마법 피해를 입힙니다.","sanitizedDescription":"잔나의 기본 이동 속도가 8% 증가합니다. 근처의 아군 챔피언이 잔나를 향해 움직이면 같은 효과를 받습니다. 또한 잔나의 기본 공격은 추가 이동 속도에 비례하여 추가 마법 피해를 입힙니다.","image":{"full":"Janna_Tailwind.png","sprite":"passive1.png","group":"passive","x":48,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Janna","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1},{"id":3151,"count":1}]}]},{"champion":"Janna","title":"JannaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3158,"count":1},{"id":3107,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3504,"count":1},{"id":3102,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3222,"count":1},{"id":3157,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Janna","title":"JannaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3107,"count":1},{"id":3190,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3069,"count":1},{"id":3504,"count":1},{"id":3050,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Janna","title":"JannaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3190,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3504,"count":1},{"id":3050,"count":1},{"id":3041,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Janna","title":"JannaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":2031,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3504,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3222,"count":1},{"id":3157,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Janna","title":"JannaSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3107,"count":1},{"id":3504,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3069,"count":1},{"id":3174,"count":1},{"id":3089,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Janna","title":"JannaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3107,"count":1},{"id":3190,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3069,"count":1},{"id":3504,"count":1},{"id":3050,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1}]}]},{"champion":"Janna","title":"JannaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3107,"count":1},{"id":3504,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3069,"count":1},{"id":3174,"count":1},{"id":3089,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Janna","title":"JannaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3028,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3174,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3222,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Elise":{"id":60,"key":"Elise","name":"엘리스","title":"거미 여왕","image":{"full":"Elise.png","sprite":"champion0.png","group":"champion","x":192,"y":96,"w":48,"h":48},"skins":[{"id":60000,"name":"default","num":0},{"id":60001,"name":"죽음의 꽃 엘리스","num":1},{"id":60002,"name":"승리의 엘리스","num":2},{"id":60003,"name":"불의 축제 엘리스","num":3},{"id":60004,"name":"SKT T1 엘리스","num":4},{"id":60005,"name":"슈퍼 갤럭시 엘리스","num":5}],"lore":"엘리스는 녹서스 불멸의 요새 깊숙한 곳에 있는 저택에서 빛을 차단하고 은둔해 사는 치명적인 포식자다. 필멸자 시절 그녀는 명문가의 안주인이였지만 끔찍한 반신에 물린 후 매혹적이면서도 무자비한 거미와 같은 존재가 되어 먹잇감을 거미줄로 끌어들였다. 영원한 젊음을 유지하기 위해 엘리스는 거부하기 힘든 유혹을 펼치며 무고한 이들을 사냥한다.","blurb":"엘리스는 녹서스 불멸의 요새 깊숙한 곳에 있는 저택에서 빛을 차단하고 은둔해 사는 치명적인 포식자다. 필멸자 시절 그녀는 명문가의 안주인이였지만 끔찍한 반신에 물린 후 매혹적이면서도 무자비한 거미와 같은 존재가 되어 먹잇감을 거미줄로 끌어들였다. 영원한 젊음을 유지하기 위해 엘리스는 거부하기 힘든 유혹을 펼치며 무고한 이들을 사냥한다.","allytips":["- 거미 형태는 체력이 낮아진 적을 처치할 때 효율이 높고, 인간 형태의 신경독은 체력이 높은 적에게 더 효과적입니다.","- 거미 형태일 때 새끼 거미들은 엘리스가 독이빨 스킬을 사용한 대상을 함께 공격합니다.","- 엘리스가 거미 형태일 때 거미형 스킬들은 마나가 소모되지 않습니다. 마나를 아껴야 할 때는 거미 형태로 플레이하세요."],"enemytips":["- 거미 형태의 엘리스는 상대의 체력이 낮을 때, 인간 형태의 엘리스는 상대의 체력이 높을 때 더 공격력이 강해집니다.","- 엘리스가 줄타기 스킬을 썼을 때는 적 유닛을 덮치기 전까지 공중에서 상하로 움직이기만 합니다.","- 줄타기의 재사용 대기시간은 긴 편입니다. 일단 줄타기를 사용한 후에는 취약해진다는 걸 기억하세요."],"tags":["Mage","Fighter"],"partype":"마나","info":{"attack":6,"defense":5,"magic":7,"difficulty":9},"stats":{"armor":27,"armorperlevel":3.35,"attackdamage":55,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.75,"crit":0,"critperlevel":0,"hp":534,"hpperlevel":85,"hpregen":5.708,"hpregenperlevel":0.6,"movespeed":325,"mp":324,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"신경독 / 독이빨","description":"인간 형태: 대상 적의 체력에 비례하여 피해를 입힙니다.<br><br>거미 형태: 적 하나를 덮쳐, 적이 잃은 체력에 비례하여 피해를 입힙니다.","sanitizedDescription":"인간 형태: 대상 적의 체력에 비례하여 피해를 입힙니다. 거미 형태: 적 하나를 덮쳐, 적이 잃은 체력에 비례하여 피해를 입힙니다.","tooltip":"{{ e1 }} + 대상의 현재 체력의 {{ e6 }}% <span class=\"color99FF99\">(+{{ a1 }})</span>에 해당하는 마법 피해를 입힙니다. 몬스터 상대 최대 추가 피해량: {{ e2 }}","sanitizedTooltip":"{{ e1 }} + 대상의 현재 체력의 {{ e6 }}% (+{{ a1 }})에 해당하는 마법 피해를 입힙니다. 몬스터 상대 최대 추가 피해량: {{ e2 }}","leveltip":{"label":["신경독 피해량","독이빨 피해량","몬스터에 대한 최대 피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EliseHumanQ.png","sprite":"spell2.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,85,90,95,100],"costBurn":"80/85/90/95/100","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[40,75,110,145,180],[75,100,125,150,175],[15,20,25,30,35],[36,42,48,54,60],[60,100,140,180,220],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/75/110/145/180","75/100/125/150/175","15/20/25/30/35","36/42/48/54/60","60/100/140/180/220","4","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.03]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"EliseHumanQ"},{"name":"위험한 새끼 거미 / 광란의 질주","description":"인간 형태: 독을 품은 새끼 거미를 풀어놓으면 대상 적 근처에 가서 터집니다.<br><br>거미 형태: 엘리스와 새끼 거미들의 공격 속도가 상승합니다.","sanitizedDescription":"인간 형태: 독을 품은 새끼 거미를 풀어놓으면 대상 적 근처에 가서 터집니다. 거미 형태: 엘리스와 새끼 거미들의 공격 속도가 상승합니다.","tooltip":"독을 품은 새끼 거미를 소환하면, 지정한 위치로 가서 근처에 적이 있을 때, 혹은 3초 뒤에 폭발하며 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"독을 품은 새끼 거미를 소환하면, 지정한 위치로 가서 근처에 적이 있을 때, 혹은 3초 뒤에 폭발하며 {{ e3 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["공격력","마나 소모량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EliseHumanW.png","sprite":"spell2.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[4,4,4,4,4],[60,80,100,120,140],[55,95,135,175,215],[3,3,3,3,3],[65,75,85,95,105],[275,275,275,275,275],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4","60/80/100/120/140","55/95/135/175/215","3","65/75/85/95/105","275","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.95]}],"range":[950,950,950,950,950],"rangeBurn":"950","key":"EliseHumanW"},{"name":"고치 / 줄타기","description":"인간 형태: 처음 적중한 적 유닛을 기절시키고, 은신 상태가 아닐 경우 모습을 드러내 줍니다.<br><br>거미 형태: 엘리스와 새끼 거미들이 공중으로 올라간 다음 적에게 하강해 덮칩니다.","sanitizedDescription":"인간 형태: 처음 적중한 적 유닛을 기절시키고, 은신 상태가 아닐 경우 모습을 드러내 줍니다. 거미 형태: 엘리스와 새끼 거미들이 공중으로 올라간 다음 적에게 하강해 덮칩니다.","tooltip":"처음 적중한 적을 {{ e5 }}초 동안 기절시키며, 은신 상태가 아닐 경우 위치를 드러냅니다.","sanitizedTooltip":"처음 적중한 적을 {{ e5 }}초 동안 기절시키며, 은신 상태가 아닐 경우 위치를 드러냅니다.","leveltip":{"label":["기절 지속 시간","재사용 대기시간"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"EliseHumanE.png","sprite":"spell2.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[14,13,12,11,10],[15,20,25,30,35],[26,24,22,20,18],[2,2,2,2,2],[1.6,1.7,1.8,1.9,2],[40,55,70,85,100],[250,250,250,250,250],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","14/13/12/11/10","15/20/25/30/35","26/24/22/20/18","2","1.6/1.7/1.8/1.9/2","40/55/70/85/100","250","0","0","0"],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"EliseHumanE"},{"name":"거미 형태","description":"무서운 거미로 변해 공격 사거리가 줄어드는 대신 이동 속도가 상승하며, 새로운 스킬을 사용하고, 새끼 거미 떼가 적을 공격합니다.  ","sanitizedDescription":"무서운 거미로 변해 공격 사거리가 줄어드는 대신 이동 속도가 상승하며, 새로운 스킬을 사용하고, 새끼 거미 떼가 적을 공격합니다.","tooltip":"엘리스가 무서운 거미로 변하여 공격 사거리가 425 줄어드는 대신 이동 속도가 {{ e3 }} 상승하며 거미형 스킬을 사용하게 됩니다. 휴면 상태의 새끼 거미가 모두 깨어나서 근처 적들을 공격합니다.<br /><br /><span class=\"colorFF3300\">새끼 거미: </span>새끼 거미는 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 피해를 입히며, 대상이 여럿인 공격에 대해서는 {{ e4 }}%만큼 받는 피해가 감소합니다.","sanitizedTooltip":"엘리스가 무서운 거미로 변하여 공격 사거리가 425 줄어드는 대신 이동 속도가 {{ e3 }} 상승하며 거미형 스킬을 사용하게 됩니다. 휴면 상태의 새끼 거미가 모두 깨어나서 근처 적들을 공격합니다. 새끼 거미: 새끼 거미는 {{ e1 }} (+{{ a2 }})의 피해를 입히며, 대상이 여럿인 공격에 대해서는 {{ e4 }}%만큼 받는 피해가 감소합니다.","leveltip":{"label":["거미 형태 이빨 피해량","새끼 거미 추가 피해량","최대 새끼 거미 수","새끼 거미 방어력","새끼 거미 마법 저항력"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ e6 }} -> {{ e6NL }}","{{ e7 }} -> {{ e7NL }}"]},"image":{"full":"EliseR.png","sprite":"spell2.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":4,"cost":[0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[4,4,4,4],"cooldownBurn":"4","effect":[null,[10,15,20,25],[10,20,30,40],[25,25,25,25],[25,25,25,25],[2,3,4,5],[30,50,70,90],[50,70,90,110],[4,6,8,10],[0.1,0.1,0.1,0.1],[0,0,0,0]],"effectBurn":["","10/15/20/25","10/20/30/40","25","25","2/3/4/5","30/50/70/90","50/70/90/110","4/6/8/10","0.1","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.15]}],"range":[20,20,20,20],"rangeBurn":"20","key":"EliseR"}],"passive":{"name":"거미 여왕","description":"인간 형태: 엘리스의 스킬이 적에 적중하면 휴면 상태의 새끼 거미가 생깁니다.<br><br>거미 형태: 기본 공격 시 추가 마법 피해를 입히고, 엘리스의 체력이 회복됩니다.","sanitizedDescription":"인간 형태: 엘리스의 스킬이 적에 적중하면 휴면 상태의 새끼 거미가 생깁니다. 거미 형태: 기본 공격 시 추가 마법 피해를 입히고, 엘리스의 체력이 회복됩니다.","image":{"full":"ElisePassive.png","sprite":"passive0.png","group":"passive","x":192,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Elise","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Elise","title":"EliseARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3116,"count":1},{"id":3020,"count":1},{"id":3151,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Elise","title":"EliseCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1028,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3136,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Elise","title":"EliseFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":2},{"id":1056,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3136,"count":1},{"id":3116,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3020,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Elise","title":"EliseKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3116,"count":1},{"id":3020,"count":1},{"id":3151,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Elise","title":"EliseSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3136,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3742,"count":1}]}]},{"champion":"Elise","title":"EliseSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1028,"count":1},{"id":1058,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3136,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2139,"count":1}]}]},{"champion":"Elise","title":"EliseTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3110,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Vayne":{"id":67,"key":"Vayne","name":"베인","title":"어둠 사냥꾼","image":{"full":"Vayne.png","sprite":"champion4.png","group":"champion","x":0,"y":0,"w":48,"h":48},"skins":[{"id":67000,"name":"default","num":0},{"id":67001,"name":"수호자 베인","num":1},{"id":67002,"name":"귀족 베인","num":2},{"id":67003,"name":"용 사냥꾼 베인","num":3},{"id":67004,"name":"사랑의 추적자 베인","num":4},{"id":67005,"name":"SKT T1 베인","num":5},{"id":67006,"name":"빛의 베인","num":6},{"id":67010,"name":"영혼약탈자 베인","num":10},{"id":67011,"name":"프로젝트: 베인","num":11}],"lore":"샤우나 베인은 데마시아의 치명적이고 무자비한 몬스터 사냥꾼으로, 자신의 가족을 살해한 악마를 찾아내 처치하는 데에 일생을 바쳤다. 손목에 장착한 석궁과 끝없는 복수심으로 무장한 베인은 이제 그림자 속에서 질풍처럼 은화살을 날려 흑마법사 또는 흑마법의 피조물을 사냥할 때에만 진정한 기쁨을 느낀다.","blurb":"샤우나 베인은 데마시아의 치명적이고 무자비한 몬스터 사냥꾼으로, 자신의 가족을 살해한 악마를 찾아내 처치하는 데에 일생을 바쳤다. 손목에 장착한 석궁과 끝없는 복수심으로 무장한 베인은 이제 그림자 속에서 질풍처럼 은화살을 날려 흑마법사 또는 흑마법의 피조물을 사냥할 때에만 진정한 기쁨을 느낀다.","allytips":["- 구르기는 다양한 용도로 사용할 수 있지만 벽을 뚫고 지날 수는 없습니다.","- 선고는 대상을 벽에 밀어붙여 죽이거나 적에게서 탈출할 때 사용할 수 있습니다.","- 대규모 접전에서는 다른 팀원이 먼저 전투를 시작할 때까지 기다리십시오."],"enemytips":["- 베인은 체력이 약한 편이므로 몇 번 견제해 주면 조심스럽게 게임을 운용할 것입니다.","- 베인을 상대로 구석에 몰리지 마십시오."],"tags":["Marksman","Assassin"],"partype":"마나","info":{"attack":10,"defense":1,"magic":1,"difficulty":8},"stats":{"armor":28,"armorperlevel":3.4,"attackdamage":64,"attackdamageperlevel":1.66,"attackrange":550,"attackspeedoffset":-0.05,"attackspeedperlevel":4,"crit":0,"critperlevel":0,"hp":498.44,"hpperlevel":83,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":330,"mp":231.8,"mpperlevel":35,"mpregen":6.972,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"구르기","description":"베인이 구르기를 하며 다음 공격 대상을 신중하게 선택합니다. 베인의 다음 공격은 치명타로 적중합니다.","sanitizedDescription":"베인이 구르기를 하며 다음 공격 대상을 신중하게 선택합니다. 베인의 다음 공격은 치명타로 적중합니다.","tooltip":"베인이 짧은 구르기를 합니다. 이후 {{ e3 }}초 안에 기본 공격을 하면 <scaleAD>{{ f1 }}</scaleAD>의 추가 물리 피해를 가합니다.<br /><br /><rules>구르기의 추가 피해량은 베인의 총 공격력의 {{ e1 }}%에 비례합니다.</rules>","sanitizedTooltip":"베인이 짧은 구르기를 합니다. 이후 {{ e3 }}초 안에 기본 공격을 하면 {{ f1 }}의 추가 물리 피해를 가합니다. 구르기의 추가 피해량은 베인의 총 공격력의 {{ e1 }}%에 비례합니다.","leveltip":{"label":["공격력","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VayneTumble.png","sprite":"spell12.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[6,5,4,3,2],"cooldownBurn":"6/5/4/3/2","effect":[null,[50,55,60,65,70],[0,0,0,0,0],[7,7,7,7,7],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/55/60/65/70","0","7","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.3,0.35,0.4,0.45,0.5]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"VayneTumble"},{"name":"은화살","description":"베인이 사악한 존재에게만 피해를 주는 특수 금속이 달린 볼트를 사용합니다. 같은 대상에게 세 번째 공격 또는 스킬이 명중하면 대상의 최대 체력의 일정 퍼센트가 고정 피해로 추가됩니다. (몬스터에게는 최대 200의 피해)","sanitizedDescription":"베인이 사악한 존재에게만 피해를 주는 특수 금속이 달린 볼트를 사용합니다. 같은 대상에게 세 번째 공격 또는 스킬이 명중하면 대상의 최대 체력의 일정 퍼센트가 고정 피해로 추가됩니다. (몬스터에게는 최대 200의 피해)","tooltip":"같은 대상에게 공격 또는 스킬이 세 번 명중하면 대상 최대 체력의 {{ e1 }}%에 해당하는 수치가 고정 피해로 추가됩니다({{ e2 }}만큼).<br /><br /><rules>몬스터에게는 최대 {{ e3 }}의 피해를 입힙니다.</rules>","sanitizedTooltip":"같은 대상에게 공격 또는 스킬이 세 번 명중하면 대상 최대 체력의 {{ e1 }}%에 해당하는 수치가 고정 피해로 추가됩니다({{ e2 }}만큼). 몬스터에게는 최대 {{ e3 }}의 피해를 입힙니다.","leveltip":{"label":["공격력","최소 피해량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"VayneSilveredBolts.png","sprite":"spell12.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"기본 지속 효과","maxrank":5,"cost":[0,0,0,0,0],"costType":"기본 지속 효과","costBurn":"0","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[4,6,8,10,12],[50,65,80,95,110],[200,200,200,200,200],[3.5,3.5,3.5,3.5,3.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4/6/8/10/12","50/65/80/95/110","200","3.5","0","0","0","0","0","0"],"range":[750,750,750,750,750],"rangeBurn":"750","key":"VayneSilveredBolts"},{"name":"선고","description":"베인이 등에서 커다란 석궁을 뽑아 거대한 볼트를 발사하여 대상을 뒤로 날려보내고 대상에게 피해를 줍니다. 지형과 부딪힌 대상은 지형에 꽂힌 채 추가 피해를 받고 기절합니다.","sanitizedDescription":"베인이 등에서 커다란 석궁을 뽑아 거대한 볼트를 발사하여 대상을 뒤로 날려보내고 대상에게 피해를 줍니다. 지형과 부딪힌 대상은 지형에 꽂힌 채 추가 피해를 받고 기절합니다.","tooltip":"볼트를 발사하여 대상을 뒤로 날려보내고 {{ e1 }}<scaleAD>(+{{ a1 }})</scaleAD>의 물리 피해를 줍니다.<br /><br />지형에 부딪힌 대상은 <scaleAD>{{ f1 }}</scaleAD>의 물리 피해를 받고 {{ e3 }}초 동안 기절합니다<br /><br /><rules>지형에 부딪힌 대상은 {{ e2 }}% 증가한 피해를 입습니다.</rules>","sanitizedTooltip":"볼트를 발사하여 대상을 뒤로 날려보내고 {{ e1 }}(+{{ a1 }})의 물리 피해를 줍니다. 지형에 부딪힌 대상은 {{ f1 }}의 물리 피해를 받고 {{ e3 }}초 동안 기절합니다 지형에 부딪힌 대상은 {{ e2 }}% 증가한 피해를 입습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VayneCondemn.png","sprite":"spell12.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,90,90,90,90],"costBurn":"90","cooldown":[20,18,16,14,12],"cooldownBurn":"20/18/16/14/12","effect":[null,[50,85,120,155,190],[100,100,100,100,100],[1.5,1.5,1.5,1.5,1.5],[475,475,475,475,475],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/85/120/155/190","100","1.5","475","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.5]},{"key":"f1","link":"bonusattackdamage","coeff":[0.5]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"VayneCondemn"},{"name":"결전의 시간","description":"격렬한 전투에 대비한 베인이 공격력을 높이고 구르기 시 투명 상태가 되며 어둠 사냥꾼의 이동 속도 증가량이 3배가 됩니다.","sanitizedDescription":"격렬한 전투에 대비한 베인이 공격력을 높이고 구르기 시 투명 상태가 되며 어둠 사냥꾼의 이동 속도 증가량이 3배가 됩니다.","tooltip":"베인이 {{ e2 }}초 동안 {{ e1 }}의 추가 공격력을 얻고, 어둠 사냥꾼과 구르기가 강화됩니다. 적 챔피언이 베인에게 피해를 입고 {{ e6 }}초 안에 죽으면 결전의 시간 지속시간이 {{ e5 }}초 늘어납니다.<br /><br /><span class=\"colorF0F0F0\">어둠 사냥꾼</span>: 베인의 이동 속도가 {{ e4 }} 만큼 증가합니다.<br /><span class=\"colorF0F0F0\">구르기</span>: 베인이 구르기를 사용하면 {{ e3 }}초 동안 <span class=\"color91d7ee\">은신</span> 상태가 됩니다.<br /><br /><rules><span class=\"color91d7ee\">은신 - 투명:</span>근처의 적 포탑 또는 <span class=\"coloree91d7\">절대 시야</span>만이 베인의 모습을 드러낼 수 있습니다.<br />결전의 시간 지속시간은 기존 최대 지속시간을 초과해 늘어날 수 없습니다.</rules>","sanitizedTooltip":"베인이 {{ e2 }}초 동안 {{ e1 }}의 추가 공격력을 얻고, 어둠 사냥꾼과 구르기가 강화됩니다. 적 챔피언이 베인에게 피해를 입고 {{ e6 }}초 안에 죽으면 결전의 시간 지속시간이 {{ e5 }}초 늘어납니다. 어둠 사냥꾼: 베인의 이동 속도가 {{ e4 }} 만큼 증가합니다. 구르기: 베인이 구르기를 사용하면 {{ e3 }}초 동안 은신 상태가 됩니다. 은신 - 투명:근처의 적 포탑 또는 절대 시야만이 베인의 모습을 드러낼 수 있습니다. 결전의 시간 지속시간은 기존 최대 지속시간을 초과해 늘어날 수 없습니다.","leveltip":{"label":["추가 공격력","지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VayneInquisition.png","sprite":"spell12.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[80,80,80],"costBurn":"80","cooldown":[100,85,70],"cooldownBurn":"100/85/70","effect":[null,[30,50,70],[8,10,12],[1,1,1],[90,90,90],[4,4,4],[3,3,3],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","30/50/70","8/10/12","1","90","4","3","0","0","0","0"],"range":[1,1,1],"rangeBurn":"1","key":"VayneInquisition"}],"passive":{"name":"어둠 사냥꾼","description":"베인이 악당을 무자비하게 사냥합니다. 적 챔피언에게 접근할 때 이동 속도가 30만큼 증가합니다.","sanitizedDescription":"베인이 악당을 무자비하게 사냥합니다. 적 챔피언에게 접근할 때 이동 속도가 30만큼 증가합니다.","image":{"full":"Vayne_NightHunter.png","sprite":"passive4.png","group":"passive","x":0,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Vayne","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Vayne","title":"VayneARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3087,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vayne","title":"VayneCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3094,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3087,"count":1},{"id":3139,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3046,"count":1},{"id":3072,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vayne","title":"VayneFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3139,"count":1},{"id":3812,"count":1},{"id":3031,"count":1},{"id":3508,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Vayne","title":"VayneKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3087,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vayne","title":"VaynePRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3072,"count":1},{"id":3094,"count":1},{"id":3508,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3142,"count":1},{"id":3153,"count":1}]}]},{"champion":"Vayne","title":"VayneSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3094,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3087,"count":1},{"id":3139,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3046,"count":1},{"id":3072,"count":1}]}]},{"champion":"Vayne","title":"VayneSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3094,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3087,"count":1},{"id":3139,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3046,"count":1},{"id":3072,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vayne","title":"VayneTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3072,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Brand":{"id":63,"key":"Brand","name":"브랜드","title":"타오르는 복수","image":{"full":"Brand.png","sprite":"champion0.png","group":"champion","x":96,"y":48,"w":48,"h":48},"skins":[{"id":63000,"name":"default","num":0},{"id":63001,"name":"세기말 브랜드","num":1},{"id":63002,"name":"파괴단 브랜드","num":2},{"id":63003,"name":"냉기의 심장 브랜드","num":3},{"id":63004,"name":"좀비 브랜드","num":4},{"id":63005,"name":"영혼의 불꽃 브랜드","num":5},{"id":63006,"name":"중간보스 브랜드","num":6}],"lore":"얼어붙은 프렐요드의 부족민으로 케간 로디라 불리던 사나이는 이제 더욱 거대한 힘의 유혹에 굴복해 브랜드라 불리는 생명체가 되었다. 전설로 전해지는 세계 룬 중 하나를 탐색하던 케간 로디는 동료를 배신하고 세계 룬을 차지했다. 그리고 그 순간, 케간 로디는 더 이상 없었다. 영혼이 불타오르고 육신은 살아있는 화염에 휩싸인 브랜드는 이제 또 다른 세계 룬을 찾아 발로란을 헤매며 필멸자가 십 수 번을 살아도 겪지 못할 고통에 대해 복수를 다짐한다.","blurb":"얼어붙은 프렐요드의 부족민으로 케간 로디라 불리던 사나이는 이제 더욱 거대한 힘의 유혹에 굴복해 브랜드라 불리는 생명체가 되었다. 전설로 전해지는 세계 룬 중 하나를 탐색하던 케간 로디는 동료를 배신하고 세계 룬을 차지했다. 그리고 그 순간, 케간 로디는 더 이상 없었다. 영혼이 불타오르고 육신은 살아있는 화염에 휩싸인 브랜드는 이제 또 다른 세계 룬을 찾아 발로란을 헤매며 필멸자가 십 수 번을 살아도 겪지 못할 고통에 대해 복수를 다짐한다.","allytips":["- 적 미니언에게 불을 붙여둔 후 발화 스킬을 의식하게 만들면 적 챔피언이 자기 편 미니언에게 다가가지 못하게 할 수 있습니다.","- 브랜드의 스킬을 적절하게 조합하여 다양한 상황에서 피해를 최대화할 수 있습니다.","- 파멸의 불덩이를 쓰면 적들 사이로 화염구가 무작위적으로 튕깁니다. 같은 적을 여러 번 맞히고 싶으면 소수의 적 그룹에게 스킬을 사용하는 것이 좋습니다."],"enemytips":["- 브랜드가 스킬 연계를 사용하려면 반드시 스킬 한 가지를 적중시켜야 합니다. 불태우기 또는 화염 기둥을 회피하면 브랜드의 공격 흐름을 깨트릴 수 있습니다.","- 브랜드가 파멸의 불덩이를 시전하면 아군들 곁에서 떨어지십시오. 발사체의 초기 속도는 느린 편이므로 아군이 반응할 수 있는 시간이 생깁니다.","- 브랜드의 기본 지속 효과는 뭉쳐 있는 적을 공격할 때 매우 유용합니다. 브랜드를 상대할 때는 반드시 서로 떨어지세요."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":2,"magic":9,"difficulty":4},"stats":{"armor":21.88,"armorperlevel":3.5,"attackdamage":57.04,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":519.68,"hpperlevel":88,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":340,"mp":375.6,"mpperlevel":42,"mpregen":8.008,"mpregenperlevel":0.6,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"불태우기","description":"브랜드가 커다란 불덩이를 발사하여 마법 피해를 입힙니다. 만약 대상이 불타고 있다면 태우기 스킬에 당한 대상은 1.5초 동안 기절합니다.","sanitizedDescription":"브랜드가 커다란 불덩이를 발사하여 마법 피해를 입힙니다. 만약 대상이 불타고 있다면 태우기 스킬에 당한 대상은 1.5초 동안 기절합니다.","tooltip":"브랜드가 불덩이를 발사하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorDDDD77\">불길:</span> 대상이 불타는 상태라면, 불태우기에 맞은 대상은 1.5초간 기절합니다.","sanitizedTooltip":"브랜드가 불덩이를 발사하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 불길: 대상이 불타는 상태라면, 불태우기에 맞은 대상은 1.5초간 기절합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BrandQ.png","sprite":"spell1.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[8,7.5,7,6.5,6],"cooldownBurn":"8/7.5/7/6.5/6","effect":[null,[80,110,140,170,200],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/110/140/170/200","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.55]}],"range":[1050,1050,1050,1050,1050],"rangeBurn":"1050","key":"BrandQ"},{"name":"화염 기둥","description":"잠시 후 목표 지점에 화염 기둥을 생성하여 해당 지역에 있는 적 유닛에게 마법 피해를 입힙니다. 불이 붙은 적은 25%의 추가 피해를 받습니다.","sanitizedDescription":"잠시 후 목표 지점에 화염 기둥을 생성하여 해당 지역에 있는 적 유닛에게 마법 피해를 입힙니다. 불이 붙은 적은 25%의 추가 피해를 받습니다.","tooltip":"잠시 뒤 목표 지점에 화염 기둥을 생성하여 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorDDDD77\">불길:</span> 대상이 불타는 상태라면 25%의 추가 피해를 받습니다.","sanitizedTooltip":"잠시 뒤 목표 지점에 화염 기둥을 생성하여 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 불길: 대상이 불타는 상태라면 25%의 추가 피해를 받습니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"BrandW.png","sprite":"spell1.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[10,9.5,9,8.5,8],"cooldownBurn":"10/9.5/9/8.5/8","effect":[null,[75,120,165,210,255],[20,40,60,80,100],[0.25,0.25,0.25,0.25,0.25],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/120/165/210/255","20/40/60/80/100","0.25","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"BrandW"},{"name":"발화","description":"브랜드가 목표에 강력한 폭발을 일으켜 마법 피해를 입힙니다. 만약 대상이 불타고 있다면 주변 적에게도 발화 효과가 옮겨갑니다.","sanitizedDescription":"브랜드가 목표에 강력한 폭발을 일으켜 마법 피해를 입힙니다. 만약 대상이 불타고 있다면 주변 적에게도 발화 효과가 옮겨갑니다.","tooltip":"브랜드가 목표에 강력한 폭발을 일으켜 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"colorDDDD77\">불길:</span> 대상이 불타는 상태라면 주변 적에게도 발화가 옮겨갑니다. ","sanitizedTooltip":"브랜드가 목표에 강력한 폭발을 일으켜 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 불길: 대상이 불타는 상태라면 주변 적에게도 발화가 옮겨갑니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"BrandE.png","sprite":"spell1.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[70,90,110,130,150],[375,375,375,375,375],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/90/110/130/150","375","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"BrandE"},{"name":"파멸의 불덩이","description":"브랜드가 5번까지 튕기는 화염을 발사하여 매번 튕길 때마다 마법 피해를 입힙니다. 화염은 불길 중첩이 적은 챔피언에게 우선적으로 튕깁니다. 불타고 있는 적이 파멸의 불덩이를 맞으면 잠깐 동안 이동 속도가 느려집니다.","sanitizedDescription":"브랜드가 5번까지 튕기는 화염을 발사하여 매번 튕길 때마다 마법 피해를 입힙니다. 화염은 불길 중첩이 적은 챔피언에게 우선적으로 튕깁니다. 불타고 있는 적이 파멸의 불덩이를 맞으면 잠깐 동안 이동 속도가 느려집니다.","tooltip":"브랜드가 5번까지 튕기는 화염을 발사하여 매번 튕길 때마다 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 화염은 불길 중첩이 적은 챔피언에게 우선적으로 튕깁니다.<br /><br /><span class=\"colorDDDD77\">불길:</span> 불타고 있는 적이 파멸의 불덩이를 맞으면 잠깐 동안 이동 속도가 {{ e4 }}% 만큼 느려집니다.","sanitizedTooltip":"브랜드가 5번까지 튕기는 화염을 발사하여 매번 튕길 때마다 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 화염은 불길 중첩이 적은 챔피언에게 우선적으로 튕깁니다. 불길: 불타고 있는 적이 파멸의 불덩이를 맞으면 잠깐 동안 이동 속도가 {{ e4 }}% 만큼 느려집니다.","leveltip":{"label":["공격당 피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BrandR.png","sprite":"spell1.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[105,90,75],"cooldownBurn":"105/90/75","effect":[null,[100,200,300],[5,7,9],[150,225,300],[30,45,60],[0.25,0.25,0.25],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/200/300","5/7/9","150/225/300","30/45/60","0.25","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.25]}],"range":[750,750,750],"rangeBurn":"750","key":"BrandR"}],"passive":{"name":"불길","description":"브랜드의 스킬이 적을 불길로 휘감아, 4초 동안 최대 체력의 2%의 마법 피해를 줍니다. 불길은 세 번까지 중첩되며, 적이 불타는 동안 브랜드가 적을 처치하면 마나를 회복합니다. 챔피언이나 몬스터에 불길이 세 번 중첩되면 불안정해져 2초 후 폭발하고, 근처 적에게 스킬 효과를 적용하며 막대한 피해를 입힙니다.","sanitizedDescription":"브랜드의 스킬이 적을 불길로 휘감아, 4초 동안 최대 체력의 2%의 마법 피해를 줍니다. 불길은 세 번까지 중첩되며, 적이 불타는 동안 브랜드가 적을 처치하면 마나를 회복합니다. 챔피언이나 몬스터에 불길이 세 번 중첩되면 불안정해져 2초 후 폭발하고, 근처 적에게 스킬 효과를 적용하며 막대한 피해를 입힙니다.","image":{"full":"BrandP.png","sprite":"passive0.png","group":"passive","x":96,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Brand","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Brand","title":"BrandARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3136,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3030,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Brand","title":"BrandCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3029,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Brand","title":"BrandFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3136,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3174,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Brand","title":"BrandKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3136,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Brand","title":"BrandSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3029,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3157,"count":1}]}]},{"champion":"Brand","title":"BrandSR","type":"riot-mid","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3027,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Brand","title":"BrandSRSupport","type":"riot-support","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":2049,"count":1},{"id":3098,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":2301,"count":1},{"id":3151,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3135,"count":1},{"id":3092,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2139,"count":1},{"id":2055,"count":1}]}]},{"champion":"Brand","title":"BrandTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3151,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3027,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Zoe":{"id":142,"key":"Zoe","name":"조이","title":"여명의 성위","image":{"full":"Zoe.png","sprite":"champion4.png","group":"champion","x":336,"y":48,"w":48,"h":48},"skins":[{"id":142000,"name":"default","num":0},{"id":142001,"name":"알록달록 해커 조이","num":1}],"lore":"장난기와 상상력, 그리고 변화의 화신인 조이는 타곤의 신성한 전령으로, 세상을 재구성할 큰 사건을 예고한다. 조이는 존재하는 것만으로도 세상을 구성하는 신비한 질서를 왜곡시키는데, 이로 인해 고의나 악의 없이도 대재앙이 일어나곤 한다. 그래서 아마 조이는 임무를 수행하는 것보다 장난을 치는 데에 집중하고, 필멸자들에게 속임수를 쓰고, 그 외에 다른 방식으로 즐거운 일을 찾으면서 더 많은 시간을 보내는지도 모른다. 조이와의 만남은 즐거움을 얻고 삶을 새롭게 바라보는 기회가 될 수도 있지만, 조이는 굉장히 위험한 존재이니 겉모습에 현혹되어서는 안 된다.","blurb":"장난기와 상상력, 그리고 변화의 화신인 조이는 타곤의 신성한 전령으로, 세상을 재구성할 큰 사건을 예고한다. 조이는 존재하는 것만으로도 세상을 구성하는 신비한 질서를 왜곡시키는데, 이로 인해 고의나 악의 없이도 대재앙이 일어나곤 한다. 그래서 아마 조이는 임무를 수행하는 것보다 장난을 치는 데에 집중하고, 필멸자들에게 속임수를 쓰고, 그 외에 다른 방식으로 즐거운 일을 찾으면서 더 많은 시간을 보내는지도 모른다. 조이와의 만남은 즐거움을 얻고 삶을...","allytips":["- 통통별은 총 이동 거리에 비례해 더 큰 피해를 입히므로, 일단 뒤쪽으로 쏜 뒤 재사용해 방향을 바꾸면 더 피해량을 극대화할 수 있습니다.","- 잠든 상태의 적에게는 두 배의 피해를 입힐 수 있습니다. 적을 깨울 때는 가장 강력한 스킬을 사용하세요.","- 헤롱헤롱쿨쿨방울을 벽 너머로 던지면 더 멀리 날아갑니다. 적당한 곳에 숨어서 멀리 있는 적을 노려 보세요."],"enemytips":["- 통통별은 총 이동 거리에 비례해 더 큰 피해를 입힙니다.","- 조이는 차원 넘기로 이동한 후 반드시 원래 자리로 돌아갑니다. 반격할 때 이 점을 이용해 보세요.","- 헤롱헤롱쿨쿨방울은 벽 너머로 날아가면 더 멀리 이동합니다. 조이가 전장의 안개 속에 숨었을 때 특히 조심하세요."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":1,"defense":7,"magic":8,"difficulty":5},"stats":{"armor":20.8,"armorperlevel":3.5,"attackdamage":56,"attackdamageperlevel":3.3,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":526,"hpperlevel":92,"hpregen":6.5,"hpregenperlevel":0.6,"movespeed":340,"mp":340,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.65,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"통통별","description":"조이가 별을 발사합니다. 별이 날아가는 도중에 방향을 바꿀 수 있으며, 별의 총 이동거리에 비례해 피해량이 증가합니다.","sanitizedDescription":"조이가 별을 발사합니다. 별이 날아가는 도중에 방향을 바꿀 수 있으며, 별의 총 이동거리에 비례해 피해량이 증가합니다.","tooltip":"총 이동거리가 길어질수록 더 큰 피해를 입히는 별을 발사합니다. 별은 {{ f2 }} <span class=\"color99FF99\">(+{{ f1 }})</span> ~ {{ f2*2.5 }} <span class=\"color99FF99\">(+{{ f1*2.5 }})</span>의 마법 피해를 입힙니다.<span class=\"size5\"><br /><br /><br /></span>재사용하면 별을 조이 근처의 새로운 목표 지점으로 보낼 수 있습니다.<br /><br /><rules>기본 피해량: {{ e1 }} + 주문력의 {{ e3 }}% + 반짝반짝! 추가 피해량</rules>","sanitizedTooltip":"총 이동거리가 길어질수록 더 큰 피해를 입히는 별을 발사합니다. 별은 {{ f2 }} (+{{ f1 }}) ~ {{ f2*2.5 }} (+{{ f1*2.5 }})의 마법 피해를 입힙니다. 재사용하면 별을 조이 근처의 새로운 목표 지점으로 보낼 수 있습니다. 기본 피해량: {{ e1 }} + 주문력의 {{ e3 }}% + 반짝반짝! 추가 피해량","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZoeQ.png","sprite":"spell14.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[7.5,7,6.75,6.5,6.25],"cooldownBurn":"7.5/7/6.75/6.5/6.25","effect":[null,[45,75,105,135,165],[1.5,1.5,1.5,1.5,1.5],[40,40,40,40,40],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","45/75/105/135/165","1.5","40","0","0","0","0","0","0","0"],"range":[800,800,800,800,800],"rangeBurn":"800","key":"ZoeQ"},{"name":"주문도둑","description":"적이 소환사 주문이나 사용 효과가 있는 아이템을 사용하면 주문 파편이 남고, 조이는 그 파편을 주워 해당 주문 및 효과를 사용할 수 있습니다. 또한 조이가 소환사 주문을 사용하면 미사일이 3개 생성되어 가장 가까운 적에게 날아갑니다.","sanitizedDescription":"적이 소환사 주문이나 사용 효과가 있는 아이템을 사용하면 주문 파편이 남고, 조이는 그 파편을 주워 해당 주문 및 효과를 사용할 수 있습니다. 또한 조이가 소환사 주문을 사용하면 미사일이 3개 생성되어 가장 가까운 적에게 날아갑니다.","tooltip":"적이 소환사 주문이나 사용 효과가 있는 아이템을 사용하면 40초 동안 지면에 주문 파편이 남게 됩니다. 일부 미니언도 조이에 의해 처치당하면 주문 파편을 떨어뜨립니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>주문 파편을 획득하면 해당 주문 또는 아이템 효과를 한 번 사용할 수 있습니다.<br />                 ____________________________________________ <span class=\"size8\"><br /><br /></span></span><span class=\"colorFF9900\">기본 지속 효과: </span>조이가 주문도둑 스킬 또는 소환사 주문을 사용하면 {{ e0 }}초 동안 이동 속도가 {{ e9 }}% 증가하고 공격 대상에게 최대 3개의 미사일을 던져 총 {{ e8 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 각각의 미사일은 반짝반짝! 효과를 발동시킬 수 있습니다.<br /><br /><rules>스킬 레벨이 올라가면 이동 속도 증가 효과와 미사일 피해량이 강화됩니다.</rules>","sanitizedTooltip":"적이 소환사 주문이나 사용 효과가 있는 아이템을 사용하면 40초 동안 지면에 주문 파편이 남게 됩니다. 일부 미니언도 조이에 의해 처치당하면 주문 파편을 떨어뜨립니다. 사용 시: 주문 파편을 획득하면 해당 주문 또는 아이템 효과를 한 번 사용할 수 있습니다. ____________________________________________ 기본 지속 효과: 조이가 주문도둑 스킬 또는 소환사 주문을 사용하면 {{ e0 }}초 동안 이동 속도가 {{ e9 }}% 증가하고 공격 대상에게 최대 3개의 미사일을 던져 총 {{ e8 }} (+{{ a1 }})의 마법 피해를 입힙니다. 각각의 미사일은 반짝반짝! 효과를 발동시킬 수 있습니다. 스킬 레벨이 올라가면 이동 속도 증가 효과와 미사일 피해량이 강화됩니다.","leveltip":{"label":["피해량","이동 속도","이동 속도 지속시간"],"effect":["{{ e8 }} -> {{ e8NL }}","{{ e9 }}% -> {{ e9NL }}%","{{ e0 }} -> {{ e0NL }}"]},"image":{"full":"ZoeW.png","sprite":"spell14.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[0.25,0.25,0.25,0.25,0.25],"cooldownBurn":"0.25","effect":[null,[25,36.67,48.33,60,71.67],[3000,4500,6000,0,0],[0.1,0.1,0.1,0.1,0.1],[2500,2500,2500,2500,2500],[60,60,60,60,60],[20,50,80,110,140],[0.25,0.25,0.25,0.25,0.25],[70,115,160,205,250],[10,25,40,55,70],[2,2.5,3,3.5,4]],"effectBurn":["","25/36.67/48.33/60/71.67","3000/4500/6000/0/0","0.1","2500","60","20/50/80/110/140","0.25","70/115/160/205/250","10/25/40/55/70","2/2.5/3/3.5/4"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[3000,4500,6000,3000,3000],"rangeBurn":"3000/4500/6000/3000/3000","key":"ZoeW"},{"name":"헤롱헤롱쿨쿨방울","description":"대상을 졸음 상태에 빠지게 한 뒤 잠들게 합니다. 잠든 뒤 처음으로 입는 피해는 두 배로 적용됩니다. (최대치 있음)","sanitizedDescription":"대상을 졸음 상태에 빠지게 한 뒤 잠들게 합니다. 잠든 뒤 처음으로 입는 피해는 두 배로 적용됩니다. (최대치 있음)","tooltip":"{{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히는 방울을 던집니다. 방울이 아무도 맞히지 못하면 덫이 되어 그 자리에 남습니다. 방울을 벽 너머로 던지면 사거리가 증가합니다.<br /><br />방울에 맞은 적은 2초 동안 잠들게 됩니다. 잠든 적이 공격당하면 두 배의 피해(최대 {{ e6 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 고정 피해)를 입고 잠에서 깨어납니다.<br /><br />적 챔피언이 잠들게 되면 헤롱헤롱쿨쿨방울의 재사용 대기시간이 {{ e2 }}% 감소합니다.","sanitizedTooltip":"{{ e1 }} (+{{ a1 }})의 마법 피해를 입히는 방울을 던집니다. 방울이 아무도 맞히지 못하면 덫이 되어 그 자리에 남습니다. 방울을 벽 너머로 던지면 사거리가 증가합니다. 방울에 맞은 적은 2초 동안 잠들게 됩니다. 잠든 적이 공격당하면 두 배의 피해(최대 {{ e6 }} (+{{ a2 }})의 추가 고정 피해)를 입고 잠에서 깨어납니다. 적 챔피언이 잠들게 되면 헤롱헤롱쿨쿨방울의 재사용 대기시간이 {{ e2 }}% 감소합니다.","leveltip":{"label":["피해량","최대 추가 피해량","재사용 대기시간","재사용 대기시간 감소"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e6 }} -> {{ e6NL }}","{{ cooldown }}초 -> {{ cooldownNL }}초","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"ZoeE.png","sprite":"spell14.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[16,15.5,15,14.5,14],"cooldownBurn":"16/15.5/15/14.5/14","effect":[null,[60,100,140,180,220],[10,15,20,25,30],[5,15,25,35,45],[5,5,5,5,5],[0.1,0.2,0.3,0.4,0.5],[60,100,140,180,220],[0.4,0.4,0.4,0.4,0.4],[1.4,1.4,1.4,1.4,1.4],[2.25,2.25,2.25,2.25,2.25],[1,1,1,1,1]],"effectBurn":["","60/100/140/180/220","10/15/20/25/30","5/15/25/35/45","5","0.1/0.2/0.3/0.4/0.5","60/100/140/180/220","0.4","1.4","2.25","1"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.4]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"ZoeE"},{"name":"차원 넘기","description":"1초 동안 근처 위치로 순간이동한 뒤 다시 되돌아옵니다.","sanitizedDescription":"1초 동안 근처 위치로 순간이동한 뒤 다시 되돌아옵니다.","tooltip":"1초 동안 근처 위치로 순간이동한 뒤 다시 되돌아옵니다.<br /><br /><rules>순간이동한 동안에는 정상적으로 스킬을 사용하고 공격할 수 있으며 벽 너머를 볼 수 있지만 다른 곳으로 이동은 불가능합니다.</rules>","sanitizedTooltip":"1초 동안 근처 위치로 순간이동한 뒤 다시 되돌아옵니다. 순간이동한 동안에는 정상적으로 스킬을 사용하고 공격할 수 있으며 벽 너머를 볼 수 있지만 다른 곳으로 이동은 불가능합니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }}초 -> {{ cooldownNL }}초"]},"image":{"full":"ZoeR.png","sprite":"spell14.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[50,50,50],"costBurn":"50","cooldown":[11,8,5],"cooldownBurn":"11/8/5","effect":[null,[-0.3,-0.4,-0.5],[1.5,2,2.5],[4,4,4],[0.5,0.5,0.5],[3,3,3],[100,200,300],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","-0.3/-0.4/-0.5","1.5/2/2.5","4","0.5","3","100/200/300","0","0","0","0"],"range":[575,575,575],"rangeBurn":"575","key":"ZoeR"}],"passive":{"name":"반짝반짝!","description":"스킬 사용 후 기본 공격 시 추가 마법 피해를 입힙니다.","sanitizedDescription":"스킬 사용 후 기본 공격 시 추가 마법 피해를 입힙니다.","image":{"full":"Zoe_P.png","sprite":"passive4.png","group":"passive","x":336,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Zoe","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]}]},{"champion":"Zoe","title":"ZoeARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1},{"id":3285,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zoe","title":"ZoeASC","type":"riot","map":"CS","mode":"ASCENSION","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3152,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Zoe","title":"ZoeDM","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Zoe","title":"ZoeFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1},{"id":3303,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2049,"count":1},{"id":3020,"count":1},{"id":3098,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3105,"count":1},{"id":3069,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Zoe","title":"ZoePG","type":"riot","map":"3","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3303,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3098,"count":1},{"id":3020,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3092,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3027,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Zoe","title":"ZoeSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeoffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegedefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3029,"count":1},{"id":3102,"count":1}]}]},{"champion":"Zoe","title":"ZoeSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":3057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zoe","title":"ZoeTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Graves":{"id":104,"key":"Graves","name":"그레이브즈","title":"무법자","image":{"full":"Graves.png","sprite":"champion1.png","group":"champion","x":240,"y":0,"w":48,"h":48},"skins":[{"id":104000,"name":"default","num":0},{"id":104001,"name":"용병 그레이브즈","num":1},{"id":104002,"name":"탈옥수 그레이브즈","num":2},{"id":104003,"name":"마피아 그레이브즈","num":3},{"id":104004,"name":"라이엇 그레이브즈","num":4},{"id":104005,"name":"수영장 파티 그레이브즈","num":5},{"id":104006,"name":"불한당 그레이브즈","num":6},{"id":104007,"name":"눈싸움 달인 그레이브즈","num":7},{"id":104014,"name":"승리의 그레이브즈","num":14}],"lore":"말콤 그레이브즈는 명성이 자자한 용병, 도박사, 도적으로, 그가 한 번이라도 발을 들였던 모든 도시와 제국에서 수배령이 떨어져 있을 정도다. 그레이브즈는 성미가 불 같지만, 범죄의 명예에 엄격한 면이 있어 자신의 이중 총열 산탄총 '운명'으로 마무리를 하는 경우가 잦다. 최근에는 트위스티드 페이트와 함께 바람 잘 날 없던 파트너 관계를 다시 맺고, 범죄의 냄새가 나는 빌지워터의 그늘진 곳에서 벌어지는 소동을 다시 한 번 주름잡고 있다.","blurb":"말콤 그레이브즈는 명성이 자자한 용병, 도박사, 도적으로, 그가 한 번이라도 발을 들였던 모든 도시와 제국에서 수배령이 떨어져 있을 정도다. 그레이브즈는 성미가 불 같지만, 범죄의 명예에 엄격한 면이 있어 자신의 이중 총열 산탄총 '운명'으로 마무리를 하는 경우가 잦다. 최근에는 트위스티드 페이트와 함께 바람 잘 날 없던 파트너 관계를 다시 맺고, 범죄의 냄새가 나는 빌지워터의 그늘진 곳에서 벌어지는 소동을 다시 한 번 주름잡고 있다.","allytips":["- 연막탄은 도망칠 때나 적을 해치울 때 모두 사용할 수 있습니다.","- 빨리 뽑기 스킬로 사거리 안에 들어가 근거리에서 산탄 사격을 가하면 큰 피해를 입힐 수 있습니다."],"enemytips":["- 그레이브즈는 주로 물리 피해를 주기 때문에 상대할 때는 방어력에 투자하는 편이 효과적입니다.","- 연막탄의 효과 범위를 벗어나면 즉시 해로운 효과가 사라집니다."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":5,"magic":3,"difficulty":3},"stats":{"armor":33,"armorperlevel":3.4,"attackdamage":69,"attackdamageperlevel":2.41,"attackrange":425,"attackspeedoffset":0.3,"attackspeedperlevel":2.6,"crit":0,"critperlevel":0,"hp":551.12,"hpperlevel":84,"hpregen":8,"hpregenperlevel":0.7,"movespeed":340,"mp":322.2,"mpperlevel":40,"mpregen":7.9,"mpregenperlevel":0.7,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"화약 역류","description":"그레이브즈가 탄환을 발사합니다. 탄환은 발사 2초 뒤, 지형에 충돌 시 0.2초 뒤 폭발합니다.","sanitizedDescription":"그레이브즈가 탄환을 발사합니다. 탄환은 발사 2초 뒤, 지형에 충돌 시 0.2초 뒤 폭발합니다.","tooltip":"화약을 흩뿌리는 탄환을 발사하여 직선상의 적에게 {{ e1 }}<span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다.<br /><br />화약 궤적은 2초 뒤, 지형에 충돌 시 {{ e6 }}초 뒤 폭발하며 근처의 모든 적에게 {{ e2 }}<span class=\"colorFF8C00\">(+{{ f2 }})</span>의 물리 피해를 입힙니다.","sanitizedTooltip":"화약을 흩뿌리는 탄환을 발사하여 직선상의 적에게 {{ e1 }}(+{{ f1 }})의 물리 피해를 입힙니다. 화약 궤적은 2초 뒤, 지형에 충돌 시 {{ e6 }}초 뒤 폭발하며 근처의 모든 적에게 {{ e2 }}(+{{ f2 }})의 물리 피해를 입힙니다.","leveltip":{"label":["피해량","폭발 공격력 계수","마나 소모량","재사용 대기시간"],"effect":[" {{ e1 }} -> {{ e1NL }} / {{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GravesQLineSpell.png","sprite":"spell3.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[45,60,75,90,105],[85,115,145,175,205],[0.4,0.7,1,1.3,1.6],[0,0,0,0,0],[1,1,1,1,1],[0.2,0.2,0.2,0.2,0.2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","45/60/75/90/105","85/115/145/175/205","0.4/0.7/1/1.3/1.6","0","1","0.2","0","0","0","0"],"range":[925,925,925,925,925],"rangeBurn":"925","key":"GravesQLineSpell"},{"name":"연막탄","description":"그레이브즈가 목표 지점에 연막탄을 발사하여 연기 구름을 만들어냅니다. 연기 구름 속의 적들은 시야와 이동 속도가 감소합니다.","sanitizedDescription":"그레이브즈가 목표 지점에 연막탄을 발사하여 연기 구름을 만들어냅니다. 연기 구름 속의 적들은 시야와 이동 속도가 감소합니다.","tooltip":"4초간 지속되는 검은 연기 구름을 만들어냅니다. 연기 속에 갇힌 적은 밖을 볼 수 없습니다.<br /><br />적중한 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}%만큼 둔화시킵니다.","sanitizedTooltip":"4초간 지속되는 검은 연기 구름을 만들어냅니다. 연기 속에 갇힌 적은 밖을 볼 수 없습니다. 적중한 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}%만큼 둔화시킵니다.","leveltip":{"label":["피해량","둔화","마나 소모량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GravesSmokeGrenade.png","sprite":"spell4.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[26,24,22,20,18],"cooldownBurn":"26/24/22/20/18","effect":[null,[60,110,160,210,260],[15,20,25,30,35],[200,200,200,200,200],[4,4,4,4,4],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/110/160/210/260","15/20/25/30/35","200","4","1.5","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[950,950,950,950,950],"rangeBurn":"950","key":"GravesSmokeGrenade"},{"name":"빨리 뽑기","description":"그레이브즈가 전방으로 돌진하여 몇 초 동안 방어력이 상승하며, 적 챔피언을 향해 돌진할 경우에는 진정한 용기가 두 번 중첩됩니다. 기본 공격으로 적을 명중시키면 스킬 재사용 대기시간이 감소하고 추가 방어력 및 마법 저항력 지속 시간이 초기화됩니다.  ","sanitizedDescription":"그레이브즈가 전방으로 돌진하여 몇 초 동안 방어력이 상승하며, 적 챔피언을 향해 돌진할 경우에는 진정한 용기가 두 번 중첩됩니다. 기본 공격으로 적을 명중시키면 스킬 재사용 대기시간이 감소하고 추가 방어력 및 마법 저항력 지속 시간이 초기화됩니다.","tooltip":"한 방향으로 돌진하며 총탄을 하나 장전합니다. 또한 4초 동안 <span class=\"colorFFF673\">진정한 용기</span> 효과를 얻습니다. 적 챔피언을 향해 돌진할 경우에는 <span class=\"colorFFF673\">진정한 용기</span> 효과가 두 번 중첩됩니다.<br /><br />기본 공격이 적중할 때마다 빨리 뽑기 스킬의 재사용 대기시간이 {{ e4 }}초씩 감소하고, 미니언이 아닌 대상에게 피해를 입힐 때마다 <span class=\"colorFFF673\">진정한 용기</span> 지속 시간이 초기화됩니다.<br /><br /><span class=\"colorFFF673\">진정한 용기</span>가 활성화되면 방어력이 {{ e5 }} 증가합니다. ({{ e0 }}회까지 중첩됩니다.)","sanitizedTooltip":"한 방향으로 돌진하며 총탄을 하나 장전합니다. 또한 4초 동안 진정한 용기 효과를 얻습니다. 적 챔피언을 향해 돌진할 경우에는 진정한 용기 효과가 두 번 중첩됩니다. 기본 공격이 적중할 때마다 빨리 뽑기 스킬의 재사용 대기시간이 {{ e4 }}초씩 감소하고, 미니언이 아닌 대상에게 피해를 입힐 때마다 진정한 용기 지속 시간이 초기화됩니다. 진정한 용기가 활성화되면 방어력이 {{ e5 }} 증가합니다. ({{ e0 }}회까지 중첩됩니다.)","leveltip":{"label":["진정한 용기 추가 방어력","재사용 대기시간"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GravesMove.png","sprite":"spell4.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[30,40,50,60,70],[4,4,4,4,4],[20,25,30,35,40],[0.5,0.5,0.5,0.5,0.5],[5,7.5,10,12.5,15],[750,750,750,750,750],[375,375,375,375,375],[275,275,275,275,275],[60,60,60,60,60],[8,8,8,8,8]],"effectBurn":["","30/40/50/60/70","4","20/25/30/35/40","0.5","5/7.5/10/12.5/15","750","375","275","60","8"],"range":[425,425,425,425,425],"rangeBurn":"425","key":"GravesMove"},{"name":"무고한 희생자","description":"그레이브즈가 폭발성 탄환을 발사하여 처음 맞은 챔피언에게 큰 피해를 입힙니다. 탄환은 챔피언을 맞히거나 사거리 끝까지 날아간 다음 폭발하여 원뿔 형태의 범위에 피해를 줍니다.","sanitizedDescription":"그레이브즈가 폭발성 탄환을 발사하여 처음 맞은 챔피언에게 큰 피해를 입힙니다. 탄환은 챔피언을 맞히거나 사거리 끝까지 날아간 다음 폭발하여 원뿔 형태의 범위에 피해를 줍니다.","tooltip":"그레이브즈가 뒤로 밀려나게 할 만큼 강력한 폭발성 탄환을 발사합니다. 이 탄환은 첫 번째로 맞은 챔피언에게 {{ e1 }}<span class=\"colorFF8C00\"> (+{{ f1 }})</span>의 물리 피해를 입힙니다. 탄환은 챔피언을 맞히거나 사거리 끝까지 날아간 다음 폭발하여 원뿔 형태의 범위에 {{ e2 }}<span class=\"colorFF8C00\"> (+{{ f2 }})</span>의 물리 피해를 줍니다.","sanitizedTooltip":"그레이브즈가 뒤로 밀려나게 할 만큼 강력한 폭발성 탄환을 발사합니다. 이 탄환은 첫 번째로 맞은 챔피언에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 탄환은 챔피언을 맞히거나 사거리 끝까지 날아간 다음 폭발하여 원뿔 형태의 범위에 {{ e2 }} (+{{ f2 }})의 물리 피해를 줍니다.","leveltip":{"label":["일차 피해","원뿔 범위 피해","재사용 대기시간 "],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GravesChargeShot.png","sprite":"spell4.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[250,400,550],[200,320,440],[400,400,400],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","250/400/550","200/320/440","400","0","0","0","0","0","0","0"],"range":[1000,1000,1000],"rangeBurn":"1000","key":"GravesChargeShot"}],"passive":{"name":"새로운 운명","description":"그레이브즈의 산탄총은 2개의 탄환이 장전되기 때문에 모두 발사하고 나면 재장전해야 합니다. 매 공격 시 여러 개의 총알이 원뿔형으로 발사됩니다. 하나의 적에게 여러 개의 총알을 맞히면 추가 피해를 입히며 총알은 유닛을 관통할 수 없습니다.","sanitizedDescription":"그레이브즈의 산탄총은 2개의 탄환이 장전되기 때문에 모두 발사하고 나면 재장전해야 합니다. 매 공격 시 여러 개의 총알이 원뿔형으로 발사됩니다. 하나의 적에게 여러 개의 총알을 맞히면 추가 피해를 입히며 총알은 유닛을 관통할 수 없습니다.","image":{"full":"GravesTrueGrit.png","sprite":"passive1.png","group":"passive","x":240,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Graves","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Graves","title":"GravesARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3812,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3156,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Graves","title":"GravesCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1037,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3812,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Graves","title":"GravesFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":1038,"count":1},{"id":3086,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3508,"count":1},{"id":3087,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3036,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2043,"count":1}]}]},{"champion":"Graves","title":"GravesKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3812,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3156,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3102,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Graves","title":"GravesPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3071,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3814,"count":1},{"id":3156,"count":1}]}]},{"champion":"Graves","title":"GravesSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3812,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]}]},{"champion":"Graves","title":"GravesSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1037,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3812,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3006,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3147,"count":1},{"id":3812,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3026,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2140,"count":1}]}]},{"champion":"Graves","title":"GravesTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1037,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3046,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3156,"count":1},{"id":3072,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Soraka":{"id":16,"key":"Soraka","name":"소라카","title":"별의 아이","image":{"full":"Soraka.png","sprite":"champion3.png","group":"champion","x":144,"y":48,"w":48,"h":48},"skins":[{"id":16000,"name":"default","num":0},{"id":16001,"name":"나무 요정 소라카","num":1},{"id":16002,"name":"신성한 소라카","num":2},{"id":16003,"name":"천상의 빛 소라카","num":3},{"id":16004,"name":"사신 소라카","num":4},{"id":16005,"name":"바나나 수도회 소라카","num":5},{"id":16006,"name":"프로그램 소라카","num":6},{"id":16007,"name":"별 수호자 소라카","num":7}],"lore":"타곤 산 너머 천상계의 방랑자 소라카는 필멸자들을 그들 자신의 폭력적 본성으로부터 보호하기 위해 자신의 불멸을 포기했다. 소라카는 만나는 모든 이에게 동정심과 자비의 마음을 심어주려고 노력한다. 심지어 자신을 해치려는 이들마저 소라카는 치유의 손길을 뻗는다. 이 세상의 혼란함을 지켜본 소라카는 아직 룬테라의 사람들에게 끌어낼 수 있는 잠재력이 남았다고 믿는다.","blurb":"타곤 산 너머 천상계의 방랑자 소라카는 필멸자들을 그들 자신의 폭력적 본성으로부터 보호하기 위해 자신의 불멸을 포기했다. 소라카는 만나는 모든 이에게 동정심과 자비의 마음을 심어주려고 노력한다. 심지어 자신을 해치려는 이들마저 소라카는 치유의 손길을 뻗는다. 이 세상의 혼란함을 지켜본 소라카는 아직 룬테라의 사람들에게 끌어낼 수 있는 잠재력이 남았다고 믿는다.","allytips":["- 소라카는 강력한 치료 능력으로 아군의 진격을 도와주는 강력한 아군입니다.","- 아군에게 기원을 사용하면 멀리 떨어진 아군도 위험에서 구해낼 수 있습니다.","- 별의 균형을 활용하여 일정 범위 안의 적들을 궁지에 몰아넣을 수 있습니다."],"enemytips":["- 소라카가 아군을 치유하기 위해 전방으로 나올 때 공격을 집중하세요.","- 소라카가 별의 균형을 견제기로 사용할 때는 긴 재사용 대기시간을 노리세요.","- 소라카가 치유하는 아군보다는 소라카에게 직접 공격을 집중하는 편이 더 쉽습니다."],"tags":["Support","Mage"],"partype":"마나","info":{"attack":2,"defense":5,"magic":7,"difficulty":3},"stats":{"armor":32,"armorperlevel":3.8,"attackdamage":50.04,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2.14,"crit":0,"critperlevel":0,"hp":529.04,"hpperlevel":78,"hpregen":2.5,"hpregenperlevel":0.5,"movespeed":325,"mp":350.8,"mpperlevel":60,"mpregen":11.5,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"별부름","description":"지정한 위치에 하늘에서 별이 떨어져 적에게 마법 피해를 입히고 이동 속도를 느려지게 합니다. 별부름이 적 챔피언에게 적중하면 잠시 뒤 소라카는 체력을 회복하고 적 챔피언으로부터 멀어질 때 이동 속도가 증가합니다.","sanitizedDescription":"지정한 위치에 하늘에서 별이 떨어져 적에게 마법 피해를 입히고 이동 속도를 느려지게 합니다. 별부름이 적 챔피언에게 적중하면 잠시 뒤 소라카는 체력을 회복하고 적 챔피언으로부터 멀어질 때 이동 속도가 증가합니다.","tooltip":"소라카가 지정한 위치에 별을 떨어뜨립니다. 폭발 반경 안의 적은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 2초 동안 {{ e2 }}% 둔화됩니다.<br /><br />별부름이 적 챔피언에게 적중하면 소라카는 {{ e5 }}초 동안 <span class=\"colorDDDDDD\">별의 가호</span>를 얻어 초당 {{ e3 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 체력을 회복하고 적 챔피언으로부터 달아날 때 이동 속도가 {{ e9 }}%만큼 증가합니다.","sanitizedTooltip":"소라카가 지정한 위치에 별을 떨어뜨립니다. 폭발 반경 안의 적은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 2초 동안 {{ e2 }}% 둔화됩니다. 별부름이 적 챔피언에게 적중하면 소라카는 {{ e5 }}초 동안 별의 가호를 얻어 초당 {{ e3 }} (+{{ f1 }})의 체력을 회복하고 적 챔피언으로부터 달아날 때 이동 속도가 {{ e9 }}%만큼 증가합니다.","leveltip":{"label":["피해량","체력 회복 (별의 가호)","별의 가호 지속 시간 (아군 대상)","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e6 }} -> {{ e6NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SorakaQ.png","sprite":"spell10.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[5,5,5,5,5],"cooldownBurn":"5","effect":[null,[70,110,150,190,230],[30,30,30,30,30],[14,16,18,20,22],[7,9,11,13,15],[4,4,4,4,4],[3,3.5,4,4.5,5],[0.1,0.1,0.1,0.1,0.1],[0.05,0.05,0.05,0.05,0.05],[10,10,10,10,10],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","30","14/16/18/20/22","7/9/11/13/15","4","3/3.5/4/4.5/5","0.1","0.05","10","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]}],"range":[810,810,810,810,810],"rangeBurn":"810","key":"SorakaQ"},{"name":"은하의 마력","description":"소라카가 자신의 체력을 일정 부분 희생하여 아군 유닛을 치유합니다.","sanitizedDescription":"소라카가 자신의 체력을 일정 부분 희생하여 아군 유닛을 치유합니다.","tooltip":"아군 챔피언의 체력을 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>만큼 회복시킵니다.<br /><br /><span class=\"colorDDDDDD\">별의 가호</span>를 받는 상태에서 시전 시 대상에게도 {{ f1 }}초 동안 같은 효과가 적용됩니다.<br /><br /><span class=\"color919191\"><i>소라카의 체력이 5% 아래일 때는 사용할 수 없습니다.</i></span>","sanitizedTooltip":"아군 챔피언의 체력을 {{ e1 }} (+{{ a1 }})만큼 회복시킵니다. 별의 가호를 받는 상태에서 시전 시 대상에게도 {{ f1 }}초 동안 같은 효과가 적용됩니다. 소라카의 체력이 5% 아래일 때는 사용할 수 없습니다.","leveltip":{"label":["치유량","재사용 대기시간","마나 소모 비용"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SorakaW.png","sprite":"spell10.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"최대 체력의 10%, 마나 {{ cost }} 소모","maxrank":5,"cost":[50,55,60,65,70],"costType":" 소모","costBurn":"50/55/60/65/70","cooldown":[8,6.5,5,3.5,2],"cooldownBurn":"8/6.5/5/3.5/2","effect":[null,[80,110,140,170,200],[0.1,0.1,0.1,0.1,0.1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/110/140/170/200","0.1","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"SorakaW"},{"name":"별의 균형","description":"영역 내의 모든 적을 침묵시키는 구역을 생성합니다. 영역이 해제될 때 아직 안에 남아있는 모든 적은 제자리에 묶입니다.","sanitizedDescription":"영역 내의 모든 적을 침묵시키는 구역을 생성합니다. 영역이 해제될 때 아직 안에 남아있는 모든 적은 제자리에 묶입니다.","tooltip":"지정한 위치에 1.5초간 구역을 생성하여 이 반경 안에 서 있는 적 챔피언들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 이 영역 안에 서 있는 적 챔피언들은 밖으로 나갈 때까지 스킬을 사용할 수 없습니다.<br /><br />구역이 사라질 때 아직 이 안에 서 있는 적 챔피언들은 모두 {{ e1 }}초 동안 발이 묶이고 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }}) </span>의 마법 피해를 입습니다.","sanitizedTooltip":"지정한 위치에 1.5초간 구역을 생성하여 이 반경 안에 서 있는 적 챔피언들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이 영역 안에 서 있는 적 챔피언들은 밖으로 나갈 때까지 스킬을 사용할 수 없습니다. 구역이 사라질 때 아직 이 안에 서 있는 적 챔피언들은 모두 {{ e1 }}초 동안 발이 묶이고 {{ e2 }} (+{{ a1 }}) 의 마법 피해를 입습니다.","leveltip":{"label":["피해량","재사용 대기시간","속박 지속 시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"SorakaE.png","sprite":"spell10.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[24,22,20,18,16],"cooldownBurn":"24/22/20/18/16","effect":[null,[1,1.25,1.5,1.75,2],[70,110,150,190,230],[40,70,100,130,160],[5,5,5,5,5],[20,40,60,80,100],[60,90,120,150,180],[1.5,1.5,1.5,1.5,1.5],[260,260,260,260,260],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1/1.25/1.5/1.75/2","70/110/150/190/230","40/70/100/130/160","5","20/40/60/80/100","60/90/120/150/180","1.5","260","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"SorakaE"},{"name":"기원","description":"소라카가 아군에게 희망을 불어넣어 자신과 아군 챔피언들의 체력을 즉시 회복합니다.","sanitizedDescription":"소라카가 아군에게 희망을 불어넣어 자신과 아군 챔피언들의 체력을 즉시 회복합니다.","tooltip":"신의 권능을 빌어 모든 아군 챔피언의 체력을 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>만큼 회복시킵니다. 체력이 40% 이하인 챔피언에게는 기원의 위력이 50% 증가합니다.","sanitizedTooltip":"신의 권능을 빌어 모든 아군 챔피언의 체력을 {{ e1 }} (+{{ a1 }})만큼 회복시킵니다. 체력이 40% 이하인 챔피언에게는 기원의 위력이 50% 증가합니다.","leveltip":{"label":["체력 회복량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SorakaR.png","sprite":"spell10.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[160,145,130],"cooldownBurn":"160/145/130","effect":[null,[150,250,350],[120,90,60],[250,350,450],[1.5,1.5,1.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","120/90/60","250/350/450","1.5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.55]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"SorakaR"}],"passive":{"name":"구원","description":"소라카는 체력이 낮은 아군 쪽으로 이동할 때 속도가 더 빨라집니다.","sanitizedDescription":"소라카는 체력이 낮은 아군 쪽으로 이동할 때 속도가 더 빨라집니다.","image":{"full":"Soraka_Passive.png","sprite":"passive3.png","group":"passive","x":144,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Soraka","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1},{"id":3504,"count":1}]}]},{"champion":"Soraka","title":"SorakaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3107,"count":1},{"id":3190,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3504,"count":1},{"id":3174,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3083,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Soraka","title":"SorakaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3301,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3050,"count":1},{"id":3158,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3504,"count":1},{"id":3089,"count":1},{"id":3060,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3107,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Soraka","title":"SorakaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3301,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3050,"count":1},{"id":3158,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3504,"count":1},{"id":3089,"count":1},{"id":3060,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3107,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Soraka","title":"SorakaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":3301,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3190,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3504,"count":1},{"id":3050,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3083,"count":1},{"id":3102,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Soraka","title":"SorakaSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3107,"count":1},{"id":3158,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3504,"count":1},{"id":3089,"count":1},{"id":3102,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Soraka","title":"SorakaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3050,"count":1},{"id":3158,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3504,"count":1},{"id":3089,"count":1},{"id":3060,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3107,"count":1}]}]},{"champion":"Soraka","title":"SorakaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3096,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3107,"count":1},{"id":3158,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3504,"count":1},{"id":3089,"count":1},{"id":3102,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Soraka","title":"SorakaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3301,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3050,"count":1},{"id":3504,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3107,"count":1},{"id":3170,"count":1},{"id":3222,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Xayah":{"id":498,"key":"Xayah","name":"자야","title":"저항하는 자","image":{"full":"Xayah.png","sprite":"champion4.png","group":"champion","x":384,"y":0,"w":48,"h":48},"skins":[{"id":498000,"name":"default","num":0},{"id":498001,"name":"황혼 우주 자야","num":1}],"lore":"바스타야 혁명을 일으키고 싶어하는 자야는 치명적인 정확성을 자랑하는 전사이다. 민첩한 몸놀림과 간교할 정도로 예리한 두뇌를 갖추었고, 칼날보다 날카로운 깃털로 자신을 막아서는 것은 모조리 베어버린다. 한때는 점점 수가 줄어들고 있는 바스타야 종족을 구해내기 위해 혼자만의 전쟁을 수행했으나, 이제는 동지이자 연인인 라칸과 늘 함께 싸운다. 둘은 바스타야 종족을 보호하고 먼 옛날 바스타야 종족이 누리던 영광을 되찾기 위해 노력하고 있다.","blurb":"바스타야 혁명을 일으키고 싶어하는 자야는 치명적인 정확성을 자랑하는 전사이다. 민첩한 몸놀림과 간교할 정도로 예리한 두뇌를 갖추었고, 칼날보다 날카로운 깃털로 자신을 막아서는 것은 모조리 베어버린다. 한때는 점점 수가 줄어들고 있는 바스타야 종족을 구해내기 위해 혼자만의 전쟁을 수행했으나, 이제는 동지이자 연인인 라칸과 늘 함께 싸운다. 둘은 바스타야 종족을 보호하고 먼 옛날 바스타야 종족이 누리던 영광을 되찾기 위해 노력하고 있다.","allytips":["- 자야는 기본 공격 및 스킬 사용 시 바닥에 깃털을 남깁니다. 깃털은 나중에 다시 불러들여 광역 피해를 입히고 적을 속박시킬 수 있습니다.","- 저항의 비상을 사용하면 거의 모든 스킬을 피할 수 있고 깃털도 다량 남길 수 있습니다. 궁극기의 공격적인 면과 수비적인 면을 모두 활용해 보세요."],"enemytips":["- 자야가 깃부르미를 사용했을 때 깃털을 세 개 이상 맞으면 속박됩니다.","- 같은 장소에서 전투를 지속하면 자야가 깃털을 많이 떨어트리게 되니 꾸준히 이동하면서 싸우세요.","- 자야를 노릴 때는 만반의 준비를 갖춰야 합니다. 저항의 비상을 사용하면 대상으로 지정할 수 없게 되기 때문에, 순식간에 전세가 뒤집힐 수 있죠."],"tags":["Marksman"],"partype":"마나","info":{"attack":10,"defense":6,"magic":1,"difficulty":5},"stats":{"armor":33,"armorperlevel":3,"attackdamage":64,"attackdamageperlevel":2.2,"attackrange":525,"attackspeedoffset":0,"attackspeedperlevel":3.3,"crit":0,"critperlevel":0,"hp":545,"hpperlevel":80,"hpregen":6,"hpregenperlevel":0.75,"movespeed":325,"mp":340,"mpperlevel":40,"mpregen":8.25,"mpregenperlevel":0.75,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"깃털 연타","description":"자야가 일렬로 두 개의 깃털을 던집니다. 깃털은 마지막에 땅에 떨어지며 나중에 다시 불러들일 수 있습니다.","sanitizedDescription":"자야가 일렬로 두 개의 깃털을 던집니다. 깃털은 마지막에 땅에 떨어지며 나중에 다시 불러들일 수 있습니다.","tooltip":"자야가 연타 공격을 가해 {{ f1 }} <span class=\"colorFF9900\">(+{{ f2 }})</span>의 물리 피해를 입히고 <span class=\"colorC200E1\">깃털</span> 두 개를 남깁니다. 두 번째 대상부터는 {{ e2 }}%의 피해를 입힙니다.","sanitizedTooltip":"자야가 연타 공격을 가해 {{ f1 }} (+{{ f2 }})의 물리 피해를 입히고 깃털 두 개를 남깁니다. 두 번째 대상부터는 {{ e2 }}%의 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XayahQ.png","sprite":"spell13.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[90,130,170,210,250],[50,50,50,50,50],[0.334,0.334,0.334,0.334,0.334],[0.584,0.584,0.584,0.584,0.584],[3500,3500,3500,3500,3500],[3500,3500,3500,3500,3500],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","90/130/170/210/250","50","0.33","0.58","3500","3500","0","0","0","0"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"XayahQ"},{"name":"죽음의 깃","description":"자야가 깃털 칼날 폭풍을 일으켜 기본 공격의 피해량과 공격 속도가 상승합니다. 적 챔피언을 공격하면 이동 속도가 증가합니다.","sanitizedDescription":"자야가 깃털 칼날 폭풍을 일으켜 기본 공격의 피해량과 공격 속도가 상승합니다. 적 챔피언을 공격하면 이동 속도가 증가합니다.","tooltip":"자야가 {{ e2 }}초 동안 칼날 폭풍을 일으켜 공격 속도가 {{ e1 }}% 상승하고 몇 차례의 기본 공격 시 추가로 {{ e5 }}%의 피해를 입힙니다.<br /><br />죽음의 깃으로 강화된 공격에 적 챔피언이 적중당하면 {{ e4 }}초 동안 자야의 이동 속도가 {{ e3 }}% 상승합니다.<br /><br /><span class=\"colore5c100\">라칸이 근처에 있으면 함께 죽음의 깃 효과를 받습니다.</span>","sanitizedTooltip":"자야가 {{ e2 }}초 동안 칼날 폭풍을 일으켜 공격 속도가 {{ e1 }}% 상승하고 몇 차례의 기본 공격 시 추가로 {{ e5 }}%의 피해를 입힙니다. 죽음의 깃으로 강화된 공격에 적 챔피언이 적중당하면 {{ e4 }}초 동안 자야의 이동 속도가 {{ e3 }}% 상승합니다. 라칸이 근처에 있으면 함께 죽음의 깃 효과를 받습니다.","leveltip":{"label":["공격 속도","재사용 대기시간","소모값"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"XayahW.png","sprite":"spell13.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,55,50,45,40],"costBurn":"60/55/50/45/40","cooldown":[20,19,18,17,16],"cooldownBurn":"20/19/18/17/16","effect":[null,[30,35,40,45,50],[4,4,4,4,4],[30,30,30,30,30],[1.5,1.5,1.5,1.5,1.5],[20,20,20,20,20],[1000,1000,1000,1000,1000],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/35/40/45/50","4","30","1.5","20","1000","0","0","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"XayahW"},{"name":"깃부르미","description":"모든 깃털을 자신에게로 불러들여 경로에 있는 적에게 피해를 입히고 속박시킵니다.","sanitizedDescription":"모든 깃털을 자신에게로 불러들여 경로에 있는 적에게 피해를 입히고 속박시킵니다.","tooltip":"자야가 모든 <span class=\"colorC200E1\">깃털</span>을 불러들여 경로에 있는 적 모두에게 {{ e1 }} <span class=\"colorFF9900\">(+{{ f3 }})</span> <span class=\"colorFF5802\">(+{{ f4 }})</span>의 물리 피해를 입힙니다. (<span class=\"colorFF5802\">치명타 확률</span>에 따라 증가합니다.)<br /><br />적이 {{ e5 }}개의 <span class=\"colorC200E1\">깃털</span>에 맞으면 {{ e4 }}초 동안 속박됩니다.<br /><br />미니언 상대로는 {{ e2 }}%의 피해를 입힙니다.","sanitizedTooltip":"자야가 모든 깃털을 불러들여 경로에 있는 적 모두에게 {{ e1 }} (+{{ f3 }}) (+{{ f4 }})의 물리 피해를 입힙니다. (치명타 확률에 따라 증가합니다.) 적이 {{ e5 }}개의 깃털에 맞으면 {{ e4 }}초 동안 속박됩니다. 미니언 상대로는 {{ e2 }}%의 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XayahE.png","sprite":"spell13.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[55,65,75,85,95],[50,50,50,50,50],[0.1,0.1,0.1,0.1,0.1],[1,1,1,1,1],[3,3,3,3,3],[0.25,0.25,0.25,0.25,0.25],[0,0,0,0,0],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/65/75/85/95","50","0.1","1","3","0.25","0","0.5","0","0"],"range":[2000,2000,2000,2000,2000],"rangeBurn":"2000","key":"XayahE"},{"name":"저항의 비상","description":"자야가 공중으로 도약해 잠시 동안 대상으로 지정할 수 없게 되고, 잠시 후 원뿔 모양으로 깃털을 발사합니다. 깃털은 마지막에 땅에 떨어지며 나중에 다시 불러들일 수 있습니다.","sanitizedDescription":"자야가 공중으로 도약해 잠시 동안 대상으로 지정할 수 없게 되고, 잠시 후 원뿔 모양으로 깃털을 발사합니다. 깃털은 마지막에 땅에 떨어지며 나중에 다시 불러들일 수 있습니다.","tooltip":"자야가 공중으로 도약해 대상으로 지정할 수 없게 됩니다. 잠시 후 원뿔 모양으로 공격을 가해 {{ e1 }}<span class=\"colorFF9900\"> (+{{ a1 }})</span>의 물리 피해를 입히고 일렬로 <span class=\"colorC200E1\">깃털</span>을 남깁니다.<br /><br />자야는 공중에 뜬 상태로 이동할 수 있습니다.","sanitizedTooltip":"자야가 공중으로 도약해 대상으로 지정할 수 없게 됩니다. 잠시 후 원뿔 모양으로 공격을 가해 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 일렬로 깃털을 남깁니다. 자야는 공중에 뜬 상태로 이동할 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"XayahR.png","sprite":"spell13.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,125,110],"cooldownBurn":"140/125/110","effect":[null,[100,150,200],[1,1,1],[1.25,1.25,1.25],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","100/150/200","1","1.25","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1]}],"range":[450,450,450],"rangeBurn":"450","key":"XayahR"}],"passive":{"name":"관통상","description":"스킬 사용 후 몇 차례의 기본 공격이 경로에 있는 적을 모두 관통하고, 다시 불러들일 수 있는 깃털을 남깁니다.","sanitizedDescription":"스킬 사용 후 몇 차례의 기본 공격이 경로에 있는 적을 모두 관통하고, 다시 불러들일 수 있는 깃털을 남깁니다.","image":{"full":"XayahPassive.png","sprite":"passive4.png","group":"passive","x":384,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Xayah","title":"XayahARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3072,"count":1},{"id":3508,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3094,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Xayah","title":"XayahCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2140,"count":1},{"id":3363,"count":1},{"id":2055,"count":1}]}]},{"champion":"Xayah","title":"XayahFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3072,"count":1},{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Xayah","title":"XayahKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3072,"count":1},{"id":3508,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3036,"count":1},{"id":3094,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Xayah","title":"XayahPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3508,"count":1},{"id":3094,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3031,"count":1},{"id":3153,"count":1},{"id":3046,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3139,"count":1}]}]},{"champion":"Xayah","title":"XayahSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1},{"id":3139,"count":1}]}]},{"champion":"Xayah","title":"XayahSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3094,"count":1},{"id":3072,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Xayah","title":"XayahTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":1037,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3812,"count":1},{"id":3153,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Karthus":{"id":30,"key":"Karthus","name":"카서스","title":"죽음을 노래하는 자","image":{"full":"Karthus.png","sprite":"champion1.png","group":"champion","x":432,"y":48,"w":48,"h":48},"skins":[{"id":30000,"name":"default","num":0},{"id":30001,"name":"유령 카서스","num":1},{"id":30002,"name":"자유의 카서스상","num":2},{"id":30003,"name":"사신 카서스","num":3},{"id":30004,"name":"펜타킬 카서스","num":4},{"id":30005,"name":"Fnatic 카서스","num":5},{"id":30009,"name":"빛의 파괴자 카서스","num":9}],"lore":"망각을 부르는 자 카서스는 섬뜩한 노랫소리를 전주곡 삼아 악몽처럼 등장하는 언데드이다. 산 자는 영원히 죽지 않는 언데드를 두려워하나, 그는 언데드를 삶과 죽음의 완벽한 결합으로 오직 아름답고 순수하다 여긴다. 카서스는 언데드로서 존재하는 기쁨을 온 세계에 전하기 위해 그림자 군도로부터 출몰한다.","blurb":"망각을 부르는 자 카서스는 섬뜩한 노랫소리를 전주곡 삼아 악몽처럼 등장하는 언데드이다. 산 자는 영원히 죽지 않는 언데드를 두려워하나, 그는 언데드를 삶과 죽음의 완벽한 결합으로 오직 아름답고 순수하다 여긴다. 카서스는 언데드로서 존재하는 기쁨을 온 세계에 전하기 위해 그림자 군도로부터 출몰한다.","allytips":["- 다른 공격로에 있는 아군과 상의하여 시기적절하게 진혼곡을 쓰면 다른 공격로에 있는 적을 처치할 수 있습니다.","- 황폐화는 미니언 사냥과 적 챔피언 괴롭히기에 유용합니다."],"enemytips":["- 카서스는 죽은 뒤 잠시 동안 스킬을 사용할 수 있으므로 시체에서 멀리 떨어지는 편이 좋습니다.","- 진혼곡을 맞고 살아남으려면 항상 충분한 체력을 유지하십시오. 본진에 자주 돌아가는 경우가 있더라도 말입니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":2,"magic":10,"difficulty":7},"stats":{"armor":20.88,"armorperlevel":3.5,"attackdamage":45.66,"attackdamageperlevel":3.25,"attackrange":450,"attackspeedoffset":0,"attackspeedperlevel":2.11,"crit":0,"critperlevel":0,"hp":528,"hpperlevel":87,"hpregen":6.424,"hpregenperlevel":0.55,"movespeed":335,"mp":372.48,"mpperlevel":61,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"황폐화","description":"카서스가 특정 위치에 시간 차 폭발을 일으켜 근처 적에게 피해를 입힙니다.","sanitizedDescription":"카서스가 특정 위치에 시간 차 폭발을 일으켜 근처 적에게 피해를 입힙니다.","tooltip":"카서스가 커서가 위치한 곳에 잠시 후 폭발을 일으켜 근처의 적에게 각각 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />하나의 유닛만 맞힐 경우 피해량이 두 배로 증가합니다.","sanitizedTooltip":"카서스가 커서가 위치한 곳에 잠시 후 폭발을 일으켜 근처의 적에게 각각 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 하나의 유닛만 맞힐 경우 피해량이 두 배로 증가합니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KarthusLayWasteA1.png","sprite":"spell5.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,26,32,38,44],"costBurn":"20/26/32/38/44","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[40,60,80,100,120],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/60/80/100/120","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[875,875,875,875,875],"rangeBurn":"875","key":"KarthusLayWasteA1"},{"name":"고통의 벽","description":"카서스가 에너지를 빨아들이는 통행 가능한 벽을 생성합니다. 이 벽을 지나는 모든 적 유닛의 이동 속도와 마법 저항력이 일정 시간 감소합니다.","sanitizedDescription":"카서스가 에너지를 빨아들이는 통행 가능한 벽을 생성합니다. 이 벽을 지나는 모든 적 유닛의 이동 속도와 마법 저항력이 일정 시간 감소합니다.","tooltip":"{{ e4 }}초간 유지되는 벽을 생성합니다. 벽을 지나는 적 챔피언은 {{ e5 }}초간 마법 저항력이 {{ e1 }}%, 이동 속도는 {{ e3 }}%만큼 감소합니다. (이동 속도는 시간이 지나면 점차 회복됩니다.)","sanitizedTooltip":"{{ e4 }}초간 유지되는 벽을 생성합니다. 벽을 지나는 적 챔피언은 {{ e5 }}초간 마법 저항력이 {{ e1 }}%, 이동 속도는 {{ e3 }}%만큼 감소합니다. (이동 속도는 시간이 지나면 점차 회복됩니다.)","leveltip":{"label":["벽 길이","이동속도 감소량"],"effect":["{{ e2 }} -> {{ e2NL }}"," {{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"KarthusWallOfPain.png","sprite":"spell5.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[100,100,100,100,100],"costBurn":"100","cooldown":[18,18,18,18,18],"cooldownBurn":"18","effect":[null,[15,15,15,15,15],[800,900,1000,1100,1200],[40,50,60,70,80],[5,5,5,5,5],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15","800/900/1000/1100/1200","40/50/60/70/80","5","5","0","0","0","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"KarthusWallOfPain"},{"name":"부패","description":"카서스는 적에게서 마력을 훔쳐 적을 처치할 때마다 마나를 획득합니다. 또 카서스는 희생양의 영혼을 자신 주위에 둘러 적들에게 피해를 입힐 수도 있지만, 이럴 경우 마나가 매우 빨리 소모됩니다.  ","sanitizedDescription":"카서스는 적에게서 마력을 훔쳐 적을 처치할 때마다 마나를 획득합니다. 또 카서스는 희생양의 영혼을 자신 주위에 둘러 적들에게 피해를 입힐 수도 있지만, 이럴 경우 마나가 매우 빨리 소모됩니다.","tooltip":"<span class=\"colorFF9900\">비활성화 시: </span>카서스가 적 유닛을 처치할 때마다 {{ e2 }}의 마나를 회복합니다.<br /><br /><span class=\"colorFF9900\">활성화 시: </span>매 초마다 {{ cost }}의 마나를 소진하여 주변 적에게 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"비활성화 시: 카서스가 적 유닛을 처치할 때마다 {{ e2 }}의 마나를 회복합니다. 활성화 시: 매 초마다 {{ cost }}의 마나를 소진하여 주변 적에게 초당 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["초당 피해량","마나 회복","초당 마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KarthusDefile.png","sprite":"spell5.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"초당 마나 {{ cost }}","maxrank":5,"cost":[30,42,54,66,78],"costBurn":"30/42/54/66/78","cooldown":[0.5,0.5,0.5,0.5,0.5],"cooldownBurn":"0.5","effect":[null,[30,50,70,90,110],[20,27,34,41,48],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","20/27/34/41/48","0.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"KarthusDefile"},{"name":"진혼곡","description":"카서스가 3초 동안 정신 집중을 마치면 모든 적 챔피언이 피해를 입습니다.","sanitizedDescription":"카서스가 3초 동안 정신 집중을 마치면 모든 적 챔피언이 피해를 입습니다.","tooltip":"카서스가 3초 동안 정신 집중을 하여 거리와 관계없이 모든 적 챔피언에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"카서스가 3초 동안 정신 집중을 하여 거리와 관계없이 모든 적 챔피언에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","마나 소모량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KarthusFallenOne.png","sprite":"spell5.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[150,175,200],"costBurn":"150/175/200","cooldown":[200,180,160],"cooldownBurn":"200/180/160","effect":[null,[250,400,550],[200,300,400],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","250/400/550","200/300/400","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[10000,10000,10000],"rangeBurn":"10000","key":"KarthusFallenOne"}],"passive":{"name":"죽음 극복","description":"카서스가 죽으면 영혼이 되어 7초 동안 스킬을 시전할 수 있습니다.","sanitizedDescription":"카서스가 죽으면 영혼이 되어 7초 동안 스킬을 시전할 수 있습니다.","image":{"full":"Karthus_Passive.png","sprite":"passive1.png","group":"passive","x":432,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Karthus","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Karthus","title":"KarthusARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1001,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3007,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karthus","title":"KarthusCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3029,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karthus","title":"KarthusFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3027,"count":1},{"id":3157,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3285,"count":1},{"id":3001,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2043,"count":1}]}]},{"champion":"Karthus","title":"KarthusKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3070,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3007,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karthus","title":"KarthusSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3029,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1}]}]},{"champion":"Karthus","title":"KarthusSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":1026,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3027,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Karthus","title":"KarthusTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3070,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3003,"count":1},{"id":3135,"count":1},{"id":3090,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Vladimir":{"id":8,"key":"Vladimir","name":"블라디미르","title":"진홍빛 사신","image":{"full":"Vladimir.png","sprite":"champion4.png","group":"champion","x":240,"y":0,"w":48,"h":48},"skins":[{"id":8000,"name":"default","num":0},{"id":8001,"name":"블라디미르 백작","num":1},{"id":8002,"name":"블라디미르 후작","num":2},{"id":8003,"name":"노스페라투 블라디미르","num":3},{"id":8004,"name":"파괴단 블라디미르","num":4},{"id":8005,"name":"피의 군주 블라디미르","num":5},{"id":8006,"name":"영혼약탈자 블라디미르","num":6},{"id":8007,"name":"학생 회장 블라디미르","num":7}],"lore":"블라디미르는 필멸자의 피를 갈구하고 탐닉하는 인물로, 녹서스 제국의 건국 초기 이래로 녹서스의 여러 사건에 영향을 끼쳤다. 자신의 수명을 비정상적으로 늘린 블라디미르는 피를 제어하는 능력을 이용해 다른 이들의 정신과 육체를 제 것인 것처럼 쉽게 통제한다. 블라디미르는 녹서스 귀족의 화려한 살롱에서는 피를 제어하는 능력으로 소수에게 광적인 인기를 얻었지만, 어두운 뒷골목에서는 적의 피를 마지막 한 방울까지 말려 버린다.","blurb":"블라디미르는 필멸자의 피를 갈구하고 탐닉하는 인물로, 녹서스 제국의 건국 초기 이래로 녹서스의 여러 사건에 영향을 끼쳤다. 자신의 수명을 비정상적으로 늘린 블라디미르는 피를 제어하는 능력을 이용해 다른 이들의 정신과 육체를 제 것인 것처럼 쉽게 통제한다. 블라디미르는 녹서스 귀족의 화려한 살롱에서는 피를 제어하는 능력으로 소수에게 광적인 인기를 얻었지만, 어두운 뒷골목에서는 적의 피를 마지막 한 방울까지 말려 버린다.","allytips":["- 수혈 스킬은 사용 즉시 피해를 가하므로 게임에 등장하는 최고의 결정타 스킬 중 하나입니다.","- 최대한 많은 적을 감염시킬 수 있는 곳에 혈사병을 시전하십시오.","- 피의 웅덩이는 방해 효과가 있는 스킬을 피하는 데 활용할 수 있습니다."],"enemytips":["- 혈사병이 폭발하면 챔피언이 피해를 입을 때 마다 블라디미르의 체력이 회복되므로 그 전에 블라디미르를 처치해야 합니다.","- 블라디미르가 전투 시작 시 피의 웅덩이를 사용하도록 만들면 이후 블라디미르는 스킬을 사용할 때 불리해집니다.","- 블라디미르를 상대할 때에는 체력에 비례하여 지속적으로 피해를 입힐 수 있는 리안드리의 고통이나 몰락한 왕의 검을 사용하는 것이 좋습니다."],"tags":["Mage","Tank"],"partype":"핏빛 격노","info":{"attack":2,"defense":6,"magic":8,"difficulty":7},"stats":{"armor":23,"armorperlevel":3.3,"attackdamage":55,"attackdamageperlevel":3,"attackrange":450,"attackspeedoffset":-0.05,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":537,"hpperlevel":96,"hpregen":7.008,"hpregenperlevel":0.6,"movespeed":330,"mp":2,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"수혈","description":"블라디미르가 대상 적으로부터 체력을 흡수합니다. 수혈을 충분히 한 뒤에는 수혈의 피해량과 치유량이 잠깐 동안 크게 늘어납니다.","sanitizedDescription":"블라디미르가 대상 적으로부터 체력을 흡수합니다. 수혈을 충분히 한 뒤에는 수혈의 피해량과 치유량이 잠깐 동안 크게 늘어납니다.","tooltip":"블라디미르가 대상의 체력을 흡수하며 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 자신의 체력을 {{ e2 }}<span class=\"color99ff99\"> (+{{ a2 }})</span>만큼 회복합니다. 수혈을 두 번 사용한 뒤 세 번째로 재사용 대기시간이 돌아오면 <span class=\"colorFFB3B3\">핏빛 격노</span>상태가 됩니다.<br /><br /><span class=\"colorFFB3B3\">핏빛 격노:</span> 블라디미르의 이동 속도가 잠깐 동안 증가하고 {{ e8 }}초 동안 수혈의 피해량이 {{ e7 }}%만큼 늘어나며 <span class=\"colorFFFFFF\">{{ f7 }}</span> + 잃은 체력의 {{ e5 }}% <span class=\"color99FF99\">(+{{ f6 }}%)</span>만큼 추가로 체력을 회복합니다. (미니언 상대로는 체력 회복 효과가 {{ e9 }}%로 변동됩니다.)","sanitizedTooltip":"블라디미르가 대상의 체력을 흡수하며 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 자신의 체력을 {{ e2 }} (+{{ a2 }})만큼 회복합니다. 수혈을 두 번 사용한 뒤 세 번째로 재사용 대기시간이 돌아오면 핏빛 격노상태가 됩니다. 핏빛 격노: 블라디미르의 이동 속도가 잠깐 동안 증가하고 {{ e8 }}초 동안 수혈의 피해량이 {{ e7 }}%만큼 늘어나며 {{ f7 }} + 잃은 체력의 {{ e5 }}% (+{{ f6 }}%)만큼 추가로 체력을 회복합니다. (미니언 상대로는 체력 회복 효과가 {{ e9 }}%로 변동됩니다.)","leveltip":{"label":["피해량","치유량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VladimirQ.png","sprite":"spell12.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[80,100,120,140,160],[20,25,30,35,40],[0,0,0,0,0],[0,0,0,0,0],[5,5,5,5,5],[0.04,0.04,0.04,0.04,0.04],[85,85,85,85,85],[2.5,2.5,2.5,2.5,2.5],[35,35,35,35,35],[0,0,0,0,0]],"effectBurn":["","80/100/120/140/160","20/25/30/35/40","0","0","5","0.04","85","2.5","35","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]},{"key":"a2","link":"spelldamage","coeff":[0.35]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"VladimirQ"},{"name":"피의 웅덩이","description":"블라디미르가 피의 웅덩이로 변해 2초 동안 공격 대상이 되지 않습니다. 또한 웅덩이 위에 서 있는 적의 속도가 느려지며 블라디미르가 이들의 체력을 흡수합니다.","sanitizedDescription":"블라디미르가 피의 웅덩이로 변해 2초 동안 공격 대상이 되지 않습니다. 또한 웅덩이 위에 서 있는 적의 속도가 느려지며 블라디미르가 이들의 체력을 흡수합니다.","tooltip":"블라디미르가 적의 공격을 받지 않도록 2초 동안 피의 웅덩이로 변하며 잠깐 동안 이동 속도가 증가합니다. 그 위에 있는 적은 이동 속도가 {{ e3 }}% 감소합니다.<br /><br />블라디미르는 웅덩이 위에 있는 적에게 지속 시간 동안 {{ e1 }} <span class=\"colorCC3300\">(+{{ f1 }} [추가 체력의 {{ e4 }}%])</span>의 마법 피해를 입히고 총 피해량의 {{ e5 }}%만큼 체력을 회복합니다.<br /><br />선혈의 파도를 충전하는 동안에도 피의 웅덩이를 사용할 수 있습니다.","sanitizedTooltip":"블라디미르가 적의 공격을 받지 않도록 2초 동안 피의 웅덩이로 변하며 잠깐 동안 이동 속도가 증가합니다. 그 위에 있는 적은 이동 속도가 {{ e3 }}% 감소합니다. 블라디미르는 웅덩이 위에 있는 적에게 지속 시간 동안 {{ e1 }} (+{{ f1 }} [추가 체력의 {{ e4 }}%])의 마법 피해를 입히고 총 피해량의 {{ e5 }}%만큼 체력을 회복합니다. 선혈의 파도를 충전하는 동안에도 피의 웅덩이를 사용할 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VladimirSanguinePool.png","sprite":"spell13.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"현재 체력의 {{ e2 }}% 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":"% 소모","costBurn":"0","cooldown":[28,25,22,19,16],"cooldownBurn":"28/25/22/19/16","effect":[null,[80,135,190,245,300],[20,20,20,20,20],[40,40,40,40,40],[10,10,10,10,10],[15,15,15,15,15],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/135/190/245/300","20","40","10","15","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonushealth","coeff":[0.15]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"VladimirSanguinePool"},{"name":"선혈의 파도","description":"블라디미르는 자신의 체력을 희생해 피의 웅덩이를 채웁니다. 웅덩이가 파도를 방출하면 주변 지역에 피해를 입히지만 적 유닛이 파도를 가로막을 수 있습니다.","sanitizedDescription":"블라디미르는 자신의 체력을 희생해 피의 웅덩이를 채웁니다. 웅덩이가 파도를 방출하면 주변 지역에 피해를 입히지만 적 유닛이 파도를 가로막을 수 있습니다.","tooltip":"<span class=\"colorFF9900\">첫 번째 사용 시: </span>블라디미르가 <span class=\"colorCC3300\">최대 체력({{ f3 }})의 {{ e2 }}%</span>까지 희생해 피의 웅덩이를 채우고 선혈의 파도의 피해량을 늘립니다. 웅덩이가 가득 차면 블라디미르의 이동 속도가 느려집니다.<br /><br /><span class=\"colorFF9900\">두 번째 사용 시: </span>{{ e7 }}초 후, 혹은 스킬을 재사용하면 주변의 적에게 파도를 방출해 {{ e3 }}<span class=\"colorCC3300\"> (+{{ f2 }})</span><span class=\"color99FF99\"> (+{{ a1 }})</span> ~ {{ e0 }}<span class=\"colorCC3300\"> (+{{ f4 }})</span><span class=\"color99FF99\"> (+{{ a2 }})</span>의 마법 피해를 입히고, 웅덩이가 가득 차 있었을 경우 잠깐 동안 {{ e9 }}%만큼 둔화시킵니다. 파도가 일단 적에게 적중하면 그 뒤로 넘어가지 않습니다.<br /><br />선혈의 파도를 첫 번째로 사용한 후 {{ e7 }}초가 지나면 파도가 자동으로 방출됩니다.","sanitizedTooltip":"첫 번째 사용 시: 블라디미르가 최대 체력({{ f3 }})의 {{ e2 }}%까지 희생해 피의 웅덩이를 채우고 선혈의 파도의 피해량을 늘립니다. 웅덩이가 가득 차면 블라디미르의 이동 속도가 느려집니다. 두 번째 사용 시: {{ e7 }}초 후, 혹은 스킬을 재사용하면 주변의 적에게 파도를 방출해 {{ e3 }} (+{{ f2 }}) (+{{ a1 }}) ~ {{ e0 }} (+{{ f4 }}) (+{{ a2 }})의 마법 피해를 입히고, 웅덩이가 가득 차 있었을 경우 잠깐 동안 {{ e9 }}%만큼 둔화시킵니다. 파도가 일단 적에게 적중하면 그 뒤로 넘어가지 않습니다. 선혈의 파도를 첫 번째로 사용한 후 {{ e7 }}초가 지나면 파도가 자동으로 방출됩니다.","leveltip":{"label":["최소 피해량","최대 피해량","둔화","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e0 }} -> {{ e0NL }}","{{ e9 }}% -> {{ e9NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VladimirE.png","sprite":"spell13.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"정신 집중으로 최대 체력의 {{ e2 }}% 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":"% 소모","costBurn":"0","cooldown":[13,11,9,7,5],"cooldownBurn":"13/11/9/7/5","effect":[null,[0,0,0,0,0],[8,8,8,8,8],[30,45,60,75,90],[6,6,6,6,6],[150,150,150,150,150],[0,0,0,0,0],[1.5,1.5,1.5,1.5,1.5],[1,1,1,1,1],[40,45,50,55,60],[60,90,120,150,180]],"effectBurn":["","0","8","30/45/60/75/90","6","150","0","1.5","1","40/45/50/55/60","60/90/120/150/180"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]},{"key":"a2","link":"spelldamage","coeff":[1]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"VladimirE"},{"name":"혈사병","description":"블라디미르가 혈사병으로 목표 지역을 오염시킵니다. 질병에 감염된 적은 일정 시간 동안 더 큰 피해를 입습니다. 감염된 적은 몇 초 뒤 마법 피해를 입으며 이에 비례해 블라디미르의 체력이 회복됩니다.","sanitizedDescription":"블라디미르가 혈사병으로 목표 지역을 오염시킵니다. 질병에 감염된 적은 일정 시간 동안 더 큰 피해를 입습니다. 감염된 적은 몇 초 뒤 마법 피해를 입으며 이에 비례해 블라디미르의 체력이 회복됩니다.","tooltip":"블라디미르가 혈사병으로 목표 지역을 오염시켜 {{ e4 }}초 동안 감염된 적이 받는 모든 피해를 {{ e2 }}% 증가시킵니다. <br /><br />감염된 적은 {{ e4 }}초 뒤 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다. 일단 적 챔피언에게 피해를 입히면 {{ f4 }} <span class=\"color99FF99\">(+{{ f3 }})</span>만큼 체력을 회복하고, 이후 추가로 적 챔피언에게 피해를 입힐 때마다 {{ e5 }}%만큼 체력을 더 회복합니다.","sanitizedTooltip":"블라디미르가 혈사병으로 목표 지역을 오염시켜 {{ e4 }}초 동안 감염된 적이 받는 모든 피해를 {{ e2 }}% 증가시킵니다. 감염된 적은 {{ e4 }}초 뒤 {{ e1 }} (+{{ a1 }})의 마법 피해를 입습니다. 일단 적 챔피언에게 피해를 입히면 {{ f4 }} (+{{ f3 }})만큼 체력을 회복하고, 이후 추가로 적 챔피언에게 피해를 입힐 때마다 {{ e5 }}%만큼 체력을 더 회복합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"VladimirHemoplague.png","sprite":"spell13.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[150,135,120],"cooldownBurn":"150/135/120","effect":[null,[150,250,350],[10,10,10],[100,100,100],[4,4,4],[50,50,50],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","10","100","4","50","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[625,625,625],"rangeBurn":"625","key":"VladimirHemoplague"}],"passive":{"name":"핏빛 계약","description":"블라디미르는 추가 체력 40당 1의 주문력을 얻으며, 추가 주문력 1당 1.4의 체력을 얻습니다 (이 효과는 서로 중첩되지 않습니다).","sanitizedDescription":"블라디미르는 추가 체력 40당 1의 주문력을 얻으며, 추가 주문력 1당 1.4의 체력을 얻습니다 (이 효과는 서로 중첩되지 않습니다).","image":{"full":"VladimirP.png","sprite":"passive4.png","group":"passive","x":240,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Vladimir","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":3152,"count":1},{"id":3211,"count":1},{"id":3108,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3116,"count":1},{"id":3065,"count":1},{"id":3151,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]}]},{"champion":"Vladimir","title":"VladimirARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3211,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3152,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3083,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Vladimir","title":"VladimirCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3152,"count":1},{"id":3211,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Vladimir","title":"VladimirFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3145,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3152,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3001,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Vladimir","title":"VladimirKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3211,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3152,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Vladimir","title":"VladimirSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3152,"count":1},{"id":3211,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]}]},{"champion":"Vladimir","title":"VladimirSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3152,"count":1},{"id":3211,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Vladimir","title":"VladimirTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1052,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3067,"count":1},{"id":3108,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3152,"count":1},{"id":3065,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3116,"count":1},{"id":3090,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3285,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Zilean":{"id":26,"key":"Zilean","name":"질리언","title":"시간의 수호자","image":{"full":"Zilean.png","sprite":"champion4.png","group":"champion","x":288,"y":48,"w":48,"h":48},"skins":[{"id":26000,"name":"default","num":0},{"id":26001,"name":"산타 질리언","num":1},{"id":26002,"name":"신바람난 질리언","num":2},{"id":26003,"name":"슈리마 사막의 질리언","num":3},{"id":26004,"name":"타임머신 질리언","num":4},{"id":26005,"name":"불의 축제 질리언","num":5}],"lore":"한 때 강력한 이케시아의 마법사였던 질리언은 자신의 고국이 공허에 파괴되는 것을 목격한 후 시간의 흐름에 사로잡히게 되었다. 질리언은 처참한 상실감에 슬퍼할 틈도 없이 미래의 모든 경우의 수를 예측하기 위한 시간 마법의 주문을 외웠다. 이제 사실상 불멸의 몸이 된 질리언은 과거, 현재, 그리고 미래를 표류하며 주변 시간의 흐름을 구부리거나 왜곡하여 시간을 되감아 이케시아를 멸망하기 전으로 돌려 놓을 시점을 찾아 모든 시간대에서 망연히 부유한다.","blurb":"한 때 강력한 이케시아의 마법사였던 질리언은 자신의 고국이 공허에 파괴되는 것을 목격한 후 시간의 흐름에 사로잡히게 되었다. 질리언은 처참한 상실감에 슬퍼할 틈도 없이 미래의 모든 경우의 수를 예측하기 위한 시간 마법의 주문을 외웠다. 이제 사실상 불멸의 몸이 된 질리언은 과거, 현재, 그리고 미래를 표류하며 주변 시간의 흐름을 구부리거나 왜곡하여 시간을 되감아 이케시아를 멸망하기 전으로 돌려 놓을 시점을 찾아 모든 시간대에서 망연히 부유한다.","allytips":["- 시한 폭탄과 되감기를 조합하여 하나의 목표에 빠르게 두 개의 시한 폭탄을 설치할 수 있습니다. 두 번째 폭탄을 설치하면 첫 번째 폭탄이 폭발하여 주위 모든 적을 기절시킵니다.","- 시간 왜곡은 적을 마무리하거나 전장에서 탈출할 때 효과적입니다.","- 시간 역행은 공격을 방지하는 강력한 수단이지만, 너무 빨리 사용하면 적이 금방 목표를 바꾸기 때문에 효과가 떨어질 수 있습니다."],"enemytips":["- 질리언의 이동 속도에 맞출 수 있다면 그의 궁극기가 끝날 때까지 기다렸다가 결정타를 날리는 편이 좋습니다.","- 질리언은 협공에 약하지만 1대1로 맞서면 제거하기 어려운 상대입니다. 팀원과 협력해 그를 제거하십시오."],"tags":["Support","Mage"],"partype":"마나","info":{"attack":2,"defense":5,"magic":8,"difficulty":6},"stats":{"armor":24,"armorperlevel":3.8,"attackdamage":51.64,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2.13,"crit":0,"critperlevel":0,"hp":504,"hpperlevel":82,"hpregen":5.44,"hpregenperlevel":0.5,"movespeed":335,"mp":360.8,"mpperlevel":60,"mpregen":8.5,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"시한 폭탄","description":"대상 위치에 가까이 오는 유닛(챔피언 우선)에게 들러붙는 폭탄을 던집니다. 폭탄은 3초 뒤 폭발하여 적에게만 광역 피해를 입힙니다. 다른 시한 폭탄 때문에 시한 폭탄이 일찍 폭발하면 적을 기절시킵니다.","sanitizedDescription":"대상 위치에 가까이 오는 유닛(챔피언 우선)에게 들러붙는 폭탄을 던집니다. 폭탄은 3초 뒤 폭발하여 적에게만 광역 피해를 입힙니다. 다른 시한 폭탄 때문에 시한 폭탄이 일찍 폭발하면 적을 기절시킵니다.","tooltip":"질리언이 대상 위치에 시한 폭탄을 던집니다. 폭탄은 주변 작은 반경 안에 들어오는 첫 번째 유닛(챔피언 우선)에게 부착됩니다. {{ e2 }}초가 지나면 폭탄이 터지면서 모든 주변 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />한 유닛에 폭탄 두 개를 설치하면 첫 번째 폭탄이 일찍 터지면서 {{ e4 }}초 동안 폭발 반경 안의 모든 적을 기절시킵니다.","sanitizedTooltip":"질리언이 대상 위치에 시한 폭탄을 던집니다. 폭탄은 주변 작은 반경 안에 들어오는 첫 번째 유닛(챔피언 우선)에게 부착됩니다. {{ e2 }}초가 지나면 폭탄이 터지면서 모든 주변 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 한 유닛에 폭탄 두 개를 설치하면 첫 번째 폭탄이 일찍 터지면서 {{ e4 }}초 동안 폭발 반경 안의 모든 적을 기절시킵니다.","leveltip":{"label":["피해량","기절 시간","재사용 대기시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZileanQ.png","sprite":"spell14.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[10,9.5,9,8.5,8],"cooldownBurn":"10/9.5/9/8.5/8","effect":[null,[75,115,165,230,300],[3,3,3,3,3],[7,7,7,7,7],[1.1,1.2,1.3,1.4,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/115/165/230/300","3","7","1.1/1.2/1.3/1.4/1.5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"ZileanQ"},{"name":"되감기","description":"질리언이 기본 스킬 재사용 대기시간을 줄여 이후 시작될 전투를 준비할 수 있습니다. ","sanitizedDescription":"질리언이 기본 스킬 재사용 대기시간을 줄여 이후 시작될 전투를 준비할 수 있습니다.","tooltip":"되감기를 제외한 질리언의 모든 기본 스킬 재사용 대기시간이 {{ e2 }}초 감소합니다.","sanitizedTooltip":"되감기를 제외한 질리언의 모든 기본 스킬 재사용 대기시간이 {{ e2 }}초 감소합니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZileanW.png","sprite":"spell14.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ e3 }}","maxrank":5,"cost":[35,35,35,35,35],"costBurn":"35","cooldown":[14,12,10,8,6],"cooldownBurn":"14/12/10/8/6","effect":[null,[20,30,40,50,60],[10,10,10,10,10],[35,35,35,35,35],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/30/40/50/60","10","35","0","0","0","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"ZileanW"},{"name":"시간 왜곡","description":"질리언이 유닛 주변의 시간을 왜곡시켜 짧은 시간 동안 적의 이동 속도를 줄이거나 아군의 이동 속도를 높입니다.","sanitizedDescription":"질리언이 유닛 주변의 시간을 왜곡시켜 짧은 시간 동안 적의 이동 속도를 줄이거나 아군의 이동 속도를 높입니다.","tooltip":"질리언이 {{ e1 }}초 동안 아군 챔피언의 이동 속도를 {{ e2 }}%만큼 높이거나 적의 이동 속도를 {{ e2 }}%만큼 늦춥니다.","sanitizedTooltip":"질리언이 {{ e1 }}초 동안 아군 챔피언의 이동 속도를 {{ e2 }}%만큼 높이거나 적의 이동 속도를 {{ e2 }}%만큼 늦춥니다.","leveltip":{"label":["속도"],"effect":["{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"TimeWarp.png","sprite":"spell14.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[2.5,2.5,2.5,2.5,2.5],[40,55,70,85,99],[1.5,1.5,1.5,1.5,1.5],[8,8,8,8,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2.5","40/55/70/85/99","1.5","8","0","0","0","0","0","0"],"range":[550,550,550,550,550],"rangeBurn":"550","key":"TimeWarp"},{"name":"시간 역행","description":"질리언이 아군 챔피언에게 보호용 시간 룬을 주어 해당 챔피언이 치명적인 피해를 입으면 피해를 입기 전의 시간으로 되돌립니다.","sanitizedDescription":"질리언이 아군 챔피언에게 보호용 시간 룬을 주어 해당 챔피언이 치명적인 피해를 입으면 피해를 입기 전의 시간으로 되돌립니다.","tooltip":"질리언이 아군 챔피언에게 {{ e2 }}초 동안 보호용 시간 룬을 걸어줍니다. 대상이 치명적인 피해를 입을 경우 대상이 쓰러지기 전의 시간으로 돌아가게 되며, {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 체력을 회복합니다.","sanitizedTooltip":"질리언이 아군 챔피언에게 {{ e2 }}초 동안 보호용 시간 룬을 걸어줍니다. 대상이 치명적인 피해를 입을 경우 대상이 쓰러지기 전의 시간으로 돌아가게 되며, {{ e1 }} (+{{ a1 }})의 체력을 회복합니다.","leveltip":{"label":["체력 회복량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ChronoShift.png","sprite":"spell14.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[125,150,175],"costBurn":"125/150/175","cooldown":[120,90,60],"cooldownBurn":"120/90/60","effect":[null,[600,850,1100],[5,5,5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","600/850/1100","5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[2]}],"range":[900,900,900],"rangeBurn":"900","key":"ChronoShift"}],"passive":{"name":"시간의 유리병","description":"질리언은 시간을 <font color='#BB55EE'>경험치</font>의 형태로 보존합니다.<br><br>아군의 레벨을 올려줄 수 있을만큼 <font color='#BB55EE'>경험치</font>가 모이면 해당 아군을 우클릭하여 건네줄 수 있습니다. 질리언 역시 아군에게 준만큼의 <font color='#BB55EE'>경험치</font>를 얻습니다. 전투 시에는 사용할 수 없습니다.","sanitizedDescription":"질리언은 시간을 경험치의 형태로 보존합니다. 아군의 레벨을 올려줄 수 있을만큼 경험치가 모이면 해당 아군을 우클릭하여 건네줄 수 있습니다. 질리언 역시 아군에게 준만큼의 경험치를 얻습니다. 전투 시에는 사용할 수 없습니다.","image":{"full":"Zilean_Passive.png","sprite":"passive4.png","group":"passive","x":288,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Zilean","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3135,"count":1},{"id":3003,"count":1}]}]},{"champion":"Zilean","title":"ZileanARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1001,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3089,"count":1},{"id":3007,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3030,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Zilean","title":"ZileanCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3073,"count":1},{"id":3010,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3029,"count":1},{"id":3089,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3007,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3026,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zilean","title":"ZileanFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3303,"count":1},{"id":3302,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3070,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3092,"count":1},{"id":3050,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3003,"count":1},{"id":3089,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zilean","title":"ZileanKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3070,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3089,"count":1},{"id":3003,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3030,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Zilean","title":"ZileanSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3029,"count":1},{"id":3089,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3007,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3026,"count":1},{"id":3001,"count":1}]}]},{"champion":"Zilean","title":"ZileanSR","type":"riot-mid","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3070,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3003,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zilean","title":"ZileanSRSupport","type":"riot-support","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3096,"count":1},{"id":1001,"count":1},{"id":3070,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2049,"count":1},{"id":3158,"count":1},{"id":3069,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3003,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3050,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zilean","title":"ZileanTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":3108,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3090,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3003,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Katarina":{"id":55,"key":"Katarina","name":"카타리나","title":"사악한 칼날","image":{"full":"Katarina.png","sprite":"champion1.png","group":"champion","x":48,"y":96,"w":48,"h":48},"skins":[{"id":55000,"name":"default","num":0},{"id":55001,"name":"용병 카타리나","num":1},{"id":55002,"name":"레드카드 카타리나","num":2},{"id":55003,"name":"빌지워터 카타리나","num":3},{"id":55004,"name":"야옹이 카타리나","num":4},{"id":55005,"name":"총사령관 카타리나","num":5},{"id":55006,"name":"모래폭풍 카타리나","num":6},{"id":55007,"name":"죽음의 종소리 카타리나","num":7},{"id":55008,"name":"대장군 카타리나","num":8},{"id":55009,"name":"프로젝트: 카타리나","num":9},{"id":55010,"name":"죽음의 사도 카타리나","num":10}],"lore":"카타리나는 단호한 판단력과 치명적인 전투 능력을 지닌 녹서스의 특급 암살자이다. 전설적인 명성을 자랑하는 뒤 쿠토 장군의 장녀로 태어난 카타리나는 방심한 적을 신속하게 암살하는 데에 뛰어난 재능을 보였다. 그녀는 자신의 불타는 야망 때문에 아군을 위험에 빠뜨리면서까지 방비를 강화한 적을 노리기도 했다. 하지만 임무가 아니더라도 카타리나는 주저없이 톱날 단검의 돌풍을 일으켜 마땅히 쓰러뜨려야 할 적을 처치할 것이다.","blurb":"카타리나는 단호한 판단력과 치명적인 전투 능력을 지닌 녹서스의 특급 암살자이다. 전설적인 명성을 자랑하는 뒤 쿠토 장군의 장녀로 태어난 카타리나는 방심한 적을 신속하게 암살하는 데에 뛰어난 재능을 보였다. 그녀는 자신의 불타는 야망 때문에 아군을 위험에 빠뜨리면서까지 방비를 강화한 적을 노리기도 했다. 하지만 임무가 아니더라도 카타리나는 주저없이 톱날 단검의 돌풍을 일으켜 마땅히 쓰러뜨려야 할 적을 처치할 것이다.","allytips":["- 단검을 주우면 순보의 재사용 대기시간이 크게 줄어듭니다.","- 팀간 전투가 일어나면 적팀의 주의가 산만해질 때까지 기다렸다가 순보로 순간이동한 다음 죽음의 연꽃을 시전하여 큰 피해를 입힐 수 있습니다.","- 순보를 아군 챔피언이나 단검, 또는 미니언에게 사용하면 신속하게 전장에서 이탈할 수 있습니다."],"enemytips":["- 카타리나는 마법 피해를 주로 입히므로 카타리나가 공격력을 올려주는 아이템을 가지고 있다 하더라도 마법 저항력을 높여 대항하십시오.","- 카타리나가 죽음의 연꽃을 시전할 때까지 방해 효과를 일으키는 스킬은 아껴 두십시오."],"tags":["Assassin","Mage"],"partype":"없음","info":{"attack":4,"defense":3,"magic":9,"difficulty":8},"stats":{"armor":27.88,"armorperlevel":3.5,"attackdamage":58,"attackdamageperlevel":3.2,"attackrange":125,"attackspeedoffset":-0.05,"attackspeedperlevel":2.74,"crit":0,"critperlevel":0,"hp":602,"hpperlevel":94,"hpregen":7.5,"hpregenperlevel":0.7,"movespeed":340,"mp":0,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"단검 투척","description":"카타리나가 대상에게 <font color='#FFF673'>단검</font>을 던집니다. 단검은 근처 적들에게 튕겼다가 땅에 떨어집니다.","sanitizedDescription":"카타리나가 대상에게 단검을 던집니다. 단검은 근처 적들에게 튕겼다가 땅에 떨어집니다.","tooltip":"카타리나가 <span class=\"colorFFF673\">단검</span>을 던져 대상과 주변 {{ e4 }}명의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 그 후 단검은 최초 대상 뒤에 떨어집니다.<br /><br /><span class=\"size16 color8C8C8C\">단검은 첫 대상을 맞힌 곳에서 350유닛 거리를 날아가 반대편에 떨어지며, 떨어지는 데 걸리는 시간은 단검이 튕겨나간 횟수와 관계 없이 동일합니다.</span>","sanitizedTooltip":"카타리나가 단검을 던져 대상과 주변 {{ e4 }}명의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 그 후 단검은 최초 대상 뒤에 떨어집니다. 단검은 첫 대상을 맞힌 곳에서 350유닛 거리를 날아가 반대편에 떨어지며, 떨어지는 데 걸리는 시간은 단검이 튕겨나간 횟수와 관계 없이 동일합니다.","leveltip":{"label":["1차 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KatarinaQ.png","sprite":"spell5.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[11,10,9,8,7],"cooldownBurn":"11/10/9/8/7","effect":[null,[75,105,135,165,195],[350,350,350,350,350],[450,450,450,450,450],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/105/135/165/195","350","450","2","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"KatarinaQ"},{"name":"준비","description":"카타리나가 <font color='#FFF673'>단검</font>을 머리 위로 던지며 이동 속도가 크게 빨라집니다.","sanitizedDescription":"카타리나가 단검을 머리 위로 던지며 이동 속도가 크게 빨라집니다.","tooltip":"카타리나가 공중에 <span class=\"colorFFF673\">단검</span>을 던지고, 이동 속도가 {{ e4 }}% 빨라졌다가 {{ e2 }}초에 걸쳐 정상으로 돌아옵니다.</span>","sanitizedTooltip":"카타리나가 공중에 단검을 던지고, 이동 속도가 {{ e4 }}% 빨라졌다가 {{ e2 }}초에 걸쳐 정상으로 돌아옵니다.","leveltip":{"label":["이동 속도 증가","재사용 대기시간"],"effect":["{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KatarinaW.png","sprite":"spell5.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[15,14,13,12,11],"cooldownBurn":"15/14/13/12/11","effect":[null,[0,0,0,0,0],[1.25,1.25,1.25,1.25,1.25],[0,0,0,0,0],[50,60,70,80,90],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","0","1.25","0","50/60/70/80/90","0","0","0","0","0","0"],"range":[25000,25000,25000,25000,25000],"rangeBurn":"25000","key":"KatarinaW"},{"name":"순보","description":"카타리나가 대상에게 도약합니다. 대상이 적일 경우 대상에게 피해를 입히고, 대상이 적이 아닐 경우 가장 가까이에 있는 적에게 피해를 입힙니다.","sanitizedDescription":"카타리나가 대상에게 도약합니다. 대상이 적일 경우 대상에게 피해를 입히고, 대상이 적이 아닐 경우 가장 가까이에 있는 적에게 피해를 입힙니다.","tooltip":"카타리나가 대상 아군, 적, 또는 <span class=\"colorFFF673\">단검</span>에게 즉시 도약합니다. 대상이 적일 경우 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고, 그 외의 경우에는 사거리 안에 있으면서 도약한 지점에서 가장 가까운 적을 공격합니다.<br /><br /><span class=\"colorFFF673\">단검</span>을 다시 주우면 순보의 재사용 대기시간이 <span class=\"colorFFFFFF\">{{ f1 }}</span>초 줄어듭니다. (<span class=\"colorFFFFFF\">{{ f3*100 }}%</span>)<br /><br /><span class=\"size16 color8C8C8C\">카타리나는 대상 근처의 어느 지점으로든 순간이동할 수 있습니다.</span>","sanitizedTooltip":"카타리나가 대상 아군, 적, 또는 단검에게 즉시 도약합니다. 대상이 적일 경우 {{ e1 }} (+{{ a1 }}) (+{{ a2 }})의 마법 피해를 입히고, 그 외의 경우에는 사거리 안에 있으면서 도약한 지점에서 가장 가까운 적을 공격합니다. 단검을 다시 주우면 순보의 재사용 대기시간이 {{ f1 }}초 줄어듭니다. ({{ f3*100 }}%) 카타리나는 대상 근처의 어느 지점으로든 순간이동할 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}<Br>{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KatarinaEWrapper.png","sprite":"spell5.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[14,12.5,11,9.5,8],"cooldownBurn":"14/12.5/11/9.5/8","effect":[null,[15,30,45,60,75],[0,0,0,0,0],[14,12.5,11,9.5,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/30/45/60/75","0","14/12.5/11/9.5/8","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.25]}],"range":[725,725,725,725,725],"rangeBurn":"725","key":"KatarinaEWrapper"},{"name":"죽음의 연꽃","description":"카타리나가 정신을 집중해 칼날의 돌풍을 일으켜 가장 가까운 적 챔피언 3명에게 엄청난 마법 피해를 입힙니다.","sanitizedDescription":"카타리나가 정신을 집중해 칼날의 돌풍을 일으켜 가장 가까운 적 챔피언 3명에게 엄청난 마법 피해를 입힙니다.","tooltip":"카타리나가 칼날의 돌풍을 일으켜 매우 빠른 속도로 근처 적 챔피언 세 명에게 단검을 던져 맞힐 때마다 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 적 하나 당 {{ e3 }}초 동안 입는 총 피해량: {{ f1 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span> <span class=\"color99FF99\">(+{{ f3 }})</span>의 마법 피해<br /><br />단검에 맞은 적에게는 고통스러운 상처가 남아 회복 및 재생 효과가 40% 감소합니다.","sanitizedTooltip":"카타리나가 칼날의 돌풍을 일으켜 매우 빠른 속도로 근처 적 챔피언 세 명에게 단검을 던져 맞힐 때마다 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입힙니다. 적 하나 당 {{ e3 }}초 동안 입는 총 피해량: {{ f1 }} (+{{ f2 }}) (+{{ f3 }})의 마법 피해 단검에 맞은 적에게는 고통스러운 상처가 남아 회복 및 재생 효과가 40% 감소합니다.","leveltip":{"label":["단검 당 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KatarinaR.png","sprite":"spell5.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[90,60,45],"cooldownBurn":"90/60/45","effect":[null,[25,37.5,50],[6,6,6],[2.5,2.5,2.5],[3,3,3],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","25/37.5/50","6","2.5","3","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.22]},{"key":"a1","link":"spelldamage","coeff":[0.19]},{"key":"f1","link":"bonusattackdamage","coeff":[3]}],"range":[550,550,550],"rangeBurn":"550","key":"KatarinaR"}],"passive":{"name":"탐욕","description":"카타리나가 피해를 입힌 챔피언이 3초 내에 죽을 때마다 카타리나 스킬의 재사용 대기시간이 15초 감소합니다.<br><br>카타리나가 <font color='#FFF673'>단검</font>을 다시 주우면 근처의 적을 모두 공격해 마법 피해를 입힙니다.","sanitizedDescription":"카타리나가 피해를 입힌 챔피언이 3초 내에 죽을 때마다 카타리나 스킬의 재사용 대기시간이 15초 감소합니다. 카타리나가 단검을 다시 주우면 근처의 적을 모두 공격해 마법 피해를 입힙니다.","image":{"full":"Katarina_Passive.png","sprite":"passive1.png","group":"passive","x":48,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Katarina","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1052,"count":1},{"id":3136,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3113,"count":1},{"id":1058,"count":1},{"id":3285,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]},{"champion":"Katarina","title":"KatarinaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":1058,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Katarina","title":"KatarinaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":4},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3191,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3146,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Katarina","title":"KatarinaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":4},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Katarina","title":"KatarinaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1058,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Katarina","title":"KatarinaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3146,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3026,"count":1}]}]},{"champion":"Katarina","title":"KatarinaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":4},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3191,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3146,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3026,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Katarina","title":"KatarinaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3136,"count":1},{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3146,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3170,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2139,"count":1}]}]}]},"Shyvana":{"id":102,"key":"Shyvana","name":"쉬바나","title":"하프 드래곤","image":{"full":"Shyvana.png","sprite":"champion3.png","group":"champion","x":336,"y":0,"w":48,"h":48},"skins":[{"id":102000,"name":"default","num":0},{"id":102001,"name":"강철 용기사 쉬바나","num":1},{"id":102002,"name":"뼈갈퀴손 쉬바나","num":2},{"id":102003,"name":"어둠 불꽃 쉬바나","num":3},{"id":102004,"name":"서리용 쉬바나","num":4},{"id":102005,"name":"챔피언십 쉬바나","num":5},{"id":102006,"name":"슈퍼 갤럭시 쉬바나","num":6}],"lore":"쉬바나는 심장 안에서 룬 조각이 불타는 마법이 깃든 생명체이다. 종종 인간 형태로 있기도 하지만, 쉬바나의 진정한 모습은 불타는 숨결로 적을 잿더미로 만드는 무시무시한 용이다. 자르반 4세가 목숨을 구해준 뒤로, 쉬바나는 이제 자르반 4세의 친위대가 되어 자신과 거리를 두는 데마시아인 사이에서 어려워하며 그 일원이 되기 위해 노력하고 있다.","blurb":"쉬바나는 심장 안에서 룬 조각이 불타는 마법이 깃든 생명체이다. 종종 인간 형태로 있기도 하지만, 쉬바나의 진정한 모습은 불타는 숨결로 적을 잿더미로 만드는 무시무시한 용이다. 자르반 4세가 목숨을 구해준 뒤로, 쉬바나는 이제 자르반 4세의 친위대가 되어 자신과 거리를 두는 데마시아인 사이에서 어려워하며 그 일원이 되기 위해 노력하고 있다.","allytips":["- 쉬바나의 스킬은 전부 적 유닛을 공격할 때 위력이 강해집니다. 따라서 공격 속도를 높여주는 아이템이 효율이 좋습니다.","- 화염 숨결 스킬을 사용하면 공격로에서 상대하기 까다로운 적을 만났을 때 유용합니다.","- 연소 스킬은 정글 사냥에 최적입니다. 몬스터들은 연소 지속시간 동안 도망가지 않으며, 이동 속도 상승 효과는 기습에 효과적이기 때문입니다.","- 얼어붙은 망치, 망자의 갑옷, 엔트로피 같이 둔화 효과를 가하는 아이템을 갖추는 게 좋습니다."],"enemytips":["- 쉬바나의 위력은 공격적인 운영으로부터 나옵니다. 원거리 공격수처럼 한 대 치고 빠지는 식의 챔피언은 쉬바나를 쉽게 상대할 수 있습니다.","- 쉬바나의 모든 스킬은 용 형상일 때 여러 명의 적에게 피해를 줍니다. 쉬바나를 상대할 때는 되도록 아군과 떨어지시기 바랍니다.","- 쉬바나의 분노를 통해 궁극기 사용 가능 여부를 알 수 있습니다. 분노가 낮을 때 최대한 체력을 낮춰 두세요."],"tags":["Fighter","Tank"],"partype":"분노","info":{"attack":8,"defense":6,"magic":3,"difficulty":4},"stats":{"armor":38,"armorperlevel":3.35,"attackdamage":66,"attackdamageperlevel":3.4,"attackrange":125,"attackspeedoffset":-0.05,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":595,"hpperlevel":95,"hpregen":8.6,"hpregenperlevel":0.8,"movespeed":350,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"두 번 물어뜯기","description":"쉬바나는 다음 공격 시 두 번 공격합니다. 기본 공격 시 두 번 물어뜯기의 재사용 대기시간이 0.5초 감소합니다.<br><br><font color='#FF3300'>용 형상: </font>두 번 물어뜯기를 시전하면 쉬바나 앞에 있는 모든 유닛을 베어 가릅니다. ","sanitizedDescription":"쉬바나는 다음 공격 시 두 번 공격합니다. 기본 공격 시 두 번 물어뜯기의 재사용 대기시간이 0.5초 감소합니다. 용 형상: 두 번 물어뜯기를 시전하면 쉬바나 앞에 있는 모든 유닛을 베어 가릅니다.","tooltip":"다음 기본 공격 시 쉬바나가 두 번 공격하여, 각각 <span class=\"colorFF8C00\">{{ f2 }}</span>와 <span class=\"colorFF8C00\">{{ f1 }}</span>의 물리 피해를 입힙니다.<br /><br />두 번 물어뜯기가 재사용 대기시간에 들어가 있으면 기본 공격을 할 때마다 남은 재사용 대기시간이 {{ e3 }}초씩 줄어듭니다.<br /><br /><span class=\"colorFF3300\">용 형상: </span>두 번 물어뜯기를 시전하면 쉬바나 앞에 있는 모든 유닛을 베어 가릅니다.<br /><br /><span class=\"color919191\"><i>두 번 물어뜯기의 두 번째 공격 피해량은 쉬바나 공격력의 {{ e1 }}%입니다.</i></span>","sanitizedTooltip":"다음 기본 공격 시 쉬바나가 두 번 공격하여, 각각 {{ f2 }}와 {{ f1 }}의 물리 피해를 입힙니다. 두 번 물어뜯기가 재사용 대기시간에 들어가 있으면 기본 공격을 할 때마다 남은 재사용 대기시간이 {{ e3 }}초씩 줄어듭니다. 용 형상: 두 번 물어뜯기를 시전하면 쉬바나 앞에 있는 모든 유닛을 베어 가릅니다. 두 번 물어뜯기의 두 번째 공격 피해량은 쉬바나 공격력의 {{ e1 }}%입니다.","leveltip":{"label":["추가 피해량","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ShyvanaDoubleAttack.png","sprite":"spell10.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[40,55,70,85,100],[250,250,250,250,250],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/55/70/85/100","250","0.5","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.8,0.85,0.9,0.95,1]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"ShyvanaDoubleAttack"},{"name":"연소","description":"쉬바나가 화염으로 몸을 감싸 3초간 주위 적에게 초당 마법 피해를 입히며 이동 속도가 빨라집니다. 연소가 활성화되어 있는 적을 쉬바나가 기본 공격하면 이 피해량의 일부가 다시 적용됩니다. 이동 속도는 시간이 흐를수록 점차 정상으로 줄어듭니다. 기본 공격 시 연소의 지속 시간이 늘어납니다.<br><br><font color='#FF3300'>용 형상: </font>연소의 크기가 커집니다.","sanitizedDescription":"쉬바나가 화염으로 몸을 감싸 3초간 주위 적에게 초당 마법 피해를 입히며 이동 속도가 빨라집니다. 연소가 활성화되어 있는 적을 쉬바나가 기본 공격하면 이 피해량의 일부가 다시 적용됩니다. 이동 속도는 시간이 흐를수록 점차 정상으로 줄어듭니다. 기본 공격 시 연소의 지속 시간이 늘어납니다. 용 형상: 연소의 크기가 커집니다.","tooltip":"쉬바나가 근처 적에게 초당 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span> <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 이동 속도가 {{ e2 }}% 증가합니다. 이동 속도는 {{ e7 }}초에 걸쳐 정상으로 돌아옵니다.<br /><br />연소 스킬을 활성화한 상태에서 기본 공격을 하면 근처 적에게 {{ effect1amount*0.25 }} <span class=\"colorFF8C00\">(+{{ charbonusphysical*0.25 }})</span> <span class=\"color99FF99\">(+{{ charabilitypower2*.25 }})</span>의 마법 피해를 입히며 스킬 효과 지속 시간이 {{ e8 }}초 늘어납니다.<br /><br /><span class=\"colorFF3300\">용 형상: </span>연소 적용 범위가 점점 커집니다.<br /><br /><span class=\"color919191\"><i>연소 스킬 효과는 최대 {{ e9 }}초 동안 지속됩니다.</i></span>","sanitizedTooltip":"쉬바나가 근처 적에게 초당 {{ e1 }} (+{{ a1 }}) (+{{ a2 }})의 마법 피해를 입히고 이동 속도가 {{ e2 }}% 증가합니다. 이동 속도는 {{ e7 }}초에 걸쳐 정상으로 돌아옵니다. 연소 스킬을 활성화한 상태에서 기본 공격을 하면 근처 적에게 {{ effect1amount*0.25 }} (+{{ charbonusphysical*0.25 }}) (+{{ charabilitypower2*.25 }})의 마법 피해를 입히며 스킬 효과 지속 시간이 {{ e8 }}초 늘어납니다. 용 형상: 연소 적용 범위가 점점 커집니다. 연소 스킬 효과는 최대 {{ e9 }}초 동안 지속됩니다.","leveltip":{"label":["연소 피해량","적중 시 피해량","이동 속도 증가"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ effect1amount*0.25 }} -> {{ effect1amountnl*0.25 }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"ShyvanaImmolationAura.png","sprite":"spell10.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[20,32,45,57,70],[30,35,40,45,50],[0.85,0.85,0.85,0.85,0.85],[0,0,0,0,0],[25,25,25,25,25],[325,325,325,325,325],[3,3,3,3,3],[1,1,1,1,1],[7,7,7,7,7],[350,365,380,380,380]],"effectBurn":["","20/32/45/57/70","30/35/40/45/50","0.85","0","25","325","3","1","7","350/365/380/380/380"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.2]},{"key":"a2","link":"spelldamage","coeff":[0.1]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"ShyvanaImmolationAura"},{"name":"화염 숨결","description":"쉬바나가 화염구를 던져 맞은 적 모두에게 피해를 가하며 맞은 적에게 5초간 불타는 재 표식을 남깁니다. 표식이 남은 대상에게 쉬바나의 기본 공격이 적중하면 대상의 최대 체력의 일정 비율에 해당하는 피해를 입힙니다.<br><br><font color='#FF3300'>용 형상: </font>화염 숨결이 대상에게 닿거나 목표 지점에 도달하면 폭발하며 추가 피해를 입히고 잠깐 동안 땅을 불태웁니다.","sanitizedDescription":"쉬바나가 화염구를 던져 맞은 적 모두에게 피해를 가하며 맞은 적에게 5초간 불타는 재 표식을 남깁니다. 표식이 남은 대상에게 쉬바나의 기본 공격이 적중하면 대상의 최대 체력의 일정 비율에 해당하는 피해를 입힙니다. 용 형상: 화염 숨결이 대상에게 닿거나 목표 지점에 도달하면 폭발하며 추가 피해를 입히고 잠깐 동안 땅을 불태웁니다.","tooltip":"쉬바나가 화염구를 던집니다. 화염구는 챔피언에게 적중하면 그 자리에 멈추며, 맞은 적은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f4 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 {{ e2 }}초 동안 불씨가 남습니다.<br /><br />불씨가 남은 대상에게 쉬바나가 기본 공격을 하면 적 최대 체력의 {{ e4 }}%에 해당하는 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF3300\">용 형상: </span>화염 숨결이 챔피언을 맞히거나 대상 지점에 도달하면 <span class=\"colorFFFFFF\">{{ f1 }}</span> <span class=\"colorFF8C00\">(+{{ f5 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입히고 4초 동안 땅을 불태웁니다. 불타는 땅에 있는 적은 매초 <span class=\"colorFFFFFF\">{{ f3 }}</span> <span class=\"colorFF8C00\">(+{{ f6 }})</span> <span class=\"color99FF99\">(+{{ f2 }})</span>의 마법 피해를 입습니다.<br /><br /><span class=\"color919191\"><i>화염 숨결의 적중 시 피해는 몬스터에겐 공격당 최대 {{ e3 }}까지만 적용됩니다.</i></span>","sanitizedTooltip":"쉬바나가 화염구를 던집니다. 화염구는 챔피언에게 적중하면 그 자리에 멈추며, 맞은 적은 {{ e1 }} (+{{ f4 }}) (+{{ a1 }})의 마법 피해를 입고 {{ e2 }}초 동안 불씨가 남습니다. 불씨가 남은 대상에게 쉬바나가 기본 공격을 하면 적 최대 체력의 {{ e4 }}%에 해당하는 마법 피해를 입힙니다. 용 형상: 화염 숨결이 챔피언을 맞히거나 대상 지점에 도달하면 {{ f1 }} (+{{ f5 }}) (+{{ a1 }})의 추가 마법 피해를 입히고 4초 동안 땅을 불태웁니다. 불타는 땅에 있는 적은 매초 {{ f3 }} (+{{ f6 }}) (+{{ f2 }})의 마법 피해를 입습니다. 화염 숨결의 적중 시 피해는 몬스터에겐 공격당 최대 {{ e3 }}까지만 적용됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ShyvanaFireball.png","sprite":"spell10.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[60,100,140,180,220],[5,5,5,5,5],[100,100,100,100,100],[2.5,2.5,2.5,2.5,2.5],[0,0,0,0,0],[60,100,140,180,220],[4.5,4.5,4.5,4.5,4.5],[220,240,260,260,260],[0.1,0.1,0.1,0.1,0.1],[0,0,0,0,0]],"effectBurn":["","60/100/140/180/220","5","100","2.5","0","60/100/140/180/220","4.5","220/240/260/260/260","0.1","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"ShyvanaFireball"},{"name":"용의 강림","description":"쉬바나가 용으로 변신해 목표 지점으로 날아갑니다. 비행 중 쉬바나와 부딪힌 적들은 피해를 입으며 목표 지점 쪽으로 밀려납니다.<br><br>쉬바나는 기본 지속 효과로 매 초 분노가 오르며, 기본 공격 시 분노가 2씩 오릅니다.","sanitizedDescription":"쉬바나가 용으로 변신해 목표 지점으로 날아갑니다. 비행 중 쉬바나와 부딪힌 적들은 피해를 입으며 목표 지점 쪽으로 밀려납니다. 쉬바나는 기본 지속 효과로 매 초 분노가 오르며, 기본 공격 시 분노가 2씩 오릅니다.","tooltip":"<span class=\"colorFF9900\">사용시: </span>쉬바나가 용으로 변신해 {{ e0 }}의 체력을 얻고 목표 지점으로 날아갑니다. 비행 중 쉬바나와 부딪힌 적들은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입으며 목표 지점 쪽으로 밀려납니다.<br /><br /><span class=\"colorFF9900\">기본 지속 효과: </span>쉬바나는 매초 분노가 {{ e3 }}씩 생성됩니다. 기본 공격 시 분노가 {{ e2 }} 생성됩니다.","sanitizedTooltip":"사용시: 쉬바나가 용으로 변신해 {{ e0 }}의 체력을 얻고 목표 지점으로 날아갑니다. 비행 중 쉬바나와 부딪힌 적들은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입으며 목표 지점 쪽으로 밀려납니다. 기본 지속 효과: 쉬바나는 매초 분노가 {{ e3 }}씩 생성됩니다. 기본 공격 시 분노가 {{ e2 }} 생성됩니다.","leveltip":{"label":["기본 지속 효과 분노 획득량","용 크기","추가 체력","비행 시 피해량"],"effect":["{{ e3 }} -> {{ e3NL }}","대형 -> 초대형","{{ e0 }} -> {{ e0NL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"ShyvanaTransformCast.png","sprite":"spell10.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"초당 분노 {{ e4 }}","maxrank":3,"cost":[0,0,0],"costBurn":"0","cooldown":[0,0,0],"cooldownBurn":"0","effect":[null,[150,250,350],[2,2,2],[1,1.5,2],[5,5,5],[1100,1100,1100],[275,275,275],[100,100,100],[200,230,260],[0,0.085,0.16],[150,250,350]],"effectBurn":["","150/250/350","2","1/1.5/2","5","1100","275","100","200/230/260","0/0.085/0.16","150/250/350"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[850,850,850],"rangeBurn":"850","key":"ShyvanaTransformCast"}],"passive":{"name":"용족의 분노","description":"<mainText>쉬바나가 용에게 추가 피해를 입히고 추가 방어력과 마법 저항력을 얻습니다. 아군이 용을 처치할 때마다 쉬바나의 방어력과 마법 저항력이 추가로 증가합니다.</mainText>","sanitizedDescription":"쉬바나가 용에게 추가 피해를 입히고 추가 방어력과 마법 저항력을 얻습니다. 아군이 용을 처치할 때마다 쉬바나의 방어력과 마법 저항력이 추가로 증가합니다.","image":{"full":"ShyvanaReinforcedScales.png","sprite":"passive3.png","group":"passive","x":336,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Shyvana","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1028,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3068,"count":1},{"id":3065,"count":1},{"id":3022,"count":1},{"id":3083,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3022,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3052,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3748,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3153,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1},{"id":3340,"count":1},{"id":1054,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3144,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3153,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3022,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3748,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3075,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3022,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3748,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3153,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3052,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3748,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3153,"count":1},{"id":3068,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1043,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3111,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3022,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shyvana","title":"ShyvanaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3153,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3053,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Warwick":{"id":19,"key":"Warwick","name":"워윅","title":"자운의 고삐 풀린 분노","image":{"full":"Warwick.png","sprite":"champion4.png","group":"champion","x":336,"y":0,"w":48,"h":48},"skins":[{"id":19000,"name":"default","num":0},{"id":19001,"name":"회색 워윅","num":1},{"id":19002,"name":"바다사자 우르프","num":2},{"id":19003,"name":"크고 사나운 워윅","num":3},{"id":19004,"name":"극지 사냥꾼 워윅","num":4},{"id":19005,"name":"야성의 워윅","num":5},{"id":19006,"name":"불송곳니 워윅","num":6},{"id":19007,"name":"하이에나 워윅","num":7},{"id":19008,"name":"습격자 워윅","num":8},{"id":19009,"name":"우르프 워윅","num":9}],"lore":"자운의 잿빛 골목을 무대로 사냥감을 찾는 괴수 워윅. 극한의 고통을 동반하는 각종 실험으로 완전히 변형된 그의 육체는 약품통, 펌프, 여러 기계가 결합된 복잡한 시스템과 연결되어 있으며, 정맥에는 연금술을 통해 조합한 분노가 주입된다. 어두운 그림자 속에서 느닷없이 튀어나오곤 하는 그는 사람들을 위협하는 도시의 범죄자들을 단숨에 사냥한다. 피 냄새를 맡고 나면 이성을 잃고 마는 워윅. 조금이라도 피를 흘린 자는 그 누구도 워윅의 손아귀에서 벗어날 수 없다.","blurb":"자운의 잿빛 골목을 무대로 사냥감을 찾는 괴수 워윅. 극한의 고통을 동반하는 각종 실험으로 완전히 변형된 그의 육체는 약품통, 펌프, 여러 기계가 결합된 복잡한 시스템과 연결되어 있으며, 정맥에는 연금술을 통해 조합한 분노가 주입된다. 어두운 그림자 속에서 느닷없이 튀어나오곤 하는 그는 사람들을 위협하는 도시의 범죄자들을 단숨에 사냥한다. 피 냄새를 맡고 나면 이성을 잃고 마는 워윅. 조금이라도 피를 흘린 자는 그 누구도 워윅의 손아귀에서 벗어날 수...","allytips":["- 피의 사냥 흔적을 따라가면 체력이 낮은 적 챔피언을 찾을 수 있습니다.","- 무한의 구속 (R) 도약 사거리는 아군이 준 이로운 효과나 소환사 주문 효과를 비롯한 모든 이동 속도 증가분에 비례합니다.","- 야수의 송곳니(Q)를 계속 누르고 있으면 도망치거나 도약, 순간이동하는 적도 따라갈 수 있습니다."],"enemytips":["- 워윅은 체력이 낮을 때 공격하면 체력을 회복합니다. 완벽하게 마무리하려면 군중 제어기를 남겨두세요.","- 워윅은 체력이 낮은 대상 상대로 특히 강합니다. 체력 관리에 유의하세요.","- 워윅 궁극기의 사거리는 이동 속도에 비례합니다."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":9,"defense":5,"magic":3,"difficulty":3},"stats":{"armor":33,"armorperlevel":3.2,"attackdamage":66,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":-0.02,"attackspeedperlevel":2.3,"crit":0,"critperlevel":0,"hp":550,"hpperlevel":85,"hpregen":3.75,"hpregenperlevel":0.75,"movespeed":335,"mp":280,"mpperlevel":35,"mpregen":7.466,"mpregenperlevel":0.575,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"야수의 송곳니","description":"워윅이 앞으로 도약해 대상을 물고 대상 최대 체력에 비례한 피해를 입힙니다. 이때 워윅은 입힌 피해량만큼 체력을 회복합니다.","sanitizedDescription":"워윅이 앞으로 도약해 대상을 물고 대상 최대 체력에 비례한 피해를 입힙니다. 이때 워윅은 입힌 피해량만큼 체력을 회복합니다.","tooltip":"워윅이 앞으로 도약하여 대상을 뭅니다. 키를 계속 누르고 있으면 대상에게 <span class=\"colorFFEB7F\">고정</span>되어 뒤에서 덮칩니다.<br /><br />키에서 손을 떼면 <span class=\"colorFF8C00\">{{ a1 }}</span><span class=\"color99FF99\"> + {{ a2 }}</span> + 대상 최대 체력의 {{ e1 }}%에 해당하는 마법 피해를 입히고, 적중 시 효과도 함께 적용됩니다. 워윅은 입힌 피해의 {{ e3 }}%만큼 체력을 회복합니다.<br /><br /><span class=\"size16 color8C8C8C\">워윅은 <span class=\"size16 colorFFEB7F\">고정</span>된 대상이 이동할 때 같이 이동하게 되며, 떼어낼 수 없습니다.</span>","sanitizedTooltip":"워윅이 앞으로 도약하여 대상을 뭅니다. 키를 계속 누르고 있으면 대상에게 고정되어 뒤에서 덮칩니다. 키에서 손을 떼면 {{ a1 }} + {{ a2 }} + 대상 최대 체력의 {{ e1 }}%에 해당하는 마법 피해를 입히고, 적중 시 효과도 함께 적용됩니다. 워윅은 입힌 피해의 {{ e3 }}%만큼 체력을 회복합니다. 워윅은 고정된 대상이 이동할 때 같이 이동하게 되며, 떼어낼 수 없습니다.","leveltip":{"label":["회복량","체력 비례 피해량","소모값"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ e1 }}% -> {{ e1NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"WarwickQ.png","sprite":"spell13.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[6,7,8,9,10],[100,150,200,250,300],[30,40,50,60,70],[100,125,150,175,200],[450,450,450,450,450],[200,200,200,200,200],[300,300,300,300,300],[425,425,425,425,425],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","6/7/8/9/10","100/150/200/250/300","30/40/50/60/70","100/125/150/175/200","450","200","300","425","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.2]},{"key":"a2","link":"spelldamage","coeff":[0.9]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"WarwickQ"},{"name":"피의 사냥","description":"체력이 50% 미만인 적을 감지합니다. 이 대상에게 이동할 때는 워윅의 이동 속도가 증가하고 대상에 대한 공격 속도도 증가합니다. 적의 체력이 20% 아래로 내려가면 워윅이 광분하며 추가 효과가 세 배로 증가합니다.","sanitizedDescription":"체력이 50% 미만인 적을 감지합니다. 이 대상에게 이동할 때는 워윅의 이동 속도가 증가하고 대상에 대한 공격 속도도 증가합니다. 적의 체력이 20% 아래로 내려가면 워윅이 광분하며 추가 효과가 세 배로 증가합니다.","tooltip":"<span class=\"colorFF9900\"></span><span class=\"colorFF9900\">기본 지속 효과: </span>체력이 50% 미만인 적을 공격할 때 워윅의 공격 속도가 {{ e2 }}% 상승합니다. 또한 맵 전체에서 체력이 낮은 챔피언을 파악해, 전투 중이 아닐 때 대상을 향해 이동할 경우 이동 속도가 {{ e1 }}% 빨라집니다. 적의 체력이 20% 이하일 경우 이 효과들은 세 배로 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>잠시 동안 모든 적의 위치를 파악합니다. 가장 가까이에 있는 적 챔피언에게는 8초간 피의 사냥 표식이 남습니다. 이 스킬은 챔피언과 전투 중이 아닐 때만 사용할 수 있습니다.<br /><br />사냥 당하는 적이 아무도 없으면 피의 사냥 재사용 대기시간이 두 배 빨리 줄어듭니다.","sanitizedTooltip":"기본 지속 효과: 체력이 50% 미만인 적을 공격할 때 워윅의 공격 속도가 {{ e2 }}% 상승합니다. 또한 맵 전체에서 체력이 낮은 챔피언을 파악해, 전투 중이 아닐 때 대상을 향해 이동할 경우 이동 속도가 {{ e1 }}% 빨라집니다. 적의 체력이 20% 이하일 경우 이 효과들은 세 배로 증가합니다. 사용 시: 잠시 동안 모든 적의 위치를 파악합니다. 가장 가까이에 있는 적 챔피언에게는 8초간 피의 사냥 표식이 남습니다. 이 스킬은 챔피언과 전투 중이 아닐 때만 사용할 수 있습니다. 사냥 당하는 적이 아무도 없으면 피의 사냥 재사용 대기시간이 두 배 빨리 줄어듭니다.","leveltip":{"label":["이동 속도","공격 속도","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"WarwickW.png","sprite":"spell13.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[120,105,90,75,60],"cooldownBurn":"120/105/90/75/60","effect":[null,[35,40,45,50,55],[50,65,80,95,110],[10,15,20,25,30],[80,90,100,110,120],[30,30,30,30,30],[8,8,8,8,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/40/45/50/55","50/65/80/95/110","10/15/20/25/30","80/90/100/110/120","30","8","0","0","0","0"],"range":[4000,4000,4000,4000,4000],"rangeBurn":"4000","key":"WarwickW"},{"name":"원시의 포효","description":"2.5초 동안 워윅이 입는 피해가 감소합니다. 지속 시간이 종료되거나 스킬을 재사용하면 워윅이 포효하며 근처의 모든 적을 1초 동안 도망치게 합니다.","sanitizedDescription":"2.5초 동안 워윅이 입는 피해가 감소합니다. 지속 시간이 종료되거나 스킬을 재사용하면 워윅이 포효하며 근처의 모든 적을 1초 동안 도망치게 합니다.","tooltip":"2.5초 동안 워윅이 입는 피해가 {{ e1 }}% 감소합니다. 지속 시간이 종료되거나 스킬을 재사용하면 워윅이 포효하며 근처의 모든 적을 {{ e3 }}초 동안 도망치게 합니다.","sanitizedTooltip":"2.5초 동안 워윅이 입는 피해가 {{ e1 }}% 감소합니다. 지속 시간이 종료되거나 스킬을 재사용하면 워윅이 포효하며 근처의 모든 적을 {{ e3 }}초 동안 도망치게 합니다.","leveltip":{"label":["피해량 감소","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"WarwickE.png","sprite":"spell13.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[15,14,13,12,11],"cooldownBurn":"15/14/13/12/11","effect":[null,[35,40,45,50,55],[2.75,2.75,2.75,2.75,2.75],[1,1,1,1,1],[1,1,1,1,1],[800,800,800,800,800],[400,400,400,400,400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/40/45/50/55","2.75","1","1","800","400","0","0","0","0"],"range":[375,375,375,375,375],"rangeBurn":"375","key":"WarwickE"},{"name":"무한의 구속","description":"워윅이 지정한 방향으로 도약해 (도약 거리는 추가 이동 속도에 비례) 첫 번째로 부딪힌 챔피언을 1.5초 동안 제압합니다.","sanitizedDescription":"워윅이 지정한 방향으로 도약해 (도약 거리는 추가 이동 속도에 비례) 첫 번째로 부딪힌 챔피언을 1.5초 동안 제압합니다.","tooltip":"워윅이 2.5초 동안 이동할 수 있는 거리만큼 도약해 첫 번째로 부딪힌 적 챔피언을 {{ e2 }}초 동안 제압하고 {{ e7 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 적중 시 효과는 3회 적용됩니다. 무한의 구속 지속시간 동안 워윅은 입힌 피해의 100%만큼 체력을 회복합니다.","sanitizedTooltip":"워윅이 2.5초 동안 이동할 수 있는 거리만큼 도약해 첫 번째로 부딪힌 적 챔피언을 {{ e2 }}초 동안 제압하고 {{ e7 }} (+{{ a1 }})의 마법 피해를 입힙니다. 적중 시 효과는 3회 적용됩니다. 무한의 구속 지속시간 동안 워윅은 입힌 피해의 100%만큼 체력을 회복합니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"WarwickR.png","sprite":"spell13.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,90,70],"cooldownBurn":"110/90/70","effect":[null,[150,250,350],[1.5,1.5,1.5],[30,30,30],[5,5,5],[20,20,20],[0,0,0],[175,350,525],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","1.5","30","5","20","0","175/350/525","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.67]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"WarwickR"}],"passive":{"name":"끝없는 허기","description":"워윅이 기본 공격 시 추가 마법 피해를 입힙니다. 워윅의 체력이 50% 아래로 내려가면 추가 피해량만큼 체력을 회복합니다. 체력이 25% 아래로 내려가면 체력 회복량이 세 배로 증가합니다.","sanitizedDescription":"워윅이 기본 공격 시 추가 마법 피해를 입힙니다. 워윅의 체력이 50% 아래로 내려가면 추가 피해량만큼 체력을 회복합니다. 체력이 25% 아래로 내려가면 체력 회복량이 세 배로 증가합니다.","image":{"full":"WarwickP.png","sprite":"passive4.png","group":"passive","x":336,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Warwick","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3077,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1028,"count":1},{"id":3067,"count":1},{"id":3065,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3748,"count":1},{"id":3068,"count":1},{"id":3022,"count":1}]}]},{"champion":"Warwick","title":"WarwickARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3748,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3091,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Warwick","title":"WarwickCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3748,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3078,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3742,"count":1},{"id":3025,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2055,"count":1}]}]},{"champion":"Warwick","title":"WarwickFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3065,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3153,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3110,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":3361,"count":1}]}]},{"champion":"Warwick","title":"WarwickKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3047,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3091,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3068,"count":1},{"id":3112,"count":1},{"id":3075,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Warwick","title":"WarwickSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3748,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3078,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3742,"count":1},{"id":3025,"count":1}]}]},{"champion":"Warwick","title":"WarwickSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1006,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3057,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1001,"count":1},{"id":3706,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3748,"count":1},{"id":3065,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3065,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3078,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3742,"count":1},{"id":3025,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Warwick","title":"WarwickTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3077,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3068,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3084,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Ziggs":{"id":115,"key":"Ziggs","name":"직스","title":"마법공학 폭파병","image":{"full":"Ziggs.png","sprite":"champion4.png","group":"champion","x":240,"y":48,"w":48,"h":48},"skins":[{"id":115000,"name":"default","num":0},{"id":115001,"name":"미친 과학자 직스","num":1},{"id":115002,"name":"직스 소령","num":2},{"id":115003,"name":"수영장 파티 직스","num":3},{"id":115004,"name":"눈싸움 대장 직스","num":4},{"id":115005,"name":"비전 마법 대가 직스","num":5},{"id":115006,"name":"중간보스 직스","num":6}],"lore":"거대한 폭탄을 사랑하는 직스는 폭탄만큼이나 급한 성미를 지닌 요들이다. 한 필트오버 출신 발명가의 조수였던 직스는 똑같은 일상에 지루함을 느끼고 징크스라는 파란 머리의 미친 폭파범과 친구가 되었다. 어느 날 필트오버에서 요란스러운 밤을 보낸 직스는 징크스의 충고를 따라 자운으로 갔다. 이제 자운에서 직스는 뭐든 닥치는 대로 끝없이 폭발시키며 일반 시민뿐 아니라 화학자까지 겁에 질리게 하면서 자신이 좋아하는 일에 매진하며 더욱 자유롭게 활개치고 있다.","blurb":"거대한 폭탄을 사랑하는 직스는 폭탄만큼이나 급한 성미를 지닌 요들이다. 한 필트오버 출신 발명가의 조수였던 직스는 똑같은 일상에 지루함을 느끼고 징크스라는 파란 머리의 미친 폭파범과 친구가 되었다. 어느 날 필트오버에서 요란스러운 밤을 보낸 직스는 징크스의 충고를 따라 자운으로 갔다. 이제 자운에서 직스는 뭐든 닥치는 대로 끝없이 폭발시키며 일반 시민뿐 아니라 화학자까지 겁에 질리게 하면서 자신이 좋아하는 일에 매진하며 더욱 자유롭게 활개치고 있다.","allytips":["- 교전이 일어난 곳에서 멀리 있을 때도 지옥 화염 폭탄으로 아군을 도울 수 있습니다.","- 마법공학 지뢰밭으로 적들을 둔화시키면 다른 스킬을 더 쉽게 적중시킬 수 있습니다.","- 적을 추격하거나 도망칠 때는 휴대용 폭약 스킬로 벽을 넘을 수 있으니 잘 활용하세요."],"enemytips":["- 직스가 설치한 지뢰를 밟지 마세요! 속도가 느려져서 직스의 다른 스킬에 훨씬 쉽게 적중 당합니다.","- 직스의 스킬들은 재사용 대기시간이 긴 편입니다. 직스가 스킬을 다 사용한 시점을 노리세요.","- 직스의 궁극기 지옥 화염 폭탄은 폭발 반경의 중심부에 있을수록 큰 피해를 입습니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":4,"magic":9,"difficulty":4},"stats":{"armor":21.544,"armorperlevel":3.3,"attackdamage":54.208,"attackdamageperlevel":3.1,"attackrange":550,"attackspeedoffset":-0.0473,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":536,"hpperlevel":92,"hpregen":6.258,"hpregenperlevel":0.6,"movespeed":325,"mp":384,"mpperlevel":47,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"반동 폭탄","description":"직스가 반동 폭탄을 던져 마법 피해를 입힙니다.","sanitizedDescription":"직스가 반동 폭탄을 던져 마법 피해를 입힙니다.","tooltip":"직스가 지면에서 반동하는 폭탄을 던져 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"직스가 지면에서 반동하는 폭탄을 던져 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZiggsQ.png","sprite":"spell13.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[6,5.5,5,4.5,4],"cooldownBurn":"6/5.5/5/4.5/4","effect":[null,[75,120,165,210,255],[850,850,850,850,850],[325,325,325,325,325],[225,225,225,225,225],[150,150,150,150,150],[240,240,240,240,240],[70,70,70,70,70],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/120/165/210/255","850","325","225","150","240","70","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.65]}],"range":[850,850,850,850,850],"rangeBurn":"850","key":"ZiggsQ"},{"name":"휴대용 폭약","description":"직스가 폭약을 던지면 4초 후, 혹은 스킬을 다시 사용할 때 터집니다. 휴대용 폭약은 폭발시 적들에게 마법 피해를 주고 멀리 밀어냅니다. 직스 역시 밀려나지만, 피해는 입지 않습니다. 약해진 적 포탑에는 휴대용 폭약이 마법공학 폭발을 일으켜 피해를 입힐 수 있습니다.","sanitizedDescription":"직스가 폭약을 던지면 4초 후, 혹은 스킬을 다시 사용할 때 터집니다. 휴대용 폭약은 폭발시 적들에게 마법 피해를 주고 멀리 밀어냅니다. 직스 역시 밀려나지만, 피해는 입지 않습니다. 약해진 적 포탑에는 휴대용 폭약이 마법공학 폭발을 일으켜 피해를 입힐 수 있습니다.","tooltip":"직스가 폭약을 던지면 {{ e2 }}초 후, 혹은 스킬을 다시 사용할 때 폭발합니다. 폭발하면 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히며 뒤로 밀어냅니다. 직스 역시 밀려나지만 피해는 입지 않습니다.<br /><br />포탑의 체력이 {{ f1*100 }}% 밑으로 내려가 구조적으로 불안정해지면 휴대용 폭약이 <span class=\"colorD41919\">마법공학 폭발</span>을 일으키며 피해를 입힐 수 있습니다.","sanitizedTooltip":"직스가 폭약을 던지면 {{ e2 }}초 후, 혹은 스킬을 다시 사용할 때 폭발합니다. 폭발하면 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며 뒤로 밀어냅니다. 직스 역시 밀려나지만 피해는 입지 않습니다. 포탑의 체력이 {{ f1*100 }}% 밑으로 내려가 구조적으로 불안정해지면 휴대용 폭약이 마법공학 폭발을 일으키며 피해를 입힐 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간","공격 가능한 포탑 체력"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ f1*100 }}% -> {{ f2*100 }}%"]},"image":{"full":"ZiggsW.png","sprite":"spell14.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,65,65,65,65],"costBurn":"65","cooldown":[24,21,18,15,12],"cooldownBurn":"24/21/18/15/12","effect":[null,[70,105,140,175,210],[4,4,4,4,4],[0.25,0.275,0.3,0.325,0.35],[600,600,600,600,600],[50,50,50,50,50],[400,400,400,400,400],[325,325,325,325,325],[775,775,775,775,775],[400,400,400,400,400],[6,6,6,6,6]],"effectBurn":["","70/105/140/175/210","4","0.25/0.275/0.3/0.325/0.35","600","50","400","325","775","400","6"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"ZiggsW"},{"name":"마법공학 지뢰밭","description":"직스가 밟으면 폭발하는 지뢰를 뿌려, 지뢰에 닿은 적은 마법 피해를 입고 둔화에 걸립니다.","sanitizedDescription":"직스가 밟으면 폭발하는 지뢰를 뿌려, 지뢰에 닿은 적은 마법 피해를 입고 둔화에 걸립니다.","tooltip":"직스가 밟으면 터지는 지뢰를 뿌려, 지뢰에 닿은 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 지뢰에 맞은 챔피언은 {{ e4 }}초 동안 {{ e2 }}%만큼 둔화됩니다.<br /><br />한 번 지뢰를 밟은 챔피언은 다음 지뢰를 밟으면 {{ e5 }}%의 피해만 입습니다. 지뢰는 {{ e3 }}초 후에 자동으로 사라집니다.","sanitizedTooltip":"직스가 밟으면 터지는 지뢰를 뿌려, 지뢰에 닿은 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 지뢰에 맞은 챔피언은 {{ e4 }}초 동안 {{ e2 }}%만큼 둔화됩니다. 한 번 지뢰를 밟은 챔피언은 다음 지뢰를 밟으면 {{ e5 }}%의 피해만 입습니다. 지뢰는 {{ e3 }}초 후에 자동으로 사라집니다.","leveltip":{"label":["지뢰 피해량","둔화","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZiggsE.png","sprite":"spell14.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[16,16,16,16,16],"cooldownBurn":"16","effect":[null,[40,65,90,115,140],[20,25,30,35,40],[10,10,10,10,10],[1.5,1.5,1.5,1.5,1.5],[40,40,40,40,40],[-0.2,-0.25,-0.3,-0.35,-0.4],[135,135,135,135,135],[150,150,150,150,150],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/65/90/115/140","20/25/30/35/40","10","1.5","40","-0.2/-0.25/-0.3/-0.35/-0.4","135","150","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"ZiggsE"},{"name":"지옥 화염 폭탄","description":"직스가 궁극의 무기 지옥 화염 폭탄을 조립하여 아주 멀리 날립니다. 폭발의 중심부에 있는 적들은 외곽에 있는 적들보다 더 큰 피해를 입습니다.","sanitizedDescription":"직스가 궁극의 무기 지옥 화염 폭탄을 조립하여 아주 멀리 날립니다. 폭발의 중심부에 있는 적들은 외곽에 있는 적들보다 더 큰 피해를 입습니다.","tooltip":"직스가 궁극의 무기 지옥 화염 폭탄을 조립하여 아주 멀리 날립니다. 폭발의 중심부에 있는 적들은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다. 외곽에 있는 적들은 2/3의 피해를 입습니다.","sanitizedTooltip":"직스가 궁극의 무기 지옥 화염 폭탄을 조립하여 아주 멀리 날립니다. 폭발의 중심부에 있는 적들은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입습니다. 외곽에 있는 적들은 2/3의 피해를 입습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZiggsR.png","sprite":"spell14.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[300,450,600],[66.6667,66.6667,66.6667],[525,525,525],[250,250,250],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","300/450/600","66.67","525","250","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1.1]}],"range":[5000,5000,5000],"rangeBurn":"5000","key":"ZiggsR"}],"passive":{"name":"짧은 도화선","description":"12초마다 직스의 다음 기본 공격이 추가 마법 피해를 입힙니다. 직스가 스킬을 사용할 때마다 재사용 대기시간이 감소합니다.","sanitizedDescription":"12초마다 직스의 다음 기본 공격이 추가 마법 피해를 입힙니다. 직스가 스킬을 사용할 때마다 재사용 대기시간이 감소합니다.","image":{"full":"ZiggsPassiveReady.png","sprite":"passive4.png","group":"passive","x":240,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Ziggs","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3100,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3030,"count":1},{"id":3151,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3114,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3157,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3151,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3100,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3030,"count":1},{"id":3151,"count":1},{"id":3100,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3030,"count":1},{"id":3151,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ziggs","title":"ZiggsTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3030,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Kled":{"id":240,"key":"Kled","name":"클레드","title":"망나니 기사","image":{"full":"Kled.png","sprite":"champion1.png","group":"champion","x":336,"y":96,"w":48,"h":48},"skins":[{"id":240000,"name":"default","num":0},{"id":240001,"name":"클레드 경","num":1}],"lore":"용감무쌍하고도 성깔 고약한 전사인 클레드는 녹서스 특유의 객기와 다혈질을 상징하는 존재와도 같다. 그래서 병사들 사이에서는 인기를 휩쓸지만, 장성들 사이에서는 불신의 대상이고, 귀족들에게는 혐오를 한몸에 사고 있다. 소문에 따르면 클레드는 녹서스 제국이 처음 세워진 시절부터 지금까지 모든 군사 작전에서 활약해왔으며, 단 한 번도 후퇴한 적이 없고, 군인으로서 받을 수 있는 칭호란 칭호는 모조리 '따냈다'고 전해진다. 하지만 병사들의 이야기가 과연 어디까지 진실일지는 미지수다. 확실한 것은 클레드가 스칼이라는 이름의 애마를 갖고 있다는 것과, 썩 미덥지 못한 그 애마를 타고서 저돌적으로 전투에 뛰어든다는 사실이다. 자기 것을 지키기 위해서나 원하는 것을 얻기 위해서라면 그는 싸움을 마다하지 않을 것이다.","blurb":"용감무쌍하고도 성깔 고약한 전사인 클레드는 녹서스 특유의 객기와 다혈질을 상징하는 존재와도 같다. 그래서 병사들 사이에서는 인기를 휩쓸지만, 장성들 사이에서는 불신의 대상이고, 귀족들에게는 혐오를 한몸에 사고 있다. 소문에 따르면 클레드는 녹서스 제국이 처음 세워진 시절부터 지금까지 모든 군사 작전에서 활약해왔으며, 단 한 번도 후퇴한 적이 없고, 군인으로서 받을 수 있는 칭호란 칭호는 모조리 '따냈다'고 전해진다. 하지만 병사들의 이야기가 과연...","allytips":["- 미니언을 처치하는 것보다 챔피언과 전투를 벌이면 스칼의 용기를 더 빠르게 회복시킬 수 있습니다.","- 버럭버럭의 마지막 기본 공격은 처음 세 번보다 더 많은 피해를 입힙니다.","- 돌겨어어억!!!은 굉장히 먼 거리에서도 사용할 수 있습니다. 도착 시점의 적 팀 위치를 예상해서 사용해 보세요."],"enemytips":["- 빵야! 또는 기본 공격으로 적에게 피해를 입히거나, 미니언을 처치하거나, 구조물 혹은 에픽 몬스터를 공격하면 스칼의 용기가 회복됩니다.","- 클레드가 스칼을 타고 있지 않을 때는 용기 수치를 잘 확인해야 합니다. 100%가 되면 스칼이 체력을 상당량 회복한 채 돌아와 클레드를 다시 태우기 때문이죠.","- 버럭버럭의 재사용 대기시간이 돌아오면 굉장히 위협적이기 때문에 조심해야 합니다."],"tags":["Fighter","Tank"],"partype":"용기","info":{"attack":8,"defense":2,"magic":2,"difficulty":7},"stats":{"armor":35,"armorperlevel":4,"attackdamage":65,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":340,"hpperlevel":70,"hpregen":6,"hpregenperlevel":0.75,"movespeed":345,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"덫날리기","description":"클레드가 밧줄에 묶인 덫을 던져 적 챔피언에게 피해를 입히고 붙잡습니다. 해당 챔피언과 잠시 동안 근거리를 유지하면 클레드 쪽으로 끌어당기면서 추가 물리 피해를 입힙니다.<br><br>스칼 미탑승 시에는 원거리 공격이 가능한 빵야!로 바뀝니다. 빵야!를 사용하면 클레드가 뒤로 밀려나며 스칼의 용기를 회복시킬 수 있습니다.","sanitizedDescription":"클레드가 밧줄에 묶인 덫을 던져 적 챔피언에게 피해를 입히고 붙잡습니다. 해당 챔피언과 잠시 동안 근거리를 유지하면 클레드 쪽으로 끌어당기면서 추가 물리 피해를 입힙니다. 스칼 미탑승 시에는 원거리 공격이 가능한 빵야!로 바뀝니다. 빵야!를 사용하면 클레드가 뒤로 밀려나며 스칼의 용기를 회복시킬 수 있습니다.","tooltip":"클레드가 밧줄에 묶인 덫을 던져 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 첫 번째로 맞힌 적 챔피언이나 대형 몬스터를 붙잡으며, <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. 덫이 관통한 미니언에게는 150%의 피해를 입힙니다.<br /><br />클레드가 {{ e3 }}초 동안 붙잡은 적과 근거리를 유지하면 {{ e1 }}<span class=\"colorFF8C00\"> (+{{ charbonusphysical*2 }})</span>의 물리 피해를 입히고 적을 끌어당기며 1.5초 동안 {{ e5 }}%만큼 둔화시킵니다.<br /><br /><span class=\"colorFF8C00\">미탑승 시:</span> 스킬이 원거리 공격이 가능한 빵야!로 바뀝니다. 빵야!로 스칼의 <span class=\"coloreae57e\">용기</span>를 회복시킬 수 있습니다.","sanitizedTooltip":"클레드가 밧줄에 묶인 덫을 던져 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 첫 번째로 맞힌 적 챔피언이나 대형 몬스터를 붙잡으며, 절대 시야를 얻습니다. 덫이 관통한 미니언에게는 150%의 피해를 입힙니다. 클레드가 {{ e3 }}초 동안 붙잡은 적과 근거리를 유지하면 {{ e1 }} (+{{ charbonusphysical*2 }})의 물리 피해를 입히고 적을 끌어당기며 1.5초 동안 {{ e5 }}%만큼 둔화시킵니다. 미탑승 시: 스킬이 원거리 공격이 가능한 빵야!로 바뀝니다. 빵야!로 스칼의 용기를 회복시킬 수 있습니다.","leveltip":{"label":["피해량 (던졌을 때)","피해량 (끌어올 때)","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KledQ.png","sprite":"spell6.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[9,8.5,8,7.5,7],"cooldownBurn":"9/8.5/8/7.5/7","effect":[null,[60,110,160,210,260],[0.6,0.6,0.6,0.6,0.6],[1.75,1.75,1.75,1.75,1.75],[2,2,2,2,2],[40,45,50,55,60],[9,8.5,8,7.5,7],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/110/160/210/260","0.6","1.75","2","40/45/50/55/60","9/8.5/8/7.5/7","1.5","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.6]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"KledQ"},{"name":"버럭버럭","description":"다음 네 번의 기본 공격 속도가 엄청나게 빨라집니다. 네 번째 공격은 피해량도 증가합니다.","sanitizedDescription":"다음 네 번의 기본 공격 속도가 엄청나게 빨라집니다. 네 번째 공격은 피해량도 증가합니다.","tooltip":"<span class=\"colorFF8C00\">기본 지속 효과:</span> 클레드는 기본 공격 시 광분해 다음 {{ e6 }}초 동안, 혹은 다음 네 번의 공격 시 공격 속도가 {{ e2 }}% 증가하고, 그 후 버럭버럭의 재사용 대기시간이 시작됩니다.<br /><br />네 번째 기본 공격은 {{ e4 }} + 대상 최대 체력의 {{ e1 }}% <span class=\"colorFF8C00\">(+{{ f1 }}%)</span>에 해당하는 물리 피해를 추가로 입힙니다. (몬스터 대상 최대 피해량: {{ e7 }})","sanitizedTooltip":"기본 지속 효과: 클레드는 기본 공격 시 광분해 다음 {{ e6 }}초 동안, 혹은 다음 네 번의 공격 시 공격 속도가 {{ e2 }}% 증가하고, 그 후 버럭버럭의 재사용 대기시간이 시작됩니다. 네 번째 기본 공격은 {{ e4 }} + 대상 최대 체력의 {{ e1 }}% (+{{ f1 }}%)에 해당하는 물리 피해를 추가로 입힙니다. (몬스터 대상 최대 피해량: {{ e7 }})","leveltip":{"label":["기본 피해량","비례 피해량","재사용 대기시간"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KledW.png","sprite":"spell6.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[14,12.5,11,9.5,8],"cooldownBurn":"14/12.5/11/9.5/8","effect":[null,[4.5,5,5.5,6,6.5],[150,150,150,150,150],[20,20,20,20,20],[20,30,40,50,60],[15,30,45,60,75],[4,4,4,4,4],[200,200,200,200,200],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4.5/5/5.5/6/6.5","150","20","20/30/40/50/60","15/30/45/60/75","4","200","0","0","0"],"range":[0,0,0,0,0],"rangeBurn":"0","key":"KledW"},{"name":"이랴!","description":"클레드가 돌진하며 물리 피해를 입히고 이동 속도가 일시적으로 상승합니다. 다시 스킬을 사용하면 최초 대상 쪽으로 돌진하여 동일한 양의 피해를 또 입힐 수 있습니다.","sanitizedDescription":"클레드가 돌진하며 물리 피해를 입히고 이동 속도가 일시적으로 상승합니다. 다시 스킬을 사용하면 최초 대상 쪽으로 돌진하여 동일한 양의 피해를 또 입힐 수 있습니다.","tooltip":"클레드가 돌진하며 경로 상에 있는 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }}) </span>의 물리 피해를 입힙니다. 단, 벽은 넘을 수 없습니다.<br /><br />적 챔피언이나 대형 몬스터를 맞히면 {{ e4 }}초 동안 클레드의 이동 속도가 {{ e5 }}%만큼 증가하고 대상에 대한 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. {{ e6 }}초 내에 스킬을 다시 사용하면 같은 대상에게 다시 돌진해 동일한 양의 피해를 입힙니다.","sanitizedTooltip":"클레드가 돌진하며 경로 상에 있는 적에게 {{ e1 }} (+{{ a1 }}) 의 물리 피해를 입힙니다. 단, 벽은 넘을 수 없습니다. 적 챔피언이나 대형 몬스터를 맞히면 {{ e4 }}초 동안 클레드의 이동 속도가 {{ e5 }}%만큼 증가하고 대상에 대한 절대 시야를 얻습니다. {{ e6 }}초 내에 스킬을 다시 사용하면 같은 대상에게 다시 돌진해 동일한 양의 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KledE.png","sprite":"spell6.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[35,60,85,110,135],[0,0,0,0,0],[350,350,350,350,350],[1,1,1,1,1],[50,50,50,50,50],[3,3,3,3,3],[600,600,600,600,600],[700,700,700,700,700],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/60/85/110/135","0","350","1","50","3","600","700","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.6]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"KledE"},{"name":"돌겨어어억!!!","description":"클레드와 스칼이 보호막을 쓴 채 목표 지점으로 돌진합니다. 돌진 경로 위에 있는 아군은 이동 속도가 빨라집니다. 스칼은 경로 위에 있는 첫 번째 적 챔피언에게 돌격합니다.","sanitizedDescription":"클레드와 스칼이 보호막을 쓴 채 목표 지점으로 돌진합니다. 돌진 경로 위에 있는 아군은 이동 속도가 빨라집니다. 스칼은 경로 위에 있는 첫 번째 적 챔피언에게 돌격합니다.","tooltip":"클레드가 보호막을 쓴 채 목표 지점으로 돌진합니다. 돌진 경로 위에 있는 아군은 이동 속도가 빨라집니다. 보호막 흡수량은 점점 증가해 최대 {{ e4 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>까지 늘어나며, 돌진이 끝나고 2초 후까지 유지됩니다.<br /><br />스칼이 경로 상의 첫 번째 적 챔피언에게 돌격해 대상 최대 체력 기준 최대 {{ f5 }}% <span class=\"colorFF8C00\">(+{{ f1*3 }}%)</span>의 물리 피해를 입힙니다. 피해량은 돌진 거리에 따라 달라집니다.","sanitizedTooltip":"클레드가 보호막을 쓴 채 목표 지점으로 돌진합니다. 돌진 경로 위에 있는 아군은 이동 속도가 빨라집니다. 보호막 흡수량은 점점 증가해 최대 {{ e4 }} (+{{ a1 }})까지 늘어나며, 돌진이 끝나고 2초 후까지 유지됩니다. 스칼이 경로 상의 첫 번째 적 챔피언에게 돌격해 대상 최대 체력 기준 최대 {{ f5 }}% (+{{ f1*3 }}%)의 물리 피해를 입힙니다. 피해량은 돌진 거리에 따라 달라집니다.","leveltip":{"label":["최대 피해량","최대 보호막 흡수량","사거리","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e4 }} -> {{ e4NL }}","{{ e0 }} -> {{ e0NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KledR.png","sprite":"spell6.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[160,140,120],"cooldownBurn":"160/140/120","effect":[null,[12,15,18],[4,4,4],[0,0,0],[200,300,400],[3,3,3],[100,150,0],[0,0,0],[150,0,0],[3,3,3],[3500,4000,4500]],"effectBurn":["","12/15/18","4","0","200/300/400","3","100/150/0","0","150/0/0","3","3500/4000/4500"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[3]}],"range":[3500,4000,4500],"rangeBurn":"3500/4000/4500","key":"KledR"}],"passive":{"name":"겁쟁이 도마뱀 스칼","description":"클레드는 듬직한 친구 스칼을 타고 다닙니다. 스칼은 클레드 대신 피해를 입고, 스칼의 체력이 모두 소진되면 클레드가 스칼에게서 내립니다.<br><br>스칼에게서 내리면 클레드의 스킬이 바뀌고 챔피언에 대한 피해량이 줄어듭니다. 적과 싸우면 스칼의 용기를 회복시킬 수 있습니다. 용기가 최대치에 도달하면 스칼이 일부 체력을 회복한 채 나타나 클레드를 다시 태웁니다.","sanitizedDescription":"클레드는 듬직한 친구 스칼을 타고 다닙니다. 스칼은 클레드 대신 피해를 입고, 스칼의 체력이 모두 소진되면 클레드가 스칼에게서 내립니다. 스칼에게서 내리면 클레드의 스킬이 바뀌고 챔피언에 대한 피해량이 줄어듭니다. 적과 싸우면 스칼의 용기를 회복시킬 수 있습니다. 용기가 최대치에 도달하면 스칼이 일부 체력을 회복한 채 나타나 클레드를 다시 태웁니다.","image":{"full":"Kled_P.png","sprite":"passive1.png","group":"passive","x":336,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Kled","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3009,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3101,"count":1},{"id":3057,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3748,"count":1},{"id":3065,"count":1},{"id":3071,"count":1}]}]},{"champion":"Kled","title":"KledARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3071,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3074,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kled","title":"KledCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3026,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kled","title":"KledFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3812,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Kled","title":"KledKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3071,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3074,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kled","title":"KledSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3026,"count":1},{"id":3065,"count":1}]}]},{"champion":"Kled","title":"KledSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3044,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3715,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kled","title":"KledTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":5},{"id":1029,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3748,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3077,"count":1},{"id":3715,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3074,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Khazix":{"id":121,"key":"Khazix","name":"카직스","title":"공허의 약탈자","image":{"full":"Khazix.png","sprite":"champion1.png","group":"champion","x":240,"y":96,"w":48,"h":48},"skins":[{"id":121000,"name":"default","num":0},{"id":121001,"name":"메카 카직스","num":1},{"id":121002,"name":"사막의 수호자 카직스","num":2},{"id":121003,"name":"죽음의 꽃 카직스","num":3},{"id":121004,"name":"암흑의 별 카직스","num":4}],"lore":"공허는 성장하고, 공허는 적응한다. 무수히 많은 공허 태생 생명체 중 이러한 사실을 카직스보다 더 명백히 보여 주는 생명체는 없다. 공포스러운 돌연변이 생명체 카직스의 심장부는 진화로 성장하며, 살아남아 더 강한 상대를 사냥하기 위한 존재로 자리 잡았다. 카직스의 심장부는 진화하려고 할 때마다 먹이에 대응하고 처치하기 위한 새롭고 효과적인 방식으로 성장했다. 처음에는 아무 생각이 없던 짐승이었던 카직스의 지능은 그 형태만큼이나 진화했다. 이제 카직스는 사냥 계획을 세우고, 희생양에게 불러 일으킨 공포라는 본능을 자신의 무기로 사용한다.","blurb":"공허는 성장하고, 공허는 적응한다. 무수히 많은 공허 태생 생명체 중 이러한 사실을 카직스보다 더 명백히 보여 주는 생명체는 없다. 공포스러운 돌연변이 생명체 카직스의 심장부는 진화로 성장하며, 살아남아 더 강한 상대를 사냥하기 위한 존재로 자리 잡았다. 카직스의 심장부는 진화하려고 할 때마다 먹이에 대응하고 처치하기 위한 새롭고 효과적인 방식으로 성장했다. 처음에는 아무 생각이 없던 짐승이었던 카직스의 지능은 그 형태만큼이나 진화했다. 이제...","allytips":["- 가까운 범위 내에 아군이 없으면 적은 고립된 것으로 간주됩니다. 이런 적에게는 공포 감지 스킬의 피해량이 대폭 증가합니다.","- 보이지 않는 위협은 카직스가 적 팀의 시야에 노출되지 않을 때 발동됩니다. 수풀에 들어가거나 공허의 습격을 시전하면 보이지 않는 위협이 재발동됩니다. 적 챔피언을 자동 공격할 때는 계속 보이지 않는 위협을 적용해 주세요.","- 카직스는 교전 시점과 위치를 자유자재로 선택할 수 있습니다. 이 점을 잘 활용하면 이길 수 있습니다."],"enemytips":["- 공포 감지는 고립된 대상에게 추가 피해를 입히므로, 아군 미니언이나 챔피언, 포탑 근처에서 싸워야 유리합니다.","- 도약과 공허의 습격은 재사용 대기시간이 깁니다. 두 스킬을 쓸 수 없을 땐 카직스가 매우 취약해집니다."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":9,"defense":4,"magic":3,"difficulty":6},"stats":{"armor":36,"armorperlevel":3,"attackdamage":63,"attackdamageperlevel":3.1,"attackrange":125,"attackspeedoffset":-0.065,"attackspeedperlevel":2.7,"crit":0,"critperlevel":0,"hp":572.8,"hpperlevel":85,"hpregen":7.51,"hpregenperlevel":0.75,"movespeed":350,"mp":327.2,"mpperlevel":40,"mpregen":7.59,"mpregenperlevel":0.5,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"공포 감지","description":"대상에게 물리 피해를 줍니다. <font color='#FFF673'>고립</font>된 대상에게는 피해량이 늘어납니다. <font color='#00DD33'>거대 갈고리 진화</font>를 <font color='#FFF673'>고립</font>된 대상에게 사용 시, 재사용 대기시간이 일부 감소합니다. 또한, 카직스의 기본 공격과 공포 감지 범위도 증가합니다.","sanitizedDescription":"대상에게 물리 피해를 줍니다. 고립된 대상에게는 피해량이 늘어납니다. 거대 갈고리 진화를 고립된 대상에게 사용 시, 재사용 대기시간이 일부 감소합니다. 또한, 카직스의 기본 공격과 공포 감지 범위도 증가합니다.","tooltip":"{{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. <span class=\"colorFFF673\">고립</span>된 대상에게는 피해량이 {{ e2 }}% (<span class=\"colorFF8C00\">{{ f1 }}</span>) 증가합니다.<br /><br /><span class=\"color00DD33\">거대 갈고리 진화:</span> 카직스의 기본 공격과 공포 감지의 범위가 {{ e3 }} 증가합니다. 대상이 <span class=\"colorFFF673\">고립</span>된 경우, 공포 감지의 재사용 대기시간이 {{ e4 }}% 감소합니다.","sanitizedTooltip":"{{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 고립된 대상에게는 피해량이 {{ e2 }}% ({{ f1 }}) 증가합니다. 거대 갈고리 진화: 카직스의 기본 공격과 공포 감지의 범위가 {{ e3 }} 증가합니다. 대상이 고립된 경우, 공포 감지의 재사용 대기시간이 {{ e4 }}% 감소합니다.","leveltip":{"label":["기본 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"KhazixQ.png","sprite":"spell5.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[65,90,115,140,165],[65,65,65,65,65],[50,50,50,50,50],[45,45,45,45,45],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/90/115/140/165","65","50","45","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.1]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"KhazixQ"},{"name":"공허의 가시","description":"카직스가 폭발하는 가시를 발사하여 적중한 적에게 물리 피해를 가합니다. 폭발 범위 안에 있으면 카직스의 체력이 회복됩니다. <font color='#00DD33'>가시 어깨 진화</font>를 선택하면, 공허의 가시 세 개가 원뿔 형태로 발사되며 적중한 적에게 둔화를 걸고 2초 동안 적 챔피언을 드러냅니다. <font color='#FFF673'>고립</font>된 대상에게는 둔화 효과가 증가합니다.","sanitizedDescription":"카직스가 폭발하는 가시를 발사하여 적중한 적에게 물리 피해를 가합니다. 폭발 범위 안에 있으면 카직스의 체력이 회복됩니다. 가시 어깨 진화를 선택하면, 공허의 가시 세 개가 원뿔 형태로 발사되며 적중한 적에게 둔화를 걸고 2초 동안 적 챔피언을 드러냅니다. 고립된 대상에게는 둔화 효과가 증가합니다.","tooltip":"폭발하는 가시를 발사하여 적중한 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. (몬스터에게는 {{ e5 }}%의 추가 피해) 카직스가 폭발 반경 내에 있는 경우 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>만큼 치유됩니다.<br /><br /><span class=\"color00DD33\">가시 어깨 진화:</span> 공허의 가시 세 개가 원뿔 형태로 발사되며, 여기에 맞은 적은 {{ e4 }}초 동안 {{ e3 }}% 느려집니다. 또한 2초 동안 적 챔피언이 드러납니다. <span class=\"colorFFF673\">고립</span>된 대상은 {{ e7 }}% 느려집니다.","sanitizedTooltip":"폭발하는 가시를 발사하여 적중한 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. (몬스터에게는 {{ e5 }}%의 추가 피해) 카직스가 폭발 반경 내에 있는 경우 {{ e2 }} (+{{ a2 }})만큼 치유됩니다. 가시 어깨 진화: 공허의 가시 세 개가 원뿔 형태로 발사되며, 여기에 맞은 적은 {{ e4 }}초 동안 {{ e3 }}% 느려집니다. 또한 2초 동안 적 챔피언이 드러납니다. 고립된 대상은 {{ e7 }}% 느려집니다.","leveltip":{"label":["피해량","치유량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"KhazixW.png","sprite":"spell6.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,60,65,70,75],"costBurn":"55/60/65/70/75","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[85,115,145,175,205],[60,85,110,135,160],[40,40,40,40,40],[2,2,2,2,2],[20,20,20,20,20],[2,2,2,2,2],[80,80,80,80,80],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","85/115/145/175/205","60/85/110/135/160","40","2","20","2","80","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1]},{"key":"a2","link":"spelldamage","coeff":[0.5]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"KhazixW"},{"name":"도약","description":"카직스가 도약하여, 착지할 때 물리 피해를 가합니다. <font color='#00DD33'>날개 진화</font>를 선택하면 도약 범위가 200 증가하며, 킬이나 어시스트를 기록하면 도약의 재사용 대기시간이 초기화됩니다.","sanitizedDescription":"카직스가 도약하여, 착지할 때 물리 피해를 가합니다. 날개 진화를 선택하면 도약 범위가 200 증가하며, 킬이나 어시스트를 기록하면 도약의 재사용 대기시간이 초기화됩니다.","tooltip":"지정한 위치로 도약하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.<br /><br /><span class=\"color00DD33\">날개 진화:</span> 도약의 범위가 200 증가합니다. 킬이나 어시스트를 올리면 도약의 재사용 대기시간이 초기화됩니다.","sanitizedTooltip":"지정한 위치로 도약하여 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 날개 진화: 도약의 범위가 200 증가합니다. 킬이나 어시스트를 올리면 도약의 재사용 대기시간이 초기화됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KhazixE.png","sprite":"spell6.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[20,18,16,14,12],"cooldownBurn":"20/18/16/14/12","effect":[null,[65,100,135,170,205],[30,35,40,45,50],[10,10,10,10,10],[2.5,2.5,2.5,2.5,2.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/100/135/170/205","30/35/40/45/50","10","2.5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.2]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"KhazixE"},{"name":"공허의 습격","description":"카직스의 스킬을 하나 진화시켜 고유한 추가 효과를 부여합니다. 공허의 습격을 활성화하면 카직스가 <font color='#91d7ee'>은신</font> 상태가 되고 보이지 않는 위협이 발동되어, 이동 속도가 증가합니다. <font color='#00DD33'>활성 보호색 진화</font>를 선택하면, 비전투 상태에서 수풀에 새로 진입할 때 기본 지속 효과로 공허의 습격을 얻습니다.","sanitizedDescription":"카직스의 스킬을 하나 진화시켜 고유한 추가 효과를 부여합니다. 공허의 습격을 활성화하면 카직스가 은신 상태가 되고 보이지 않는 위협이 발동되어, 이동 속도가 증가합니다. 활성 보호색 진화를 선택하면, 비전투 상태에서 수풀에 새로 진입할 때 기본 지속 효과로 공허의 습격을 얻습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>공허의 습격 레벨이 오를 때마다 카직스는 스킬 하나를 진화시킬 수 있습니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>{{ e1 }}초 동안 <span class=\"color91d7ee\">은신</span>하면서 보이지 않는 위협을 활성화시킵니다. <span class=\"color91d7ee\">은신</span> 중에는 이동 속도가 {{ e3 }}% 증가하며 유닛 충돌을 무시합니다. 공허의 습격은 {{ e2 }}초 내에 한 번 더 사용할 수 있습니다.<br /><br /><span class=\"color00DD33\">활성 보호색 진화:</span> 카직스가 비전투 상태에서 수풀에 들어가면 {{ e5 }}초간 기본 지속 효과로 공허의 습격을 얻습니다. 해당 효과는 수풀에서 나간 뒤 {{ f1 }}초 동안 지속됩니다. (수풀당 {{ f1 }}초의 재사용 대기시간)<br /><br /><u><span class=\"size16 color91d7ee\">은신 - 투명</span></u><span class=\"size16 colorb3b3b3\">: 근처의 적 포탑 또는 <span class=\"size16 coloree91d7\">절대 시야</span>만이 카직스의 모습을 드러낼 수 있습니다.</span>","sanitizedTooltip":"기본 지속 효과: 공허의 습격 레벨이 오를 때마다 카직스는 스킬 하나를 진화시킬 수 있습니다. 사용 시: {{ e1 }}초 동안 은신하면서 보이지 않는 위협을 활성화시킵니다. 은신 중에는 이동 속도가 {{ e3 }}% 증가하며 유닛 충돌을 무시합니다. 공허의 습격은 {{ e2 }}초 내에 한 번 더 사용할 수 있습니다. 활성 보호색 진화: 카직스가 비전투 상태에서 수풀에 들어가면 {{ e5 }}초간 기본 지속 효과로 공허의 습격을 얻습니다. 해당 효과는 수풀에서 나간 뒤 {{ f1 }}초 동안 지속됩니다. (수풀당 {{ f1 }}초의 재사용 대기시간) 은신 - 투명: 근처의 적 포탑 또는 절대 시야만이 카직스의 모습을 드러낼 수 있습니다.","leveltip":{"label":["진화 가능","재사용 대기시간"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"KhazixR.png","sprite":"spell6.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[1.5,1.5,1.5],[10,10,10],[40,40,40],[1,2,3],[3,3,3],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","1.5","10","40","1/2/3","3","2","0","0","0","0"],"range":[25000,25000,25000],"rangeBurn":"25000","key":"KhazixR"}],"passive":{"name":"보이지 않는 위협","description":"카직스는 적군의 시야에 노출되지 않을 때 보이지 않는 위협 효과를 받아, 다음 기본 공격으로 적 챔피언에게 추가 마법 피해와 둔화를 적용합니다.","sanitizedDescription":"카직스는 적군의 시야에 노출되지 않을 때 보이지 않는 위협 효과를 받아, 다음 기본 공격으로 적 챔피언에게 추가 마법 피해와 둔화를 적용합니다.","image":{"full":"Khazix_P.png","sprite":"passive1.png","group":"passive","x":240,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Khazix","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3004,"count":1},{"id":3071,"count":1},{"id":3022,"count":1},{"id":3036,"count":1}]}]},{"champion":"Khazix","title":"KhazixARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Khazix","title":"KhazixCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1001,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3047,"count":1},{"id":3134,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Khazix","title":"KhazixFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3074,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":2032,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3035,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Khazix","title":"KhazixKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3142,"count":1},{"id":3812,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Khazix","title":"KhazixSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3047,"count":1},{"id":3134,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]}]},{"champion":"Khazix","title":"KhazixSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1001,"count":1},{"id":1053,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3133,"count":1},{"id":2032,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3047,"count":1},{"id":3134,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3047,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Khazix","title":"KhazixTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3057,"count":1},{"id":3134,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1400,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3071,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Khazix","title":"RainbowScytherFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":4},{"id":3342,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3134,"count":1},{"id":3004,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3071,"count":1},{"id":3181,"count":1},{"id":3035,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2004,"count":1},{"id":2044,"count":1}]}]}]},"Olaf":{"id":2,"key":"Olaf","name":"올라프","title":"광전사","image":{"full":"Olaf.png","sprite":"champion2.png","group":"champion","x":0,"y":96,"w":48,"h":48},"skins":[{"id":2000,"name":"default","num":0},{"id":2001,"name":"악에 물든 올라프","num":1},{"id":2002,"name":"빙하의 올라프","num":2},{"id":2003,"name":"올라프 형씨","num":3},{"id":2004,"name":"펜타킬 올라프","num":4},{"id":2005,"name":"습격자 올라프","num":5},{"id":2006,"name":"푸줏간 올라프","num":6},{"id":2015,"name":"SKT T1 올라프","num":15}],"lore":"멈출 수 없는 파괴의 힘으로 도끼를 휘두르는 올라프는 오로지 전투에서 영광스럽게 죽기만을 바랄 뿐이다. 프렐요드의 잔혹한 록파 반도 출신인 올라프는 자신의 평화로운 죽음에 대한 예언을 들었다. 겁쟁이의 운명이자, 고국에서는 엄청난 모욕이 되는 말이다. 분노로 들끓은 올라프는 죽음을 바라며 대륙을 날뛰며 돌아다녔다. 자신을 멈춰 주기를 바라며 위대한 전사와 전설의 야수를 수십, 수백 쓰러뜨렸지만 소용 없었다. 이제 올라프는 얼음발톱 부족의 포악한 집행자가 되어 대전쟁에서 끝을 맞이할 날만을 기다리고 있다.","blurb":"멈출 수 없는 파괴의 힘으로 도끼를 휘두르는 올라프는 오로지 전투에서 영광스럽게 죽기만을 바랄 뿐이다. 프렐요드의 잔혹한 록파 반도 출신인 올라프는 자신의 평화로운 죽음에 대한 예언을 들었다. 겁쟁이의 운명이자, 고국에서는 엄청난 모욕이 되는 말이다. 분노로 들끓은 올라프는 죽음을 바라며 대륙을 날뛰며 돌아다녔다. 자신을 멈춰 주기를 바라며 위대한 전사와 전설의 야수를 수십, 수백 쓰러뜨렸지만 소용 없었다. 이제 올라프는 얼음발톱 부족의 포악한...","allytips":["- 올라프는 광전사의 분노, 광포한 공격, 라그나로크를 함께 사용하여 체력이 낮은 상태에서 적의 허를 찌를 정도로 강해질 수 있습니다.","- 광포한 공격의 추가 치유 효과는 생명력 흡수율을 올려주는 동시에 아군으로부터 받는 치유 효과도 증폭시켜 줍니다."],"enemytips":["- 올라프는 생명력이 낮을수록 위험해집니다. 방해 효과가 있는 스킬을 아끼다가 최후의 순간에 사용하십시오.","- 올라프가 도끼를 다시 줍지 못하게 하면 올라프의 견제력을 약화시킬 수 있습니다.","- 올라프는 라그나로크를 시전하는 중에는 모든 방해 효과에 면역인 대신 피해에 대한 방어력이 낮아집니다. 라그나로크를 쓰는 올라프에게서 달아나기 힘들다면, 아군과 힘을 합쳐 올라프를 집중 공격하세요"],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":9,"defense":5,"magic":3,"difficulty":3},"stats":{"armor":35,"armorperlevel":3,"attackdamage":68,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":-0.1,"attackspeedperlevel":2.7,"crit":0,"critperlevel":0,"hp":597.24,"hpperlevel":93,"hpregen":8.512,"hpregenperlevel":0.9,"movespeed":350,"mp":315.6,"mpperlevel":42,"mpregen":7.466,"mpregenperlevel":0.575,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"역류","description":"올라프가 지정한 곳에 도끼를 던져 맞은 적에게 피해를 입히고 이동 속도를 늦춥니다. 올라프가 도끼를 다시 집으면 이 스킬의 재사용 대기시간이 4.5초 감소합니다.","sanitizedDescription":"올라프가 지정한 곳에 도끼를 던져 맞은 적에게 피해를 입히고 이동 속도를 늦춥니다. 올라프가 도끼를 다시 집으면 이 스킬의 재사용 대기시간이 4.5초 감소합니다.","tooltip":"올라프가 지정한 곳에 도끼를 던져 도끼에 맞은 모든 유닛에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 도끼가 멀리 날아갈수록 둔화 효과의 지속 시간이 길어지지만, 최대 {{ e4 }}초를 넘을 수는 없습니다.<br /><br />올라프가 도끼를 집으면 이 스킬의 재사용 대기시간이 4.5초 감소합니다.","sanitizedTooltip":"올라프가 지정한 곳에 도끼를 던져 도끼에 맞은 모든 유닛에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 도끼가 멀리 날아갈수록 둔화 효과의 지속 시간이 길어지지만, 최대 {{ e4 }}초를 넘을 수는 없습니다. 올라프가 도끼를 집으면 이 스킬의 재사용 대기시간이 4.5초 감소합니다.","leveltip":{"label":["기본 피해량","둔화 %"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"OlafAxeThrowCast.png","sprite":"spell8.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[7,7,7,7,7],"cooldownBurn":"7","effect":[null,[80,125,170,215,260],[29,33,37,41,45],[2.5,2.5,2.5,2.5,2.5],[1.5,1.5,1.5,1.5,1.5],[800,800,800,800,800],[400,400,400,400,400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/125/170/215/260","29/33/37/41/45","2.5","1.5","800","400","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"OlafAxeThrowCast"},{"name":"광포한 공격","description":"올라프의 공격 속도가 상승하며, 잃은 체력에 비례하여 생명력 흡수율이 상승하고 치유량이 상승합니다.","sanitizedDescription":"올라프의 공격 속도가 상승하며, 잃은 체력에 비례하여 생명력 흡수율이 상승하고 치유량이 상승합니다.","tooltip":"6초 동안 올라프의 생명력 흡수율이 {{ e2 }}% 증가하고, 공격 속도가 {{ e1 }}% 상승합니다.<br /><br />이 동안 올라프는 광포한 공격이 활성화됐을 때 잃은 체력의 {{ e3 }}% 당 1%씩 체력 회복 효과가 증가합니다.","sanitizedTooltip":"6초 동안 올라프의 생명력 흡수율이 {{ e2 }}% 증가하고, 공격 속도가 {{ e1 }}% 상승합니다. 이 동안 올라프는 광포한 공격이 활성화됐을 때 잃은 체력의 {{ e3 }}% 당 1%씩 체력 회복 효과가 증가합니다.","leveltip":{"label":["공격 속도","생명력 흡수"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"OlafFrenziedStrikes.png","sprite":"spell8.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[16,16,16,16,16],"cooldownBurn":"16","effect":[null,[40,50,60,70,80],[14,16,18,20,22],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/50/60/70/80","14/16/18/20/22","2","0","0","0","0","0","0","0"],"range":[700,700,700,700,700],"rangeBurn":"700","key":"OlafFrenziedStrikes"},{"name":"무모한 강타","description":"올라프가 강력한 공격을 가하여 자신과 공격 대상에게 고정 피해를 입힙니다. 대상을 파괴한 경우 소모한 체력이 회복됩니다.","sanitizedDescription":"올라프가 강력한 공격을 가하여 자신과 공격 대상에게 고정 피해를 입힙니다. 대상을 파괴한 경우 소모한 체력이 회복됩니다.","tooltip":"올라프가 맹렬한 기세로 도끼를 휘둘러 대상에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 고정 피해를 입힙니다. 이 스킬의 소모값은 가한 총 피해의 {{ e2 }}%에 해당하며, 대상을 처치한 경우 소모값을 되돌려받습니다.<br /><br />기본 공격 시 무모한 강타의 재사용 대기시간이 1초 감소합니다.","sanitizedTooltip":"올라프가 맹렬한 기세로 도끼를 휘둘러 대상에게 {{ e1 }} (+{{ a1 }})의 고정 피해를 입힙니다. 이 스킬의 소모값은 가한 총 피해의 {{ e2 }}%에 해당하며, 대상을 처치한 경우 소모값을 되돌려받습니다. 기본 공격 시 무모한 강타의 재사용 대기시간이 1초 감소합니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"OlafRecklessStrike.png","sprite":"spell8.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"체력  소모","maxrank":5,"cost":[0,0,0,0,0],"costType":"체력  소모","costBurn":"0","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[70,115,160,205,250],[30,30,30,30,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","30","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.4]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"OlafRecklessStrike"},{"name":"라그나로크","description":"올라프가 잠시 동안 이동 방해 효과에 면역이 됩니다.","sanitizedDescription":"올라프가 잠시 동안 이동 방해 효과에 면역이 됩니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>올라프의 방어력이 {{ e1 }}, 마법 저항력이 {{ e1 }} 상승합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>올라프가 자신에게 걸린 모든 방해 효과를 제거하며, 다음 {{ e2 }}초 동안 방해 효과에 면역이 됩니다. 또한, 올라프는 {{ e4 }}초 동안 적 챔피언을 향해 갈 때 이동 속도가 {{ e5 }}% 상승합니다.이 동안 올라프는 라그나로크의 기본 지속 효과를 잃고, 공격력이 {{ e3 }} 증가합니다.","sanitizedTooltip":"기본 지속 효과: 올라프의 방어력이 {{ e1 }}, 마법 저항력이 {{ e1 }} 상승합니다. 사용 시: 올라프가 자신에게 걸린 모든 방해 효과를 제거하며, 다음 {{ e2 }}초 동안 방해 효과에 면역이 됩니다. 또한, 올라프는 {{ e4 }}초 동안 적 챔피언을 향해 갈 때 이동 속도가 {{ e5 }}% 상승합니다.이 동안 올라프는 라그나로크의 기본 지속 효과를 잃고, 공격력이 {{ e3 }} 증가합니다.","leveltip":{"label":["방어력과 마법 저항력","공격력","이동 속도 증가분","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"OlafRagnarok.png","sprite":"spell8.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[20,30,40],[6,6,6],[40,60,80],[1,1,1],[50,60,70],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","20/30/40","6","40/60/80","1","50/60/70","0","0","0","0","0"],"range":[400,400,400],"rangeBurn":"400","key":"OlafRagnarok"}],"passive":{"name":"광전사의 분노","description":"잃은 체력 1%마다 올라프의 공격 속도가 1%씩 증가합니다.","sanitizedDescription":"잃은 체력 1%마다 올라프의 공격 속도가 1%씩 증가합니다.","image":{"full":"Olaf_Passive.png","sprite":"passive2.png","group":"passive","x":0,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Olaf","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1029,"count":1},{"id":3024,"count":1},{"id":3082,"count":1},{"id":3110,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3065,"count":1},{"id":3022,"count":1},{"id":3068,"count":1}]}]},{"champion":"Olaf","title":"OlafARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3800,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Olaf","title":"OlafCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3133,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Olaf","title":"OlafFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3065,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3153,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3800,"count":1},{"id":3110,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":3361,"count":1}]}]},{"champion":"Olaf","title":"OlafKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3800,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Olaf","title":"OlafSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3026,"count":1}]}]},{"champion":"Olaf","title":"OlafSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3044,"count":1},{"id":3067,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3071,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3158,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3026,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Olaf","title":"OlafTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1054,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3071,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"TwistedFate":{"id":4,"key":"TwistedFate","name":"트위스티드 페이트","title":"카드의 달인","image":{"full":"TwistedFate.png","sprite":"champion3.png","group":"champion","x":240,"y":96,"w":48,"h":48},"skins":[{"id":4000,"name":"default","num":0},{"id":4001,"name":"PAX 트위스티드 페이트","num":1},{"id":4002,"name":"하트의 잭 트위스티드 페이트","num":2},{"id":4003,"name":"위대한 트위스티드 페이트","num":3},{"id":4004,"name":"탱고 트위스티드 페이트","num":4},{"id":4005,"name":"하이 눈 트위스티드 페이트","num":5},{"id":4006,"name":"삼총사 트위스티드 페이트","num":6},{"id":4007,"name":"언더월드 트위스티드 페이트","num":7},{"id":4008,"name":"레드카드 트위스티드 페이트","num":8},{"id":4009,"name":"소매치기 트위스티드 페이트","num":9},{"id":4010,"name":"불의 축제 트위스티드 페이트","num":10}],"lore":"트위스티드 페이트는 악명 높은 카드의 달인이자 사기꾼이다. 발로란 어디에서나 도박 실력과 타고난 매력으로 부자와 어리석은 자들에게 감탄과 원한을 한 몸에 샀다. 매사에 진지한 법이 없고, 태평하고 으스대는 얼굴에는 비웃는 듯한 미소가 감돈다. 트위스티드 페이트의 소매에는 늘 비장의 카드가 숨겨져 있으니까.","blurb":"트위스티드 페이트는 악명 높은 카드의 달인이자 사기꾼이다. 발로란 어디에서나 도박 실력과 타고난 매력으로 부자와 어리석은 자들에게 감탄과 원한을 한 몸에 샀다. 매사에 진지한 법이 없고, 태평하고 으스대는 얼굴에는 비웃는 듯한 미소가 감돈다. 트위스티드 페이트의 소매에는 늘 비장의 카드가 숨겨져 있으니까.","allytips":["- 아군과 작전을 짜 운명으로 적을 기습하십시오.","- 은신형 캐릭터는 보통 체력을 많이 잃으면 전장에서 이탈합니다. 운명의 효과로 은신한 챔피언을 찾아 끝장내십시오.","- 트위스티드 페이트는 공격형 또는 주문력 위주 챔피언으로 만들 수 있으므로 팀에서 다양한 역할을 할 수 있습니다."],"enemytips":["- 게임 초반에 챔피언의 최대 체력이 낮다면 와일드 카드 회피에 주력하십시오.","- 체력이 얼마 없다면 운명 표식으로 후퇴할 타이밍을 판단하십시오. 트위스티드 페이트의 운명 스킬에 주의하면 언제 있을지 모를 급습을 미리 피할 수 있습니다."],"tags":["Mage"],"partype":"마나","info":{"attack":6,"defense":2,"magic":6,"difficulty":9},"stats":{"armor":20.542,"armorperlevel":3.15,"attackdamage":49.954,"attackdamageperlevel":3.3,"attackrange":525,"attackspeedoffset":-0.04,"attackspeedperlevel":3.22,"crit":0,"critperlevel":0,"hp":534,"hpperlevel":94,"hpregen":5.508,"hpregenperlevel":0.6,"movespeed":335,"mp":265.84,"mpperlevel":38,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"와일드 카드","description":"트위스티드 페이트는 카드 세 장을 던져 지나가는 카드에 맞은 각 적 유닛에게 피해를 입힙니다.","sanitizedDescription":"트위스티드 페이트는 카드 세 장을 던져 지나가는 카드에 맞은 각 적 유닛에게 피해를 입힙니다.","tooltip":"카드 세 장을 던져 카드에 맞은 각 적에게 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다.","sanitizedTooltip":"카드 세 장을 던져 카드에 맞은 각 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"WildCards.png","sprite":"spell11.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[60,105,150,195,240],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/105/150/195/240","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.65]}],"range":[10000,10000,10000,10000,10000],"rangeBurn":"10000","key":"WildCards"},{"name":"카드 뽑기","description":"트위스티드 페이트가 카드 더미에서 다음 공격에 쓸 마법 카드를 한 장 골라 공격 시 추가 효과를 부여합니다.","sanitizedDescription":"트위스티드 페이트가 카드 더미에서 다음 공격에 쓸 마법 카드를 한 장 골라 공격 시 추가 효과를 부여합니다.","tooltip":"처음 시전하면 덱을 섞고, 다시 시전하면 다음 공격을 강화해줄 카드를 선택합니다.<br /><br /><span class=\"color4455FF\">푸른색 카드</span>는 {{ e1 }} <scaleAD>(+{{ a2 }})</scaleAD> <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 {{ e6 }}의 마나를 회복시켜줍니다.<br /><br /><span class=\"colorFF2222\">붉은색 카드</span>는 공격 대상 주변에 있는 적에게 {{ e4 }} <scaleAD>(+{{ a2 }})</scaleAD> <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 2.5초 동안 이동 속도를 {{ e2 }}% 늦춥니다.<br /><br /><span class=\"colorFFD700\">황금색 카드</span>는 {{ e5 }}<scaleAD> (+{{ a2 }})</scaleAD> <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 {{ e3 }}초 동안 적을 기절시킵니다.","sanitizedTooltip":"처음 시전하면 덱을 섞고, 다시 시전하면 다음 공격을 강화해줄 카드를 선택합니다. 푸른색 카드는 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입히고 {{ e6 }}의 마나를 회복시켜줍니다. 붉은색 카드는 공격 대상 주변에 있는 적에게 {{ e4 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입히고 2.5초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 황금색 카드는 {{ e5 }} (+{{ a2 }}) (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 적을 기절시킵니다.","leveltip":{"label":["푸른색 카드 피해량","푸른색 카드 마나 회복량","붉은색 카드 피해량","붉은색 카드 둔화 %","황금색 카드 피해량","황금색 카드 기절 지속 시간","마나 소모량"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ e6 }} -> {{ e6NL }}","{{ e4 }} -> {{ e4NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e5 }} -> {{ e5NL }}","{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"PickACard.png","sprite":"spell12.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,55,70,85,100],"costBurn":"40/55/70/85/100","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[40,60,80,100,120],[30,35,40,45,50],[1,1.25,1.5,1.75,2],[30,45,60,75,90],[15,22.5,30,37.5,45],[50,75,100,125,150],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/60/80/100/120","30/35/40/45/50","1/1.25/1.5/1.75/2","30/45/60/75/90","15/22.5/30/37.5/45","50/75/100/125/150","0","0","0","0"],"vars":[{"key":"a2","link":"attackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"attackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"attackdamage","coeff":[1]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[200,200,200,200,200],"rangeBurn":"200","key":"PickACard"},{"name":"속임수 덱","description":"4번째 공격마다 트위스티드 페이트가 추가 피해를 입힙니다. 또한 공격 속도가 올라갑니다.","sanitizedDescription":"4번째 공격마다 트위스티드 페이트가 추가 피해를 입힙니다. 또한 공격 속도가 올라갑니다.","tooltip":"<spellPassive>기본 지속 효과:</spellPassive> 트위스티드 페이트가 매 4번째 공격마다 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 추가 마법 피해를 입힙니다.<br /><br />또한 공격 속도가 {{ e3 }}% 증가합니다.","sanitizedTooltip":"기본 지속 효과: 트위스티드 페이트가 매 4번째 공격마다 {{ e1 }} (+{{ a1 }})의 추가 마법 피해를 입힙니다. 또한 공격 속도가 {{ e3 }}% 증가합니다.","leveltip":{"label":["추가 피해량","공격 속도 증가율"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"CardmasterStack.png","sprite":"spell12.png","group":"spell","x":48,"y":0,"w":48,"h":48},"maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[55,80,105,130,155],[0,0,0,0,0],[10,15,20,25,30],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/80/105/130/155","0","10/15/20/25/30","4","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[0,0,0,0,0],"rangeBurn":"0","key":"CardmasterStack"},{"name":"운명","description":"트위스티드 페이트가 적의 미래를 점치면서 모든 적 챔피언의 위치를 탐지해내고, 어디든지 이동할 수 있는 관문 스킬을 1.5초 동안 사용할 수 있게 됩니다.","sanitizedDescription":"트위스티드 페이트가 적의 미래를 점치면서 모든 적 챔피언의 위치를 탐지해내고, 어디든지 이동할 수 있는 관문 스킬을 1.5초 동안 사용할 수 있게 됩니다.","tooltip":"{{ e1 }}초 동안 맵에 있는 모든 적 챔피언에 대한 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다.<br /><br />운명을 사용하는 동안, 트위스티드 페이트는 1.5초 내에 최대 {{ e4 }}의 거리만큼 순간이동할 수 있습니다.","sanitizedTooltip":"{{ e1 }}초 동안 맵에 있는 모든 적 챔피언에 대한 절대 시야를 얻습니다. 운명을 사용하는 동안, 트위스티드 페이트는 1.5초 내에 최대 {{ e4 }}의 거리만큼 순간이동할 수 있습니다.","leveltip":{"label":["지속 시간","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"Destiny.png","sprite":"spell12.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[150,125,100],"costBurn":"150/125/100","cooldown":[180,150,120],"cooldownBurn":"180/150/120","effect":[null,[6,8,10],[180,150,120],[150,125,100],[5500,5500,5500],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","6/8/10","180/150/120","150/125/100","5500","0","0","0","0","0","0"],"range":[5500,5500,5500],"rangeBurn":"5500","key":"Destiny"}],"passive":{"name":"사기 주사위","description":"트위스티드 페이트는 유닛을 하나 처치할 때마다 '행운의' 주사위를 굴려 1에서 6까지의 골드를 추가로 얻습니다.","sanitizedDescription":"트위스티드 페이트는 유닛을 하나 처치할 때마다 '행운의' 주사위를 굴려 1에서 6까지의 골드를 추가로 얻습니다.","image":{"full":"Cardmaster_SealFate.png","sprite":"passive3.png","group":"passive","x":240,"y":96,"w":48,"h":48}},"recommended":[{"champion":"TwistedFate","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3100,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3102,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3057,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3030,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3057,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3165,"count":1},{"id":3174,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3158,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3030,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3057,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3030,"count":1},{"id":3165,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"TwistedFate","title":"TwistedFateTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Nunu":{"id":20,"key":"Nunu","name":"누누","title":"설인 기수","image":{"full":"Nunu.png","sprite":"champion2.png","group":"champion","x":432,"y":48,"w":48,"h":48},"skins":[{"id":20000,"name":"default","num":0},{"id":20001,"name":"바야바 누누","num":1},{"id":20002,"name":"산타작업실 누누","num":2},{"id":20003,"name":"세서미 스트리트 누누","num":3},{"id":20004,"name":"누누 봇","num":4},{"id":20005,"name":"공성병 누누","num":5},{"id":20006,"name":"TPA 누누","num":6},{"id":20007,"name":"좀비 누누","num":7}],"lore":"누누와 윌럼프는 프렐요드의 언덕을 즐겁게 뛰노는 둘도 없는 단짝 친구이지만, 많은 여행자는 어떤 남자 아이가 겁도 없이 설인의 등에 매달려 있는 것을 보았다고 말할 것이다. 누누가 윌럼프의 짐승 같은 흉포함을 길들였을 지 몰라도, 윌럼프의 분노는 엄청난 굶주림 탓에 계속 남아있다. 어떤 이는 누누와 윌럼프를 갈라놓으려고 했지만, 어떤 결속보다도 강한 우정을 자랑하는 둘은 거친 함께 모험의 길을 재촉한다.","blurb":"누누와 윌럼프는 프렐요드의 언덕을 즐겁게 뛰노는 둘도 없는 단짝 친구이지만, 많은 여행자는 어떤 남자 아이가 겁도 없이 설인의 등에 매달려 있는 것을 보았다고 말할 것이다. 누누가 윌럼프의 짐승 같은 흉포함을 길들였을 지 몰라도, 윌럼프의 분노는 엄청난 굶주림 탓에 계속 남아있다. 어떤 이는 누누와 윌럼프를 갈라놓으려고 했지만, 어떤 결속보다도 강한 우정을 자랑하는 둘은 거친 함께 모험의 길을 재촉한다.","allytips":["- 누누는 잡아먹기를 이용하여 공격로에서 원거리 공격형 적을 만나도 버틸 수 있습니다.","- 절대 영도 사용 시 적이 범위에서 벗어나려 하면 기술 사용을 중단할 수 있습니다.","- 절대 영도는 서로 방해 스킬을 다 쓸 때까지 기다렸다 사용하십시오. 팀 전투 시 바로 뛰어들지 말고 뒤에서 대기하십시오."],"enemytips":["- 누누의 끓어오르는 피는 목표가 전투에서 도망치도록 하므로 끓어오르는 피에 걸린 목표는 속박하거나 기절시키십시오.","- 절대 영도가 완전히 시전되지 않게 방해하면 아군이 입는 피해도 줄일 수 있습니다.","- 점멸 주문을 사용하면 절대 영도에서 탈출할 수 있습니다.","- 주문 보호막을 부술 수 있는 단일 대상 스킬이 하나뿐이므로, 누누를 상대할 때는 밴시의 장막이 효과적입니다."],"tags":["Support","Fighter"],"partype":"마나","info":{"attack":4,"defense":6,"magic":7,"difficulty":4},"stats":{"armor":28,"armorperlevel":3.5,"attackdamage":67,"attackdamageperlevel":4,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.25,"crit":0,"critperlevel":0,"hp":590,"hpperlevel":90,"hpregen":5,"hpregenperlevel":0.8,"movespeed":345,"mp":283.56,"mpperlevel":42,"mpregen":7.44,"mpregenperlevel":0.5,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"잡아먹기","description":"누누가 대상 미니언 또는 몬스터를 물어뜯어 큰 피해를 입히도록 설인에게 명령을 내립니다. 스킬 사용 후 누누는 체력을 회복합니다.","sanitizedDescription":"누누가 대상 미니언 또는 몬스터를 물어뜯어 큰 피해를 입히도록 설인에게 명령을 내립니다. 스킬 사용 후 누누는 체력을 회복합니다.","tooltip":"누누가 설인에게 미니언이나 몬스터를 물어뜯도록 시켜 {{ e1 }}의 고정 피해를 입히고 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 체력을 회복합니다.<br /><br /><span class=\"colorFF9900\">기본 지속 효과 -</span><span class=\"color33FF33\"> 설인 밥 먹이기</span>: 대형 몬스터 혹은 에픽 몬스터를 잡아먹을 때마다 다음 <span class=\"colorFFFFFF\">{{ f5 }}</span>초 동안 누누의 크기가 커지고 최대 체력이 추가로 {{ e0 }}% 증가하며 전투 중이 아닐 때 이동 속도가 {{ e9 }} 상승합니다. (최대 {{ e6 }}회 중첩)<br /><br /><span class=\"colorDDDD77\">최근 잡아먹은 몬스터를 또 잡아먹을 경우 추가 효과를 받을 수 없습니다. (재사용 대기시간 {{ e5 }}초)</span>","sanitizedTooltip":"누누가 설인에게 미니언이나 몬스터를 물어뜯도록 시켜 {{ e1 }}의 고정 피해를 입히고 {{ e2 }} (+{{ a1 }})의 체력을 회복합니다. 기본 지속 효과 - 설인 밥 먹이기: 대형 몬스터 혹은 에픽 몬스터를 잡아먹을 때마다 다음 {{ f5 }}초 동안 누누의 크기가 커지고 최대 체력이 추가로 {{ e0 }}% 증가하며 전투 중이 아닐 때 이동 속도가 {{ e9 }} 상승합니다. (최대 {{ e6 }}회 중첩) 최근 잡아먹은 몬스터를 또 잡아먹을 경우 추가 효과를 받을 수 없습니다. (재사용 대기시간 {{ e5 }}초)","leveltip":{"label":["피해량","체력 회복","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Consume.png","sprite":"spell8.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[340,500,660,820,980],[50,100,150,200,250],[120,150,180,210,240],[0,0,0,0,0],[60,60,60,60,60],[5,5,5,5,5],[5,5,5,5,5],[50,50,50,50,50],[10,10,10,10,10],[0.02,0.02,0.02,0.02,0.02]],"effectBurn":["","340/500/660/820/980","50/100/150/200/250","120/150/180/210/240","0","60","5","5","50","10","0.02"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[125,125,125,125,125],"rangeBurn":"125","key":"Consume"},{"name":"끓어오르는 피","description":"누누가 자신과 대상 아군 유닛의 피를 끓어오르게 하여 공격 속도와 이동 속도를 상승시킵니다.","sanitizedDescription":"누누가 자신과 대상 아군 유닛의 피를 끓어오르게 하여 공격 속도와 이동 속도를 상승시킵니다.","tooltip":"누누 자신과 대상 아군 유닛의 피를 끓어오르게 해서 {{ e3 }}초 동안 이동 속도가 {{ e2 }}%, 공격 속도가 {{ e1 }}% 상승합니다.<br /><br />누누가 자신을 대상으로 지정하면 끓어오르는 피가 가장 가까이 있는 아군 챔피언에게 적용됩니다.","sanitizedTooltip":"누누 자신과 대상 아군 유닛의 피를 끓어오르게 해서 {{ e3 }}초 동안 이동 속도가 {{ e2 }}%, 공격 속도가 {{ e1 }}% 상승합니다. 누누가 자신을 대상으로 지정하면 끓어오르는 피가 가장 가까이 있는 아군 챔피언에게 적용됩니다.","leveltip":{"label":["공격 속도","이동 속도"],"effect":["{{ e1 }}% -> {{ e1NL }}%"," {{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"BloodBoil.png","sprite":"spell8.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[25,30,35,40,45],[8,9,10,11,12],[12,12,12,12,12],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","25/30/35/40/45","8/9/10/11/12","12","0","0","0","0","0","0","0"],"range":[700,700,700,700,700],"rangeBurn":"700","key":"BloodBoil"},{"name":"얼음 덩어리","description":"누누가 적 유닛에게 얼음 공을 던져 피해를 주고, 잠깐 동안 적의 공격 속도와 이동 속도를 늦춥니다.","sanitizedDescription":"누누가 적 유닛에게 얼음 공을 던져 피해를 주고, 잠깐 동안 적의 공격 속도와 이동 속도를 늦춥니다.","tooltip":"누누가 적에게 얼음 덩어리를 던져 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e4 }}초 동안 이동 속도를 {{ e2 }}%, 공격 속도를 {{ e3 }}% 늦춥니다.","sanitizedTooltip":"누누가 적에게 얼음 덩어리를 던져 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e4 }}초 동안 이동 속도를 {{ e2 }}%, 공격 속도를 {{ e3 }}% 늦춥니다.","leveltip":{"label":["피해량","이동 속도 둔화","재사용 대기시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"IceBlast.png","sprite":"spell8.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[6,5.5,5,4.5,4],"cooldownBurn":"6/5.5/5/4.5/4","effect":[null,[80,120,160,200,240],[40,45,50,55,60],[25,25,25,25,25],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","40/45/50/55/60","25","2","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[550,550,550,550,550],"rangeBurn":"550","key":"IceBlast"},{"name":"절대 영도","description":"누누가 주변 지역 열기를 제거하여 주변 적의 이동 속도를 늦춥니다. 절대 영도 스킬 시전이 끝날 때 해당 지역에 있던 모든 적에게 큰 피해를 입힙니다.","sanitizedDescription":"누누가 주변 지역 열기를 제거하여 주변 적의 이동 속도를 늦춥니다. 절대 영도 스킬 시전이 끝날 때 해당 지역에 있던 모든 적에게 큰 피해를 입힙니다.","tooltip":"누누가 {{ e4 }}초 동안 정신을 집중하며 주변 열기를 빨아들입니다. 근처 적들은 이동 속도가 {{ e2 }}%, 공격 속도가 {{ e3 }}% 감소합니다. 정신을 집중하는 동안 이동 속도 감소량은 {{ e6 }}%까지 늘어납니다.<br /><br />정신 집중이 끝나면 근처에 있던 적은 최대 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입습니다. 정신 집중 시간이 길면 길수록 더 큰 피해를 받습니다.<br />(최소 피해량: <span class=\"color99FF99\">{{ f2 }}</span>)","sanitizedTooltip":"누누가 {{ e4 }}초 동안 정신을 집중하며 주변 열기를 빨아들입니다. 근처 적들은 이동 속도가 {{ e2 }}%, 공격 속도가 {{ e3 }}% 감소합니다. 정신을 집중하는 동안 이동 속도 감소량은 {{ e6 }}%까지 늘어납니다. 정신 집중이 끝나면 근처에 있던 적은 최대 {{ e1 }} (+{{ a1 }})의 마법 피해를 입습니다. 정신 집중 시간이 길면 길수록 더 큰 피해를 받습니다. (최소 피해량: {{ f2 }})","leveltip":{"label":["최대 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AbsoluteZero.png","sprite":"spell8.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,100,90],"cooldownBurn":"110/100/90","effect":[null,[625,875,1125],[50,50,50],[25,25,25],[3,3,3],[3,3,3],[95,95,95],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","625/875/1125","50","25","3","3","95","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[2.5]}],"range":[650,650,650],"rangeBurn":"650","key":"AbsoluteZero"}],"passive":{"name":"선지자","description":"누누가 적을 5번 공격하고 나면 스킬 하나가 다음 단계로 강화되고 마나 소모 없이 시전할 수 있습니다.","sanitizedDescription":"누누가 적을 5번 공격하고 나면 스킬 하나가 다음 단계로 강화되고 마나 소모 없이 시전할 수 있습니다.","image":{"full":"Nunu_Passive.png","sprite":"passive2.png","group":"passive","x":432,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Nunu","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3068,"count":1},{"id":3065,"count":1},{"id":3110,"count":1},{"id":3001,"count":1}]}]},{"champion":"Nunu","title":"NunuARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3065,"count":1},{"id":3009,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3001,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nunu","title":"NunuCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3024,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3026,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nunu","title":"NunuFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3027,"count":1},{"id":3001,"count":1},{"id":3025,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3047,"count":1},{"id":3110,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3109,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3025,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nunu","title":"NunuKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3065,"count":1},{"id":3009,"count":1},{"id":3110,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3109,"count":1},{"id":3143,"count":1},{"id":3800,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nunu","title":"NunuSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3026,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3151,"count":1}]}]},{"champion":"Nunu","title":"NunuSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3024,"count":1},{"id":3067,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3152,"count":1},{"id":3151,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3047,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3742,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2138,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nunu","title":"NunuTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3060,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Rengar":{"id":107,"key":"Rengar","name":"렝가","title":"추적하는 사자","image":{"full":"Rengar.png","sprite":"champion3.png","group":"champion","x":0,"y":0,"w":48,"h":48},"skins":[{"id":107000,"name":"default","num":0},{"id":107001,"name":"인간사냥꾼 렝가","num":1},{"id":107002,"name":"암흑 사냥꾼 렝가","num":2},{"id":107003,"name":"삼성 화이트 렝가","num":3},{"id":107008,"name":"메카 렝가","num":8}],"lore":"포악한 기질의 렝가는 바스타야 종족으로, 난폭하고 사나운 생명체를 추적하고 처치하는 순간의 짜릿한 전율을 삶의 낙으로 여기는 전리품 수집가다. 그는 강하고 무시무시한 괴물을 사냥하기 위해 온 세상을 샅샅이 뒤진다. 그중에서도 그가 가장 찾고자 하는 사냥감은 그의 한쪽 눈을 앗아간 공허의 약탈자 카직스다. 렝가가 사냥을 하는 이유는 굶주린 배를 채우기 위함도, 영광을 누리기 위함도 아니다. 그는 사냥 그 자체의 즐거움을 만끽하기 위해 오늘도 먹잇감을 찾아 나선다.","blurb":"포악한 기질의 렝가는 바스타야 종족으로, 난폭하고 사나운 생명체를 추적하고 처치하는 순간의 짜릿한 전율을 삶의 낙으로 여기는 전리품 수집가다. 그는 강하고 무시무시한 괴물을 사냥하기 위해 온 세상을 샅샅이 뒤진다. 그중에서도 그가 가장 찾고자 하는 사냥감은 그의 한쪽 눈을 앗아간 공허의 약탈자 카직스다. 렝가가 사냥을 하는 이유는 굶주린 배를 채우기 위함도, 영광을 누리기 위함도 아니다. 그는 사냥 그 자체의 즐거움을 만끽하기 위해 오늘도 먹잇감을...","allytips":["- 렝가의 궁극기는 팀간 전투나 소규모 교전에서 1순위 제거 대상을 찾아내 암살하는 데 사용하세요.","- 렝가의 효율은 강화된 스킬을 상황에 맞춰 사용하는 데에서 결정됩니다. 잘 선택해 강화하세요!","- 적을 추적할 때는 반드시 수풀을 통과하여, 기본 지속 효과를 최대한 활용하세요."],"enemytips":["- 렝가는 야성 게이지가 가득 차면 강화된 스킬을 사용하므로, 야성 게이지가 낮을 때 맞서 싸우세요.","- 기본 지속 효과로 인해 렝가는 수풀 속에서 도약 공격을 할 수 있습니다. 수풀 근처에서는 가능한 한 교전을 피하는 것이 좋습니다.","- 렝가는 궁극기로 위장 상태에 들어갔을 때는 가장 가까운 적 챔피언의 위치를 확인할 수 있습니다."],"tags":["Assassin","Fighter"],"partype":"흉포","info":{"attack":7,"defense":4,"magic":2,"difficulty":8},"stats":{"armor":34,"armorperlevel":3,"attackdamage":68,"attackdamageperlevel":1.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":586.2,"hpperlevel":90,"hpregen":7,"hpregenperlevel":0.5,"movespeed":345,"mp":4,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"포악함","description":"렝가가 전방의 반원 범위에 있는 적을 베고 직선 상의 적을 꿰뚫는 일격을 가합니다. 최대 사거리 밖에서 사용하면 렝가가 해당 방향으로 조금 이동합니다.<br><br>야성 효과: 피해량이 증가합니다.","sanitizedDescription":"렝가가 전방의 반원 범위에 있는 적을 베고 직선 상의 적을 꿰뚫는 일격을 가합니다. 최대 사거리 밖에서 사용하면 렝가가 해당 방향으로 조금 이동합니다. 야성 효과: 피해량이 증가합니다.","tooltip":"전방의 반원 범위에 있는 적을 베고 직선의 적을 모두 꿰뚫어 적중할 때마다 {{ e1 }} <span class=\"colorF88017\">(+{{ f2 }})</span>의 물리 피해를 입힙니다.<br /><br /><span class=\"colorEDDA74\">야성 효과:</span><br />적중할 때마다 <span class=\"colorFFFFFF\">{{ f1 }}</span> <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">최대 사거리 밖에서 사용하면 렝가가 전방으로 도약하며 꿰뚫는 공격의 길이가 늘어납니다.<br />도약 중에 사용하면 도약이 끝난 후 바로 시전됩니다.</span></rules>","sanitizedTooltip":"전방의 반원 범위에 있는 적을 베고 직선의 적을 모두 꿰뚫어 적중할 때마다 {{ e1 }} (+{{ f2 }})의 물리 피해를 입힙니다. 야성 효과: 적중할 때마다 {{ f1 }} (+{{ a2 }})의 피해를 입힙니다. 최대 사거리 밖에서 사용하면 렝가가 전방으로 도약하며 꿰뚫는 공격의 길이가 늘어납니다. 도약 중에 사용하면 도약이 끝난 후 바로 시전됩니다.","leveltip":{"label":["기본 피해량","추가 공격력 비율"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e7 }} -> {{ e7NL }}"]},"image":{"full":"RengarQ.png","sprite":"spell9.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"야성 1회 중첩","maxrank":5,"cost":[0,0,0,0,0],"costType":"야성 1회 중첩","costBurn":"0","cooldown":[0.25,0.25,0.25,0.25,0.25],"cooldownBurn":"0.25","effect":[null,[30,50,70,90,110],[0.3,0.3,0.3,0.3,0.3],[350,350,350,350,350],[90,90,90,90,90],[150,150,150,150,150],[0.15,0.15,0.15,0.15,0.15],[0.2,0.3,0.4,0.5,0.6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","0.3","350","90","150","0.15","0.2/0.3/0.4/0.5/0.6","0","0","0"],"vars":[{"key":"f1","link":"@dynamic.attackdamage","coeff":[1]},{"key":"a2","link":"bonusattackdamage","coeff":[1.1]}],"range":[450,450,450,450,450],"rangeBurn":"450","key":"RengarQ"},{"name":"전투의 포효","description":"렝가가 전투의 포효를 내질러 적에게 피해를 입히고 지난 몇 초 동안 입은 피해의 일부를 회복합니다.<br><br>야성 효과: 모든 군중 제어 효과를 없앱니다.","sanitizedDescription":"렝가가 전투의 포효를 내질러 적에게 피해를 입히고 지난 몇 초 동안 입은 피해의 일부를 회복합니다. 야성 효과: 모든 군중 제어 효과를 없앱니다.","tooltip":"근처의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 지난 {{ e3 }}초 동안 입은 피해의 {{ e2 }}%를 회복합니다.<br /><br /><span class=\"colorEDDA74\">야성 효과: </span><br />기본 효과 외에 추가로 모든 군중 제어 효과를 없애고 <span class=\"colorFFFFFF\">{{ f1 }}</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">몬스터에게 입은 피해를 회복할 때는 회복량이 {{ e5 }}% 증가합니다.</span></rules>","sanitizedTooltip":"근처의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 지난 {{ e3 }}초 동안 입은 피해의 {{ e2 }}%를 회복합니다. 야성 효과: 기본 효과 외에 추가로 모든 군중 제어 효과를 없애고 {{ f1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 몬스터에게 입은 피해를 회복할 때는 회복량이 {{ e5 }}% 증가합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ ammorechargetime }} -> {{ ammorechargetimeNL }}"]},"image":{"full":"RengarW.png","sprite":"spell9.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"야성 1회 중첩","maxrank":5,"cost":[0,0,0,0,0],"costType":"야성 1회 중첩","costBurn":"0","cooldown":[0.25,0.25,0.25,0.25,0.25],"cooldownBurn":"0.25","effect":[null,[50,80,110,140,170],[50,50,50,50,50],[1.5,1.5,1.5,1.5,1.5],[1.5,1.5,1.5,1.5,1.5],[50,50,50,50,50],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/80/110/140/170","50","1.5","1.5","50","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]},{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[450,450,450,450,450],"rangeBurn":"450","key":"RengarW"},{"name":"올가미 투척","description":"렝가가 올가미를 투척하여, 처음 맞은 대상에게 짧은 시간 동안 둔화를 겁니다.<br><br>야성 효과: 대상을 제자리에 묶습니다.","sanitizedDescription":"렝가가 올가미를 투척하여, 처음 맞은 대상에게 짧은 시간 동안 둔화를 겁니다. 야성 효과: 대상을 제자리에 묶습니다.","tooltip":"올가미를 던져 {{ e1 }}<span class=\"colorF88017\"> (+{{ a1 }})</span>의 물리 피해를 입히고 처음으로 맞힌 적을 {{ e3 }}초 동안 {{ e2 }}% 둔화시킵니다.<br /><br /><span class=\"colorEDDA74\">야성 효과:</span><br /> <span class=\"colorFFFFFF\">{{ f1 }}</span> <span class=\"colorF88017\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e4 }}초 동안 대상을 제자리에 묶습니다.","sanitizedTooltip":"올가미를 던져 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 처음으로 맞힌 적을 {{ e3 }}초 동안 {{ e2 }}% 둔화시킵니다. 야성 효과: {{ f1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e4 }}초 동안 대상을 제자리에 묶습니다.","leveltip":{"label":["피해량","둔화"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"RengarE.png","sprite":"spell9.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"야성 1회 중첩","maxrank":5,"cost":[0,0,0,0,0],"costType":"야성 1회 중첩","costBurn":"0","cooldown":[0.25,0.25,0.25,0.25,0.25],"cooldownBurn":"0.25","effect":[null,[55,100,145,190,235],[30,45,60,75,90],[1.75,1.75,1.75,1.75,1.75],[1.75,1.75,1.75,1.75,1.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/100/145/190/235","30/45/60/75/90","1.75","1.75","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.7]},{"key":"a1","link":"bonusattackdamage","coeff":[0.7]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"RengarE"},{"name":"사냥의 전율","description":"렝가가 맹수의 본능을 발동해 <font color='#cd90ee'>위장</font> 상태가 되고 일정 범위 내에서 가장 가까이에 있는 적을 드러내 확인할 수 있습니다. 사냥의 전율이 활성화된 동안에는 이동 속도가 빨라지고 확인한 적에게 도약할 수 있으며, 수풀에 있지 않아도 첫 번째 공격은 치명타로 적중합니다.","sanitizedDescription":"렝가가 맹수의 본능을 발동해 위장 상태가 되고 일정 범위 내에서 가장 가까이에 있는 적을 드러내 확인할 수 있습니다. 사냥의 전율이 활성화된 동안에는 이동 속도가 빨라지고 확인한 적에게 도약할 수 있으며, 수풀에 있지 않아도 첫 번째 공격은 치명타로 적중합니다.","tooltip":"{{ e2 }}초 동안 렝가의 이동 속도가 {{ e1 }}% 증가하고 {{ e3 }} 사거리 안의 가장 가까운 적 챔피언에 대한 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다.<br /><br />궁극기 사용 후 {{ e6 }}초가 지나면 렝가는 <span class=\"colorcd90ee\">위장</span> 상태가 되어 수풀에 있지 않아도 적에게 도약할 수 있습니다. 가장 가까이 있는 적에게 도약 시 치명타로 적중합니다.<br /><br /><rules><span class=\"color8c8c8c\">기본 공격 및 대부분의 스킬 사용 시 사냥의 전율 효과가 종료됩니다.</span><br /><span class=\"colorcd90ee\"><u>은신 - 위장:</u></span> <span class=\"color8c8c8c\">이 챔피언은 시야에서 사라졌습니다. 적 챔피언이나 포탑에 가까이 가면 모습이 드러납니다.</span></rules>","sanitizedTooltip":"{{ e2 }}초 동안 렝가의 이동 속도가 {{ e1 }}% 증가하고 {{ e3 }} 사거리 안의 가장 가까운 적 챔피언에 대한 절대 시야를 얻습니다. 궁극기 사용 후 {{ e6 }}초가 지나면 렝가는 위장 상태가 되어 수풀에 있지 않아도 적에게 도약할 수 있습니다. 가장 가까이 있는 적에게 도약 시 치명타로 적중합니다. 기본 공격 및 대부분의 스킬 사용 시 사냥의 전율 효과가 종료됩니다. 은신 - 위장: 이 챔피언은 시야에서 사라졌습니다. 적 챔피언이나 포탑에 가까이 가면 모습이 드러납니다.","leveltip":{"label":["지속 시간","감지 사거리","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"RengarR.png","sprite":"spell9.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[130,100,70],"cooldownBurn":"130/100/70","effect":[null,[40,40,40],[12,16,20],[2000,3000,4000],[750,750,750],[725,725,725],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","40","12/16/20","2000/3000/4000","750","725","2","0","0","0","0"],"range":[2000,3000,4000],"rangeBurn":"2000/3000/4000","key":"RengarR"}],"passive":{"name":"보이지 않는 포식자","description":"수풀에서 기본 공격을 사용하면 대상에게 도약합니다.<br><br><font color='#EDDA74'>렝가가 스킬을 사용하면 야성 중첩이 쌓입니다. 중첩이 최대치에 도달하면 다음 스킬 공격이 강화되며, 강화된 스킬 사용 시 렝가의 이동 속도가 빨라집니다. 전투에서 떠나면 야성 중첩을 모두 잃습니다.<br><br>적 챔피언을 처치하면 뼈이빨 목걸이에 걸 전리품을 얻고, 영구적으로 공격력이 증가합니다.</font>","sanitizedDescription":"수풀에서 기본 공격을 사용하면 대상에게 도약합니다. 렝가가 스킬을 사용하면 야성 중첩이 쌓입니다. 중첩이 최대치에 도달하면 다음 스킬 공격이 강화되며, 강화된 스킬 사용 시 렝가의 이동 속도가 빨라집니다. 전투에서 떠나면 야성 중첩을 모두 잃습니다. 적 챔피언을 처치하면 뼈이빨 목걸이에 걸 전리품을 얻고, 영구적으로 공격력이 증가합니다.","image":{"full":"Rengar_P.png","sprite":"passive3.png","group":"passive","x":0,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Rengar","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3071,"count":1},{"id":3068,"count":1},{"id":3074,"count":1}]}]},{"champion":"Rengar","title":"RengarARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3031,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3022,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Rengar","title":"RengarCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1001,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3147,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Rengar","title":"RengarFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3077,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3031,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3814,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3117,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3031,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3156,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2140,"count":1}]}]},{"champion":"Rengar","title":"RengarKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3134,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3147,"count":1},{"id":3031,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3022,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Rengar","title":"RengarSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3147,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]}]},{"champion":"Rengar","title":"RengarSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1001,"count":1},{"id":3133,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3147,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":1001,"count":1},{"id":3133,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3158,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3147,"count":1},{"id":3031,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3814,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2140,"count":1}]}]},{"champion":"Rengar","title":"RengarTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3111,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3142,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3156,"count":1},{"id":3033,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3053,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2140,"count":1}]}]}]},"Bard":{"id":432,"key":"Bard","name":"바드","title":"영겁의 수호자","image":{"full":"Bard.png","sprite":"champion0.png","group":"champion","x":0,"y":48,"w":48,"h":48},"skins":[{"id":432000,"name":"default","num":0},{"id":432001,"name":"나무정령 바드","num":1},{"id":432005,"name":"눈싸움 달인 바드","num":5},{"id":432006,"name":"음유시인 바드","num":6}],"lore":"별 너머에서 온 여행자 바드는 혼돈의 무관심과 생명의 균형을 유지하기 위해 싸우는 행운의 대리인이다. 많은 룬테라인은 그의 신비로운 본질을 탐구하는 노래를 부르며, 이 우주의 방랑자가 강력한 마법 유물에 끌린다는 데 동의한다. 유익한 영혼들의 기쁨 어린 메아리에 둘러싸인 바드의 행동을 악의로 착각하기는 불가능하다. 바드는 언제나 자신만의 기이한 방식으로 더 위대한 선을 섬긴다.","blurb":"별 너머에서 온 여행자 바드는 혼돈의 무관심과 생명의 균형을 유지하기 위해 싸우는 행운의 대리인이다. 많은 룬테라인은 그의 신비로운 본질을 탐구하는 노래를 부르며, 이 우주의 방랑자가 강력한 마법 유물에 끌린다는 데 동의한다. 유익한 영혼들의 기쁨 어린 메아리에 둘러싸인 바드의 행동을 악의로 착각하기는 불가능하다. 바드는 언제나 자신만의 기이한 방식으로 더 위대한 선을 섬긴다.","allytips":["- 고대의 종을 모아서 정령 공격을 강화하는 것도 중요하지만, 공격로 파트너를 너무 혼자 둬도 안 됩니다! 신비한 차원문으로 통로를 만들어서 아군을 더 데리고 공격로로 돌아오는 것도 좋겠군요.","- 수호자의 성소는 설치한 후 충전될 시간을 주세요. 완전히 충전됐을 때 체력이 훨씬 더 많이 회복됩니다.","- 주의하세요. 신비한 차원문은 적군도 이용할 수 있고, 궁극기는 아군도 함께 정지시킵니다!"],"enemytips":["- 바드의 상대 팀 챔피언도 신비한 차원문으로 이동할 수 있습니다. 안전할 것 같으면 바드를 따라 차원문에 뛰어드세요.","- 바드의 체력 회복 성소는 살짝 밟기만 하면 파괴됩니다. 바드의 팀원들이 손쉽게 체력을 회복하도록 두지 마세요.","- 바드의 궁극기 운명의 소용돌이는 아군, 적군,몬스터, 포탑 모두에게 영향을 미칩니다. 때에 따라 일부러 스킬 범위 안으로 뛰어드는 게 더 유리할 수도 있습니다!"],"tags":["Support","Mage"],"partype":"마나","info":{"attack":4,"defense":4,"magic":5,"difficulty":9},"stats":{"armor":34,"armorperlevel":4,"attackdamage":52,"attackdamageperlevel":3,"attackrange":500,"attackspeedoffset":0,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":535,"hpperlevel":89,"hpregen":7.5,"hpregenperlevel":0.55,"movespeed":330,"mp":350,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.45,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"우주의 결속","description":"바드가 투사체를 발사하여, 처음 적중하는 적을 둔화시키고 관통합니다. 관통한 후 벽을 맞히면 처음 적중한 적을 기절시킵니다. 관통 후 다른 적에게 적중하면 두 대상을 모두 기절시킵니다.","sanitizedDescription":"바드가 투사체를 발사하여, 처음 적중하는 적을 둔화시키고 관통합니다. 관통한 후 벽을 맞히면 처음 적중한 적을 기절시킵니다. 관통 후 다른 적에게 적중하면 두 대상을 모두 기절시킵니다.","tooltip":"바드가 에너지 줄기를 직선으로 발사해 적중하는 대상 하나 또는 둘에게 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 마법 피해를 입힙니다. 처음 적중한 대상은 {{ e4 }}초간 {{ e3 }}% 둔화됩니다.<br /><br />광선이 두 번째 대상이나 벽을 맞히면 적중당한 모든 적이 {{ e2 }}초간 기절합니다.<br />","sanitizedTooltip":"바드가 에너지 줄기를 직선으로 발사해 적중하는 대상 하나 또는 둘에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 처음 적중한 대상은 {{ e4 }}초간 {{ e3 }}% 둔화됩니다. 광선이 두 번째 대상이나 벽을 맞히면 적중당한 모든 적이 {{ e2 }}초간 기절합니다.","leveltip":{"label":["피해량","둔화 지속 시간","기절 지속 시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BardQ.png","sprite":"spell1.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[11,10,9,8,7],"cooldownBurn":"11/10/9/8/7","effect":[null,[80,125,170,215,260],[1,1.2,1.4,1.6,1.8],[60,60,60,60,60],[1,1.2,1.4,1.6,1.8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/125/170/215/260","1/1.2/1.4/1.6/1.8","60","1/1.2/1.4/1.6/1.8","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.65]}],"range":[25000,25000,25000,25000,25000],"rangeBurn":"25000","key":"BardQ"},{"name":"수호자의 성소","description":"짧은 시간 동안 치유력이 증가하는 체력 성소를 드러냅니다. 성소는 처음 발을 들이는 아군을 치유한 후 사라집니다.","sanitizedDescription":"짧은 시간 동안 치유력이 증가하는 체력 성소를 드러냅니다. 성소는 처음 발을 들이는 아군을 치유한 후 사라집니다.","tooltip":"바드가 체력 회복 성소를 세웁니다. 성소는 나타난 직후엔 {{ e5 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 체력을 회복시키지만, 10초간 강화되면서 회복량이 최대 {{ e6 }} <span class=\"color99FF99\">(+{{ a2 }})</span>까지 증가합니다. 또한, 성소는 이동 속도를 {{ e1 }}% 높여주며, 이 효과는 {{ e2 }}초에 걸쳐 점차 감소합니다.<br /><br />바드는 동시에 최대 {{ e3 }}개까지 성소를 세울 수 있으며, 성소는 아군이 방문하거나 적 챔피언이 파괴하면 사라집니다.<br /><br /><span class=\"colorFFCC00\">활성화된 성소: </span><span class=\"colorFFFFFF\">{{ f1 }}</span> / <span class=\"colorFFCC00\">{{ f2 }}</span></mainText><br />","sanitizedTooltip":"바드가 체력 회복 성소를 세웁니다. 성소는 나타난 직후엔 {{ e5 }} (+{{ a1 }})의 체력을 회복시키지만, 10초간 강화되면서 회복량이 최대 {{ e6 }} (+{{ a2 }})까지 증가합니다. 또한, 성소는 이동 속도를 {{ e1 }}% 높여주며, 이 효과는 {{ e2 }}초에 걸쳐 점차 감소합니다. 바드는 동시에 최대 {{ e3 }}개까지 성소를 세울 수 있으며, 성소는 아군이 방문하거나 적 챔피언이 파괴하면 사라집니다. 활성화된 성소: {{ f1 }} / {{ f2 }}","leveltip":{"label":["기본 회복량","최대 회복량"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ e6 }} -> {{ e6NL }}"]},"image":{"full":"BardW.png","sprite":"spell1.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[90,90,90,90,90],"costBurn":"90","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[50,50,50,50,50],[1.5,1.5,1.5,1.5,1.5],[3,3,3,3,3],[0,0,0,0,0],[30,60,90,120,150],[70,110,150,190,230],[0,0,0,0,0],[10,10,10,10,10],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50","1.5","3","0","30/60/90/120/150","70/110/150/190/230","0","10","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"BardW"},{"name":"신비한 차원문","description":"바드가 근처 지형지물에 차원문을 엽니다. 아군과 적 챔피언이 모두 이 차원문을 이용해 정해진 방향으로 해당 지형지물을 통과할 수 있습니다.","sanitizedDescription":"바드가 근처 지형지물에 차원문을 엽니다. 아군과 적 챔피언이 모두 이 차원문을 이용해 정해진 방향으로 해당 지형지물을 통과할 수 있습니다.","tooltip":"바드가 근처 지형지물을 통과하는 일방 통행 차원문을 엽니다. 적과 아군 모두 입구 근처에서 통로 아무 곳이나 클릭하면 출구로 이동할 수 있으며, 이 때 아군이 적보다 {{ e2 }}% 빠르게 이동합니다.<br /><br />통로는 {{ e1 }}초가 지나면 사라집니다.<br />","sanitizedTooltip":"바드가 근처 지형지물을 통과하는 일방 통행 차원문을 엽니다. 적과 아군 모두 입구 근처에서 통로 아무 곳이나 클릭하면 출구로 이동할 수 있으며, 이 때 아군이 적보다 {{ e2 }}% 빠르게 이동합니다. 통로는 {{ e1 }}초가 지나면 사라집니다.","leveltip":{"label":["재사용 대기시간","아군 통과 시 가속"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"BardE.png","sprite":"spell1.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[10,10,10,10,10],[10,20,30,40,50],[800,800,800,800,800],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10","10/20/30/40/50","800","0","0","0","0","0","0","0"],"range":[900,900,900,900,900],"rangeBurn":"900","key":"BardE"},{"name":"운명의 소용돌이","description":"바드가 목표 지점에 영적 에너지를 발사하여 잠시 동안 모든 유닛과 포탑을 정지시킵니다.","sanitizedDescription":"바드가 목표 지점에 영적 에너지를 발사하여 잠시 동안 모든 유닛과 포탑을 정지시킵니다.","tooltip":"바드가 대상 지점을 향해 포물선을 그리며 날아가는 신비한 에너지를 발사합니다. 지면에 떨어지면 범위 안의 모든 챔피언, 미니언, 몬스터, 포탑이 정지 상태가 되어 {{ e1 }}초간 대상으로 지정할 수 없고, 무적이 되는 대신 어떤 행동도 할 수 없는 상태가 됩니다.<br /><br />일반적인 상태 이상 효과가 통하지 않는 에픽 몬스터들도 이 스킬의 영향은 받습니다.","sanitizedTooltip":"바드가 대상 지점을 향해 포물선을 그리며 날아가는 신비한 에너지를 발사합니다. 지면에 떨어지면 범위 안의 모든 챔피언, 미니언, 몬스터, 포탑이 정지 상태가 되어 {{ e1 }}초간 대상으로 지정할 수 없고, 무적이 되는 대신 어떤 행동도 할 수 없는 상태가 됩니다. 일반적인 상태 이상 효과가 통하지 않는 에픽 몬스터들도 이 스킬의 영향은 받습니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BardR.png","sprite":"spell1.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[130,115,90],"cooldownBurn":"130/115/90","effect":[null,[2.5,2.5,2.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","2.5","0","0","0","0","0","0","0","0","0"],"range":[3400,3400,3400],"rangeBurn":"3400","key":"BardR"}],"passive":{"name":"방랑자의 부름","description":"바드가 있으면 전장에 성스러운 고대의 종이 나타납니다. 이 종을 획득하면 경험치, 마나가 증가하고 잠시 동안 이동 속도가 크게 증가합니다. 또한, 하급 정령들이 바드를 따라다니며 공격을 돕습니다. 고대의 종을 획득하면 정령들이 영구적으로 더 강력해집니다.","sanitizedDescription":"바드가 있으면 전장에 성스러운 고대의 종이 나타납니다. 이 종을 획득하면 경험치, 마나가 증가하고 잠시 동안 이동 속도가 크게 증가합니다. 또한, 하급 정령들이 바드를 따라다니며 공격을 돕습니다. 고대의 종을 획득하면 정령들이 영구적으로 더 강력해집니다.","image":{"full":"Bard_Passive.png","sprite":"passive0.png","group":"passive","x":0,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Bard","title":"BardARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3152,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3742,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Bard","title":"BardCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3098,"count":1},{"id":1001,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3117,"count":1},{"id":2045,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"support","recMath":false,"items":[{"id":3222,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Bard","title":"BardFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":2},{"id":3340,"count":1},{"id":3303,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":2049,"count":1},{"id":3117,"count":1},{"id":3098,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"support","recMath":false,"items":[{"id":3222,"count":1},{"id":3105,"count":1},{"id":3050,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Bard","title":"BardKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3028,"count":1},{"id":3303,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3020,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3092,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3190,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Bard","title":"BardSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3117,"count":1},{"id":2045,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"support","recMath":false,"items":[{"id":3222,"count":1},{"id":3109,"count":1},{"id":3190,"count":1}]}]},{"champion":"Bard","title":"BardSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3098,"count":1},{"id":1001,"count":1},{"id":2049,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3117,"count":1},{"id":2045,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3110,"count":1},{"id":3001,"count":1}]},{"type":"support","recMath":false,"items":[{"id":3107,"count":1},{"id":3109,"count":1},{"id":3222,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Bard","title":"BardTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3190,"count":1},{"id":3050,"count":1},{"id":3117,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Irelia":{"id":39,"key":"Irelia","name":"이렐리아","title":"칼날의 의지","image":{"full":"Irelia.png","sprite":"champion1.png","group":"champion","x":432,"y":0,"w":48,"h":48},"skins":[{"id":39000,"name":"default","num":0},{"id":39001,"name":"암흑검 이렐리아","num":1},{"id":39002,"name":"조종사 이렐리아","num":2},{"id":39003,"name":"잠입자 이렐리아","num":3},{"id":39004,"name":"서리검 이렐리아","num":4},{"id":39005,"name":"연꽃 수도회 이렐리아","num":5}],"lore":"녹서스 지배 하의 음지에서 자란 이렐리아는 아이오니아에서도 매우 독특하면서도 치명적인 전투 스타일을 개발했다. 가족이 거의 다 녹서스 침략자의 손에 목숨을 잃었지만 이렐리아는 살아남았고, 정신을 집중해 검을 날아다니게 하는 법을 배웠다. 이렐리아는 저항군의 격렬함의 상징이 되어 조국을 침략하려는 모든 폭군을 물리칠 준비를 하고 있다.","blurb":"녹서스 지배 하의 음지에서 자란 이렐리아는 아이오니아에서도 매우 독특하면서도 치명적인 전투 스타일을 개발했다. 가족이 거의 다 녹서스 침략자의 손에 목숨을 잃었지만 이렐리아는 살아남았고, 정신을 집중해 검을 날아다니게 하는 법을 배웠다. 이렐리아는 저항군의 격렬함의 상징이 되어 조국을 침략하려는 모든 폭군을 물리칠 준비를 하고 있다.","allytips":["- 칼날 쇄도를 체력이 낮은 미니언에게 사용하면 멀리 떨어져 있는 적 챔피언에게 빠르게 다가갈 수 있습니다.","- 초월의 검은 되도록 중요한 순간까지 아껴두십시오.","- 균형의 일격은 패색이 짙은 싸움에서 전황을 뒤엎을 때 유용합니다."],"enemytips":["- 균형의 일격에 주의하세요. 현재 체력 비율이 이렐리아의 체력 비율보다 높을 경우 기절 효과를 받을 수 있습니다.","- 이렐리아는 칼날 쇄도로 체력이 낮은 대상에게 신속하게 접근할 수 있습니다. (칼날 쇄도로 대상을 제거하면 재사용 대기시간이 초기화됩니다.)"],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":7,"defense":4,"magic":5,"difficulty":5},"stats":{"armor":34,"armorperlevel":3.75,"attackdamage":70,"attackdamageperlevel":3.3,"attackrange":125,"attackspeedoffset":-0.06,"attackspeedperlevel":3.2,"crit":0,"critperlevel":0,"hp":607.2,"hpperlevel":90,"hpregen":8.592,"hpregenperlevel":0.65,"movespeed":345,"mp":338.8,"mpperlevel":32,"mpregen":8.1,"mpregenperlevel":0.65,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"칼날 쇄도","description":"이렐리아가 적에게 돌격합니다. 대상이 쓰러질 경우 칼날 쇄도의 재사용 대기시간이 초기화되며 사용한 마나의 일부를 돌려받습니다.","sanitizedDescription":"이렐리아가 적에게 돌격합니다. 대상이 쓰러질 경우 칼날 쇄도의 재사용 대기시간이 초기화되며 사용한 마나의 일부를 돌려받습니다.","tooltip":"이렐리아가 대상에게 돌진하여 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 적중 시 발동 효과를 적용합니다.<br /><br />칼날 쇄도로 대상을 처치하면 재사용 대기시간이 초기화되고 {{ e2 }}의 마나를 얻습니다.","sanitizedTooltip":"이렐리아가 대상에게 돌진하여 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 적중 시 발동 효과를 적용합니다. 칼날 쇄도로 대상을 처치하면 재사용 대기시간이 초기화되고 {{ e2 }}의 마나를 얻습니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"IreliaGatotsu.png","sprite":"spell4.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[14,12,10,8,6],"cooldownBurn":"14/12/10/8/6","effect":[null,[20,50,80,110,140],[35,35,35,35,35],[1400,1400,1400,1400,1400],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/50/80/110/140","35","1400","0","0","0","0","0","0","0"],"range":[650,650,650,650,650],"rangeBurn":"650","key":"IreliaGatotsu"},{"name":"비천어검류","description":"이렐리아가 비천어검류에 능숙해져 물리 공격 시마다 체력을 회복합니다. 비천어검류를 사용할 경우 이렐리아는 체력 재생률이 두 배가 되며 기본 공격 시 고정 피해를 가합니다.","sanitizedDescription":"이렐리아가 비천어검류에 능숙해져 물리 공격 시마다 체력을 회복합니다. 비천어검류를 사용할 경우 이렐리아는 체력 재생률이 두 배가 되며 기본 공격 시 고정 피해를 가합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 기본 공격 시 {{ e1 }}의 체력을 회복합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> {{ e3 }}초 동안 기본 공격 시 {{ e2 }}의 고정 피해를 주고 비천어검류로 인한 체력 회복량이 두 배로 증가합니다.","sanitizedTooltip":"기본 지속 효과: 기본 공격 시 {{ e1 }}의 체력을 회복합니다. 사용 시: {{ e3 }}초 동안 기본 공격 시 {{ e2 }}의 고정 피해를 주고 비천어검류로 인한 체력 회복량이 두 배로 증가합니다.","leveltip":{"label":["체력 회복","고정 피해"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }} -> {{ e2NL }}"]},"image":{"full":"IreliaHitenStyle.png","sprite":"spell4.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[15,15,15,15,15],"cooldownBurn":"15","effect":[null,[5,7,9,11,13],[15,30,45,60,75],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/7/9/11/13","15/30/45/60/75","6","0","0","0","0","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"IreliaHitenStyle"},{"name":"균형의 일격","description":"이렐리아가 적에게 완벽한 균형의 공격을 가하여 피해를 입히고 대상의 속도를 늦춥니다. 대상의 남은 체력 %가 이렐리아보다 높을 경우 대상은 느려지는 대신 기절합니다.","sanitizedDescription":"이렐리아가 적에게 완벽한 균형의 공격을 가하여 피해를 입히고 대상의 속도를 늦춥니다. 대상의 남은 체력 %가 이렐리아보다 높을 경우 대상은 느려지는 대신 기절합니다.","tooltip":"이렐리아가 적을 검으로 관통하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 적의 이동 속도를 {{ e3 }}% 늦춥니다.<br /><br />대상의 체력 %가 이렐리아 이상인 경우에는 적을 기절시킵니다.","sanitizedTooltip":"이렐리아가 적을 검으로 관통하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 적의 이동 속도를 {{ e3 }}% 늦춥니다. 대상의 체력 %가 이렐리아 이상인 경우에는 적을 기절시킵니다.","leveltip":{"label":["피해량","방해 효과 지속 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ e2 }} -> {{ e2NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"IreliaEquilibriumStrike.png","sprite":"spell4.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[80,120,160,200,240],[1,1.25,1.5,1.75,2],[60,60,60,60,60],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","1/1.25/1.5/1.75/2","60","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"IreliaEquilibriumStrike"},{"name":"초월의 검","description":"이렐리아가 적을 관통하는 4개의 영혼검을 소환하여 던집니다. 검에 맞은 적들의 체력을 흡수하고 물리 피해를 입힙니다.","sanitizedDescription":"이렐리아가 적을 관통하는 4개의 영혼검을 소환하여 던집니다. 검에 맞은 적들의 체력을 흡수하고 물리 피해를 입힙니다.","tooltip":"이렐리아가 4개의 영혼검을 소환하여 검이 관통하는 적들에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 줍니다. 이렐리아는 챔피언에게 준 피해의 {{ e3 }}%만큼 체력을 회복합니다. (미니언과 몬스터 상대로는 {{ e4 }}%)","sanitizedTooltip":"이렐리아가 4개의 영혼검을 소환하여 검이 관통하는 적들에게 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 물리 피해를 줍니다. 이렐리아는 챔피언에게 준 피해의 {{ e3 }}%만큼 체력을 회복합니다. (미니언과 몬스터 상대로는 {{ e4 }}%)","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"IreliaTranscendentBlades.png","sprite":"spell4.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,80,60],"cooldownBurn":"100/80/60","effect":[null,[80,120,160],[10,10,10],[25,25,25],[10,10,10],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","80/120/160","10","25","10","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.7]},{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[1000,1000,1000],"rangeBurn":"1000","key":"IreliaTranscendentBlades"}],"passive":{"name":"아이오니아의 열정","description":"주변에 있는 적의 수에 따라 이렐리아에 대한 방해 효과의 지속시간이 감소합니다. 아군과 적의 수가 동일할 경우에는 방해 효과의 지속시간이 약간 감소하고, 적이 더 많을 경우에는 크게 감소합니다.","sanitizedDescription":"주변에 있는 적의 수에 따라 이렐리아에 대한 방해 효과의 지속시간이 감소합니다. 아군과 적의 수가 동일할 경우에는 방해 효과의 지속시간이 약간 감소하고, 적이 더 많을 경우에는 크게 감소합니다.","image":{"full":"Irelia_IonianFervor.png","sprite":"passive1.png","group":"passive","x":432,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Irelia","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":3340,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":3340,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3110,"count":1}]}]},{"champion":"Irelia","title":"IreliaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Irelia","title":"IreliaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3026,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Irelia","title":"IreliaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Irelia","title":"IreliaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3153,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Irelia","title":"IreliaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3026,"count":1},{"id":3102,"count":1}]}]},{"champion":"Irelia","title":"IreliaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":1001,"count":1},{"id":3044,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1419,"count":1},{"id":3047,"count":1},{"id":3078,"count":1},{"id":3742,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3143,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3026,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Irelia","title":"IreliaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":3086,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3748,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3751,"count":1},{"id":1001,"count":1},{"id":3706,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3111,"count":1},{"id":3044,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Ivern":{"id":427,"key":"Ivern","name":"아이번","title":"자연의 아버지","image":{"full":"Ivern.png","sprite":"champion1.png","group":"champion","x":0,"y":48,"w":48,"h":48},"skins":[{"id":427000,"name":"default","num":0},{"id":427001,"name":"새콤달콤 아이번","num":1}],"lore":"자연의 아버지로 잘 알려진 아이번 브램블풋은 룬테라 전역의 숲을 돌아다니며 생명을 가꾼다. 반은 인간, 반은 나무의 형상을 한 그는 자연의 비밀을 속속들이 알고 있을 뿐 아니라 땅에서 자라고, 하늘을 날고, 초원을 달리는 모든 것과 깊은 친분을 맺고 있다. 아이번은 자연 속에서 만나는 모든 이에게 자신만의 지혜를 나누어 주고, 숲을 풍성하게 가꾸며, 때로는 입이 가벼운 나비들에게 비밀을 맡기기도 한다.","blurb":"자연의 아버지로 잘 알려진 아이번 브램블풋은 룬테라 전역의 숲을 돌아다니며 생명을 가꾼다. 반은 인간, 반은 나무의 형상을 한 그는 자연의 비밀을 속속들이 알고 있을 뿐 아니라 땅에서 자라고, 하늘을 날고, 초원을 달리는 모든 것과 깊은 친분을 맺고 있다. 아이번은 자연 속에서 만나는 모든 이에게 자신만의 지혜를 나누어 주고, 숲을 풍성하게 가꾸며, 때로는 입이 가벼운 나비들에게 비밀을 맡기기도 한다.","allytips":["- 덩굴뿌리를 이용해 적에게 다가간 아군에게는 보호의 씨앗으로 호응해 주세요!","- 나중에 아군이 기습 공격을 할 것을 대비해 미리 수풀 가꾸기를 사용해 두세요.","- 데이지는 적의 스킬 공격을 막고 둔화시킬 수 있습니다. 아군 대신 데이지가 공격당할 수 있게 해 보세요."],"enemytips":["- 아이번은 일부러 허술해 보이는 플레이를 할 수 있습니다. 너무 멀리 추격하지는 마세요.","- 아이번의 수풀은 지속시간이 깁니다. 기습 공격을 조심하세요.","- 혼자서 아이번을 상대할 때는 특별히 주의해야 합니다. 언제 데이지가 나타날지 모르니까요!"],"tags":["Support","Mage"],"partype":"마나","info":{"attack":3,"defense":5,"magic":7,"difficulty":7},"stats":{"armor":27,"armorperlevel":3.5,"attackdamage":50,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":-0.03,"attackspeedperlevel":3.4,"crit":0,"critperlevel":0,"hp":585,"hpperlevel":95,"hpregen":6.9,"hpregenperlevel":0.85,"movespeed":325,"mp":450,"mpperlevel":60,"mpregen":6,"mpregenperlevel":0.75,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"덩굴뿌리","description":"아이번이 덩굴뿌리를 던져 적중한 적을 속박하고 피해를 입힙니다. 아군은 속박된 대상에게 돌진할 수 있습니다.","sanitizedDescription":"아이번이 덩굴뿌리를 던져 적중한 적을 속박하고 피해를 입힙니다. 아군은 속박된 대상에게 돌진할 수 있습니다.","tooltip":"아이번이 덩굴뿌리를 던져 {{ e5 }} <span class=\"color99FF99\">(+{{ f1 }})</span>의 마법 피해를 입히고 처음으로 적중한 적을 {{ e1 }}초 동안 속박합니다. 아군이 속박된 적을 클릭하면 공격 사거리 안으로 돌진할 수 있습니다.","sanitizedTooltip":"아이번이 덩굴뿌리를 던져 {{ e5 }} (+{{ f1 }})의 마법 피해를 입히고 처음으로 적중한 적을 {{ e1 }}초 동안 속박합니다. 아군이 속박된 적을 클릭하면 공격 사거리 안으로 돌진할 수 있습니다.","leveltip":{"label":["속박 지속 시간","피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"IvernQ.png","sprite":"spell4.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[1.2,1.4,1.6,1.8,2],[15,20,25,30,35],[26,23,20,17,14],[2,2,2,2,2],[80,125,170,215,260],[40,55,70,85,100],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.2/1.4/1.6/1.8/2","15/20/25/30/35","26/23/20/17/14","2","80/125/170/215/260","40/55/70/85/100","0","0","0","0"],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"IvernQ"},{"name":"수풀 가꾸기","description":"아이번이 수풀 속에 있으면 기본 공격 시 사거리가 증가하고 추가 마법 피해를 입힙니다. 이 스킬을 사용하면 수풀을 심을 수 있습니다.","sanitizedDescription":"아이번이 수풀 속에 있으면 기본 공격 시 사거리가 증가하고 추가 마법 피해를 입힙니다. 이 스킬을 사용하면 수풀을 심을 수 있습니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 아이번이 수풀 속에 있으면 기본 공격 시 사거리가 증가하고 {{ e5 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 추가 마법 피해를 입힙니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 아이번이 {{ e1 }}초 동안 유지되는 수풀을 심습니다. 3초 동안 수풀 안과 주변의 시야가 밝혀집니다.","sanitizedTooltip":"기본 지속 효과: 아이번이 수풀 속에 있으면 기본 공격 시 사거리가 증가하고 {{ e5 }} (+{{ f2 }})의 추가 마법 피해를 입힙니다. 사용 시: 아이번이 {{ e1 }}초 동안 유지되는 수풀을 심습니다. 3초 동안 수풀 안과 주변의 시야가 밝혀집니다.","leveltip":{"label":["추가 마법 피해량","수풀 재충전"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ e4 }} -> {{ e4NL }}"]},"image":{"full":"IvernW.png","sprite":"spell4.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[0.5,0.5,0.5,0.5,0.5],"cooldownBurn":"0.5","effect":[null,[30,30,30,30,30],[90,90,90,90,90],[190,190,190,190,190],[40,36,32,28,24],[20,30,40,50,60],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30","90","190","40/36/32/28/24","20/30/40/50/60","0","0","0","0","0"],"range":[850,850,850,850,850],"rangeBurn":"850","key":"IvernW"},{"name":"보호의 씨앗","description":"아이번이 아군에게 보호막을 씌웁니다. 보호막은 잠시 후 폭발하며 적에게 피해를 입히고 둔화시킵니다.","sanitizedDescription":"아이번이 아군에게 보호막을 씌웁니다. 보호막은 잠시 후 폭발하며 적에게 피해를 입히고 둔화시킵니다.","tooltip":"아이번이 아군에게 최대 {{ e1 }} <span class=\"color99FF99\">(+{{ f3 }})</span>의 피해를 흡수하는 보호막을 씌웁니다. 보호막은 2초 후 폭발하며 적에게 {{ e2 }} <span class=\"color99FF99\">(+{{ f4 }})</span>의 마법 피해를 입히고 {{ e4 }}초간 {{ e3 }}% 둔화시킵니다.<br /><br /><rules><span class=\"colorFFFF00\">데이지에게도 사용할 수 있습니다.</span></rules>","sanitizedTooltip":"아이번이 아군에게 최대 {{ e1 }} (+{{ f3 }})의 피해를 흡수하는 보호막을 씌웁니다. 보호막은 2초 후 폭발하며 적에게 {{ e2 }} (+{{ f4 }})의 마법 피해를 입히고 {{ e4 }}초간 {{ e3 }}% 둔화시킵니다. 데이지에게도 사용할 수 있습니다.","leveltip":{"label":["보호막","피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"IvernE.png","sprite":"spell4.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[75,110,145,180,215],[60,80,100,120,140],[40,45,50,55,60],[2,2,2,2,2],[1,1,1,1,1],[80,120,160,200,240],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/110/145/180/215","60/80/100/120/140","40/45/50/55/60","2","1","80/120/160/200/240","0","0","0","0"],"range":[750,750,750,750,750],"rangeBurn":"750","key":"IvernE"},{"name":"데이지!","description":"아이번이 파수꾼 친구 데이지를 소환해 함께 싸우도록 합니다. 데이지는 같은 챔피언을 연속으로 세 번 공격하면 충격파를 사용합니다.","sanitizedDescription":"아이번이 파수꾼 친구 데이지를 소환해 함께 싸우도록 합니다. 데이지는 같은 챔피언을 연속으로 세 번 공격하면 충격파를 사용합니다.","tooltip":"아이번이 {{ f6 }}초 동안 파수꾼 친구 데이지를 소환합니다. 데이지는 같은 챔피언을 연속으로 세 번 공격하면 충격파를 사용해 적을 1초간 공중에 띄웁니다. (재사용 대기시간 3초) 데이지 능력치<li>체력: {{ e1 }} <span class=\"color99FF99\">(+{{ f1 }})</span><br />방어력 및 마법 저항력: {{ e2 }} <span class=\"color99FF99\">(+{{ f2 }})</span><br />공격력: {{ f4 }} <span class=\"color99FF99\">(+{{ f3 }})</span></li><br /><rules><span class=\"colorFFFF00\">이 스킬을 다시 사용하면 데이지를 직접 조종할 수 있습니다.","sanitizedTooltip":"아이번이 {{ f6 }}초 동안 파수꾼 친구 데이지를 소환합니다. 데이지는 같은 챔피언을 연속으로 세 번 공격하면 충격파를 사용해 적을 1초간 공중에 띄웁니다. (재사용 대기시간 3초) 데이지 능력치 체력: {{ e1 }} (+{{ f1 }}) 방어력 및 마법 저항력: {{ e2 }} (+{{ f2 }}) 공격력: {{ f4 }} (+{{ f3 }}) 이 스킬을 다시 사용하면 데이지를 직접 조종할 수 있습니다.","leveltip":{"label":["재사용 대기시간","데이지 기본 체력","데이지 기본 방어력 및 마법 저항력","데이지 추가 공격 속도"],"effect":["{{ e6 }} -> {{ e6NL }}","{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"IvernR.png","sprite":"spell4.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[160,140,120],"cooldownBurn":"160/140/120","effect":[null,[1250,2500,3750],[15,40,90],[30,50,70],[30,60,130],[25,25,25],[160,140,120],[40,40,40],[25,25,25],[5,5,5],[0.05,0.05,0.05]],"effectBurn":["","1250/2500/3750","15/40/90","30/50/70","30/60/130","25","160/140/120","40","25","5","0.05"],"range":[25000,25000,25000],"rangeBurn":"25000","key":"IvernR"}],"passive":{"name":"숲의 친구","description":"아이번은 에픽 몬스터가 아닌 몬스터와는 서로 공격할 수 없지만, 대신 정글 캠프에 마법의 덤불을 심을 수 있습니다. 덤불은 시간이 지나면서 점점 자라나고, 완전히 자라난 후 클릭하면 몬스터가 풀려나며 아이번은 골드와 경험치를 얻게 됩니다. 5레벨 이상부터는 정글 몬스터가 주는 이로운 효과를 아군과 공유할 수 있습니다.","sanitizedDescription":"아이번은 에픽 몬스터가 아닌 몬스터와는 서로 공격할 수 없지만, 대신 정글 캠프에 마법의 덤불을 심을 수 있습니다. 덤불은 시간이 지나면서 점점 자라나고, 완전히 자라난 후 클릭하면 몬스터가 풀려나며 아이번은 골드와 경험치를 얻게 됩니다. 5레벨 이상부터는 정글 몬스터가 주는 이로운 효과를 아군과 공유할 수 있습니다.","image":{"full":"IvernP.png","sprite":"passive1.png","group":"passive","x":0,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Ivern","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1004,"count":2},{"id":3114,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3158,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3114,"count":1},{"id":3801,"count":1},{"id":3107,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3190,"count":1},{"id":3174,"count":1},{"id":3504,"count":1},{"id":3109,"count":1}]}]},{"champion":"Ivern","title":"IvernARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3107,"count":1},{"id":3029,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3065,"count":1},{"id":3109,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3504,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ivern","title":"IvernCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3024,"count":1},{"id":3158,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3105,"count":1},{"id":3050,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3116,"count":1},{"id":3152,"count":1},{"id":3001,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3190,"count":1},{"id":3504,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ivern","title":"IvernFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3027,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3056,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3117,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3190,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3027,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ivern","title":"IvernKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3107,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3065,"count":1},{"id":3109,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3504,"count":1},{"id":3800,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Ivern","title":"IvernSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1001,"count":1},{"id":3069,"count":1},{"id":3105,"count":1},{"id":3050,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3116,"count":1},{"id":3152,"count":1},{"id":3001,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3190,"count":1},{"id":3504,"count":1},{"id":3109,"count":1}]}]},{"champion":"Ivern","title":"IvernSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3301,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3024,"count":1},{"id":3158,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3158,"count":1},{"id":3028,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3069,"count":1},{"id":3105,"count":1},{"id":3050,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1410,"count":1},{"id":3174,"count":1},{"id":3107,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3116,"count":1},{"id":3152,"count":1},{"id":3102,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3190,"count":1},{"id":3504,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ivern","title":"IvernTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3027,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3025,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1413,"count":1},{"id":3111,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3025,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"MonkeyKing":{"id":62,"key":"MonkeyKing","name":"오공","title":"원숭이 왕","image":{"full":"MonkeyKing.png","sprite":"champion2.png","group":"champion","x":48,"y":48,"w":48,"h":48},"skins":[{"id":62000,"name":"default","num":0},{"id":62001,"name":"불원숭이 오공","num":1},{"id":62002,"name":"제천대성 오공","num":2},{"id":62003,"name":"수룡 오공","num":3},{"id":62004,"name":"언더월드 오공","num":4},{"id":62005,"name":"찬란한 오공","num":5}],"lore":"오공은 바스타야로, 자신의 뛰어난 힘, 민첩성과 지혜로 상대방을 혼란에 빠뜨려 유리한 고지를 차지하는 악동이다. 마스터 이로 알려진 평생지기를 찾은 뒤, 오공은 우주류로 알려진 고대 무술의 마지막 제자가 되었다. 마법봉으로 무장한 오공은 아이오니아의 파멸을 막고자 한다.","blurb":"오공은 바스타야로, 자신의 뛰어난 힘, 민첩성과 지혜로 상대방을 혼란에 빠뜨려 유리한 고지를 차지하는 악동이다. 마스터 이로 알려진 평생지기를 찾은 뒤, 오공은 우주류로 알려진 고대 무술의 마지막 제자가 되었다. 마법봉으로 무장한 오공은 아이오니아의 파멸을 막고자 한다.","allytips":["- 근두운 급습과 분신술을 조합하면 적이 반격하기 전에 빠르게 치고 빠질 수 있습니다.","- 수풀 근처에서 분신술을 사용하여 적이 과민하게 반응하도록 유도하십시오."],"enemytips":["- 오공은 자주 근두운 급습을 사용한 다음 분신술을 사용합니다. 잠시 기다렸다가 오공 본체를 확인한 다음 스킬을 사용하십시오.","- 오공은 적에게 둘러싸여 있을 때 더 강해집니다. 먼저 고립시킨 다음 처치할 기회를 노리세요."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":8,"defense":5,"magic":2,"difficulty":3},"stats":{"armor":34,"armorperlevel":3.5,"attackdamage":68,"attackdamageperlevel":3.2,"attackrange":175,"attackspeedoffset":-0.05,"attackspeedperlevel":3,"crit":0,"critperlevel":0,"hp":577.8,"hpperlevel":85,"hpregen":6.192,"hpregenperlevel":0.65,"movespeed":345,"mp":265.84,"mpperlevel":38,"mpregen":8.042,"mpregenperlevel":0.65,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"파쇄격","description":"오공의 다음 공격은 추가 물리 피해를 입히며 사거리가 증가하고, 맞은 적의 방어력이 잠시 낮아집니다.","sanitizedDescription":"오공의 다음 공격은 추가 물리 피해를 입히며 사거리가 증가하고, 맞은 적의 방어력이 잠시 낮아집니다.","tooltip":"오공의 다음 공격 사거리가 {{ e4 }} 증가하고, {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 추가 물리 피해를 주며 {{ e3 }}초 동안 적의 방어력을 {{ e2 }}% 낮춥니다.","sanitizedTooltip":"오공의 다음 공격 사거리가 {{ e4 }} 증가하고, {{ e1 }} (+{{ a1 }})의 추가 물리 피해를 주며 {{ e3 }}초 동안 적의 방어력을 {{ e2 }}% 낮춥니다.","leveltip":{"label":["추가 피해량","방어력 감소","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"MonkeyKingDoubleAttack.png","sprite":"spell7.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[9,8,7,6,5],"cooldownBurn":"9/8/7/6/5","effect":[null,[30,60,90,120,150],[10,15,20,25,30],[3,3,3,3,3],[125,125,125,125,125],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/60/90/120/150","10/15/20/25/30","3","125","6","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.1]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"MonkeyKingDoubleAttack"},{"name":"분신술","description":"오공이 잠깐 동안 투명 상태가 되며 분신을 남깁니다. 오공의 투명 상태가 끝나면 분신이 근처 적에게 마법 피해를 줍니다.","sanitizedDescription":"오공이 잠깐 동안 투명 상태가 되며 분신을 남깁니다. 오공의 투명 상태가 끝나면 분신이 근처 적에게 마법 피해를 줍니다.","tooltip":"오공이 {{ e2 }}초 동안  <span class=\"color91d7ee\">투명</span> 상태가 됩니다. 분신이 뒤에 남아 근처 적에게 {{ e2 }}초 후 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 줍니다.<br /><br /><u><span class=\"size16 color91d7ee\">은신 - 투명</span></u><span class=\"size16 colorb3b3b3\">: 오공이 투명해져 근처의 적 포탑 또는 <span class=\"size16 coloree91d7\">절대 시야</span>만이 모습을 드러내게 할 수 있습니다.","sanitizedTooltip":"오공이 {{ e2 }}초 동안 투명 상태가 됩니다. 분신이 뒤에 남아 근처 적에게 {{ e2 }}초 후 {{ e1 }} (+{{ a1 }})의 마법 피해를 줍니다. 은신 - 투명: 오공이 투명해져 근처의 적 포탑 또는 절대 시야만이 모습을 드러내게 할 수 있습니다.","leveltip":{"label":["고정 피해량","재사용 대기시간","소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"MonkeyKingDecoy.png","sprite":"spell7.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[70,115,160,205,250],[1.5,1.5,1.5,1.5,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/115/160/205/250","1.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"MonkeyKingDecoy"},{"name":"근두운 급습","description":"오공이 대상에게 돌격하는 동시에 자신의 분신을 만들어 대상 근처에 있는 최대 2명의 적에게 추가 공격을 하여 물리 피해를 줍니다.","sanitizedDescription":"오공이 대상에게 돌격하는 동시에 자신의 분신을 만들어 대상 근처에 있는 최대 2명의 적에게 추가 공격을 하여 물리 피해를 줍니다.","tooltip":"오공이 적에게 돌격하며 자신의 분신을 만들어 근처의 적을 추가로 2명까지 공격합니다. 적중당한 적은 각각 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입으며, 오공의 공격 속도가 {{ e3 }}초 동안 {{ e2 }}%만큼 증가합니다.","sanitizedTooltip":"오공이 적에게 돌격하며 자신의 분신을 만들어 근처의 적을 추가로 2명까지 공격합니다. 적중당한 적은 각각 {{ e1 }} (+{{ a1 }})의 물리 피해를 입으며, 오공의 공격 속도가 {{ e3 }}초 동안 {{ e2 }}%만큼 증가합니다.","leveltip":{"label":["기본 피해","공격 속도","비용"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} ->{{ costNL }}"]},"image":{"full":"MonkeyKingNimbus.png","sprite":"spell7.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[65,110,155,200,245],[30,35,40,45,50],[4,4,4,4,4],[1050,1050,1050,1050,1050],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","65/110/155/200/245","30/35/40/45/50","4","1050","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"MonkeyKingNimbus"},{"name":"회전격","description":"오공의 봉이 늘어나며 이를 휘둘러 적에게 피해를 주고 공중으로 띄웁니다. 이 스킬을 쓰는 동안 오공의 속도가 점점 빨라집니다.","sanitizedDescription":"오공의 봉이 늘어나며 이를 휘둘러 적에게 피해를 주고 공중으로 띄웁니다. 이 스킬을 쓰는 동안 오공의 속도가 점점 빨라집니다.","tooltip":"오공이 여의봉을 늘린 후 4초간 휘둘러 근처 적에게 초당 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 주고 각 대상을 처음으로 맞혔을 때 {{ e4 }}초 동안 공중으로 띄웁니다.<br /><br />오공의 이동 속도가 {{ e2 }}% 빨라진 후 스킬 지속 시간 동안 초당 {{ e3 }}%씩 추가로 증가합니다.","sanitizedTooltip":"오공이 여의봉을 늘린 후 4초간 휘둘러 근처 적에게 초당 {{ e1 }} (+{{ a1 }})의 물리 피해를 주고 각 대상을 처음으로 맞혔을 때 {{ e4 }}초 동안 공중으로 띄웁니다. 오공의 이동 속도가 {{ e2 }}% 빨라진 후 스킬 지속 시간 동안 초당 {{ e3 }}%씩 추가로 증가합니다.","leveltip":{"label":["기본 피해","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"MonkeyKingSpinToWin.png","sprite":"spell7.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[20,110,200],[15,15,15],[10,10,10],[1,1,1],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","20/110/200","15","10","1","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1.1]}],"range":[315,315,315],"rangeBurn":"315","key":"MonkeyKingSpinToWin"}],"passive":{"name":"바위 피부","description":"근처에 있는 적 챔피언의 수에 따라 오공의 방어력과 마법 저항력이 증가합니다.","sanitizedDescription":"근처에 있는 적 챔피언의 수에 따라 오공의 방어력과 마법 저항력이 증가합니다.","image":{"full":"MonkeyKingStoneSkin.png","sprite":"passive2.png","group":"passive","x":48,"y":48,"w":48,"h":48}},"recommended":[{"champion":"MonkeyKing","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3044,"count":1},{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3078,"count":1},{"id":3742,"count":1},{"id":3053,"count":1},{"id":3812,"count":1}]}]},{"champion":"MonkeyKing","title":"WukongARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3044,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3812,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3053,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"MonkeyKing","title":"MonkeyKingCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"MonkeyKing","title":"WukongFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1074,"count":1},{"id":2003,"count":1},{"id":3342,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3134,"count":1},{"id":3077,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3071,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2004,"count":1},{"id":2044,"count":1}]}]},{"champion":"MonkeyKing","title":"MonkeyKingKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3044,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3812,"count":1},{"id":3074,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3053,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"MonkeyKing","title":"MonkeyKingSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]}]},{"champion":"MonkeyKing","title":"WukongSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3134,"count":1},{"id":3044,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2140,"count":1}]}]},{"champion":"MonkeyKing","title":"WukongTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3078,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3156,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Ashe":{"id":22,"key":"Ashe","name":"애쉬","title":"서리 궁수","image":{"full":"Ashe.png","sprite":"champion0.png","group":"champion","x":336,"y":0,"w":48,"h":48},"skins":[{"id":22000,"name":"default","num":0},{"id":22001,"name":"프렐요드 애쉬","num":1},{"id":22002,"name":"로빈훗 애쉬","num":2},{"id":22003,"name":"깊은 숲 애쉬","num":3},{"id":22004,"name":"여왕 애쉬","num":4},{"id":22005,"name":"자수정 애쉬","num":5},{"id":22006,"name":"사랑의 추적자 애쉬","num":6},{"id":22007,"name":"습격자 애쉬","num":7},{"id":22008,"name":"프로젝트: 애쉬","num":8},{"id":22009,"name":"챔피언십 애쉬","num":9}],"lore":"아바로사 부족의 냉기의 화신이자 전쟁지도자인 애쉬는 북방에서 가장 규모가 큰 군단을 지휘한다. 침착함과 지능, 이상주의적인 면을 갖추고 있는 한편 지도자로서의 역할을 부담스러워 하는 애쉬는 혈통으로 물려받은 가문의 마법이 깃든 얼음 정수의 활로 무장했다. 애쉬를 신화 속 영웅인 아바로사의 화신으로 믿는 아바로사 부족민과 함께, 애쉬는 고대의 부족 영토를 되찾아 프렐요드를 다시 한 번 통합하려고 한다.","blurb":"아바로사 부족의 냉기의 화신이자 전쟁지도자인 애쉬는 북방에서 가장 규모가 큰 군단을 지휘한다. 침착함과 지능, 이상주의적인 면을 갖추고 있는 한편 지도자로서의 역할을 부담스러워 하는 애쉬는 혈통으로 물려받은 가문의 마법이 깃든 얼음 정수의 활로 무장했다. 애쉬를 신화 속 영웅인 아바로사의 화신으로 믿는 아바로사 부족민과 함께, 애쉬는 고대의 부족 영토를 되찾아 프렐요드를 다시 한 번 통합하려고 한다.","allytips":["- 적이 움직이는 방향으로 마법의 수정 화살을 쏘면 명중률이 올라갑니다.","- 일제 사격의 화살은 처음 맞은 적을 관통하지 않으므로, 적의 전방 탱커들이 다 맞지 않도록 거리를 잘 유지하세요.","- 매 날리기로 수풀에 숨은 적을 찾을 수 있으므로 정글에서 팀 전투가 벌어질 경우 유용하게 사용할 수 있습니다."],"enemytips":["- 애쉬는 방어 수단이 별로 없으므로 아주 좋은 기습 대상입니다.","- 애쉬가 금방 마법의 수정 화살을 시전하지 않았다면, 맵에서 혼자 있을 때 주의해야 합니다."],"tags":["Marksman","Support"],"partype":"마나","info":{"attack":7,"defense":3,"magic":2,"difficulty":4},"stats":{"armor":30,"armorperlevel":3.4,"attackdamage":65,"attackdamageperlevel":2.26,"attackrange":600,"attackspeedoffset":-0.05,"attackspeedperlevel":3.33,"crit":0,"critperlevel":0,"hp":527.72,"hpperlevel":79,"hpregen":5.424,"hpregenperlevel":0.55,"movespeed":325,"mp":280,"mpperlevel":32,"mpregen":6.972,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"궁사의 집중","description":"애쉬는 공격을 계속하면 집중이 오릅니다. 집중 중첩이 최대치에 이르면 이를 모두 소모해 애쉬가 궁사의 집중을 사용할 수 있으며, 이 때 애쉬의 공격 속도가 잠시 동안 증가하고 그 동안 기본 공격이 강력한 다발 공격으로 변합니다.","sanitizedDescription":"애쉬는 공격을 계속하면 집중이 오릅니다. 집중 중첩이 최대치에 이르면 이를 모두 소모해 애쉬가 궁사의 집중을 사용할 수 있으며, 이 때 애쉬의 공격 속도가 잠시 동안 증가하고 그 동안 기본 공격이 강력한 다발 공격으로 변합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>기본 공격 시 {{ e1 }}초 동안 집중이 올라 최대 {{ e2 }}번까지 중첩됩니다. 중첩은 시간에 따라 하나씩 감소하며, {{ e2 }} 중첩 시 중첩을 모두 소모해 궁사의 집중을 사용할 수 있습니다.<br /><br /><span class=\"colorFF9900\">사용 효과: </span> {{ e3 }}초 동안 애쉬의 공격 속도가 {{ e4 }}% 오르며, 기본 공격이 다발 공격으로 변경되어 <span class=\"colorFF8C00\">{{ f1 }}</span>의 물리 피해를 입힙니다. 이 동안에는 집중 중첩이 오르지 않습니다. 궁사의 집중은 서리 화살에도 적용됩니다.","sanitizedTooltip":"기본 지속 효과: 기본 공격 시 {{ e1 }}초 동안 집중이 올라 최대 {{ e2 }}번까지 중첩됩니다. 중첩은 시간에 따라 하나씩 감소하며, {{ e2 }} 중첩 시 중첩을 모두 소모해 궁사의 집중을 사용할 수 있습니다. 사용 효과: {{ e3 }}초 동안 애쉬의 공격 속도가 {{ e4 }}% 오르며, 기본 공격이 다발 공격으로 변경되어 {{ f1 }}의 물리 피해를 입힙니다. 이 동안에는 집중 중첩이 오르지 않습니다. 궁사의 집중은 서리 화살에도 적용됩니다.","leveltip":{"label":["공격 속도 증가","다발 공격 피해량 계수"],"effect":["{{ e4 }}% -> {{ e4NL }}%","{{ e6 }} -> {{ e6NL }}"]},"image":{"full":"AsheQ.png","sprite":"spell1.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}, 집중 {{ e2 }}","maxrank":5,"cost":[50,50,50,50,50],"costType":", 집중 {{ e2 }}","costBurn":"50","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[4,4,4,4,4],[4,4,4,4,4],[4,4,4,4,4],[20,25,30,35,40],[0.21,0.22,0.23,0.24,0.25],[1.05,1.1,1.15,1.2,1.25],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[0,0,0,0,0]],"effectBurn":["","4","4","4","20/25/30/35/40","0.21/0.22/0.23/0.24/0.25","1.05/1.1/1.15/1.2/1.25","1","1","1","0"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"AsheQ"},{"name":"일제 사격","description":"애쉬가 화살을 원뿔 모양으로 9개의 화살을 발사하여 더 큰 피해를 입힙니다. 이 때 서리 화살의 효과도 적용됩니다.","sanitizedDescription":"애쉬가 화살을 원뿔 모양으로 9개의 화살을 발사하여 더 큰 피해를 입힙니다. 이 때 서리 화살의 효과도 적용됩니다.","tooltip":"원뿔 형태로 화살을 발사하여 각각 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 적들은 일제 사격의 여러 화살을 막아낼 수 있지만, 그중 첫 번째 화살에만 피해를 입습니다.<br /><br />챔피언에게 적중되면 서리 화살 효과가 적용되는 치명타로 판정됩니다.","sanitizedTooltip":"원뿔 형태로 화살을 발사하여 각각 {{ e2 }} (+{{ a1 }})의 물리 피해를 입힙니다. 적들은 일제 사격의 여러 화살을 막아낼 수 있지만, 그중 첫 번째 화살에만 피해를 입습니다. 챔피언에게 적중되면 서리 화살 효과가 적용되는 치명타로 판정됩니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Volley.png","sprite":"spell1.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[15,12.5,10,7.5,5],"cooldownBurn":"15/12.5/10/7.5/5","effect":[null,[5,7,9,11,13],[20,35,50,65,80],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/7/9/11/13","20/35/50/65/80","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]}],"range":[1200,1200,1200,1200,1200],"rangeBurn":"1200","key":"Volley"},{"name":"매 날리기","description":"애쉬가 매의 혼을 맵 어느 위치든 날려보내 정찰을 시킵니다.","sanitizedDescription":"애쉬가 매의 혼을 맵 어느 위치든 날려보내 정찰을 시킵니다.","tooltip":"맵의 어느 위치든 지정하면 날아가면서 그 일대를 밝혀줍니다. 밝혀진 시야는 {{ e4 }}초간 유지됩니다. 애쉬는 매를 최대 2마리까지 저장할 수 있습니다.","sanitizedTooltip":"맵의 어느 위치든 지정하면 날아가면서 그 일대를 밝혀줍니다. 밝혀진 시야는 {{ e4 }}초간 유지됩니다. 애쉬는 매를 최대 2마리까지 저장할 수 있습니다.","leveltip":{"label":["재충전 시간"],"effect":["{{ ammorechargetime }} -> {{ ammorechargetimeNL }}"]},"image":{"full":"AsheSpiritOfTheHawk.png","sprite":"spell1.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[5,5,5,5,5],"cooldownBurn":"5","effect":[null,[3,3,3,3,3],[50,90,130,170,210],[25000,25000,25000,25000,25000],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","3","50/90/130/170/210","25000","5","0","0","0","0","0","0"],"range":[25000,25000,25000,25000,25000],"rangeBurn":"25000","key":"AsheSpiritOfTheHawk"},{"name":"마법의 수정화살","description":"애쉬가 얼음으로 된 화살을 발사합니다. 화살이 적 챔피언에 맞을 경우 피해를 입히고 화살 발사 거리에 따라 더 오랜 시간 기절시킵니다. 또한 주변 적 유닛 역시 피해를 받고 속도가 느려집니다.","sanitizedDescription":"애쉬가 얼음으로 된 화살을 발사합니다. 화살이 적 챔피언에 맞을 경우 피해를 입히고 화살 발사 거리에 따라 더 오랜 시간 기절시킵니다. 또한 주변 적 유닛 역시 피해를 받고 속도가 느려집니다.","tooltip":"얼음 수정 화살을 발사하여 처음으로 맞힌 적 챔피언에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 기절시킵니다. 화살이 날아가는 거리에 비례하여 기절 지속 시간이 증가하여, 최대 {{ e2 }}초까지 기절시킵니다. 주변의 적들도 절반의 피해를 입습니다.","sanitizedTooltip":"얼음 수정 화살을 발사하여 처음으로 맞힌 적 챔피언에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 기절시킵니다. 화살이 날아가는 거리에 비례하여 기절 지속 시간이 증가하여, 최대 {{ e2 }}초까지 기절시킵니다. 주변의 적들도 절반의 피해를 입습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"EnchantedCrystalArrow.png","sprite":"spell1.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[100,90,80],"cooldownBurn":"100/90/80","effect":[null,[200,400,600],[3.5,3.5,3.5],[50,50,50],[3,3,3],[5,5,5],[1100,1200,1300],[1,1,1],[400,400,400],[0.5,0.5,0.5],[0,0,0]],"effectBurn":["","200/400/600","3.5","50","3","5","1100/1200/1300","1","400","0.5","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"EnchantedCrystalArrow"}],"passive":{"name":"서리 화살","description":"애쉬의 공격을 받은 대상이 느려지며, 이 대상에 대한 애쉬의 공격력이 상승합니다.<br><br>애쉬의 치명타는 추가 피해를 가하지 않는 대신, 대상에게 더 강력한 둔화를 적용합니다.","sanitizedDescription":"애쉬의 공격을 받은 대상이 느려지며, 이 대상에 대한 애쉬의 공격력이 상승합니다. 애쉬의 치명타는 추가 피해를 가하지 않는 대신, 대상에게 더 강력한 둔화를 적용합니다.","image":{"full":"Ashe_P.png","sprite":"passive0.png","group":"passive","x":336,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Ashe","title":"AsheARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3508,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Ashe","title":"AsheBT","type":"riot","map":"SR","mode":"TUTORIAL","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":1055,"count":1},{"id":3006,"count":1},{"id":3031,"count":1},{"id":3046,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3035,"count":1},{"id":3087,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Ashe","title":"AsheCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3046,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3072,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ashe","title":"AsheFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3072,"count":1},{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Ashe","title":"AsheKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3094,"count":1},{"id":3036,"count":1},{"id":3508,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3102,"count":1},{"id":3812,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Ashe","title":"AshePRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3009,"count":1},{"id":3508,"count":1},{"id":3046,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3031,"count":1},{"id":3094,"count":1},{"id":3153,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3072,"count":1},{"id":3812,"count":1},{"id":3139,"count":1}]}]},{"champion":"Ashe","title":"AsheSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3046,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3072,"count":1},{"id":3026,"count":1}]}]},{"champion":"Ashe","title":"AsheSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3508,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3046,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3139,"count":1},{"id":3072,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ashe","title":"AsheTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1053,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3031,"count":1},{"id":3094,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3072,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Ashe","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Ashe","title":"Map12T","type":"riot","map":"HA","mode":"TUTORIAL","blocks":[{"type":"starting","recMath":false,"items":[{"id":3075,"count":1}]}]}]},"Kalista":{"id":429,"key":"Kalista","name":"칼리스타","title":"복수의 화신","image":{"full":"Kalista.png","sprite":"champion1.png","group":"champion","x":336,"y":48,"w":48,"h":48},"skins":[{"id":429000,"name":"default","num":0},{"id":429001,"name":"불의 축제 칼리스타","num":1},{"id":429002,"name":"챔피언십 칼리스타","num":2},{"id":429003,"name":"SKT T1 칼리스타","num":3}],"lore":"칼리스타, 영원불멸하는 복수의 화신이자 분노에 찬 응징의 혼. 그림자 군도에서 소환되는 칼리스타는 배신자와 반역자들에겐 악몽이 그 자체로 갑옷을 두르고 현실화한 듯한 존재이다. 배신당한 이들이 피맺힌 외침으로 복수를 갈망할 때, 영혼도 기꺼이 내놓겠다는 자들에겐 칼리스타의 응답이 들린다. 그 분노의 표적이 된 자는 결코 무사할 수 없다. 칼리스타는 무자비한 추격자이며, 복수의 계약을 끝낼 수 있는 것은 영혼을 꿰뚫는 창날의 차가운 불꽃뿐이기 때문이다.","blurb":"칼리스타, 영원불멸하는 복수의 화신이자 분노에 찬 응징의 혼. 그림자 군도에서 소환되는 칼리스타는 배신자와 반역자들에겐 악몽이 그 자체로 갑옷을 두르고 현실화한 듯한 존재이다. 배신당한 이들이 피맺힌 외침으로 복수를 갈망할 때, 영혼도 기꺼이 내놓겠다는 자들에겐 칼리스타의 응답이 들린다. 그 분노의 표적이 된 자는 결코 무사할 수 없다. 칼리스타는 무자비한 추격자이며, 복수의 계약을 끝낼 수 있는 것은 영혼을 꿰뚫는 창날의 차가운 불꽃뿐이기 때문이다.","allytips":["- 뽑아 찢기는 대상을 처치할 때 재사용 대기시간이 초기화되므로 최후의 일격으로 사용하면 좋습니다.","- 전투 태세 명령을 발동하려고 이동 명령을 한 번 했을 때는 칼리스타의 기본 공격 대상이 취소되지 않습니다.","- 기본 지속 효과에 의해 칼리스타의 이동 속도는 공격 속도에 비례하여 상승합니다."],"enemytips":["- 칼리스타의 기동력은 공격에 의해 좌우됩니다. 즉, 공격 사거리 밖에 있을 때는 기동력이 낮으며, 공격 속도가 느려지면 교전 시 이동할 수 있는 범위가 줄어듭니다.","- 칼리스타는 기본 공격 준비 동작을 취소할 수 없습니다. 기동력은 뛰어나지만, 이 때문에 공격을 언제 시작할지 제대로 짚으면 스킬을 적중시킬 수 있습니다.","- 수풀 등을 활용해서 칼리스타의 시야에서 벗어나면 기본 공격이 빗나가, 창이 바닥으로 떨어집니다."],"tags":["Marksman"],"partype":"마나","info":{"attack":8,"defense":2,"magic":4,"difficulty":7},"stats":{"armor":28,"armorperlevel":3.5,"attackdamage":71,"attackdamageperlevel":2.9,"attackrange":550,"attackspeedoffset":-0.03,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":517.76,"hpperlevel":83,"hpregen":6,"hpregenperlevel":0.55,"movespeed":325,"mp":231.8,"mpperlevel":35,"mpregen":6.3,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"꿰뚫는 창","description":"칼리스타가 빠르게 날아가는 창을 던집니다. 적이 처치될 경우 관통해 날아갑니다.","sanitizedDescription":"칼리스타가 빠르게 날아가는 창을 던집니다. 적이 처치될 경우 관통해 날아갑니다.","tooltip":"사거리가 길고 가는 창이 빠르게 발사되어 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. <span class=\"colorFFFFFF\"><i>전투 태세</i> (P)</span>, <span class=\"colorFFFFFF\"><i>감시하는 혼</i> (W)</span>, <span class=\"colorFFFFFF\"><i>뽑아 찢기</i> (E)</span>를 발동시킵니다.<br /><br /><span class=\"colorFFFF00\">대상을 처치할 경우, </span><span class=\"colorFFFFFF\"><i>꿰뚫는 창</i></span><span class=\"colorFFFF00\">이 계속 뻗어나가 <span class=\"colorFFFFFF\"><i>뽑아 찢기</i></span>의 모든 중첩을 다음 대상에게 적용합니다.</span>","sanitizedTooltip":"사거리가 길고 가는 창이 빠르게 발사되어 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 전투 태세 (P), 감시하는 혼 (W), 뽑아 찢기 (E)를 발동시킵니다. 대상을 처치할 경우, 꿰뚫는 창이 계속 뻗어나가 뽑아 찢기의 모든 중첩을 다음 대상에게 적용합니다.","leveltip":{"label":["마나 소모량","피해량"],"effect":["{{ cost }} -> {{ costNL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"KalistaMysticShot.png","sprite":"spell5.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[10,70,130,190,250],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/70/130/190/250","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]}],"range":[1150,1150,1150,1150,1150],"rangeBurn":"1150","key":"KalistaMysticShot"},{"name":"감시하는 혼","description":"기본 지속 효과로 계약을 맺은 아군 주위에서 공격 속도가 증가하며, 같은 대상을 공격하면 추가 피해를 입힙니다.<br><br>시전하면 혼이 일정한 경로를 순찰하며 자기 앞의 지역을 드러냅니다.","sanitizedDescription":"기본 지속 효과로 계약을 맺은 아군 주위에서 공격 속도가 증가하며, 같은 대상을 공격하면 추가 피해를 입힙니다. 시전하면 혼이 일정한 경로를 순찰하며 자기 앞의 지역을 드러냅니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>칼리스타가 <i>계약자</i> 근처에 있으면 칼리스타의 공격 속도가 <span class=\"colorFFFFFF\">+{{ f1 }}%</span> 증가합니다. 칼리스타와 동맹이 같은 대상을 기본 공격하면, 칼리스타는 대상 최대 체력의 {{ e2 }}%에 해당하는 마법 피해를 입힙니다. 대상 하나 당 재사용 대기시간 {{ e7 }}초.<br /><br /><span class=\"colorFF9900\">사용 시: </span>영혼을 하나 보내 보이지 않는 지역을 정찰하게 합니다. 발각된 챔피언은 4초 동안 위치가 드러납니다. 감시하는 혼은 3바퀴 동안 유지됩니다.<br /><br />칼리스타는 매 {{ e4 }}초마다 감시하는 혼이 하나씩 충전됩니다.","sanitizedTooltip":"기본 지속 효과: 칼리스타가 계약자 근처에 있으면 칼리스타의 공격 속도가 +{{ f1 }}% 증가합니다. 칼리스타와 동맹이 같은 대상을 기본 공격하면, 칼리스타는 대상 최대 체력의 {{ e2 }}%에 해당하는 마법 피해를 입힙니다. 대상 하나 당 재사용 대기시간 {{ e7 }}초. 사용 시: 영혼을 하나 보내 보이지 않는 지역을 정찰하게 합니다. 발각된 챔피언은 4초 동안 위치가 드러납니다. 감시하는 혼은 3바퀴 동안 유지됩니다. 칼리스타는 매 {{ e4 }}초마다 감시하는 혼이 하나씩 충전됩니다.","leveltip":{"label":["피해량","혼 충전 시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e4 }} -> {{ e4NL }}"]},"image":{"full":"KalistaW.png","sprite":"spell5.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[30,30,30,30,30],"cooldownBurn":"30","effect":[null,[80,80,80,80,80],[5,7.5,10,12.5,15],[125,150,175,200,225],[90,80,70,60,50],[0,0,0,0,0],[75,100,125,150,175],[10,10,10,10,10],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80","5/7.5/10/12.5/15","125/150/175/200/225","90/80/70/60/50","0","75/100/125/150/175","10","0","0","0"],"range":[5000,5000,5000,5000,5000],"rangeBurn":"5000","key":"KalistaW"},{"name":"뽑아 찢기","description":"공격 시 대상을 창으로 꿰뚫습니다. 재시전하면 대상에 박힌 창을 뜯어내서 둔화시키며, 주는 피해량이 증가합니다.","sanitizedDescription":"공격 시 대상을 창으로 꿰뚫습니다. 재시전하면 대상에 박힌 창을 뜯어내서 둔화시키며, 주는 피해량이 증가합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>칼리스타의 창이 대상을 꿰뚫고 4초간 그대로 유지됩니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>칼리스타가 근처 대상에 박힌 창을 뜯어내며 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 이동 속도를 {{ e6 }}초 동안 {{ e2 }}% 늦춥니다.</span><br /><br /><span class=\"colorFFFF00\">대상을 처치할 경우, </span><span class=\"colorFFFFFF\"><i>뽑아 찢기</i></span><span class=\"colorFFFF00\">의 재사용 대기시간이 초기화되고 소모한 마나를 돌려 받습니다.</span>","sanitizedTooltip":"기본 지속 효과: 칼리스타의 창이 대상을 꿰뚫고 4초간 그대로 유지됩니다. 사용 시: 칼리스타가 근처 대상에 박힌 창을 뜯어내며 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 이동 속도를 {{ e6 }}초 동안 {{ e2 }}% 늦춥니다. 대상을 처치할 경우, 뽑아 찢기의 재사용 대기시간이 초기화되고 소모한 마나를 돌려 받습니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ e5 }} -> {{ e5NL }}"]},"image":{"full":"KalistaExpungeWrapper.png","sprite":"spell5.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[20,30,40,50,60],[25,30,35,40,45],[0,0,0,0,0],[33,37.5,41.667,45.833,50],[14,12.5,11,9.5,8],[2,2,2,2,2],[254,254,254,254,254],[10,10,10,10,10],[10,14,19,25,32],[0,0,0,0,0]],"effectBurn":["","20/30/40/50/60","25/30/35/40/45","0","33/37.5/41.667/45.833/50","14/12.5/11/9.5/8","2","254","10","10/14/19/25/32","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[0.6]}],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"KalistaExpungeWrapper"},{"name":"운명의 부름","description":"칼리스타가 계약을 맺은 아군을 자신에게로 순간 이동시킵니다. 계약자는 지정한 위치로 돌진하여 적 챔피언을 뒤로 밀어내는 스킬을 사용할 수 있습니다.","sanitizedDescription":"칼리스타가 계약을 맺은 아군을 자신에게로 순간 이동시킵니다. 계약자는 지정한 위치로 돌진하여 적 챔피언을 뒤로 밀어내는 스킬을 사용할 수 있습니다.","tooltip":"<i>계약자</i>를 칼리스타 옆으로 끌어옵니다. 최대 4초 동안 이 아군은 공격받지도 않고 스킬도 사용할 수 없는 상태가 됩니다.<br /><br />계약자는 마우스를 클릭하여 지정한 위치로 날아갈 수 있게 됩니다. 적 챔피언에게 부딪치면 멈추며, 좁은 반경 안의 모든 적들을 뒤로 밀어냅니다.<br /><br />이 스킬을 사용하려면 계약자가 칼리스타로부터 1100 유닛 거리 안에 있어야 합니다.","sanitizedTooltip":"계약자를 칼리스타 옆으로 끌어옵니다. 최대 4초 동안 이 아군은 공격받지도 않고 스킬도 사용할 수 없는 상태가 됩니다. 계약자는 마우스를 클릭하여 지정한 위치로 날아갈 수 있게 됩니다. 적 챔피언에게 부딪치면 멈추며, 좁은 반경 안의 모든 적들을 뒤로 밀어냅니다. 이 스킬을 사용하려면 계약자가 칼리스타로부터 1100 유닛 거리 안에 있어야 합니다.","leveltip":{"label":["재사용 대기시간","띄워올리기 지속 시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"KalistaRx.png","sprite":"spell5.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[150,120,90],"cooldownBurn":"150/120/90","effect":[null,[0,0,0],[1.5,1.75,2],[40,60,80],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","0","1.5/1.75/2","40/60/80","0","0","0","0","0","0","0"],"range":[1000,1000,1000],"rangeBurn":"1000","key":"KalistaRx"}],"passive":{"name":"전투 태세","description":"칼리스타가 기본 공격이나 꿰뚫는 창의 준비 동작을 하는 동안 이동 명령을 하면, 칼리스타가 기본 공격과 함께 해당 위치로 도약합니다.","sanitizedDescription":"칼리스타가 기본 공격이나 꿰뚫는 창의 준비 동작을 하는 동안 이동 명령을 하면, 칼리스타가 기본 공격과 함께 해당 위치로 도약합니다.","image":{"full":"Kalista_Passive.png","sprite":"passive1.png","group":"passive","x":336,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Kalista","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3087,"count":1},{"id":3022,"count":1},{"id":3031,"count":1},{"id":3102,"count":1}]}]},{"champion":"Kalista","title":"KalistaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3046,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kalista","title":"KalistaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1043,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3139,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3033,"count":1},{"id":3026,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kalista","title":"KalistaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1043,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3085,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3072,"count":1},{"id":3139,"count":1},{"id":3812,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Kalista","title":"KalistaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3046,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kalista","title":"KalistaPRJ17","type":"riot","map":"PS","mode":"PROJECT","blocks":[{"type":"starting","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1},{"id":3086,"count":1}]},{"type":"recommended","recMath":false,"items":[{"id":3812,"count":1},{"id":3071,"count":1},{"id":3094,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3072,"count":1},{"id":3139,"count":1},{"id":3814,"count":1}]}]},{"champion":"Kalista","title":"KalistaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3139,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3033,"count":1},{"id":3026,"count":1},{"id":3102,"count":1}]}]},{"champion":"Kalista","title":"KalistaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1043,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3072,"count":1},{"id":3139,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3033,"count":1},{"id":3026,"count":1},{"id":3814,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Kalista","title":"KalistaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":2},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3036,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3022,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Akali":{"id":84,"key":"Akali","name":"아칼리","title":"그림자의 권","image":{"full":"Akali.png","sprite":"champion0.png","group":"champion","x":96,"y":0,"w":48,"h":48},"skins":[{"id":84000,"name":"default","num":0},{"id":84001,"name":"독침 아칼리","num":1},{"id":84002,"name":"핏빛 아칼리","num":2},{"id":84003,"name":"국가대표 아칼리","num":3},{"id":84004,"name":"간호사 아칼리","num":4},{"id":84005,"name":"불의 축제 아칼리","num":5},{"id":84006,"name":"은빛 송곳니 아칼리","num":6},{"id":84007,"name":"인간사냥꾼 아칼리","num":7},{"id":84008,"name":"횟집 아칼리","num":8}],"lore":"무술의 천재인 아칼리는 킨코우라 불리는 결사단의 일원이다. 아칼리는 어머니의 뒤를 이어 그림자의 권이 되어, 조국에 불균형을 일으키는 자들을 처치하는 성스러운 임무를 맡았다. 아칼리의 방식이 극단적이라는 말하는 이들이 있지만, 아칼리는 아이오니아의 조화를 유지하는 데에 있어 신중하게 행동한다.","blurb":"무술의 천재인 아칼리는 킨코우라 불리는 결사단의 일원이다. 아칼리는 어머니의 뒤를 이어 그림자의 권이 되어, 조국에 불균형을 일으키는 자들을 처치하는 성스러운 임무를 맡았다. 아칼리의 방식이 극단적이라는 말하는 이들이 있지만, 아칼리는 아이오니아의 조화를 유지하는 데에 있어 신중하게 행동한다.","allytips":["- 아칼리는 자신보다 약한 챔피언을 처치하는 데 뛰어납니다. 아군이 먼저 공격하기를 기다렸다가 뒤에서 기습하십시오.","- 그림자의 정수를 요령 있게 관리하여 최대 한도에 도달하기 전에 그림자 춤을 사용하도록 하십시오."],"enemytips":["- 아칼리는 황혼의 장막 안에 숨어있어도 광역 공격 스킬에 피해를 입을 수 있습니다.","- 황혼의 장막 사용 전, 장막 내부로 순간이동할 위치를 미리 선택할 수 있습니다. 황혼의 장막이 벽을 사이에 두고 깔리면 벽을 넘는 플레이도 가능하죠.","- 현재 체력이 낮고 아칼리의 궁극기가 여러 개 충전됐다면 기지로 귀환하십시오."],"tags":["Assassin"],"partype":"기력","info":{"attack":5,"defense":3,"magic":8,"difficulty":7},"stats":{"armor":31.38,"armorperlevel":3.5,"attackdamage":58.376,"attackdamageperlevel":3.2,"attackrange":125,"attackspeedoffset":-0.1,"attackspeedperlevel":3.1,"crit":0,"critperlevel":0,"hp":593,"hpperlevel":90,"hpregen":8.342,"hpregenperlevel":0.65,"movespeed":350,"mp":200,"mpperlevel":0,"mpregen":50,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"암살자의 표식","description":"아칼리가 목표에게 카마를 던져 마법 피해를 입히고 6초 동안 표식을 남깁니다. 표식을 남긴 대상에게 아칼리가 근접 공격을 하면 표식은 사라지며, 대상은 추가 피해를 입고 아칼리는 기력을 회복합니다.","sanitizedDescription":"아칼리가 목표에게 카마를 던져 마법 피해를 입히고 6초 동안 표식을 남깁니다. 표식을 남긴 대상에게 아칼리가 근접 공격을 하면 표식은 사라지며, 대상은 추가 피해를 입고 아칼리는 기력을 회복합니다.","tooltip":"아칼리가 적 대상에게 카마를 던져 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e4 }}초 동안 표식을 남깁니다.<br /><br />표식을 남긴 대상에게 아칼리가 근접 공격을 하면 표식이 사라지면서 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 기력이 {{ e3 }} 회복됩니다.","sanitizedTooltip":"아칼리가 적 대상에게 카마를 던져 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e4 }}초 동안 표식을 남깁니다. 표식을 남긴 대상에게 아칼리가 근접 공격을 하면 표식이 사라지면서 {{ e2 }} (+{{ a2 }})의 마법 피해를 입히고 기력이 {{ e3 }} 회복됩니다.","leveltip":{"label":["1차 피해량","2차 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AkaliMota.png","sprite":"spell0.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[6,5.5,5,4.5,4],"cooldownBurn":"6/5.5/5/4.5/4","effect":[null,[35,55,75,95,115],[45,70,95,120,145],[40,40,40,40,40],[6,6,6,6,6],[0,0,0,0,0],[0.4,0.4,0.4,0.4,0.4],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/55/75/95/115","45/70/95/120/145","40","6","0","0.4","4","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.5]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"AkaliMota"},{"name":"황혼의 장막","description":"아칼리가 연막탄을 남기고 근처로 순간이동합니다. 연막 안에 있는 동안 아칼리는 투명 상태가 되고 이동 속도가 대폭 상승합니다. 공격하거나 스킬을 사용하면 순간적으로 아칼리의 모습이 드러납니다. 연막 안에 있는 적은 이동 속도가 느려집니다.","sanitizedDescription":"아칼리가 연막탄을 남기고 근처로 순간이동합니다. 연막 안에 있는 동안 아칼리는 투명 상태가 되고 이동 속도가 대폭 상승합니다. 공격하거나 스킬을 사용하면 순간적으로 아칼리의 모습이 드러납니다. 연막 안에 있는 적은 이동 속도가 느려집니다.","tooltip":"아칼리가 근처의 지점으로 순간이동하며 이전 위치에 {{ e2 }}초 동안 유지되는 연막을 남깁니다. 연막 안의 적은 {{ e3 }}% 둔화됩니다.<br /><br />아칼리는 연막 안으로 들어가면 <span class=\"color91d7ee\">투명</span>상태가 되고 이동 속도가 {{ e6 }}% 상승합니다. 기본 공격이나 스킬을 사용하면 잠시 동안 <span class=\"color91d7ee\">투명</span>상태가 해제됩니다.<br /><br /><u><span class=\"size16 color91d7ee\">은신 - 투명</span></u><span class=\"size16 colorb3b3b3\">: 근처의 적 포탑 또는 <span class=\"size16 coloree91d7\">절대 시야</span>만이 아칼리의 모습을 드러나게 할 수 있습니다.","sanitizedTooltip":"아칼리가 근처의 지점으로 순간이동하며 이전 위치에 {{ e2 }}초 동안 유지되는 연막을 남깁니다. 연막 안의 적은 {{ e3 }}% 둔화됩니다. 아칼리는 연막 안으로 들어가면 투명상태가 되고 이동 속도가 {{ e6 }}% 상승합니다. 기본 공격이나 스킬을 사용하면 잠시 동안 투명상태가 해제됩니다. 은신 - 투명: 근처의 적 포탑 또는 절대 시야만이 아칼리의 모습을 드러나게 할 수 있습니다.","leveltip":{"label":["이동 속도","둔화","소모값"],"effect":["{{ e6 }}% -> {{ e6NL }}%","{{ e3 }}% -> {{ e3NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"AkaliSmokeBomb.png","sprite":"spell0.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[60,55,50,45,40],"costBurn":"60/55/50/45/40","cooldown":[18,18,18,18,18],"cooldownBurn":"18","effect":[null,[425,425,425,425,425],[8,8,8,8,8],[14,18,22,26,30],[250,250,250,250,250],[0,0,0,0,0],[20,40,60,80,100],[1,1,1,1,1],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","425","8","14/18/22/26/30","250","0","20/40/60/80/100","1","0.5","0","0"],"range":[270,270,270,270,270],"rangeBurn":"270","key":"AkaliSmokeBomb"},{"name":"초승달 베기","description":"아칼리가 카마를 휘둘러 추가 공격력 및 주문력에 기반한 피해를 입힙니다. 초승달 베기로 유닛을 처치하면 재사용 대기시간이 줄어듭니다.","sanitizedDescription":"아칼리가 카마를 휘둘러 추가 공격력 및 주문력에 기반한 피해를 입힙니다. 초승달 베기로 유닛을 처치하면 재사용 대기시간이 줄어듭니다.","tooltip":"아칼리가 카마를 휘둘러 적을 베며 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.<br /><br />초승달 베기로 적을 처치할 경우 재사용 대기시간이 {{ e3 }}% 감소합니다.","sanitizedTooltip":"아칼리가 카마를 휘둘러 적을 베며 {{ e1 }} (+{{ a2 }}) (+{{ a1 }})의 물리 피해를 입힙니다. 초승달 베기로 적을 처치할 경우 재사용 대기시간이 {{ e3 }}% 감소합니다.","leveltip":{"label":["피해량","재사용 대기시간","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"AkaliShadowSwipe.png","sprite":"spell0.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[60,55,50,45,40],"costBurn":"60/55/50/45/40","cooldown":[5,4.5,4,3.5,3],"cooldownBurn":"5/4.5/4/3.5/3","effect":[null,[70,100,130,160,190],[1,1,1,1,1],[60,60,60,60,60],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/100/130/160/190","1","60","0","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[0.8]},{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"AkaliShadowSwipe"},{"name":"그림자 춤","description":"아칼리가 그림자 사이로 빠르게 움직이며 적을 관통하여 피해를 입히고 그림자 정수를 소모합니다. 아칼리는 주기적으로 그림자 정수를 획득합니다. 그림자 정수는 최대 3개까지 획득 가능합니다.","sanitizedDescription":"아칼리가 그림자 사이로 빠르게 움직이며 적을 관통하여 피해를 입히고 그림자 정수를 소모합니다. 아칼리는 주기적으로 그림자 정수를 획득합니다. 그림자 정수는 최대 3개까지 획득 가능합니다.","tooltip":"아칼리가 빠르게 움직이며 적을 관통하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> 마법 피해를 입힙니다.<br /><br />아칼리가 킬 혹은 어시스트를 올리면 그림자 정수를 얻으며, <span class=\"colorFFFFFF\">{{ f1 }}</span>초마다 한 개의 그림자 정수를 얻습니다. 그림자 정수는 {{ e4 }}개까지 모을 수 있습니다.","sanitizedTooltip":"아칼리가 빠르게 움직이며 적을 관통하여 {{ e1 }} (+{{ a1 }}) 마법 피해를 입힙니다. 아칼리가 킬 혹은 어시스트를 올리면 그림자 정수를 얻으며, {{ f1 }}초마다 한 개의 그림자 정수를 얻습니다. 그림자 정수는 {{ e4 }}개까지 모을 수 있습니다.","leveltip":{"label":["피해량","정수 획득 주기"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f1 }} -> {{ f2 }}"]},"image":{"full":"AkaliShadowDance.png","sprite":"spell0.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"그림자 정수 {{ e5 }}개 소모","maxrank":3,"cost":[0,0,0],"costType":"개 소모","costBurn":"0","cooldown":[2,2,2],"cooldownBurn":"2","effect":[null,[50,100,150],[2000,2000,2000],[1,1,1],[3,3,3],[1,1,1],[100,100,100],[200,200,200],[600,600,600],[225,225,225],[1,1,1]],"effectBurn":["","50/100/150","2000","1","3","1","100","200","600","225","1"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.35]},{"key":"f1","link":"@cooldownchampion","coeff":[30,22.5,15]},{"key":"f1","link":"@cooldownchampion","coeff":[30,22.5,15]},{"key":"f2","link":"@cooldownchampion","coeff":[22.5,15]}],"range":[700,700,700],"rangeBurn":"700","key":"AkaliShadowDance"}],"passive":{"name":"양면의 수련","description":"아칼리의 첫 기본 공격 2회가 강화됩니다. 첫 번째 기본 공격 시 체력이 회복되고 두 번째 기본 공격 시에는 추가 마법 피해를 입힙니다. 양면의 수련은 사용 후 일정 시간이 지나면 자동으로 초기화됩니다.","sanitizedDescription":"아칼리의 첫 기본 공격 2회가 강화됩니다. 첫 번째 기본 공격 시 체력이 회복되고 두 번째 기본 공격 시에는 추가 마법 피해를 입힙니다. 양면의 수련은 사용 후 일정 시간이 지나면 자동으로 초기화됩니다.","image":{"full":"AkaliTwinDisciplines.png","sprite":"passive0.png","group":"passive","x":96,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Akali","title":"AkaliARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3146,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3068,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Akali","title":"AkaliCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1029,"count":1},{"id":2003,"count":4},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3145,"count":1},{"id":3144,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3146,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Akali","title":"AkaliFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1029,"count":1},{"id":2003,"count":4},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3145,"count":1},{"id":3144,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3146,"count":1},{"id":3089,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Akali","title":"AkaliKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3146,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3068,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Akali","title":"AkaliSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3146,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3157,"count":1},{"id":3116,"count":1}]}]},{"champion":"Akali","title":"AkaliSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1029,"count":1},{"id":2003,"count":4},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3145,"count":1},{"id":3144,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3146,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Akali","title":"AkaliTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1052,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3116,"count":1},{"id":3145,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3146,"count":1},{"id":3090,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Akali","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_Starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1052,"count":1},{"id":3136,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3136,"count":1},{"id":1026,"count":1},{"id":3151,"count":1}]},{"type":"beginner_MoreLegendaryItems","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]}]}]},"Vi":{"id":254,"key":"Vi","name":"바이","title":"필트오버의 집행자","image":{"full":"Vi.png","sprite":"champion4.png","group":"champion","x":144,"y":0,"w":48,"h":48},"skins":[{"id":254000,"name":"default","num":0},{"id":254001,"name":"네온 주먹 바이","num":1},{"id":254002,"name":"바이 경관","num":2},{"id":254003,"name":"연미복 바이","num":3},{"id":254004,"name":"데몬 바이","num":4},{"id":254005,"name":"대장군 바이","num":5},{"id":254011,"name":"프로젝트: 바이","num":11}],"lore":"자운의 암흑가에서 범죄를 일삼던 다혈질 성격의 바이는 충동적이고 성급한 데다 권위에 대한 존중이라고는 눈곱만큼도 없다. 어릴 적부터 혼자 자라다시피 한 그녀는 생존 본능이 치열하고 유머감각은 사악할 만큼 냉소적이다. 하지만 이제 바이는 평화 유지를 위해 필트오버의 경찰 소속이 되어 육중한 벽을 단숨에 부술 만큼 무시무시한 마법공학 건틀릿을 휘두르며 범죄자를 색출하고 있다.","blurb":"자운의 암흑가에서 범죄를 일삼던 다혈질 성격의 바이는 충동적이고 성급한 데다 권위에 대한 존중이라고는 눈곱만큼도 없다. 어릴 적부터 혼자 자라다시피 한 그녀는 생존 본능이 치열하고 유머감각은 사악할 만큼 냉소적이다. 하지만 이제 바이는 평화 유지를 위해 필트오버의 경찰 소속이 되어 육중한 벽을 단숨에 부술 만큼 무시무시한 마법공학 건틀릿을 휘두르며 범죄자를 색출하고 있다.","allytips":["- 금고 부수기가 완전히 충전되면 피해량이 두 배가 됩니다. 달아나는 적을 잡아서 최후의 일격을 날릴 때 사용하면 좋습니다.","- 과도한 힘의 충격파에 걸리는 적은 모두 100%의 피해를 입습니다. 미니언 뒤에 적이 숨어 있을 때 사용하세요.","- 기동타격은 전투 개시에 좋은 스킬입니다. 아군보다 너무 앞서 가지 않도록 주의하세요."],"enemytips":["- 금고 부수기가 완전히 충전되면 피해량이 두 배가 됩니다. 바이가 충전을 시작하면 후퇴하거나 공격을 피해야만 합니다.","- 바이에게 세 번 연속으로 맞으면 방어구가 갈라지고, 바이의 공격 속도가 상승합니다. 바이를 상대할 때는 싸움이 길어지지 않도록 중간에 끊어 주세요.","- 바이가 궁극기를 쓸 땐 멈출 수 없으니 주의하세요. 바이가 돌진을 마칠 때까지 위치 이동 효과는 아껴두세요."],"tags":["Fighter","Assassin"],"partype":"마나","info":{"attack":8,"defense":5,"magic":3,"difficulty":4},"stats":{"armor":35,"armorperlevel":3.5,"attackdamage":64,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":582.8,"hpperlevel":85,"hpregen":9.012,"hpregenperlevel":0.9,"movespeed":340,"mp":295.6,"mpperlevel":45,"mpregen":8.092,"mpregenperlevel":0.65,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"금고 부수기","description":"바이가 건틀릿을 충전하여, 두꺼운 금고도 뚫을 위력의 타격을 가하며 전방으로 돌진합니다. 부딪힌 적들은 뒤로 밀려나고, 찌그러뜨리기가 중첩됩니다.","sanitizedDescription":"바이가 건틀릿을 충전하여, 두꺼운 금고도 뚫을 위력의 타격을 가하며 전방으로 돌진합니다. 부딪힌 적들은 뒤로 밀려나고, 찌그러뜨리기가 중첩됩니다.","tooltip":"강력한 한 방을 충전하여 바이가 전방으로 돌진합니다.<br /><br /><span class=\"colorFF9900\">최초 시전 시:</span> 1.25초간 이동 속도가 {{ e4 }}% 감소하면서 피해량과 돌진 범위가 증가합니다.<br /><br /><span class=\"colorFF9900\">두 번째 시전 시:</span> 전방으로 돌진해 부딪친 모든 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>에서 {{ f2 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고, 찌그러뜨리기 효과를 적용합니다. (미니언과 몬스터에게는 {{ e3 }}%의 피해를 가합니다). 적 챔피언과 충돌하면 멈추며, 적을 뒤로 밀어냅니다.","sanitizedTooltip":"강력한 한 방을 충전하여 바이가 전방으로 돌진합니다. 최초 시전 시: 1.25초간 이동 속도가 {{ e4 }}% 감소하면서 피해량과 돌진 범위가 증가합니다. 두 번째 시전 시: 전방으로 돌진해 부딪친 모든 적에게 {{ e1 }} (+{{ a1 }})에서 {{ f2 }} (+{{ f1 }})의 물리 피해를 입히고, 찌그러뜨리기 효과를 적용합니다. (미니언과 몬스터에게는 {{ e3 }}%의 피해를 가합니다). 적 챔피언과 충돌하면 멈추며, 적을 뒤로 밀어냅니다.","leveltip":{"label":["최소 피해량","최대 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"ViQ.png","sprite":"spell12.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[16,14,12,10,8],"cooldownBurn":"16/14/12/10/8","effect":[null,[110,160,210,260,310],[2,2,2,2,2],[75,75,75,75,75],[15,15,15,15,15],[6,6,6,6,6],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","110/160/210/260/310","2","75","15","6","5","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]},{"key":"f1","link":"bonusattackdamage","coeff":[1.4]}],"range":[250,250,250,250,250],"rangeBurn":"250","key":"ViQ"},{"name":"찌그러뜨리기","description":"바이의 주먹이 적의 방어구를 찌그러뜨려 추가 피해를 가하며 공격 속도가 상승합니다.","sanitizedDescription":"바이의 주먹이 적의 방어구를 찌그러뜨려 추가 피해를 가하며 공격 속도가 상승합니다.","tooltip":"같은 대상을 3번 맞힐 때마다 대상의 최대 체력의 {{ e1 }}% <span class=\"colorFF8C00\">(+{{ f1 }}%)</span>에 해당하는 추가 물리 피해를 입히며, {{ e4 }}초간 대상의 방어력을 {{ e3 }}% 낮추며 바이의 공격 속도가 {{ e2 }}% 상승합니다. (몬스터에 대한 최대 피해량: {{ e5 }})","sanitizedTooltip":"같은 대상을 3번 맞힐 때마다 대상의 최대 체력의 {{ e1 }}% (+{{ f1 }}%)에 해당하는 추가 물리 피해를 입히며, {{ e4 }}초간 대상의 방어력을 {{ e3 }}% 낮추며 바이의 공격 속도가 {{ e2 }}% 상승합니다. (몬스터에 대한 최대 피해량: {{ e5 }})","leveltip":{"label":["최대 체력 피해","공격 속도"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"ViW.png","sprite":"spell12.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"기본 지속 효과","maxrank":5,"cost":[0,0,0,0,0],"costType":"기본 지속 효과","costBurn":"0","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[4,5.5,7,8.5,10],[30,35,40,45,50],[20,20,20,20,20],[4,4,4,4,4],[300,300,300,300,300],[4,4,4,4,4],[0.0286,0.0286,0.0286,0.0286,0.0286],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","4/5.5/7/8.5/10","30/35/40/45/50","20","4","300","4","0.03","0","0","0"],"vars":[{"key":"f1","link":"@special.viw","coeff":[35]}],"range":[750,750,750,750,750],"rangeBurn":"750","key":"ViW"},{"name":"과도한 힘","description":"바이의 다음 공격이 대상을 관통하여 뒤에 있는 적들에게 피해를 가합니다.","sanitizedDescription":"바이의 다음 공격이 대상을 관통하여 뒤에 있는 적들에게 피해를 가합니다.","tooltip":"다음 기본 공격은 대상과 그 뒤의 적들에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f3 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.<br /><br /></span>바이는 <span class=\"colorFFFFFF\">{{ f1 }}</span>초에 한 번씩 새로운 한 방을 준비하며, 최대 2번의 충전량을 유지할 수 있습니다.","sanitizedTooltip":"다음 기본 공격은 대상과 그 뒤의 적들에게 {{ e1 }} (+{{ f3 }}) (+{{ a1 }})의 물리 피해를 입힙니다. 바이는 {{ f1 }}초에 한 번씩 새로운 한 방을 준비하며, 최대 2번의 충전량을 유지할 수 있습니다.","leveltip":{"label":["피해량","충전 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f1 }} -> {{ f2 }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ViE.png","sprite":"spell12.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[1,1,1,1,1],"cooldownBurn":"1","effect":[null,[10,30,50,70,90],[1.15,1.15,1.15,1.15,1.15],[50,50,50,50,50],[1.5,1.5,1.5,1.5,1.5],[6,6,6,6,6],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/30/50/70/90","1.15","50","1.5","6","1","0","0","0","0"],"vars":[{"key":"f3","link":"attackdamage","coeff":[1.15]},{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"f1","link":"@text","coeff":[14,12.5,11,9.5,8]},{"key":"f1","link":"@text","coeff":[14,12.5,11,9.5,8]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"ViE"},{"name":"기동타격","description":"바이가 적을 추격하며 중간에 걸리는 유닛들을 옆으로 밀어냅니다. 대상에 다다르면 공중으로 띄워올리고 뒤따라 점프하여, 바닥으로 쿵 찍어누릅니다.","sanitizedDescription":"바이가 적을 추격하며 중간에 걸리는 유닛들을 옆으로 밀어냅니다. 대상에 다다르면 공중으로 띄워올리고 뒤따라 점프하여, 바닥으로 쿵 찍어누릅니다.","tooltip":"대상 적 챔피언을 추격하여, 1.25초 동안 띄워올리면서 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다.<br /><br />추격하는 동안 바이를 멈출 수 없으며, 바이는 대상에 대한 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. 또한 중간에 걸리는 적들을 띄워올리고 뒤로 밀어내면서 75%의 피해를 입힙니다.","sanitizedTooltip":"대상 적 챔피언을 추격하여, 1.25초 동안 띄워올리면서 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 추격하는 동안 바이를 멈출 수 없으며, 바이는 대상에 대한 절대 시야를 얻습니다. 또한 중간에 걸리는 적들을 띄워올리고 뒤로 밀어내면서 75%의 피해를 입힙니다.","leveltip":{"label":["총 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"ViR.png","sprite":"spell12.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,125,150],"costBurn":"100/125/150","cooldown":[130,100,70],"cooldownBurn":"130/100/70","effect":[null,[150,300,450],[0.75,0.75,0.75],[1.25,1.25,1.25],[4,4,4],[1,1.5,2],[800,800,800],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/300/450","0.75","1.25","4","1/1.5/2","800","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.4]}],"range":[800,800,800],"rangeBurn":"800","key":"ViR"}],"passive":{"name":"폭발 보호막","description":"바이는 시간이 흐르면 보호막이 1회 충전됩니다. 이 보호막은 적을 스킬로 적중시키면 활성화됩니다.","sanitizedDescription":"바이는 시간이 흐르면 보호막이 1회 충전됩니다. 이 보호막은 적을 스킬로 적중시키면 활성화됩니다.","image":{"full":"ViPassive.png","sprite":"passive4.png","group":"passive","x":144,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Vi","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3071,"count":1},{"id":3110,"count":1},{"id":3105,"count":1},{"id":3022,"count":1}]}]},{"champion":"Vi","title":"ViARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3194,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vi","title":"ViCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vi","title":"ViFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3047,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vi","title":"ViKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3184,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"Vi","title":"ViSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]}]},{"champion":"Vi","title":"ViSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3078,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3147,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3047,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3053,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Vi","title":"ViTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3078,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3252,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Amumu":{"id":32,"key":"Amumu","name":"아무무","title":"슬픈 미라","image":{"full":"Amumu.png","sprite":"champion0.png","group":"champion","x":192,"y":0,"w":48,"h":48},"skins":[{"id":32000,"name":"default","num":0},{"id":32001,"name":"파라오 아무무","num":1},{"id":32002,"name":"평창 아무무","num":2},{"id":32003,"name":"이모키드 아무무","num":3},{"id":32004,"name":"반품된 아무무","num":4},{"id":32005,"name":"킹카가 될 뻔한 아무무","num":5},{"id":32006,"name":"작은 기사 아무무","num":6},{"id":32007,"name":"슬픈 로봇 아무무","num":7},{"id":32008,"name":"깜짝 파티 아무무","num":8}],"lore":"뼛속까지 사무치는 외로움과 쓸쓸함을 속에 살아가는 아무무. 평생을 오로지 마음을 나눌 수 있는 단 한 명의 친구를 찾아 헤매는, 고대 슈리마 제국의 가엾은 영혼이다. 끔찍한 저주를 받은 아무무는 영원히 혼자인 채로 남겨졌다. 그 저주란 지독하리만큼 잔인한 것이었다. 상대가 누구든 아무무와의 신체적 접촉은 죽음을 의미했고 정서적 교류는 파멸을 불러왔다. 그의 운명을 아는 한 누구도 그를 가까이하려 들지 않았다. 간혹 아무무를 봤다는 이들은 그를 두고 '살아있는 시체'라고 표현했다. 푸르스름한 붕대로 전신을 감고 있는 작은 체구의 그 존재는 마치 미라와 같다고도 했다. 아무무에 관한 이야기는 수 세대를 거쳐 전해 내려 오면서 갖가지 신화나 설화, 그리고 구전동화 등 여러 이야기의 바탕이 되었다. 그래서 어디까지가 사실이고 어디서부터가 허구인지 분별하기란 결코 쉽지 않다.","blurb":"뼛속까지 사무치는 외로움과 쓸쓸함을 속에 살아가는 아무무. 평생을 오로지 마음을 나눌 수 있는 단 한 명의 친구를 찾아 헤매는, 고대 슈리마 제국의 가엾은 영혼이다. 끔찍한 저주를 받은 아무무는 영원히 혼자인 채로 남겨졌다. 그 저주란 지독하리만큼 잔인한 것이었다. 상대가 누구든 아무무와의 신체적 접촉은 죽음을 의미했고 정서적 교류는 파멸을 불러왔다. 그의 운명을 아는 한 누구도 그를 가까이하려 들지 않았다. 간혹 아무무를 봤다는 이들은 그를 두고...","allytips":["- 아무무는 팀원들에 대한 의존도가 높습니다. 믿을 수 있는 아군과 함께 공격로에 나가십시오.","- 재사용 대기시간 감소 효과는 아무무에게 매력적이지만 이를 아이템으로 모두 얻기에는 무리가 따릅니다. 가능할 때마다 푸른 파수꾼을 처치하여 공짜 재사용 대기시간 감소 효과를 얻으십시오.","- 절망은 다른 방어 담당 챔피언을 상대로 매우 유용합니다. 체력이 가장 높은 적 가까이에서 싸우십시오."],"enemytips":["- 아무무가 궁극기를 사용할 수 있다면 아군과 뭉쳐 있지 마십시오.","- 예측불허의 행동을 하거나 미니언 뒤에 숨는 방법으로 아무무가 붕대 던지기를 쓰며 싸우기 어렵게 만드는 것 또한 효과적입니다.","- 아무무가 절망을 사용하면 체력 아이템이 큰 효과를 보지 못합니다."],"tags":["Tank","Mage"],"partype":"마나","info":{"attack":2,"defense":6,"magic":8,"difficulty":3},"stats":{"armor":33,"armorperlevel":3.8,"attackdamage":53.38,"attackdamageperlevel":3.8,"attackrange":125,"attackspeedoffset":-0.02,"attackspeedperlevel":2.18,"crit":0,"critperlevel":0,"hp":613.12,"hpperlevel":84,"hpregen":8.878,"hpregenperlevel":0.85,"movespeed":335,"mp":287.2,"mpperlevel":40,"mpregen":7.382,"mpregenperlevel":0.525,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"붕대 던지기","description":"아무무가 끈적끈적한 붕대를 던져 적을 기절시키고 피해를 입히며 가까이 이동합니다.","sanitizedDescription":"아무무가 끈적끈적한 붕대를 던져 적을 기절시키고 피해를 입히며 가까이 이동합니다.","tooltip":"붕대를 지정한 방향으로 던집니다. 적 유닛이 붕대에 맞으면 아무무가 붕대를 당겨 적에게 다가가 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다. ","sanitizedTooltip":"붕대를 지정한 방향으로 던집니다. 적 유닛이 붕대에 맞으면 아무무가 붕대를 당겨 적에게 다가가 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.","leveltip":{"label":["피해량","재사용 대기시간","마나"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"BandageToss.png","sprite":"spell0.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,90,100,110,120],"costBurn":"80/90/100/110/120","cooldown":[16,14,12,10,8],"cooldownBurn":"16/14/12/10/8","effect":[null,[80,130,180,230,280],[1,1,1,1,1],[1350,1350,1350,1350,1350],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/130/180/230/280","1","1350","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"BandageToss"},{"name":"절망","description":"적이 절망으로 인해 매 초마다 최대 체력에 비례한 피해를 입고 <font color='#9b0f5f'>저주</font>가 초기화됩니다.","sanitizedDescription":"적이 절망으로 인해 매 초마다 최대 체력에 비례한 피해를 입고 저주가 초기화됩니다.","tooltip":"<span class=\"colorFF9900\">활성화/비활성화: </span>아무무가 울부짖으며 근처 적들에게 걸린 <span class=\"color9b0f5f\">저주</span>를 초기화시키고 매초 {{ e2 }} + 적 최대 체력의 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>%에 해당하는 피해를 입힙니다.","sanitizedTooltip":"활성화/비활성화: 아무무가 울부짖으며 근처 적들에게 걸린 저주를 초기화시키고 매초 {{ e2 }} + 적 최대 체력의 {{ e1 }} (+{{ a1 }})%에 해당하는 피해를 입힙니다.","leveltip":{"label":["체력 비례 피해량","기본 피해량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"AuraofDespair.png","sprite":"spell0.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"초당 마나 {{ cost }}","maxrank":5,"cost":[8,8,8,8,8],"costBurn":"8","cooldown":[1,1,1,1,1],"cooldownBurn":"1","effect":[null,[1,1.25,1.5,1.75,2],[10,15,20,25,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1/1.25/1.5/1.75/2","10/15/20/25/30","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.01]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"AuraofDespair"},{"name":"짜증내기","description":"아무무가 받는 물리 피해를 영구적으로 감소시킵니다. 활성화시 아무무가 주변 적에게 분노를 방출합니다. 아무무가 공격 당할 때마다 짜증내기의 대기 시간이 0.5초씩 감소합니다.","sanitizedDescription":"아무무가 받는 물리 피해를 영구적으로 감소시킵니다. 활성화시 아무무가 주변 적에게 분노를 방출합니다. 아무무가 공격 당할 때마다 짜증내기의 대기 시간이 0.5초씩 감소합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>아무무가 받는 물리 피해를 {{ e1 }} 감소시킵니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>아무무가 짜증을 내며 주변의 적들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br /><span class=\"size16 color8C8C8C\">아무무가 기본 공격에 적중당할 때마다 짜증내기의 재사용 대기시간이 0.5초씩 감소합니다.","sanitizedTooltip":"기본 지속 효과: 아무무가 받는 물리 피해를 {{ e1 }} 감소시킵니다. 사용 시: 아무무가 짜증을 내며 주변의 적들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 아무무가 기본 공격에 적중당할 때마다 짜증내기의 재사용 대기시간이 0.5초씩 감소합니다.","leveltip":{"label":["피해 감소량","재사용 대기시간","피해량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cooldown }} -> {{ cooldownNL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"Tantrum.png","sprite":"spell0.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[35,35,35,35,35],"costBurn":"35","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[2,4,6,8,10],[75,100,125,150,175],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2/4/6/8/10","75/100/125/150/175","0.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"Tantrum"},{"name":"슬픈 미라의 저주","description":"아무무가 붕대로 주변 유닛을 휘감아 <font color='#9b0f5f'>저주</font>를 내리고 공격과 이동을 막으며 피해를 입힙니다.","sanitizedDescription":"아무무가 붕대로 주변 유닛을 휘감아 저주를 내리고 공격과 이동을 막으며 피해를 입힙니다.","tooltip":"아무무가 주변 적을 옭아매 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 <span class=\"color9b0f5f\">저주</span>를 내리며, 2초 동안 공격과 움직임을 봉쇄합니다.","sanitizedTooltip":"아무무가 주변 적을 옭아매 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 저주를 내리며, 2초 동안 공격과 움직임을 봉쇄합니다.","leveltip":{"label":["피해량","마나 소모량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CurseoftheSadMummy.png","sprite":"spell0.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,150,200],"costBurn":"100/150/200","cooldown":[150,130,110],"cooldownBurn":"150/130/110","effect":[null,[150,250,350],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","2","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[550,550,550],"rangeBurn":"550","key":"CurseoftheSadMummy"}],"passive":{"name":"저주의 손길","description":"아무무의 기본 공격을 받은 대상은 3초 동안 <font color='#9b0f5f'>저주</font>에 걸려 마법 피해를 입을 때마다 10%의 추가 고정 피해를 받습니다.","sanitizedDescription":"아무무의 기본 공격을 받은 대상은 3초 동안 저주에 걸려 마법 피해를 입을 때마다 10%의 추가 고정 피해를 받습니다.","image":{"full":"Amumu_Passive.png","sprite":"passive0.png","group":"passive","x":192,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Amumu","title":"AmumuARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3152,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3143,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Amumu","title":"AmumuCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3748,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Amumu","title":"AmumuFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3748,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3143,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3025,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Amumu","title":"AmumuKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3152,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3143,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Amumu","title":"AmumuSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3748,"count":1}]}]},{"champion":"Amumu","title":"AmumuSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3110,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3751,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1401,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3193,"count":1},{"id":3075,"count":1},{"id":3110,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Amumu","title":"AmumuTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":1401,"count":1},{"id":3117,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1056,"count":1},{"id":3068,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3090,"count":1},{"id":3170,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3110,"count":1},{"id":3800,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Amumu","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3068,"count":1},{"id":3105,"count":1},{"id":3110,"count":1},{"id":3001,"count":1}]}]}]},"Lulu":{"id":117,"key":"Lulu","name":"룰루","title":"요정 마법사","image":{"full":"Lulu.png","sprite":"champion2.png","group":"champion","x":192,"y":0,"w":48,"h":48},"skins":[{"id":117000,"name":"default","num":0},{"id":117001,"name":"달콤 쌉싸름한 룰루","num":1},{"id":117002,"name":"마녀 룰루","num":2},{"id":117003,"name":"용 조련사 룰루","num":3},{"id":117004,"name":"겨울 동화 룰루","num":4},{"id":117005,"name":"수영장 파티 룰루","num":5},{"id":117006,"name":"별 수호자 룰루","num":6}],"lore":"요들 마법사 룰루는 친구인 요정 픽스와 함께 룬테라를 돌아다니며, 꿈결같은 환상과 공상에서나 나올 법한 생명체를 만들어내는 것으로 유명하다. 룰루는 즉흥적으로 현실을 빚어내고, 세상의 법칙을 왜곡한다. 그녀의 눈에는 물리적 영역의 제약이 따분하게 보일 뿐이다. 다른 이들이 보기에 룰루의 마법은 잘 봐줘야 부자연스럽고 위험하다고 생각할 수도 있지만, 룰루는 누구나 마법 한 번쯤은 사용할 수 있다고 생각한다.","blurb":"요들 마법사 룰루는 친구인 요정 픽스와 함께 룬테라를 돌아다니며, 꿈결같은 환상과 공상에서나 나올 법한 생명체를 만들어내는 것으로 유명하다. 룰루는 즉흥적으로 현실을 빚어내고, 세상의 법칙을 왜곡한다. 그녀의 눈에는 물리적 영역의 제약이 따분하게 보일 뿐이다. 다른 이들이 보기에 룰루의 마법은 잘 봐줘야 부자연스럽고 위험하다고 생각할 수도 있지만, 룰루는 누구나 마법 한 번쯤은 사용할 수 있다고 생각한다.","allytips":["- 반짝반짝 창은 현재 커서 위치에 따라 각도가 틀어질 수 있습니다. 픽스와 룰루에 커서를 가까이 가져가면 스킬 효과 범위가 상당히 변하게 됩니다.","- 도와줘, 픽스!는 픽스가 공격력을 추가해 주도록 원거리 챔피언에게, 급성장은 방어 담당 혹은 전사에게 사용하면 더욱 강력한 전투 개시가 가능해집니다."],"enemytips":["- 룰루의 요정 친구가 가하는 공격은 중간에서 남이 대신 막을 수 있습니다. 미니언 뒤에 숨어 요정의 추가 공격을 피하세요.","- 룰루는 적들이 총공세를 퍼부을 때 특히 대처를 잘하므로 주의하세요! 룰루와 요정을 공격로에서 밀어내려 하기보단 큰 혼란을 줄 수 있는 전술을 사용하세요."],"tags":["Support","Mage"],"partype":"마나","info":{"attack":4,"defense":5,"magic":7,"difficulty":5},"stats":{"armor":28.22,"armorperlevel":3.7,"attackdamage":46.368,"attackdamageperlevel":2.6,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2.25,"crit":0,"critperlevel":0,"hp":525,"hpperlevel":74,"hpregen":6.008,"hpregenperlevel":0.6,"movespeed":330,"mp":350,"mpperlevel":55,"mpregen":11,"mpregenperlevel":0.6,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"반짝반짝 창","description":"픽스와 룰루가 각각 마법 화살을 하나씩 발사하여 맞는 적의 속도를 대폭 낮춥니다. 적은 하나의 화살에서만 피해를 입습니다.","sanitizedDescription":"픽스와 룰루가 각각 마법 화살을 하나씩 발사하여 맞는 적의 속도를 대폭 낮춥니다. 적은 하나의 화살에서만 피해를 입습니다.","tooltip":"룰루와 픽스가 각자 예리한 마법 화살을 발사하여 처음 맞은 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주고, 추가로 맞은 적에게는 {{ f4 }}<span class=\"color99FF99\"> (+{{ f5 }})</span>의 피해를 입힙니다. 적중당한 적은 {{ e2 }}%만큼 둔화되었다가 {{ e3 }}초에 걸쳐 점차 정상으로 돌아옵니다.<br /><br />스킬 사용 시, 적 하나당 최대 <span class=\"color99FF99\">{{ f6 }}</span>의 피해만 입힐 수 있습니다.","sanitizedTooltip":"룰루와 픽스가 각자 예리한 마법 화살을 발사하여 처음 맞은 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 주고, 추가로 맞은 적에게는 {{ f4 }} (+{{ f5 }})의 피해를 입힙니다. 적중당한 적은 {{ e2 }}%만큼 둔화되었다가 {{ e3 }}초에 걸쳐 점차 정상으로 돌아옵니다. 스킬 사용 시, 적 하나당 최대 {{ f6 }}의 피해만 입힐 수 있습니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LuluQ.png","sprite":"spell6.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[7,7,7,7,7],"cooldownBurn":"7","effect":[null,[80,125,170,215,260],[80,80,80,80,80],[2,2,2,2,2],[0,0,0,0,0],[0.7,0.7,0.7,0.7,0.7],[8,8,8,8,8],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/125/170/215/260","80","2","0","0.7","8","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[925,925,925,925,925],"rangeBurn":"925","key":"LuluQ"},{"name":"변덕쟁이","description":"아군에게 사용하면 잠깐 동안 대상의 공격 속도와 이동 속도가 상승합니다. 적에게 시전하면 기본 공격이나 스킬 시전이 불가능한 귀여운 생물로 변합니다.","sanitizedDescription":"아군에게 사용하면 잠깐 동안 대상의 공격 속도와 이동 속도가 상승합니다. 적에게 시전하면 기본 공격이나 스킬 시전이 불가능한 귀여운 생물로 변합니다.","tooltip":"<span class=\"colorCCFF99\">아군에게 시전: </span>{{ e5 }}초 동안 대상 아군의 이동 속도가 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>%만큼, 공격 속도가 {{ e7 }}%만큼 상승합니다.<br /><br /><span class=\"colorFF9999\">적에게 시전: </span>{{ e3 }}초 동안 적 챔피언을 변이시켜 기본 공격이나 스킬 공격을 할 수 없게 만들고, 기본 이동 속도를 {{ e4 }}만큼 감소시킵니다.","sanitizedTooltip":"아군에게 시전: {{ e5 }}초 동안 대상 아군의 이동 속도가 {{ e1 }} (+{{ a2 }})%만큼, 공격 속도가 {{ e7 }}%만큼 상승합니다. 적에게 시전: {{ e3 }}초 동안 적 챔피언을 변이시켜 기본 공격이나 스킬 공격을 할 수 없게 만들고, 기본 이동 속도를 {{ e4 }}만큼 감소시킵니다.","leveltip":{"label":["이동 및 공격 속도 지속 시간","추가 공격 속도","변신 지속 시간","재사용 대기시간"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ e7 }}% -> {{ e7NL }}%","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LuluW.png","sprite":"spell6.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,65,65,65,65],"costBurn":"65","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[30,30,30,30,30],[0,0,0,0,0],[1.25,1.5,1.75,2,2.25],[60,60,60,60,60],[3,3.25,3.5,3.75,4],[0.01,0.01,0.01,0.01,0.01],[25,30,35,40,45],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30","0","1.25/1.5/1.75/2/2.25","60","3/3.25/3.5/3.75/4","0.01","25/30/35/40/45","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.05]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"LuluW"},{"name":"도와줘, 픽스!","description":"아군에게 시전하면 픽스가 대상에게 점프하여 보호막을 씌워줍니다. 그 다음 대상을 따라다니며 공격을 돕습니다. 적에게 시전하면 픽스가 대상에게 점프하여 피해를 줍니다. 그 다음 대상을 따라다니며 위치를 확인할 수 있도록 해 줍니다.","sanitizedDescription":"아군에게 시전하면 픽스가 대상에게 점프하여 보호막을 씌워줍니다. 그 다음 대상을 따라다니며 공격을 돕습니다. 적에게 시전하면 픽스가 대상에게 점프하여 피해를 줍니다. 그 다음 대상을 따라다니며 위치를 확인할 수 있도록 해 줍니다.","tooltip":"<span class=\"colorCCFF99\">아군에게 시전: </span>픽스가 룰루 대신 대상에게 점프한 다음 {{ e1 }}초 동안 따라다니며 공격을 돕습니다. 이 아군이 챔피언일 경우, 픽스는 {{ e1 }}초 동안 {{ e2 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 피해를 흡수하는 보호막을 씌워 줍니다.<br /><br /><span class=\"colorFF9999\">적에게 시전: </span>픽스가 대상 적 유닛에게 {{ e4 }}<span class=\"color99FF99\"> (+{{ a2 }})</span>의 마법 피해를 줍니다. 그 후 픽스가 {{ e6 }}초 동안 대상을 따라다녀 <span class=\"coloree91d7\">절대 시야</span>가 생깁니다.</span> ","sanitizedTooltip":"아군에게 시전: 픽스가 룰루 대신 대상에게 점프한 다음 {{ e1 }}초 동안 따라다니며 공격을 돕습니다. 이 아군이 챔피언일 경우, 픽스는 {{ e1 }}초 동안 {{ e2 }} (+{{ a1 }})의 피해를 흡수하는 보호막을 씌워 줍니다. 적에게 시전: 픽스가 대상 적 유닛에게 {{ e4 }} (+{{ a2 }})의 마법 피해를 줍니다. 그 후 픽스가 {{ e6 }}초 동안 대상을 따라다녀 절대 시야가 생깁니다.","leveltip":{"label":["보호막 체력","피해량","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LuluE.png","sprite":"spell6.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[6,6,6,6,6],[70,105,140,175,210],[50,50,50,50,50],[80,110,140,170,200],[25,25,25,25,25],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","6","70/105/140/175/210","50","80/110/140/170/200","25","4","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]},{"key":"a2","link":"spelldamage","coeff":[0.4]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"LuluE"},{"name":"급성장","description":"룰루가 아군의 몸집을 키우며 근처의 적들을 공중으로 띄워올리고, 아군의 체력을 대폭 높여줍니다. 이후 몇 초 동안 해당 아군에게 오오라가 생겨 근처의 적들은 속도가 느려집니다.","sanitizedDescription":"룰루가 아군의 몸집을 키우며 근처의 적들을 공중으로 띄워올리고, 아군의 체력을 대폭 높여줍니다. 이후 몇 초 동안 해당 아군에게 오오라가 생겨 근처의 적들은 속도가 느려집니다.","tooltip":"룰루가 아군의 몸집을 키우며, 대상 근처의 적들을 공중으로 띄웁니다. {{ e4 }}초 동안 아군은 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 추가 체력을 얻고, 근처의 적들은 {{ e2 }}%만큼 느려집니다.","sanitizedTooltip":"룰루가 아군의 몸집을 키우며, 대상 근처의 적들을 공중으로 띄웁니다. {{ e4 }}초 동안 아군은 {{ e1 }} (+{{ a1 }})의 추가 체력을 얻고, 근처의 적들은 {{ e2 }}%만큼 느려집니다.","leveltip":{"label":["추가 체력","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LuluR.png","sprite":"spell6.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,95,80],"cooldownBurn":"110/95/80","effect":[null,[300,450,600],[30,45,60],[1,1,1],[7,7,7],[50,50,50],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","300/450/600","30/45/60","1","7","50","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[900,900,900],"rangeBurn":"900","key":"LuluR"}],"passive":{"name":"요정 친구 픽스","description":"픽스는 룰루와 함께 다니는 악동 요정입니다. 픽스는 룰루가 공격하는 대상에게 마력을 모아 집중 공격을 퍼붓습니다.","sanitizedDescription":"픽스는 룰루와 함께 다니는 악동 요정입니다. 픽스는 룰루가 공격하는 대상에게 마력을 모아 집중 공격을 퍼붓습니다.","image":{"full":"Lulu_PixFaerieCompanion.png","sprite":"passive2.png","group":"passive","x":192,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Lulu","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Lulu","title":"LuluARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3089,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3100,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3190,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lulu","title":"LuluCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3303,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":2301,"count":1},{"id":3504,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2031,"count":1},{"id":2139,"count":1},{"id":3364,"count":1}]}]},{"champion":"Lulu","title":"LuluFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3303,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3190,"count":1},{"id":3092,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3165,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2139,"count":1},{"id":3364,"count":1}]}]},{"champion":"Lulu","title":"LuluKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":2031,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3174,"count":1},{"id":3089,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3100,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2139,"count":1}]}]},{"champion":"Lulu","title":"LuluSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":2301,"count":1},{"id":3504,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3174,"count":1},{"id":3800,"count":1},{"id":3050,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2031,"count":1},{"id":2139,"count":1},{"id":3364,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":1058,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3102,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lulu","title":"LuluSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":2301,"count":1},{"id":3504,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3050,"count":1},{"id":3800,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]}]},{"champion":"Lulu","title":"LuluSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":2301,"count":1},{"id":3504,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3174,"count":1},{"id":3800,"count":1},{"id":3050,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3107,"count":1},{"id":3222,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":3364,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":1058,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3089,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3102,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lulu","title":"LuluTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3090,"count":1},{"id":3174,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3027,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3170,"count":1},{"id":3060,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Morgana":{"id":25,"key":"Morgana","name":"모르가나","title":"타락한 천사","image":{"full":"Morgana.png","sprite":"champion2.png","group":"champion","x":144,"y":48,"w":48,"h":48},"skins":[{"id":25000,"name":"default","num":0},{"id":25001,"name":"추방당한 모르가나","num":1},{"id":25002,"name":"제빵여왕 모르가나","num":2},{"id":25003,"name":"칼날천사 모르가나","num":3},{"id":25004,"name":"검은 가시 모르가나","num":4},{"id":25005,"name":"유령 신부 모르가나","num":5},{"id":25006,"name":"승리의 모르가나","num":6},{"id":25010,"name":"달빛 악령 모르가나","num":10},{"id":25011,"name":"마녀 모르가나","num":11}],"lore":"복수심에 사로잡힌 모르가나는 고통과 흑마법을 이용해 강한 힘을 손에 넣었다. 모르가나는 한때는 우아하고 빛나는 존재였지만 고대에 시작된 갈등으로 동족에게 버림받아 영혼이 부서져 현재와 같이 잔인하게 고통을 가하는 타락천사가 되었다. 모르가나는 자신이 최후의 일격을 날리고 복수를 달성할 사람이라는 예언을 믿으며, 끝없이 성장하는 힘에 대한 욕망을 안고서 때를 기다리고 있다.","blurb":"복수심에 사로잡힌 모르가나는 고통과 흑마법을 이용해 강한 힘을 손에 넣었다. 모르가나는 한때는 우아하고 빛나는 존재였지만 고대에 시작된 갈등으로 동족에게 버림받아 영혼이 부서져 현재와 같이 잔인하게 고통을 가하는 타락천사가 되었다. 모르가나는 자신이 최후의 일격을 날리고 복수를 달성할 사람이라는 예언을 믿으며, 끝없이 성장하는 힘에 대한 욕망을 안고서 때를 기다리고 있다.","allytips":["- 칠흑의 방패를 잘 활용하면 팀간 전투의 결과를 바꿀 수도 있습니다.","- 생존력을 높여주는 아이템을 갖추고 칠흑의 방패와 영혼의 족쇄 스킬을 사용하면 모르가나를 죽이기 매우 힘들게 됩니다.","- 공격로에 혼자 있다면 고통의 대지 스킬로 다수의 미니언을 손쉽게 사냥할 수 있습니다."],"enemytips":["- 고통의 대지 스킬은 체력이 대폭 떨어진 유닛에게 큰 피해를 입힙니다. 체력이 낮을 때는 모르가나의 사거리 안에 갇히지 않도록 주의하세요.","- 모르가나에게는 효과적인 연계 공격을 위해서 어둠의 속박으로 먼저 묶을 때가 많습니다. 미니언을 방패로 삼아 어둠의 속박을 피하십시오."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":1,"defense":6,"magic":8,"difficulty":1},"stats":{"armor":25.384,"armorperlevel":3.8,"attackdamage":55.46,"attackdamageperlevel":3.5,"attackrange":450,"attackspeedoffset":0,"attackspeedperlevel":1.53,"crit":0,"critperlevel":0,"hp":559.48,"hpperlevel":90,"hpregen":5.708,"hpregenperlevel":0.6,"movespeed":335,"mp":340.8,"mpperlevel":60,"mpregen":11.5,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"어둠의 속박","description":"모르가나가 흑마법으로 이루어진 구를 발사합니다. 맞은 적은 마법 피해를 입고 일정 시간 속박당합니다.","sanitizedDescription":"모르가나가 흑마법으로 이루어진 구를 발사합니다. 맞은 적은 마법 피해를 입고 일정 시간 속박당합니다.","tooltip":"어둠의 에너지를 발사하여 첫 번째로 명중한 대상을 {{ e2 }}초 동안 속박하고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"어둠의 에너지를 발사하여 첫 번째로 명중한 대상을 {{ e2 }}초 동안 속박하고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","묶기 지속 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"DarkBindingMissile.png","sprite":"spell7.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[11,11,11,11,11],"cooldownBurn":"11","effect":[null,[80,135,190,245,300],[2,2.25,2.5,2.75,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/135/190/245/300","2/2.25/2.5/2.75/3","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.9]}],"range":[1175,1175,1175,1175,1175],"rangeBurn":"1175","key":"DarkBindingMissile"},{"name":"고통의 대지","description":"부정한 기운으로 지정한 지역을 오염시킵니다. 해당 지역에 서 있는 적 유닛이 지속적으로 피해를 입습니다.","sanitizedDescription":"부정한 기운으로 지정한 지역을 오염시킵니다. 해당 지역에 서 있는 적 유닛이 지속적으로 피해를 입습니다.","tooltip":"지정한 지역에 {{ e7 }}초 동안 저주를 내립니다. 저주 받은 대지 위에 있는 적은 잃은 체력에 비례하여 매 초 {{ e5 }} <span class=\"color99FF99\">(+{{ a1 }})</span>에서 {{ e6 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입습니다.<br /><br /><span class=\"colorE9DDAB\">영혼 흡수</span>로 체력을 회복할 때마다 고통의 대지 재사용 대기시간이 {{ e4 }}%씩 감소합니다.","sanitizedTooltip":"지정한 지역에 {{ e7 }}초 동안 저주를 내립니다. 저주 받은 대지 위에 있는 적은 잃은 체력에 비례하여 매 초 {{ e5 }} (+{{ a1 }})에서 {{ e6 }} (+{{ a2 }})의 마법 피해를 입습니다. 영혼 흡수로 체력을 회복할 때마다 고통의 대지 재사용 대기시간이 {{ e4 }}%씩 감소합니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e5 }} -> {{ e5NL }} ","{{ cost }} -> {{ costNL }}"]},"image":{"full":"TormentedSoil.png","sprite":"spell7.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,85,100,115,130],"costBurn":"70/85/100/115/130","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[8,16,24,32,40],[0.5,0.5,0.5,0.5,0.5],[280,280,280,280,280],[5,5,5,5,5],[16,32,48,64,80],[24,48,72,96,120],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","8/16/24/32/40","0.5","280","5","16/32/48/64/80","24/48/72/96/120","5","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.22]},{"key":"a2","link":"spelldamage","coeff":[0.33]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"TormentedSoil"},{"name":"칠흑의 방패","description":"아군 챔피언에게 보호막을 걸어줍니다. 대상은 보호막이 사라질 때까지 마법 피해와 방해 효과가 있는 스킬에 영향을 받지 않습니다.","sanitizedDescription":"아군 챔피언에게 보호막을 걸어줍니다. 대상은 보호막이 사라질 때까지 마법 피해와 방해 효과가 있는 스킬에 영향을 받지 않습니다.","tooltip":"아군 챔피언에게 {{ e2 }}초 동안 지속되는 보호막을 칩니다. 이 보호막은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 흡수하고 유지되는 동안 모든 종류의 방해 효과에 면역이 됩니다.","sanitizedTooltip":"아군 챔피언에게 {{ e2 }}초 동안 지속되는 보호막을 칩니다. 이 보호막은 {{ e1 }} (+{{ a1 }})의 마법 피해를 흡수하고 유지되는 동안 모든 종류의 방해 효과에 면역이 됩니다.","leveltip":{"label":["보호막 체력","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"BlackShield.png","sprite":"spell7.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[23,21,19,17,15],"cooldownBurn":"23/21/19/17/15","effect":[null,[70,140,210,280,350],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/140/210/280/350","5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"BlackShield"},{"name":"영혼의 족쇄","description":"주변의 적 챔피언에게 마력의 사슬을 걸어 먼저 피해를 입히고 이동 속도를 늦춥니다. 적 챔피언들이 계속 모르가나 근처에 머물면 몇 초 뒤 다시 한 번 피해를 주며 적을 기절시킵니다.","sanitizedDescription":"주변의 적 챔피언에게 마력의 사슬을 걸어 먼저 피해를 입히고 이동 속도를 늦춥니다. 적 챔피언들이 계속 모르가나 근처에 머물면 몇 초 뒤 다시 한 번 피해를 주며 적을 기절시킵니다.","tooltip":"주변의 적 챔피언에게 어둠의 사슬을 걸어 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고, {{ e3 }}초 동안 {{ e4 }}% 둔화를 걸며 <span class=\"coloree91d7\">절대 시야</span>를 얻습니다. 사슬을 건 상태로 {{ e3 }}초가 지나면 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 추가 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다.<br /><br />적 챔피언이 모르가나에게서 멀리 가면 사슬이 끊어집니다.","sanitizedTooltip":"주변의 적 챔피언에게 어둠의 사슬을 걸어 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고, {{ e3 }}초 동안 {{ e4 }}% 둔화를 걸며 절대 시야를 얻습니다. 사슬을 건 상태로 {{ e3 }}초가 지나면 {{ e1 }} (+{{ a1 }})의 추가 마법 피해를 입히고 {{ e2 }}초 동안 기절시킵니다. 적 챔피언이 모르가나에게서 멀리 가면 사슬이 끊어집니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SoulShackles.png","sprite":"spell7.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[150,225,300],[1.5,1.5,1.5],[3,3,3],[20,20,20],[575,575,575],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/225/300","1.5","3","20","575","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]},{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[625,625,625],"rangeBurn":"625","key":"SoulShackles"}],"passive":{"name":"영혼 흡수","description":"모르가나가 스킬로 챔피언 및 대형 미니언, 대형 몬스터에게 피해를 입히면 체력이 회복됩니다.","sanitizedDescription":"모르가나가 스킬로 챔피언 및 대형 미니언, 대형 몬스터에게 피해를 입히면 체력이 회복됩니다.","image":{"full":"FallenAngel_Empathize.png","sprite":"passive2.png","group":"passive","x":144,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Morgana","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Morgana","title":"MorganaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3020,"count":1},{"id":3098,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3092,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Morgana","title":"MorganaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3303,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3107,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3050,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Morgana","title":"MorganaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2003,"count":3},{"id":3303,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3050,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3060,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Morgana","title":"MorganaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3020,"count":1},{"id":3098,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3174,"count":1},{"id":3092,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Morgana","title":"MorganaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3107,"count":1},{"id":3117,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3050,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]}]},{"champion":"Morgana","title":"MorganaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3092,"count":1},{"id":3107,"count":1},{"id":3117,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":1402,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3157,"count":1},{"id":3135,"count":1},{"id":3050,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3174,"count":1},{"id":3190,"count":1},{"id":3102,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3102,"count":1},{"id":3174,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Morgana","title":"MorganaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3090,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Nocturne":{"id":56,"key":"Nocturne","name":"녹턴","title":"영원한 악몽","image":{"full":"Nocturne.png","sprite":"champion2.png","group":"champion","x":384,"y":48,"w":48,"h":48},"skins":[{"id":56000,"name":"default","num":0},{"id":56001,"name":"얼어붙은 공포 녹턴","num":1},{"id":56002,"name":"공허의 녹턴","num":2},{"id":56003,"name":"약탈자 녹턴","num":3},{"id":56004,"name":"유령 녹턴","num":4},{"id":56005,"name":"이터늄 녹턴","num":5},{"id":56006,"name":"저주받은 망령 녹턴","num":6}],"lore":"자아를 가진 모든 존재는 악몽에 시달린다. 그리고 온갖 사악한 꿈의 집합체 속에서 녹턴이 태어났다. 순수한 악의 힘 그 자체인 녹턴은 흐르는 듯한 혼돈의 형상을 한 그림자다. 얼굴은 없지만 차갑게 빛나는 눈을 지녔으며, 팔에는 흉악한 칼날이 자리 잡고 있다. 영혼계로부터 탈출한 녹턴은 진정한 어둠 속에서나 어울릴법한 공포를 먹이 삼아 깨어 있는 세계에 나타났다.","blurb":"자아를 가진 모든 존재는 악몽에 시달린다. 그리고 온갖 사악한 꿈의 집합체 속에서 녹턴이 태어났다. 순수한 악의 힘 그 자체인 녹턴은 흐르는 듯한 혼돈의 형상을 한 그림자다. 얼굴은 없지만 차갑게 빛나는 눈을 지녔으며, 팔에는 흉악한 칼날이 자리 잡고 있다. 영혼계로부터 탈출한 녹턴은 진정한 어둠 속에서나 어울릴법한 공포를 먹이 삼아 깨어 있는 세계에 나타났다.","allytips":["- 피해망상 스킬은 모든 적군의 시야를 방해하므로 꼭 직접 공격용으로 사용하지 않아도 효과적입니다.","- 황혼의 인도자는 공격에만 사용하는 능력이 아닙니다. 전투 시 간격을 좁히거나 위기에서 탈출할 때도 사용할 수 있습니다.","- 어둠의 장막을 피해망상과 함께 사용하십시오. 적이 혼란에 빠져 플레이어의 주문 방어막에 결정적인 방해 효과 스킬을 낭비할지도 모릅니다."],"enemytips":["- 피해망상이 시전되었을 때는 되도록 여러 명의 아군과 가까이 붙어 계십시오!","- 녹턴의 말할 수 없는 공포 스킬은 거리가 멀면 실패하므로 이동 관련 스킬이나 주문이 있다면 적절하게 사용하십시오."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":9,"defense":5,"magic":2,"difficulty":4},"stats":{"armor":36,"armorperlevel":3.5,"attackdamage":67.21,"attackdamageperlevel":3.1,"attackrange":125,"attackspeedoffset":-0.065,"attackspeedperlevel":2.7,"crit":0,"critperlevel":0,"hp":582.8,"hpperlevel":85,"hpregen":8.26,"hpregenperlevel":0.75,"movespeed":345,"mp":273.8,"mpperlevel":35,"mpregen":6.756,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"황혼의 인도자","description":"녹턴이 그림자 칼날을 던져 피해를 입히고 황혼의 궤적을 남깁니다. 황혼의 칼날에 적중당한 적 챔피언들 또한 황혼의 궤적을 남깁니다. 궤적에 있는 동안 녹턴은 다른 유닛을 통과할 수 있게 되며 이동 속도 및 공격력이 증가합니다.","sanitizedDescription":"녹턴이 그림자 칼날을 던져 피해를 입히고 황혼의 궤적을 남깁니다. 황혼의 칼날에 적중당한 적 챔피언들 또한 황혼의 궤적을 남깁니다. 궤적에 있는 동안 녹턴은 다른 유닛을 통과할 수 있게 되며 이동 속도 및 공격력이 증가합니다.","tooltip":"녹턴이 그림자 칼날을 던져 {{ e2 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 {{ e3 }}초 동안 황혼의 궤적을 남깁니다. 피격당한 적 챔피언 역시 황혼의 궤적을 남깁니다.<br /><br />궤적에 있는 동안 녹턴은 다른 유닛과 충돌하지 않으며, 이동 속도가 {{ e1 }}% 증가하고 공격력이 {{ e4 }} 상승합니다.","sanitizedTooltip":"녹턴이 그림자 칼날을 던져 {{ e2 }} (+{{ f1 }})의 물리 피해를 입히고 {{ e3 }}초 동안 황혼의 궤적을 남깁니다. 피격당한 적 챔피언 역시 황혼의 궤적을 남깁니다. 궤적에 있는 동안 녹턴은 다른 유닛과 충돌하지 않으며, 이동 속도가 {{ e1 }}% 증가하고 공격력이 {{ e4 }} 상승합니다.","leveltip":{"label":["피해량","이동 속도 증가량","추가 공격력","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}"," {{ e1 }}% -> {{ e1NL }}%","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NocturneDuskbringer.png","sprite":"spell8.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[15,20,25,30,35],[65,110,155,200,245],[5,5,5,5,5],[15,25,35,45,55],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/20/25/30/35","65/110/155/200/245","5","15/25/35/45/55","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.75]}],"range":[1125,1125,1125,1125,1125],"rangeBurn":"1125","key":"NocturneDuskbringer"},{"name":"어둠의 장막","description":"녹턴이 자신의 검을 강화하여 추가 공격 속도를 얻습니다. 스킬 사용 시 녹턴이 그림자 속으로 몸을 숨겨 적의 스킬을 한 번 막아주는 보호막을 생성합니다. 성공적으로 적의 스킬을 막았을 경우 추가 공격 속도가 2배로 올라갑니다.","sanitizedDescription":"녹턴이 자신의 검을 강화하여 추가 공격 속도를 얻습니다. 스킬 사용 시 녹턴이 그림자 속으로 몸을 숨겨 적의 스킬을 한 번 막아주는 보호막을 생성합니다. 성공적으로 적의 스킬을 막았을 경우 추가 공격 속도가 2배로 올라갑니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 녹턴의 공격 속도가 {{ e1 }}% 오릅니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 녹턴이 1.5초 동안 마법 방패를 생성하여 적의 다음 스킬을 방어합니다. <br /><br />방패로 스킬을 막아낼 경우 5초 동안 녹턴의 공격 속도가 2배로 상승합니다.","sanitizedTooltip":"기본 지속 효과: 녹턴의 공격 속도가 {{ e1 }}% 오릅니다. 사용 시: 녹턴이 1.5초 동안 마법 방패를 생성하여 적의 다음 스킬을 방어합니다. 방패로 스킬을 막아낼 경우 5초 동안 녹턴의 공격 속도가 2배로 상승합니다.","leveltip":{"label":["추가 공격 속도","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NocturneShroudofDarkness.png","sprite":"spell8.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[20,18,16,14,12],"cooldownBurn":"20/18/16/14/12","effect":[null,[20,25,30,35,40],[0.2,0.05,0.05,0.05,0.05],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/25/30/35/40","0.2/0.05/0.05/0.05/0.05","0","0","0","0","0","0","0","0"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"NocturneShroudofDarkness"},{"name":"말할 수 없는 공포","description":"녹턴이 대상의 정신에 악몽을 심어 매 초마다 피해를 가하며 지속 시간이 끝날 때까지 스킬의 사거리 밖으로 벗어나지 않을 경우 공포에 걸리도록 합니다.","sanitizedDescription":"녹턴이 대상의 정신에 악몽을 심어 매 초마다 피해를 가하며 지속 시간이 끝날 때까지 스킬의 사거리 밖으로 벗어나지 않을 경우 공포에 걸리도록 합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 녹턴이 공포에 걸린 적들을 향해 갈 때 이동 속도가 대폭 상승합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 녹턴이 대상의 정신에 악몽을 심어 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 {{ e3 }}초간 가합니다. 만약 대상이 스킬 유지 시간 동안 스킬의 사정 거리 안에 있을 경우 대상은 {{ e2 }}초간 공포에 빠집니다.","sanitizedTooltip":"기본 지속 효과: 녹턴이 공포에 걸린 적들을 향해 갈 때 이동 속도가 대폭 상승합니다. 사용 시: 녹턴이 대상의 정신에 악몽을 심어 {{ e1 }} (+{{ a1 }})의 마법 피해를 {{ e3 }}초간 가합니다. 만약 대상이 스킬 유지 시간 동안 스킬의 사정 거리 안에 있을 경우 대상은 {{ e2 }}초간 공포에 빠집니다.","leveltip":{"label":["피해량","공포 지속 시간","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NocturneUnspeakableHorror.png","sprite":"spell8.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[15,14,13,12,11],"cooldownBurn":"15/14/13/12/11","effect":[null,[80,125,170,215,260],[1.25,1.5,1.75,2,2.25],[2,2,2,2,2],[465,465,465,465,465],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/125/170/215/260","1.25/1.5/1.75/2/2.25","2","465","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[425,425,425,425,425],"rangeBurn":"425","key":"NocturneUnspeakableHorror"},{"name":"피해망상","description":"녹턴이 모든 적 챔피언의 시야 반경을 줄이고 적 챔피언들 사이의 시야 공유를 중단합니다. 스킬 사용 후 적 챔피언을 대상으로 설정할 경우 그 챔피언에게 날아가 공격합니다.","sanitizedDescription":"녹턴이 모든 적 챔피언의 시야 반경을 줄이고 적 챔피언들 사이의 시야 공유를 중단합니다. 스킬 사용 후 적 챔피언을 대상으로 설정할 경우 그 챔피언에게 날아가 공격합니다.","tooltip":"녹턴이 모든 적 챔피언의 시야 반경을 줄이고 적 챔피언들 사이의 시야 공유를 4초 동안 중단합니다.<br /><br />피해망상이 발동된 동안 녹턴은 적 챔피언에게 돌격하여 {{ e3 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힐 수 있습니다.","sanitizedTooltip":"녹턴이 모든 적 챔피언의 시야 반경을 줄이고 적 챔피언들 사이의 시야 공유를 4초 동안 중단합니다. 피해망상이 발동된 동안 녹턴은 적 챔피언에게 돌격하여 {{ e3 }} (+{{ f1 }})의 물리 피해를 입힐 수 있습니다.","leveltip":{"label":["피해량","사거리","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NocturneParanoia.png","sprite":"spell8.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[150,125,100],"cooldownBurn":"150/125/100","effect":[null,[250,250,250],[2500,3250,4000],[150,250,350],[3500,4250,5000],[1800,1800,1800],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","250","2500/3250/4000","150/250/350","3500/4250/5000","1800","0","0","0","0","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[1.2]}],"range":[2500,3250,4000],"rangeBurn":"2500/3250/4000","key":"NocturneParanoia"}],"passive":{"name":"그림자 칼날","description":"10초마다 녹턴의 다음 공격이 주변 적에게 120%의 물리 피해를 입히고 자신은 체력을 회복합니다. <br><br>녹턴이 기본 공격을 할 때마다 그림자 칼날의 재사용 대기시간이 1초 감소합니다.","sanitizedDescription":"10초마다 녹턴의 다음 공격이 주변 적에게 120%의 물리 피해를 입히고 자신은 체력을 회복합니다. 녹턴이 기본 공격을 할 때마다 그림자 칼날의 재사용 대기시간이 1초 감소합니다.","image":{"full":"Nocturne_UmbraBlades.png","sprite":"passive2.png","group":"passive","x":384,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Nocturne","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3133,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3072,"count":1},{"id":3087,"count":1},{"id":3742,"count":1}]}]},{"champion":"Nocturne","title":"NocturneARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3036,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3143,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Nocturne","title":"NocturneCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3142,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Nocturne","title":"NocturneFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3142,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3812,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1},{"id":3022,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3153,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1},{"id":3022,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2043,"count":1},{"id":2140,"count":1},{"id":2032,"count":1}]}]},{"champion":"Nocturne","title":"NocturneKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3036,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3022,"count":1},{"id":3143,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Nocturne","title":"NocturneSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3142,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3022,"count":1}]}]},{"champion":"Nocturne","title":"NocturneSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3134,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3142,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3022,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":1043,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3111,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3022,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]},{"type":"consumablesjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":2140,"count":1}]}]},{"champion":"Nocturne","title":"NocturneTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1036,"count":1},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3044,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3071,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3083,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3153,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Diana":{"id":131,"key":"Diana","name":"다이애나","title":"차가운 달의 분노","image":{"full":"Diana.png","sprite":"champion0.png","group":"champion","x":0,"y":96,"w":48,"h":48},"skins":[{"id":131000,"name":"default","num":0},{"id":131001,"name":"암흑 발키리 다이애나","num":1},{"id":131002,"name":"달의 여신 다이애나","num":2},{"id":131003,"name":"지옥의 다이애나","num":3},{"id":131011,"name":"불의 축제 다이애나","num":11}],"lore":"다이애나는 오늘날 거의 사멸된 고대 종교 '루나리'의 전사이자, 은빛 달의 화신 그 자체다. 그녀는 드높은 타곤 산 꼭대기에 떠오른 천체들의 기운을 온몸으로 받아들였고, 겨울 밤 설원처럼 은은하게 빛나는 갑옷과 초승달 검으로 무장했다. 그러나 인간을 초월한 그녀의 힘이 무엇을 위한 것인지는 아직까지 분명하지 않다. 다이애나는 이 세상에서 자신에게 부여된 사명이 무엇인지 알아내려 애쓰고 있다.","blurb":"다이애나는 오늘날 거의 사멸된 고대 종교 '루나리'의 전사이자, 은빛 달의 화신 그 자체다. 그녀는 드높은 타곤 산 꼭대기에 떠오른 천체들의 기운을 온몸으로 받아들였고, 겨울 밤 설원처럼 은은하게 빛나는 갑옷과 초승달 검으로 무장했다. 그러나 인간을 초월한 그녀의 힘이 무엇을 위한 것인지는 아직까지 분명하지 않다. 다이애나는 이 세상에서 자신에게 부여된 사명이 무엇인지 알아내려 애쓰고 있다.","allytips":["- 초승달 검기를 잘 맞히는 것이 매우 중요하지만, 적중시키지 못해도 적극적으로 사용하세요. 재사용 대기시간이 짧고 마나 소모량도 적기 때문입니다.","- 월광 쇄도를 달빛이 없는 상태에서 사용할지, 초승달 검기를 사용할 수 있을 때까지 기다릴지 상황에 따라 잘 판단하세요.","- 달빛 낙하와 월광 쇄도를 활용해 적을 붙들고, 서늘한 달빛 검 효과로 추가 피해를 입히세요."],"enemytips":["- 초승달 검기는 반드시 피하고, 이 스킬에 적중 당해 달빛 효과를 받을 경우 안전한 장소로 이동해야 합니다.","- 은빛 가호로 생성된 구체는 몇 초 동안만 지속됩니다. 다이애나 주위에 구체가 떠 있다면 잠깐 피했다가 보호막이 사라지고 나서 교전을 시작하세요.","- 다이애나는 달빛 적용 전에도 월광 쇄도를 사용해 매우 공격적인 플레이를 펼칠 수 있습니다. 이럴 땐 다시 유리한 위치를 잡을 수 없도록 둔화나 기절을 걸어 반격하세요."],"tags":["Fighter","Mage"],"partype":"마나","info":{"attack":7,"defense":6,"magic":8,"difficulty":4},"stats":{"armor":31,"armorperlevel":3.6,"attackdamage":53.04,"attackdamageperlevel":3,"attackrange":150,"attackspeedoffset":0,"attackspeedperlevel":2.25,"crit":0,"critperlevel":0,"hp":594,"hpperlevel":95,"hpregen":7.428,"hpregenperlevel":0.85,"movespeed":345,"mp":297.2,"mpperlevel":40,"mpregen":6,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"초승달 검기","description":"다이애나가 검을 휘둘러, 휘어지며 마법 피해를 가한 후 폭발하는 달의 에너지를 발사합니다. 적중당한 적들은 은신 상태가 아닐 경우 달빛을 받아 위치가 노출됩니다. ","sanitizedDescription":"다이애나가 검을 휘둘러, 휘어지며 마법 피해를 가한 후 폭발하는 달의 에너지를 발사합니다. 적중당한 적들은 은신 상태가 아닐 경우 달빛을 받아 위치가 노출됩니다.","tooltip":"달 에너지를 휘어지게 발사하여 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다.<br /><br />적중당한 적들은 은신 상태가 아닐 경우 달빛을 받아 {{ e4 }}초 동안 위치가 노출됩니다.","sanitizedTooltip":"달 에너지를 휘어지게 발사하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 적중당한 적들은 은신 상태가 아닐 경우 달빛을 받아 {{ e4 }}초 동안 위치가 노출됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DianaArc.png","sprite":"spell2.png","group":"spell","x":432,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,55,55,55,55],"costBurn":"55","cooldown":[8,7.5,7,6.5,6],"cooldownBurn":"8/7.5/7/6.5/6","effect":[null,[60,95,130,165,200],[15,15,15,15,15],[55,55,55,55,55],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/95/130/165/200","15","55","3","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"DianaArc"},{"name":"은빛 가호","description":"다이애나가 주위를 돌면서 적에게 접촉하면 폭발하여 해당 지역에 피해를 주는 세 개의 구체를 생성합니다. 또한 잠시 동안 피해를 흡수하는 보호막을 얻습니다. 보호막은 세 번째 구체가 폭발하면 위력이 더 커집니다.","sanitizedDescription":"다이애나가 주위를 돌면서 적에게 접촉하면 폭발하여 해당 지역에 피해를 주는 세 개의 구체를 생성합니다. 또한 잠시 동안 피해를 흡수하는 보호막을 얻습니다. 보호막은 세 번째 구체가 폭발하면 위력이 더 커집니다.","tooltip":"주위를 돌면서 적에게 닿으면 폭발하여 {{ e2 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히는 구체를 세 개 생성합니다. {{ e1 }}초 동안 지속됩니다.<br /><br />또한 일시적으로 보호막을 생성하여 {{ e3 }} <scaleAP>(+{{ a2 }})</scaleAP>의 피해를 흡수합니다. 세 번째 구체가 폭발하면 보호막이 {{ e3 }} <scaleAP>(+{{ a2 }})</scaleAP>만큼 증가합니다.","sanitizedTooltip":"주위를 돌면서 적에게 닿으면 폭발하여 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히는 구체를 세 개 생성합니다. {{ e1 }}초 동안 지속됩니다. 또한 일시적으로 보호막을 생성하여 {{ e3 }} (+{{ a2 }})의 피해를 흡수합니다. 세 번째 구체가 폭발하면 보호막이 {{ e3 }} (+{{ a2 }})만큼 증가합니다.","leveltip":{"label":["피해량","보호막","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"DianaOrbs.png","sprite":"spell2.png","group":"spell","x":0,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,55,70,85,100],"costBurn":"40/55/70/85/100","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[5,5,5,5,5],[22,34,46,58,70],[40,55,70,85,100],[1,1,1,1,1],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5","22/34/46/58/70","40/55/70/85/100","1","5","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"DianaOrbs"},{"name":"달빛 낙하","description":"다이애나가 주위 모든 적을 끌어 당기고 둔화시킵니다. 기본 지속 효과로 다이애나가 스킬을 사용한 후 공격 속도가 증가합니다.","sanitizedDescription":"다이애나가 주위 모든 적을 끌어 당기고 둔화시킵니다. 기본 지속 효과로 다이애나가 스킬을 사용한 후 공격 속도가 증가합니다.","tooltip":"<spellPassive>기본 지속 효과:</spellPassive> 서늘한 달빛 검의 공격 속도 증가 효과가 {{ e3 }}%까지 늘어납니다.<br /><br /><spellActive>사용 시:</spellActive> 주위 모든 적들을 드러내 끌어 당긴 다음 이동 속도를 {{ e2 }}초 동안 {{ e1 }}% 늦춥니다.","sanitizedTooltip":"기본 지속 효과: 서늘한 달빛 검의 공격 속도 증가 효과가 {{ e3 }}%까지 늘어납니다. 사용 시: 주위 모든 적들을 드러내 끌어 당긴 다음 이동 속도를 {{ e2 }}초 동안 {{ e1 }}% 늦춥니다.","leveltip":{"label":["공격 속도","둔화","재사용 대기시간"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DianaVortex.png","sprite":"spell2.png","group":"spell","x":48,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[26,24,22,20,18],"cooldownBurn":"26/24/22/20/18","effect":[null,[35,40,45,50,55],[2,2,2,2,2],[50,60,70,80,90],[3,3,3,3,3],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","35/40/45/50/55","2","50/60/70/80/90","3","4","0","0","0","0","0"],"range":[450,450,450,450,450],"rangeBurn":"450","key":"DianaVortex"},{"name":"월광 쇄도","description":"다이애나가 적에게 돌진하여 마법 피해를 입힙니다. 달빛 효과를 받고 있는 대상에게 순간 이동하는 경우, 월광 쇄도를 즉시 한 번 더 사용할 수 있습니다.","sanitizedDescription":"다이애나가 적에게 돌진하여 마법 피해를 입힙니다. 달빛 효과를 받고 있는 대상에게 순간 이동하는 경우, 월광 쇄도를 즉시 한 번 더 사용할 수 있습니다.","tooltip":"복수심에 불타는 달의 화신이 되어, 적에게 돌진하여 {{ e2 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다.<br /><br />달빛 효과를 받고 있는 대상에게 돌진한 경우, 월광 쇄도를 즉시 한 번 더 사용할 수 있습니다. 이 때, 다른 모든 적들은 월광 쇄도의 대상이었더라도 달빛 효과가 사라집니다.","sanitizedTooltip":"복수심에 불타는 달의 화신이 되어, 적에게 돌진하여 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 달빛 효과를 받고 있는 대상에게 돌진한 경우, 월광 쇄도를 즉시 한 번 더 사용할 수 있습니다. 이 때, 다른 모든 적들은 월광 쇄도의 대상이었더라도 달빛 효과가 사라집니다.","leveltip":{"label":["피해량","마나 소모량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"DianaTeleport.png","sprite":"spell2.png","group":"spell","x":96,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[50,65,80],"costBurn":"50/65/80","cooldown":[25,20,15],"cooldownBurn":"25/20/15","effect":[null,[4,4,4],[100,160,220],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","4","100/160/220","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[825,825,825],"rangeBurn":"825","key":"DianaTeleport"}],"passive":{"name":"서늘한 달빛 검","description":"매 3번째 공격마다 마나를 회복하고 근처 적들을 베어 추가 마법 피해를 입힙니다. 스킬 사용 시마다 다음 기본 공격 3회의 공격 속도가 빨라집니다.","sanitizedDescription":"매 3번째 공격마다 마나를 회복하고 근처 적들을 베어 추가 마법 피해를 입힙니다. 스킬 사용 시마다 다음 기본 공격 3회의 공격 속도가 빨라집니다.","image":{"full":"Diana_Passive_LunarBlade.png","sprite":"passive0.png","group":"passive","x":0,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Diana","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Diana","title":"DianaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3020,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3115,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Diana","title":"DianaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":3101,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3115,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2055,"count":1},{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Diana","title":"DianaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1058,"count":1},{"id":3108,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3115,"count":1},{"id":3158,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3057,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3115,"count":1},{"id":3001,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Diana","title":"DianaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3115,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1},{"id":2033,"count":1}]}]},{"champion":"Diana","title":"DianaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3115,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3001,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3026,"count":1}]}]},{"champion":"Diana","title":"DianaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3108,"count":1},{"id":3101,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3157,"count":1},{"id":3115,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3102,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3100,"count":1},{"id":3116,"count":1},{"id":3152,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3113,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3115,"count":1},{"id":3135,"count":1},{"id":3100,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3089,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Diana","title":"DianaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3100,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2003,"count":3}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3020,"count":1},{"id":1402,"count":1},{"id":3090,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3001,"count":1},{"id":3100,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3115,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"AurelionSol":{"id":136,"key":"AurelionSol","name":"아우렐리온 솔","title":"별의 창조자","image":{"full":"AurelionSol.png","sprite":"champion0.png","group":"champion","x":384,"y":0,"w":48,"h":48},"skins":[{"id":136000,"name":"default","num":0},{"id":136001,"name":"잿빛 군주 아우렐리온 솔","num":1}],"lore":"아우렐리온 솔은 천상의 경이로운 별들을 손수 빚어 한때 텅 비어있던 광활한 우주를 수놓았다. 그러나 이제 그는 속임수로 자신을 복종시킨 우주 제국의 명령에 따라 자신의 막강한 힘을 발휘해야 하는 처지가 되었다. 별을 만들던 때로 돌아가려는 열망에 불타는 아우렐리온 솔은 자신의 자유를 되찾기 위해서라면 자신의 창조물인 별들을 하늘에서 없앨 각오마저 되어 있다.","blurb":"아우렐리온 솔은 천상의 경이로운 별들을 손수 빚어 한때 텅 비어있던 광활한 우주를 수놓았다. 그러나 이제 그는 속임수로 자신을 복종시킨 우주 제국의 명령에 따라 자신의 막강한 힘을 발휘해야 하는 처지가 되었다. 별을 만들던 때로 돌아가려는 열망에 불타는 아우렐리온 솔은 자신의 자유를 되찾기 위해서라면 자신의 창조물인 별들을 하늘에서 없앨 각오마저 되어 있다.","allytips":["- 혜성전설의 비행 효과를 활용해 은하 해일 폭발 범위를 엄청나게 키울 수 있습니다.","- 필요할 경우, 성운의 공명을 아껴뒀다가 근접 챔피언들을 막는 데 활용하세요. 또는, 둔화 효과를 이용해 거리를 유지하며 멀리서 싸울 수도 있습니다.","- 혜성전설로 맵 이곳 저곳을 빠르게 이동할 수 있습니다. 이 스킬을 활용해 다른 공격로를 압박하세요."],"enemytips":["- 아주 가까운 거리에선 위성에 피해를 입지 않으므로 궤도 안으로 들어가세요.","- 기절 혹은 침묵 효과를 걸면 위성이 사라지므로 유리하게 싸울 수 있습니다.","- 아우렐리온 솔이 직선으로 쫓아올 때 속도가 점점 빨라지지만, 피해를 입히면 이 가속도가 사라집니다.","- 은하 해일 스킬은 범위가 매우 커질 수 있으니 한 곳에 너무 오래 서 있으면 위험합니다!"],"tags":["Mage","Fighter"],"partype":"마나","info":{"attack":2,"defense":3,"magic":8,"difficulty":7},"stats":{"armor":19,"armorperlevel":3.6,"attackdamage":57,"attackdamageperlevel":3.2,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":562,"hpperlevel":92,"hpregen":6.5,"hpregenperlevel":0.6,"movespeed":325,"mp":350,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"은하 해일","description":"아우렐리온 솔이 팽창하는 원반을 만들어냅니다. 원반은 아우렐리온 솔과 아주 멀어지면 폭발하여 적을 기절시키고 피해를 입힙니다.","sanitizedDescription":"아우렐리온 솔이 팽창하는 원반을 만들어냅니다. 원반은 아우렐리온 솔과 아주 멀어지면 폭발하여 적을 기절시키고 피해를 입힙니다.","tooltip":"<span class=\"colorFF9900\">처음 시전: </span>아우렐리온 솔이 신생별의 핵을 만들어냅니다. 신생별은 시간에 따라 커지며 아우렐리온 솔의 이동 속도를 {{ e2 }}% 증가시킵니다.<br /><br />신생별은 아우렐리온 솔의 <span class=\"color308BDB\">궤도 한계</span>에 도달하면 폭발하여, 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e4 }}초 동안 기절시킵니다.<br /><br /><span class=\"colorFF9900\">다시 시전: </span>신생별을 즉시 폭발시킵니다.<br />","sanitizedTooltip":"처음 시전: 아우렐리온 솔이 신생별의 핵을 만들어냅니다. 신생별은 시간에 따라 커지며 아우렐리온 솔의 이동 속도를 {{ e2 }}% 증가시킵니다. 신생별은 아우렐리온 솔의 궤도 한계에 도달하면 폭발하여, 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e4 }}초 동안 기절시킵니다. 다시 시전: 신생별을 즉시 폭발시킵니다.","leveltip":{"label":["피해량","기절 지속 시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"AurelionSolQ.png","sprite":"spell1.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[70,110,150,190,230],[10,10,10,10,10],[20,20,20,20,20],[1.1,1.2,1.3,1.4,1.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","10","20","1.1/1.2/1.3/1.4/1.5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.65]}],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"AurelionSolQ"},{"name":"우주 팽창","description":"아우렐리온 솔이 주위를 도는 위성들을 더 멀리 밀어내며 피해량을 증가시킵니다.","sanitizedDescription":"아우렐리온 솔이 주위를 도는 위성들을 더 멀리 밀어내며 피해량을 증가시킵니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>위성의 기본 피해량이 {{ e2 }}만큼 증가합니다.<br /><br /><span class=\"colorFF9900\">활성화/비활성화: </span>아우렐리온 솔의 위성이 <span class=\"color308BDB\">궤도 한계</span>를 공전하며 {{ e1 }}%, 즉, 총 {{ f1 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 마법 피해를 입힙니다.<br />","sanitizedTooltip":"기본 지속 효과: 위성의 기본 피해량이 {{ e2 }}만큼 증가합니다. 활성화/비활성화: 아우렐리온 솔의 위성이 궤도 한계를 공전하며 {{ e1 }}%, 즉, 총 {{ f1 }} (+{{ f2 }})의 마법 피해를 입힙니다.","leveltip":{"label":["지속 효과 추가 피해량","초당 마나 소모","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AurelionSolW.png","sprite":"spell1.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}, 이후 초당 마나 {{ e3 }}","maxrank":5,"cost":[40,40,40,40,40],"costType":", 이후 초당 마나 {{ e3 }}","costBurn":"40","cooldown":[6,5.5,5,4.5,4],"cooldownBurn":"6/5.5/5/4.5/4","effect":[null,[150,150,150,150,150],[5,10,15,20,25],[22,24,26,28,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","150","5/10/15/20/25","22/24/26/28/30","0","0","0","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"AurelionSolW"},{"name":"혜성전설","description":"아우렐리온 솔이 계속 한 방향으로 움직이면 이동 속도가 증가하다가 날아올라 먼 거리를 비행합니다.","sanitizedDescription":"아우렐리온 솔이 계속 한 방향으로 움직이면 이동 속도가 증가하다가 날아올라 먼 거리를 비행합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>같은 방향으로 계속 이동하면 최대 {{ e2 }}%까지 이동 속도가 상승합니다.<br /><br /><span class=\"colorFF9900\">사용 효과: </span>선택한 방향으로 최대 {{ e3 }} 유닛 거리를 이동 명령을 내릴 때까지 비행합니다. 전투 중이 아닐 때만 사용할 수 있습니다. 아우렐리온 솔은 비행 중에 벽 너머를 볼 수 있으며, 벽 너머에서 보이기도 합니다.<br /><br />챔피언이나 포탑에게 피해를 입으면 땅으로 내려오며 이동 속도 상승 효과가 초기화됩니다.<br />","sanitizedTooltip":"기본 지속 효과: 같은 방향으로 계속 이동하면 최대 {{ e2 }}%까지 이동 속도가 상승합니다. 사용 효과: 선택한 방향으로 최대 {{ e3 }} 유닛 거리를 이동 명령을 내릴 때까지 비행합니다. 전투 중이 아닐 때만 사용할 수 있습니다. 아우렐리온 솔은 비행 중에 벽 너머를 볼 수 있으며, 벽 너머에서 보이기도 합니다. 챔피언이나 포탑에게 피해를 입으면 땅으로 내려오며 이동 속도 상승 효과가 초기화됩니다.","leveltip":{"label":["최대 이동 속도","비행 거리","재사용 대기시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AurelionSolE.png","sprite":"spell1.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[60,55,50,45,40],"cooldownBurn":"60/55/50/45/40","effect":[null,[5,6,7,8,9],[25,30,35,40,45],[3000,4000,5000,6000,7000],[600,600,600,600,600],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5/6/7/8/9","25/30/35/40/45","3000/4000/5000/6000/7000","600","0","0","0","0","0","0"],"range":[3000,4000,5000,6000,7000],"rangeBurn":"3000/4000/5000/6000/7000","key":"AurelionSolE"},{"name":"성운의 공명","description":"아우렐리온 솔이 성운파를 발사하여 적중하는 모든 적에게 피해를 입히고 둔화시키며 가까이 있는 적들을 안전 거리로 밀어냅니다.","sanitizedDescription":"아우렐리온 솔이 성운파를 발사하여 적중하는 모든 적에게 피해를 입히고 둔화시키며 가까이 있는 적들을 안전 거리로 밀어냅니다.","tooltip":"성운파를 뿜어내 적을 {{ e3 }}초 동안 {{ e2 }}% 둔화시키고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />성운파는 또한 근처의 적을 아우렐리온 솔의 <span class=\"color308BDB\">궤도 한계</span>까지 밀어냅니다.<br />","sanitizedTooltip":"성운파를 뿜어내 적을 {{ e3 }}초 동안 {{ e2 }}% 둔화시키고 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 성운파는 또한 근처의 적을 아우렐리온 솔의 궤도 한계까지 밀어냅니다.","leveltip":{"label":["피해량","둔화율","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"AurelionSolR.png","sprite":"spell1.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,90,70],"cooldownBurn":"110/90/70","effect":[null,[150,250,350],[40,50,60],[2,2,2],[0,0,0],[650,650,650],[50,50,50],[1300,1300,1300],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","40/50/60","2","0","650","50","1300","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[1500,1500,1500],"rangeBurn":"1500","key":"AurelionSolR"}],"passive":{"name":"우주의 중심","description":"위성이 아우렐리온 솔의 주위를 돌며 충돌하는 적들에게 마법 피해를 입힙니다.","sanitizedDescription":"위성이 아우렐리온 솔의 주위를 돌며 충돌하는 적들에게 마법 피해를 입힙니다.","image":{"full":"AurelionSol_Passive.png","sprite":"passive0.png","group":"passive","x":384,"y":0,"w":48,"h":48}},"recommended":[{"champion":"AurelionSol","title":"AurelionSolARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3030,"count":1},{"id":3009,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolBEGINNER","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3009,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3089,"count":1},{"id":3102,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3030,"count":1},{"id":3009,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2003,"count":2},{"id":3010,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3030,"count":1},{"id":3009,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3001,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3030,"count":1},{"id":3009,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3030,"count":1},{"id":3009,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"AurelionSol","title":"AurelionSolTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3030,"count":1},{"id":3009,"count":1},{"id":3116,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3001,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3090,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Zyra":{"id":143,"key":"Zyra","name":"자이라","title":"가시 덩굴의 복수","image":{"full":"Zyra.png","sprite":"champion4.png","group":"champion","x":384,"y":48,"w":48,"h":48},"skins":[{"id":143000,"name":"default","num":0},{"id":143001,"name":"불타는 자이라","num":1},{"id":143002,"name":"악령 자이라","num":2},{"id":143003,"name":"SKT T1 자이라","num":3},{"id":143004,"name":"용 소환사 자이라","num":4}],"lore":"고대의 어떤 마법 대재앙에서 태어난 자이라는 자연의 분노가 형상화된 생명체로, 걸음을 내디딜 때마다 새로운 생명을 피워 올리는 고혹적인 모습을 가진 인간과 식물의 혼종이다. 자이라는 발로란의 수많은 필멸자를 자신의 씨앗에서 태어난 후손의 먹잇감과 크게 다르지 않다고 여기며, 치명적인 가시를 날려 필멸자를 사냥하는 데에 거리낌이 없다. 자이라는 진정한 목적은 밝히지 않은 채 세상을 떠돌며 식육 식물 군락을 만들어 그곳의 다른 모든 생명체를 휘감아 처치하려는 태고적부터의 욕구를 충족시키고 있다.","blurb":"고대의 어떤 마법 대재앙에서 태어난 자이라는 자연의 분노가 형상화된 생명체로, 걸음을 내디딜 때마다 새로운 생명을 피워 올리는 고혹적인 모습을 가진 인간과 식물의 혼종이다. 자이라는 발로란의 수많은 필멸자를 자신의 씨앗에서 태어난 후손의 먹잇감과 크게 다르지 않다고 여기며, 치명적인 가시를 날려 필멸자를 사냥하는 데에 거리낌이 없다. 자이라는 진정한 목적은 밝히지 않은 채 세상을 떠돌며 식육 식물 군락을 만들어 그곳의 다른 모든 생명체를 휘감아...","allytips":["- 스킬을 시전한 직후 경로 상에 씨앗을 뿌리면 최적의 위치에 씨앗을 배치할 수 있습니다.","- 씨앗은 아군에게 시야를 확보해 줍니다.","- 자이라는 매복에 탁월합니다. 수풀 안에 씨앗을 심은 다음 적들을 유인하십시오."],"enemytips":["- 자이라의 씨앗은 밟아서 파괴할 수 있습니다. 씨앗을 밟으려고 할 때 자이라가 식물을 키우려 한다면 마지막 순간에 발을 빼서 스킬을 낭비하게 할 수 있습니다.","- 자이라가 너무 먼 곳에 식물을 심었을 때는 자이라에게 가까이 다가가는 것도 좋습니다.","- 와드와 비슷하게 식물도 공격 및 효과에 고정 피해를 입으며, 자동으로 빠르게 소멸합니다.","- 장소를 옮겨가며 전투를 벌이면 심어둔 씨앗을 무용지물로 만들 수 있습니다.","- 맹렬한 성장으로 심은 씨앗은 크기도 더 크고 색깔도 다르며, 해당 지역을 밝혀 아군 팀이 볼 수 있도록 해줍니다."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":4,"defense":3,"magic":8,"difficulty":7},"stats":{"armor":29,"armorperlevel":3,"attackdamage":53.376,"attackdamageperlevel":3.2,"attackrange":575,"attackspeedoffset":0,"attackspeedperlevel":2.11,"crit":0,"critperlevel":0,"hp":504,"hpperlevel":79,"hpregen":5.69,"hpregenperlevel":0.5,"movespeed":340,"mp":334,"mpperlevel":50,"mpregen":11.5,"mpregenperlevel":0.4,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"치명적인 가시","description":"굵은 가시덤불이 지면을 뚫고 나와 폭발하며 해당 지역 안에 있는 적에게 마법 피해를 입힙니다. 씨앗 근처에서 치명적인 가시를 사용하면 가시 발사 꽃이 자라나 원거리에서 적을 공격합니다.","sanitizedDescription":"굵은 가시덤불이 지면을 뚫고 나와 폭발하며 해당 지역 안에 있는 적에게 마법 피해를 입힙니다. 씨앗 근처에서 치명적인 가시를 사용하면 가시 발사 꽃이 자라나 원거리에서 적을 공격합니다.","tooltip":"굵은 가시덤불이 지면을 뚫고 나와 해당 지역 안에 있는 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. <br /><br /><span class=\"colorDDDD77\">가시 정원: </span>씨앗 근처에서 치명적인 가시를 사용하면 가시 발사 꽃이 자라나 {{ f1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다. 가시 발사 꽃은 사거리가 575이며, {{ f2 }}초 동안 유지됩니다.","sanitizedTooltip":"굵은 가시덤불이 지면을 뚫고 나와 해당 지역 안에 있는 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 가시 정원: 씨앗 근처에서 치명적인 가시를 사용하면 가시 발사 꽃이 자라나 {{ f1 }} (+{{ a2 }})의 마법 피해를 입힙니다. 가시 발사 꽃은 사거리가 575이며, {{ f2 }}초 동안 유지됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZyraQ.png","sprite":"spell14.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[7,6.5,6,5.5,5],"cooldownBurn":"7/6.5/6/5.5/5","effect":[null,[60,95,130,165,200],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/95/130/165/200","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]},{"key":"a2","link":"spelldamage","coeff":[0.15]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"ZyraQ"},{"name":"맹렬한 성장","description":"자이라가 60초간 지속되는 씨앗을 심습니다. 씨앗 근처에서 치명적인 가시나 휘감는 뿌리를 사용하면 식물이 자라나 자이라와 함께 싸웁니다. 씨앗은 여러 개를 보관할 수 있으며 적을 처치할 때마다 맹렬한 성장의 재충전 시간이 줄어듭니다.","sanitizedDescription":"자이라가 60초간 지속되는 씨앗을 심습니다. 씨앗 근처에서 치명적인 가시나 휘감는 뿌리를 사용하면 식물이 자라나 자이라와 함께 싸웁니다. 씨앗은 여러 개를 보관할 수 있으며 적을 처치할 때마다 맹렬한 성장의 재충전 시간이 줄어듭니다.","tooltip":"{{ e6 }}초 동안 유지되는 씨앗을 심습니다. 적 챔피언이 밟으면 씨앗은 죽습니다. 맹렬한 성장으로 생성된 씨앗은 작은 지역의 시야를 보여주며, 적 챔피언이 씨앗을 밟으면 {{ e3 }}초간 해당 챔피언에 대한 <span class=\"coloree91d7\">절대 시야</span>가 생깁니다.<br /><br />자이라는 <span class=\"colorFFFFFF\">{{ ammorechargetime }}</span>초마다 씨앗을 저장합니다. (최대 8개까지 심을 수 있습니다.) 자이라가 적을 처치할 때마다 맹렬한 성장의 재충전 시간이 {{ e1 }}%씩 감소합니다. (챔피언 처치 관여, 대형 미니언 또는 대형 몬스터 처치 시 {{ e2 }}%씩 감소합니다.)","sanitizedTooltip":"{{ e6 }}초 동안 유지되는 씨앗을 심습니다. 적 챔피언이 밟으면 씨앗은 죽습니다. 맹렬한 성장으로 생성된 씨앗은 작은 지역의 시야를 보여주며, 적 챔피언이 씨앗을 밟으면 {{ e3 }}초간 해당 챔피언에 대한 절대 시야가 생깁니다. 자이라는 {{ ammorechargetime }}초마다 씨앗을 저장합니다. (최대 8개까지 심을 수 있습니다.) 자이라가 적을 처치할 때마다 맹렬한 성장의 재충전 시간이 {{ e1 }}%씩 감소합니다. (챔피언 처치 관여, 대형 미니언 또는 대형 몬스터 처치 시 {{ e2 }}%씩 감소합니다.)","leveltip":{"label":["씨앗 재충전 주기"],"effect":["{{ ammorechargetime }} -> {{ ammorechargetimeNL }}"]},"image":{"full":"ZyraW.png","sprite":"spell14.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"씨앗 1개","maxrank":5,"cost":[0,0,0,0,0],"costType":"씨앗 1개","costBurn":"0","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[20,20,20,20,20],[100,100,100,100,100],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[60,60,60,60,60],[0,0,0,0,0],[10,20,30,40,50],[0.4,0.8,1.2,1.6,2],[0,0,0,0,0]],"effectBurn":["","20","100","2","0","0","60","0","10/20/30/40/50","0.4/0.8/1.2/1.6/2","0"],"range":[850,850,850,850,850],"rangeBurn":"850","key":"ZyraW"},{"name":"휘감는 뿌리","description":"자이라가 일직선 상으로 지면을 뚫는 가시 덩굴을 발사하여, 덩굴이 마주치는 적에게 피해를 입히며 발을 묶습니다. 씨앗 근처에 휘감는 뿌리를 사용하면 덩굴 채찍손이 피어나, 근거리 공격을 펼치며 적의 이동 속도를 감소시킵니다.","sanitizedDescription":"자이라가 일직선 상으로 지면을 뚫는 가시 덩굴을 발사하여, 덩굴이 마주치는 적에게 피해를 입히며 발을 묶습니다. 씨앗 근처에 휘감는 뿌리를 사용하면 덩굴 채찍손이 피어나, 근거리 공격을 펼치며 적의 이동 속도를 감소시킵니다.","tooltip":"전방으로 가시 덩굴을 발사하여 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e5 }}초 동안 발을 묶습니다.<br /><br /><span class=\"colorDDDD77\">가시 정원: </span>휘감는 뿌리가 씨앗 근처를 지나면, 덩굴 채찍손이 피어나 적에게 {{ f1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 {{ e2 }}%의 둔화를 겁니다. 덩굴 채찍손의 사거리는 400이며 {{ f2 }}초 동안 유지됩니다.","sanitizedTooltip":"전방으로 가시 덩굴을 발사하여 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e5 }}초 동안 발을 묶습니다. 가시 정원: 휘감는 뿌리가 씨앗 근처를 지나면, 덩굴 채찍손이 피어나 적에게 {{ f1 }} (+{{ a2 }})의 마법 피해를 입히고 {{ e3 }}초 동안 {{ e2 }}%의 둔화를 겁니다. 덩굴 채찍손의 사거리는 400이며 {{ f2 }}초 동안 유지됩니다.","leveltip":{"label":["피해량","묶기 지속 시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZyraE.png","sprite":"spell14.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,105,150,195,240],[30,30,30,30,30],[2,2,2,2,2],[4,4,4,0,0],[0.75,1,1.25,1.5,1.75],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/105/150/195/240","30","2","4/4/4/0/0","0.75/1/1.25/1.5/1.75","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.15]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"ZyraE"},{"name":"올가미 덩굴","description":"자이라가 뒤틀린 덩굴손을 목표 위치에 소환합니다. 덩굴손은 뻗어나가며 적들에게 피해를 입히고, 수축하면서 적들을 공중으로 띄웁니다.","sanitizedDescription":"자이라가 뒤틀린 덩굴손을 목표 위치에 소환합니다. 덩굴손은 뻗어나가며 적들에게 피해를 입히고, 수축하면서 적들을 공중으로 띄웁니다.","tooltip":"자연의 분노를 모아 지정한 위치에 뒤틀린 덩굴손을 소환합니다. 덩굴손은 뻗어나가면서 가둔 적 모두에게 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 2초 후, 덩굴손이 수축하면서 적들을 {{ e1 }}초간 공중으로 띄웁니다.<br /><br /><span class=\"colorDDDD77\">가시 정원: </span>덩굴손이 소환된 위치에 있는 식물들은 격분하여 지속시간이 초기화되고 체력이 {{ e2 }}% 증가하며 순식간에 총 200%의 피해를 입힙니다.","sanitizedTooltip":"자연의 분노를 모아 지정한 위치에 뒤틀린 덩굴손을 소환합니다. 덩굴손은 뻗어나가면서 가둔 적 모두에게 {{ e3 }} (+{{ a1 }})의 마법 피해를 입힙니다. 2초 후, 덩굴손이 수축하면서 적들을 {{ e1 }}초간 공중으로 띄웁니다. 가시 정원: 덩굴손이 소환된 위치에 있는 식물들은 격분하여 지속시간이 초기화되고 체력이 {{ e2 }}% 증가하며 순식간에 총 200%의 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ZyraR.png","sprite":"spell14.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,120,140],"costBurn":"100/120/140","cooldown":[130,120,110],"cooldownBurn":"130/120/110","effect":[null,[1,1,1],[50,50,50],[180,265,350],[0,0,0],[0,0,0],[0,0,0],[150,150,150],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","1","50","180/265/350","0","0","0","150","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[700,700,700],"rangeBurn":"700","key":"ZyraR"}],"passive":{"name":"가시 정원","description":"자이라 주변에 주기적으로 씨앗이 생성되며 생성 속도는 레벨에 따라 더 빨라집니다. 씨앗은 30초간 지속됩니다. 적 챔피언이 씨앗을 밟으면 씨앗이 죽습니다. <br><br>자이라가 씨앗 근처에서 스킬을 사용하면 식물이 자라납니다. 여러 식물이 한 대상을 공격할 경우 입히는 피해량이 줄어듭니다.","sanitizedDescription":"자이라 주변에 주기적으로 씨앗이 생성되며 생성 속도는 레벨에 따라 더 빨라집니다. 씨앗은 30초간 지속됩니다. 적 챔피언이 씨앗을 밟으면 씨앗이 죽습니다. 자이라가 씨앗 근처에서 스킬을 사용하면 식물이 자라납니다. 여러 식물이 한 대상을 공격할 경우 입히는 피해량이 줄어듭니다.","image":{"full":"ZyraP.png","sprite":"passive4.png","group":"passive","x":384,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Zyra","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Zyra","title":"ZyraARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zyra","title":"ZyraCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3116,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3157,"count":1},{"id":3050,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zyra","title":"ZyraFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3190,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3116,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3222,"count":1},{"id":3110,"count":1},{"id":3050,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zyra","title":"ZyraKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":3112,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3151,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Zyra","title":"ZyraSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3116,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3157,"count":1},{"id":3050,"count":1},{"id":3190,"count":1}]}]},{"champion":"Zyra","title":"ZyraSR","type":"riot-support","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3303,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":2049,"count":1},{"id":3098,"count":1},{"id":1001,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3092,"count":1},{"id":3116,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":1402,"count":1},{"id":3116,"count":1}]},{"type":"aggressive","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1},{"id":3165,"count":1}]},{"type":"protective","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zyra","title":"ZyraSRMid","type":"riot-mid","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3089,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Zyra","title":"ZyraTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3090,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3136,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Viktor":{"id":112,"key":"Viktor","name":"빅토르","title":"기계화의 전령관","image":{"full":"Viktor.png","sprite":"champion4.png","group":"champion","x":192,"y":0,"w":48,"h":48},"skins":[{"id":112000,"name":"default","num":0},{"id":112001,"name":"완성형 빅토르","num":1},{"id":112002,"name":"프로토타입 빅토르","num":2},{"id":112003,"name":"창조자 빅토르","num":3},{"id":112004,"name":"죽음의 사도 빅토르","num":4}],"lore":"새로운 기술 시대를 여는 빅토르는 인류의 발전에 인생을 바쳤다. 빅토르는 자운인의 지성을 새로운 수준으로 끌어올리려는 이상주의자로, 인류의 무한한 잠재력을 실현하기 위한 방법은 눈부신 기술의 진화를 받아들이는 것뿐이라고 생각한다. 강철과 과학으로 강화된 신체로 무장한 빅토르는 지칠 줄 모르고 밝은 미래를 추구한다.","blurb":"새로운 기술 시대를 여는 빅토르는 인류의 발전에 인생을 바쳤다. 빅토르는 자운인의 지성을 새로운 수준으로 끌어올리려는 이상주의자로, 인류의 무한한 잠재력을 실현하기 위한 방법은 눈부신 기술의 진화를 받아들이는 것뿐이라고 생각한다. 강철과 과학으로 강화된 신체로 무장한 빅토르는 지칠 줄 모르고 밝은 미래를 추구한다.","allytips":["- 죽음의 광선은 매우 강력한 견제기입니다. 중력장과 함께 써서 적이 함부로 움직이지 못하게 하세요.","- 증강은 적시에 잘 투자해야 합니다."],"enemytips":["- 빅토르와 너무 가까이 붙지 마세요. 빅토르는 적과 가까이 붙을수록 공격이 정확해집니다.","- 현재 빅토르가 얼마나 많은 증강으로 업그레이드했는지 눈여겨보세요. 지팡이 끝의 색깔을 보고도 알 수 있습니다. (보라, 노랑, 파랑, 빨강)"],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":4,"magic":10,"difficulty":9},"stats":{"armor":22.72,"armorperlevel":4,"attackdamage":52.04,"attackdamageperlevel":3,"attackrange":525,"attackspeedoffset":-0.05,"attackspeedperlevel":2.11,"crit":0,"critperlevel":0,"hp":528.04,"hpperlevel":90,"hpregen":7.842,"hpregenperlevel":0.65,"movespeed":335,"mp":324,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"힘의 흡수","description":"빅토르가 대상에게 강력한 에너지를 주입해 마법 피해를 주고, 보호막이 생기면서 다음번 기본 공격이 강화됩니다.<br><br>증강: 빅토르는 스킬을 사용한 다음 이동 속도가 상승합니다.","sanitizedDescription":"빅토르가 대상에게 강력한 에너지를 주입해 마법 피해를 주고, 보호막이 생기면서 다음번 기본 공격이 강화됩니다. 증강: 빅토르는 스킬을 사용한 다음 이동 속도가 상승합니다.","tooltip":"빅토르가 적 유닛에 폭발을 일으켜 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 마법 피해를 입히며, 자신은 {{ e2 }}초 동안 최대 <span class=\"color44DDFF\">{{ f1 }}</span> <span class=\"color99FF99\">(+{{ f2 }})</span>의 피해를 흡수하는 보호막을 얻습니다.<br /><br />빅토르의 다음번 기본 공격은 {{ e5 }}<span class=\"color99FF99\"> (+{{ a2 }})</span>의 추가 마법 피해를 입힙니다.<br /><br /><span class=\"colorFFCC00\">증강 - 터보 충전:</span> 빅토르의 이동 속도가 {{ e2 }}초 동안 {{ e3 }}% 상승합니다.","sanitizedTooltip":"빅토르가 적 유닛에 폭발을 일으켜 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히며, 자신은 {{ e2 }}초 동안 최대 {{ f1 }} (+{{ f2 }})의 피해를 흡수하는 보호막을 얻습니다. 빅토르의 다음번 기본 공격은 {{ e5 }} (+{{ a2 }})의 추가 마법 피해를 입힙니다. 증강 - 터보 충전: 빅토르의 이동 속도가 {{ e2 }}초 동안 {{ e3 }}% 상승합니다.","leveltip":{"label":["피해량 (폭발)","피해량 (기본 공격)","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e5 }} -> {{ e5NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ViktorPowerTransfer.png","sprite":"spell12.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[8,7,6,5,4],"cooldownBurn":"8/7/6/5/4","effect":[null,[60,80,100,120,140],[2.5,2.5,2.5,2.5,2.5],[30,30,30,30,30],[0,0,0,0,0],[20,40,60,80,100],[0.08,0.08,0.08,0.08,0.08],[0.15,0.15,0.15,0.15,0.15],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/80/100/120/140","2.5","30","0","20/40/60/80/100","0.08","0.15","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.5]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"ViktorPowerTransfer"},{"name":"중력장","description":"빅토르가 강력한 중력장을 생성해 해당 지역 안에 들어온 적들을 느리게 만듭니다. 해당 지역 위에 오래 머무르는 적은 기절합니다.<br><br>증강: 중력장에 의해 기절한 적들은 중앙으로 끌려갑니다.","sanitizedDescription":"빅토르가 강력한 중력장을 생성해 해당 지역 안에 들어온 적들을 느리게 만듭니다. 해당 지역 위에 오래 머무르는 적은 기절합니다. 증강: 중력장에 의해 기절한 적들은 중앙으로 끌려갑니다.","tooltip":"빅토르가 중력장 감옥 장치를 배치해 {{ e3 }}초간 적 유닛의 이동 속도를 {{ e1 }}% 늦추고, 매 {{ e4 }}초마다 효과가 중첩됩니다. {{ e5 }}번 중첩되면 대상은 {{ e2 }}초간 기절합니다.<br /><br /><span class=\"colorFFCC00\">증강 - 붕괴:</span> 중력장에 의해 기절한 적들은 중앙으로 끌려갑니다.","sanitizedTooltip":"빅토르가 중력장 감옥 장치를 배치해 {{ e3 }}초간 적 유닛의 이동 속도를 {{ e1 }}% 늦추고, 매 {{ e4 }}초마다 효과가 중첩됩니다. {{ e5 }}번 중첩되면 대상은 {{ e2 }}초간 기절합니다. 증강 - 붕괴: 중력장에 의해 기절한 적들은 중앙으로 끌려갑니다.","leveltip":{"label":["둔화","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ViktorGravitonField.png","sprite":"spell12.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,65,65,65,65],"costBurn":"65","cooldown":[17,16,15,14,13],"cooldownBurn":"17/16/15/14/13","effect":[null,[28,32,36,40,44],[1.5,1.5,1.5,1.5,1.5],[4,4,4,4,4],[0.5,0.5,0.5,0.5,0.5],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","28/32/36/40/44","1.5","4","0.5","3","0","0","0","0","0"],"range":[700,700,700,700,700],"rangeBurn":"700","key":"ViktorGravitonField"},{"name":"죽음의 광선","description":"빅토르가 기계 팔을 사용해 땅을 일직선으로 가르는 혼돈의 빛줄기를 쏘아 경로상의 적 모두에게 피해를 가합니다.<br><br>증강: 죽음의 광선 파동에 이어 폭발이 일어나 마법 피해를 입힙니다.","sanitizedDescription":"빅토르가 기계 팔을 사용해 땅을 일직선으로 가르는 혼돈의 빛줄기를 쏘아 경로상의 적 모두에게 피해를 가합니다. 증강: 죽음의 광선 파동에 이어 폭발이 일어나 마법 피해를 입힙니다.","tooltip":"빅토르가 기계 팔을 사용해 땅을 가르는 혼돈의 빛줄기를 쏘아 맞은 적 모두에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 줍니다.<br /><br /><span class=\"colorFFCC00\">증강 - 여진:</span> 죽음의 광선 파동을 따라 폭발이 일어나, {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"빅토르가 기계 팔을 사용해 땅을 가르는 혼돈의 빛줄기를 쏘아 맞은 적 모두에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 줍니다. 증강 - 여진: 죽음의 광선 파동을 따라 폭발이 일어나, {{ e2 }} (+{{ a2 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량 (죽음의 광선)","피해량 (여진)","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"ViktorDeathRay.png","sprite":"spell12.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[70,110,150,190,230],[20,60,100,140,180],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/110/150/190/230","20/60/100/140/180","1","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.7]}],"range":[525,525,525,525,525],"rangeBurn":"525","key":"ViktorDeathRay"},{"name":"혼돈의 폭풍","description":"빅토르가 목표 위치에 공간 왜곡을 일으켜 대상 지역에 있는 적에게 마법 피해를 주며 적의 정신 집중을 끊습니다. 왜곡된 공간은 주위 적에게 주기적으로 마법 피해를 줍니다. 빅토르는 이 공간 왜곡 폭풍을 움직일 수 있습니다.<br><br>증강: 혼돈의 폭풍이 더 빠르게 이동합니다.","sanitizedDescription":"빅토르가 목표 위치에 공간 왜곡을 일으켜 대상 지역에 있는 적에게 마법 피해를 주며 적의 정신 집중을 끊습니다. 왜곡된 공간은 주위 적에게 주기적으로 마법 피해를 줍니다. 빅토르는 이 공간 왜곡 폭풍을 움직일 수 있습니다. 증강: 혼돈의 폭풍이 더 빠르게 이동합니다.","tooltip":"빅토르가 목표 위치에 왜곡을 일으켜 대상 지역에 있는 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주며 적의 정신 집중을 끊습니다.<br /><br />빅토르는 {{ e3 }}초 동안 공간 왜곡 폭풍을 조종하며 주위 적들에게 매 {{ e4 }}초마다 {{ e2 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힐 수 있습니다. 공간 왜곡 폭풍은 빅토르에게서 멀어질수록 속도가 느려집니다.<br /><br /><span class=\"colorFFCC00\">증강 - 가속도:</span> 혼돈의 폭풍이 {{ e0 }}% 더 빠르게 이동합니다.","sanitizedTooltip":"빅토르가 목표 위치에 왜곡을 일으켜 대상 지역에 있는 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 주며 적의 정신 집중을 끊습니다. 빅토르는 {{ e3 }}초 동안 공간 왜곡 폭풍을 조종하며 주위 적들에게 매 {{ e4 }}초마다 {{ e2 }} (+{{ a2 }})의 마법 피해를 입힐 수 있습니다. 공간 왜곡 폭풍은 빅토르에게서 멀어질수록 속도가 느려집니다. 증강 - 가속도: 혼돈의 폭풍이 {{ e0 }}% 더 빠르게 이동합니다.","leveltip":{"label":["최초 피해량","폭풍 이동 시 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ViktorChaosStorm.png","sprite":"spell12.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,110,100],"cooldownBurn":"120/110/100","effect":[null,[100,175,250],[150,250,350],[6.5,6.5,6.5],[2,2,2],[3,3,3],[400,400,400],[200,200,200],[300,300,300],[900,900,900],[0.2,0.2,0.2]],"effectBurn":["","100/175/250","150/250/350","6.5","2","3","400","200","300","900","0.2"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[700,700,700],"rangeBurn":"700","key":"ViktorChaosStorm"}],"passive":{"name":"영광스러운 진화","description":"빅토르는 시작 아이템 프로토타입 마공학 핵을 상점에서 세 번 업그레이드하여 스킬을 증강할 수 있습니다.","sanitizedDescription":"빅토르는 시작 아이템 프로토타입 마공학 핵을 상점에서 세 번 업그레이드하여 스킬을 증강할 수 있습니다.","image":{"full":"Viktor_Passive.png","sprite":"passive4.png","group":"passive","x":192,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Viktor","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Viktor","title":"ViktorARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3196,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3198,"count":1},{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Viktor","title":"ViktorCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3198,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Viktor","title":"ViktorFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3198,"count":1},{"id":3285,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Viktor","title":"ViktorKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3196,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3198,"count":1},{"id":3165,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Viktor","title":"ViktorSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3198,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3165,"count":1},{"id":3001,"count":1}]}]},{"champion":"Viktor","title":"ViktorSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3198,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3165,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Viktor","title":"ViktorTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3196,"count":1},{"id":1058,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3090,"count":1},{"id":3198,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3170,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Cassiopeia":{"id":69,"key":"Cassiopeia","name":"카시오페아","title":"독사의 포옹","image":{"full":"Cassiopeia.png","sprite":"champion0.png","group":"champion","x":288,"y":48,"w":48,"h":48},"skins":[{"id":69000,"name":"default","num":0},{"id":69001,"name":"황야의 무법자 카시오페아","num":1},{"id":69002,"name":"사이렌 카시오페아","num":2},{"id":69003,"name":"여신 카시오페아","num":3},{"id":69004,"name":"비취 송곳니 카시오페아","num":4},{"id":69008,"name":"이터늄 카시오페아","num":8}],"lore":"카시오페아는 자신의 사악한 의지대로 상대를 조종하는 치명적인 피조물이다. 녹서스의 명망 높은 뒤 쿠토 가에서 가장 아름다운 미모를 자랑하던 막내딸, 카시오페아는 고대의 힘을 찾아 슈리마 아래에 있는 지하묘실 깊은 곳으로 모험을 떠났다. 그곳에서 그녀는 소름끼치는 묘실의 수호령에게 물렸고, 몸에 독이 퍼져 독사와도 같은 포식자로 변했다. 카시오페아는 이제 밤의 장막에 숨어 교활하고 날렵하게 움직이며 사악한 시선으로 적들을 석화시킨다.","blurb":"카시오페아는 자신의 사악한 의지대로 상대를 조종하는 치명적인 피조물이다. 녹서스의 명망 높은 뒤 쿠토 가에서 가장 아름다운 미모를 자랑하던 막내딸, 카시오페아는 고대의 힘을 찾아 슈리마 아래에 있는 지하묘실 깊은 곳으로 모험을 떠났다. 그곳에서 그녀는 소름끼치는 묘실의 수호령에게 물렸고, 몸에 독이 퍼져 독사와도 같은 포식자로 변했다. 카시오페아는 이제 밤의 장막에 숨어 교활하고 날렵하게 움직이며 사악한 시선으로 적들을 석화시킨다.","allytips":["- 석화의 응시에 당해 기절한 적이나 몬스터 처럼 움직이지 않는 적을 중독시킨 후 쌍독니를 연속적으로 사용하여 강력한 피해를 가할 수 있습니다.","- 적의 동선을 예측하여 맹독 폭발을 사용하십시오."],"enemytips":["- 카시오페아의 독에 중독되었다면 카시오페아는 쌍독니 스킬로 많은 피해를 입힐 수 있으므로 주의하십시오.","- 카시오페아가 석화의 응시를 시전하면 즉시 방향을 틀고 후방을 바라보십시오. 이렇게 하면 기절 대신 둔화 효과만 걸립니다."],"tags":["Mage"],"partype":"마나","info":{"attack":2,"defense":3,"magic":9,"difficulty":10},"stats":{"armor":25,"armorperlevel":3.5,"attackdamage":53,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":-0.034,"attackspeedperlevel":1.5,"crit":0,"critperlevel":0,"hp":537,"hpperlevel":87,"hpregen":5.5,"hpregenperlevel":0.5,"movespeed":328,"mp":334,"mpperlevel":63,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"맹독 폭발","description":"카시오페아가 잠시 후 대상 지역에 독을 폭발시킵니다. 적 챔피언이 독에 맞을 경우 카시오페아의 이동 속도가 증가합니다.","sanitizedDescription":"카시오페아가 잠시 후 대상 지역에 독을 폭발시킵니다. 적 챔피언이 독에 맞을 경우 카시오페아의 이동 속도가 증가합니다.","tooltip":"대상 지역의 적에게 <span class=\"color32CD32\">맹독</span>을 뿌립니다. 맹독 폭발로 챔피언을 맞히면 카시오페아의 이동 속도가 {{ e3 }}% 증가하며, 이동 속도 증가 효과는 {{ e4 }}초에 걸쳐 사라집니다.<br /><br /><span class=\"color32CD32\">맹독</span>은 {{ e2 }}초에 걸쳐 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"대상 지역의 적에게 맹독을 뿌립니다. 맹독 폭발로 챔피언을 맞히면 카시오페아의 이동 속도가 {{ e3 }}% 증가하며, 이동 속도 증가 효과는 {{ e4 }}초에 걸쳐 사라집니다. 맹독은 {{ e2 }}초에 걸쳐 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["기본 피해량","이동 속도","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"CassiopeiaQ.png","sprite":"spell2.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[3.5,3.5,3.5,3.5,3.5],"cooldownBurn":"3.5","effect":[null,[75,120,165,210,255],[3,3,3,3,3],[30,35,40,45,50],[3,3,3,3,3],[7,7,7,7,7],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","75/120/165/210/255","3","30/35/40/45/50","3","7","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[850,850,850,850,850],"rangeBurn":"850","key":"CassiopeiaQ"},{"name":"독기의 늪","description":"카시오페아가 독구름을 일으킵니다. 독구름을 통과하는 적은 약간의 피해를 입고 이동 속도가 느려지며 늪에 빠져 이동 스킬을 사용할 수 없게 됩니다.","sanitizedDescription":"카시오페아가 독구름을 일으킵니다. 독구름을 통과하는 적은 약간의 피해를 입고 이동 속도가 느려지며 늪에 빠져 이동 스킬을 사용할 수 없게 됩니다.","tooltip":"카시오페아가 정면에 맹독을 내뿜어 {{ e4 }}초 동안 지속되는 독구름을 남깁니다.<br /><br />독구름 속의 적은 <span class=\"color32CD32\">쇠약의 독</span>에 중독되어 이동 속도가 {{ e2 }}% 느려지고 늪에 빠져 이동 스킬을 사용할 수 없게 됩니다. (둔화 효과는 점차 사라집니다.) 매 초 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해도 입습니다.<br /><br />독기의 늪에는 최소 사용 사거리가 있습니다.","sanitizedTooltip":"카시오페아가 정면에 맹독을 내뿜어 {{ e4 }}초 동안 지속되는 독구름을 남깁니다. 독구름 속의 적은 쇠약의 독에 중독되어 이동 속도가 {{ e2 }}% 느려지고 늪에 빠져 이동 스킬을 사용할 수 없게 됩니다. (둔화 효과는 점차 사라집니다.) 매 초 {{ e1 }} (+{{ a1 }})의 마법 피해도 입습니다. 독기의 늪에는 최소 사용 사거리가 있습니다.","leveltip":{"label":["기본 피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CassiopeiaW.png","sprite":"spell2.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[20,35,50,65,80],[40,50,60,70,80],[1,1,1,1,1],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/35/50/65/80","40/50/60/70/80","1","5","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.15]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"CassiopeiaW"},{"name":"쌍독니","description":"카시오페아가 대상에게 강력한 공격을 가하고 그 피해량에 비례해 자신의 체력을 회복합니다. 적이 독에 중독되면 피해량이 상승하며 적이 처치될 경우 카시오페아의 마나가 회복됩니다.","sanitizedDescription":"카시오페아가 대상에게 강력한 공격을 가하고 그 피해량에 비례해 자신의 체력을 회복합니다. 적이 독에 중독되면 피해량이 상승하며 적이 처치될 경우 카시오페아의 마나가 회복됩니다.","tooltip":"대상에게 <span class=\"colorFFFFFF\">{{ f1 }}</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 쌍독니로 대상을 처치하거나 쌍독니가 날아가는 중에 처치되면 {{ cost }}의 마나를 회복합니다.<br /><br /><span class=\"color32CD32\">중독</span>된 대상에게는 {{ e1 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 추가 마법 피해를 입히고 카시오페아의 체력이 <span class=\"colorFFFFFF\">{{ f4 }}</span> <span class=\"color99FF99\">(+{{ f2 }})</span>만큼 회복됩니다.","sanitizedTooltip":"대상에게 {{ f1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 쌍독니로 대상을 처치하거나 쌍독니가 날아가는 중에 처치되면 {{ cost }}의 마나를 회복합니다. 중독된 대상에게는 {{ e1 }} (+{{ a2 }})의 추가 마법 피해를 입히고 카시오페아의 체력이 {{ f4 }} (+{{ f2 }})만큼 회복됩니다.","leveltip":{"label":["추가 독 피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"CassiopeiaE.png","sprite":"spell2.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,50,60,70,80],"costBurn":"40/50/60/70/80","cooldown":[0.75,0.75,0.75,0.75,0.75],"cooldownBurn":"0.75","effect":[null,[10,30,50,70,90],[0,0,0,0,0],[0.1,0.1,0.1,0.1,0.1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/30/50/70/90","0","0.1","0","0","0","0","0","0","0"],"vars":[{"key":"f1","link":"spelldamage","coeff":[0.55]},{"key":"a1","link":"spelldamage","coeff":[0.1]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[700,700,700,700,700],"rangeBurn":"700","key":"CassiopeiaE"},{"name":"석화의 응시","description":"카시오페아가 눈에서 마법의 에너지를 발사하여 정면에서 자신을 바라보는 적을 기절시키고, 등지고 있는 적의 속도를 늦춥니다.","sanitizedDescription":"카시오페아가 눈에서 마법의 에너지를 발사하여 정면에서 자신을 바라보는 적을 기절시키고, 등지고 있는 적의 속도를 늦춥니다.","tooltip":"카시오페아가 정면에 있는 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 카시오페아를 향하고 있는 적은 석화되어 {{ e3 }}초 동안 기절하며, 카시오페아를 등진 적은 이동 속도가 {{ e2 }}% 감소합니다.","sanitizedTooltip":"카시오페아가 정면에 있는 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 카시오페아를 향하고 있는 적은 석화되어 {{ e3 }}초 동안 기절하며, 카시오페아를 등진 적은 이동 속도가 {{ e2 }}% 감소합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CassiopeiaR.png","sprite":"spell2.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[150,250,350],[40,40,40],[2,2,2],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/250/350","40","2","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[825,825,825],"rangeBurn":"825","key":"CassiopeiaR"}],"passive":{"name":"독사의 품격","description":"카시오페아는 레벨에 따라 이동 속도가 증가합니다. 장화 아이템은 구매할 수 없습니다.","sanitizedDescription":"카시오페아는 레벨에 따라 이동 속도가 증가합니다. 장화 아이템은 구매할 수 없습니다.","image":{"full":"Cassiopeia_Passive.png","sprite":"passive0.png","group":"passive","x":288,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Cassiopeia","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3285,"count":1},{"id":3151,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1028,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3007,"count":1},{"id":3029,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3073,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3007,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3070,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3003,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3089,"count":1},{"id":3116,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3152,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":1028,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3003,"count":1},{"id":3027,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3007,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3285,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3070,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3135,"count":1},{"id":3165,"count":1},{"id":3003,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3285,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Cassiopeia","title":"CassiopeiaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3003,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3090,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Nasus":{"id":75,"key":"Nasus","name":"나서스","title":"사막의 관리자","image":{"full":"Nasus.png","sprite":"champion2.png","group":"champion","x":240,"y":48,"w":48,"h":48},"skins":[{"id":75000,"name":"default","num":0},{"id":75001,"name":"은하계 나서스","num":1},{"id":75002,"name":"파라오 나서스","num":2},{"id":75003,"name":"공포의 기사 나서스","num":3},{"id":75004,"name":"라이엇 경찰견 나서스","num":4},{"id":75005,"name":"지옥의 나서스","num":5},{"id":75006,"name":"나서스 견공","num":6},{"id":75010,"name":"파괴의 신 나서스","num":10}],"lore":"자칼의 머리를 한 위풍당당한 반인반수 형상의 초월체 나서스는 고대 슈리마의 영웅적인 인물이었다. 날카로운 지력을 소유한 그는 지식의 수호자이자 최고의 전략가로서 수세기 동안 슈리마 제국을 번영으로 인도했다. 제국의 몰락 이후엔 칩거에 들어가 전설 속의 존재가 되었다. 하지만 슈리마의 고대 도시가 되살아나면서, 제국의 몰락이 다시는 일어나지 않도록 하겠다는 다짐과 함께 세상 밖으로 나왔다.","blurb":"자칼의 머리를 한 위풍당당한 반인반수 형상의 초월체 나서스는 고대 슈리마의 영웅적인 인물이었다. 날카로운 지력을 소유한 그는 지식의 수호자이자 최고의 전략가로서 수세기 동안 슈리마 제국을 번영으로 인도했다. 제국의 몰락 이후엔 칩거에 들어가 전설 속의 존재가 되었다. 하지만 슈리마의 고대 도시가 되살아나면서, 제국의 몰락이 다시는 일어나지 않도록 하겠다는 다짐과 함께 세상 밖으로 나왔다.","allytips":["- 게임 초반부터 흡수의 일격으로 꾸준히 미니언을 처치하면 게임 후반에 큰 위력을 발휘할 수 있습니다.","- 공격로에 혼자 있다면 영혼의 불길로 미니언들을 편하게 사냥할 수 있습니다. 하지만 동료와 같이 있다면 자칫 적 공격로로 너무 깊숙이 들어가게 되므로 좋지 않은 선택입니다. 흡수의 일격으로 마지막 일격을 날릴지 영혼의 불길로 미니언을 광역 사냥할 것인지 적절히 선택하십시오.","- 방어력이 낮다면 궁극기를 사용한 상태에서도 적은 당신을 노릴 것입니다. 물리 공격 아이템 위주로 키울 때도 생존력을 늘려줄 아이템을 구매해 두십시오."],"enemytips":["- 궁극기로 변신한 나서스는 다른 챔피언들보다 훨씬 강력합니다. 유리한 상황에서만 나서스와 맞서십시오.","- 최고 레벨의 쇠약 스킬은 기본 공격 위주의 챔피언에게 매우 치명적이므로 혼자 싸우지 마십시오.","- 나서스는 원거리 공격으로 공략할 수 있습니다. 나서스의 체력이 꽉 차 있을 때는 되도록 덤비지 마십시오."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":7,"defense":5,"magic":6,"difficulty":6},"stats":{"armor":34,"armorperlevel":3.5,"attackdamage":67,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":-0.02,"attackspeedperlevel":3.48,"crit":0,"critperlevel":0,"hp":561.2,"hpperlevel":90,"hpregen":9.012,"hpregenperlevel":0.9,"movespeed":350,"mp":325.6,"mpperlevel":42,"mpregen":7.44,"mpregenperlevel":0.5,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"흡수의 일격","description":"나서스가 적을 공격하여 피해를 가합니다. 만약 흡수의 일격으로 대상을 처치했다면 흡수의 일격 스킬의 위력이 증가합니다.","sanitizedDescription":"나서스가 적을 공격하여 피해를 가합니다. 만약 흡수의 일격으로 대상을 처치했다면 흡수의 일격 스킬의 위력이 증가합니다.","tooltip":"나서스의 다음 기본 공격은 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span> <span class=\"color5555FF\">(+{{ f1 }})</span>의 물리 피해를 입힙니다.<br /><br />흡수의 일격으로 적을 죽이면 흡수의 일격에 <span class=\"color5555FF\">{{ e2 }}</span>의 추가 피해가 영구적으로 추가됩니다. 챔피언과 대형 미니언, 대형 또는 에픽 몬스터에 대해서는 두 배의 효과가 적용됩니다.","sanitizedTooltip":"나서스의 다음 기본 공격은 {{ e1 }} (+{{ a2 }}) (+{{ f1 }})의 물리 피해를 입힙니다. 흡수의 일격으로 적을 죽이면 흡수의 일격에 {{ e2 }}의 추가 피해가 영구적으로 추가됩니다. 챔피언과 대형 미니언, 대형 또는 에픽 몬스터에 대해서는 두 배의 효과가 적용됩니다.","leveltip":{"label":["기본 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NasusQ.png","sprite":"spell7.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[20,20,20,20,20],"costBurn":"20","cooldown":[8,7,6,5,4],"cooldownBurn":"8/7/6/5/4","effect":[null,[30,50,70,90,110],[3,3,3,3,3],[25,25,25,25,25],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","3","25","6","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"attackdamage","coeff":[1]},{"key":"f1","link":"@stacks","coeff":[3]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"NasusQ"},{"name":"쇠약","description":"나서스가 적 챔피언의 노화를 촉진시켜 이동 속도와 공격 속도를 점진적으로 늦춥니다.","sanitizedDescription":"나서스가 적 챔피언의 노화를 촉진시켜 이동 속도와 공격 속도를 점진적으로 늦춥니다.","tooltip":"나서스가 {{ e3 }}초 동안 대상 챔피언의 노화를 촉진시켜 이동 속도를 {{ e2 }}%만큼 늦춥니다. 이동 속도는 지속 시간 동안 최대 {{ e1 }}%까지 느려집니다. 이 절반만큼 대상의 공격 속도도 감소합니다.","sanitizedTooltip":"나서스가 {{ e3 }}초 동안 대상 챔피언의 노화를 촉진시켜 이동 속도를 {{ e2 }}%만큼 늦춥니다. 이동 속도는 지속 시간 동안 최대 {{ e1 }}%까지 느려집니다. 이 절반만큼 대상의 공격 속도도 감소합니다.","leveltip":{"label":["최대 둔화율","재사용 대기시간"],"effect":[" {{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"NasusW.png","sprite":"spell8.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[15,14,13,12,11],"cooldownBurn":"15/14/13/12/11","effect":[null,[47,59,71,83,95],[35,35,35,35,35],[5,5,5,5,5],[17.5,17.5,17.5,17.5,17.5],[1.5,3,4.5,6,7.5],[3,6,9,12,15],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","47/59/71/83/95","35","5","17.5","1.5/3/4.5/6/7.5","3/6/9/12/15","0","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"NasusW"},{"name":"영혼의 불길","description":"나서스가 영혼의 불꽃을 일으켜 해당 지역에 서 있는 적에게 피해를 입히고 방어력을 낮춥니다.","sanitizedDescription":"나서스가 영혼의 불꽃을 일으켜 해당 지역에 서 있는 적에게 피해를 입히고 방어력을 낮춥니다.","tooltip":"나서스가 대상 지역을 영혼의 불길로 태웁니다. 지역 내 적에게 {{ e4 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법피해를 입힙니다.<br /><br />다음 {{ e3 }}초 동안, 지역내 적의 방어력이 {{ e2 }}%만큼 감소하고 추가로 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> 의 마법 피해를 매초 입힙니다.","sanitizedTooltip":"나서스가 대상 지역을 영혼의 불길로 태웁니다. 지역 내 적에게 {{ e4 }} (+{{ a2 }})의 마법피해를 입힙니다. 다음 {{ e3 }}초 동안, 지역내 적의 방어력이 {{ e2 }}%만큼 감소하고 추가로 {{ e1 }} (+{{ a1 }}) 의 마법 피해를 매초 입힙니다.","leveltip":{"label":["최초 피해","초당 피해","방어력 감소량","마나 소모량"],"effect":["{{ e4 }} -> {{ e4NL }}","{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"NasusE.png","sprite":"spell8.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,85,100,115,130],"costBurn":"70/85/100/115/130","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[11,19,27,35,43],[15,20,25,30,35],[5,5,5,5,5],[55,95,135,175,215],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","11/19/27/35/43","15/20/25/30/35","5","55/95/135/175/215","0","0","0","0","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.6]},{"key":"a1","link":"spelldamage","coeff":[0.12]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"NasusE"},{"name":"사막의 분노","description":"나서스가 강력한 모래 폭풍을 소환하여 주변의 적을 강타합니다. 나서스는 폭풍이 부는 동안 체력과 공격 범위가 증가하며, 주변의 적에게 피해를 입히고, 흡수의 일격의 재사용 대기시간이 감소하며, 추가 방어력과 마법 저항력을 얻습니다.","sanitizedDescription":"나서스가 강력한 모래 폭풍을 소환하여 주변의 적을 강타합니다. 나서스는 폭풍이 부는 동안 체력과 공격 범위가 증가하며, 주변의 적에게 피해를 입히고, 흡수의 일격의 재사용 대기시간이 감소하며, 추가 방어력과 마법 저항력을 얻습니다.","tooltip":"나서스가 15초 동안 모래 폭풍 속에서 힘을 얻어 최대 체력이 {{ e1 }} 증가하고 방어력과 마법 저항력이 {{ e4 }} 상승합니다.<br /><br />폭풍이 부는 동안 나서스는 매초마다 주변 적이 보유한 최대 체력의 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>%를 마법 피해로 입히며 (초당 최대 {{ e5 }}의 피해) {{ e8 }}의 추가 방어력과 마법 저항력을 얻습니다. 또한 흡수의 일격의 재사용 대기시간이 {{ e9 }}% 감소합니다.","sanitizedTooltip":"나서스가 15초 동안 모래 폭풍 속에서 힘을 얻어 최대 체력이 {{ e1 }} 증가하고 방어력과 마법 저항력이 {{ e4 }} 상승합니다. 폭풍이 부는 동안 나서스는 매초마다 주변 적이 보유한 최대 체력의 {{ e3 }} (+{{ a1 }})%를 마법 피해로 입히며 (초당 최대 {{ e5 }}의 피해) {{ e8 }}의 추가 방어력과 마법 저항력을 얻습니다. 또한 흡수의 일격의 재사용 대기시간이 {{ e9 }}% 감소합니다.","leveltip":{"label":["추가 체력","최대 체력 %","최초 방어력 및 마법 저항력","추가 방어력 및 마법 저항력"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ e4 }} -> {{ e4NL }}","{{ e8 }} -> {{ e8NL }}"]},"image":{"full":"NasusR.png","sprite":"spell8.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,120,120],"cooldownBurn":"120","effect":[null,[300,450,600],[50,50,50],[3,4,5],[15,35,55],[240,240,240],[15,15,15],[0,0,0],[1,2,3],[50,50,50],[0,0,0]],"effectBurn":["","300/450/600","50","3/4/5","15/35/55","240","15","0","1/2/3","50","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.01]}],"range":[20,20,20],"rangeBurn":"20","key":"NasusR"}],"passive":{"name":"영혼의 포식자","description":"나서스는 적의 영혼을 흡수하여 생명력 흡수 효과를 얻습니다.","sanitizedDescription":"나서스는 적의 영혼을 흡수하여 생명력 흡수 효과를 얻습니다.","image":{"full":"Nasus_Passive.png","sprite":"passive2.png","group":"passive","x":240,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Nasus","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3110,"count":1},{"id":3742,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]}]},{"champion":"Nasus","title":"NasusARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nasus","title":"NasusCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3024,"count":1},{"id":3067,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3110,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3748,"count":1},{"id":3072,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nasus","title":"NasusFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3024,"count":1},{"id":3067,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3110,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3748,"count":1},{"id":3072,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nasus","title":"NasusKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3285,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3110,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Nasus","title":"NasusSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3110,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3748,"count":1},{"id":3072,"count":1}]}]},{"champion":"Nasus","title":"NasusSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3024,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3024,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3110,"count":1},{"id":3078,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3748,"count":1},{"id":3072,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Nasus","title":"NasusTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3742,"count":1},{"id":3078,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3053,"count":1},{"id":3072,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3065,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Twitch":{"id":29,"key":"Twitch","name":"트위치","title":"역병 쥐","image":{"full":"Twitch.png","sprite":"champion3.png","group":"champion","x":288,"y":96,"w":48,"h":48},"skins":[{"id":29000,"name":"default","num":0},{"id":29001,"name":"형님 트위치","num":1},{"id":29002,"name":"평창 트위치","num":2},{"id":29003,"name":"중세 트위치","num":3},{"id":29004,"name":"갱스터 트위치","num":4},{"id":29005,"name":"파괴단 트위치","num":5},{"id":29006,"name":"소매치기 트위치","num":6},{"id":29007,"name":"삼성 화이트 트위치","num":7},{"id":29008,"name":"오메가 분대 트위치","num":8}],"lore":"자운에서 전염병을 옮기는 쥐로 태어난 트위치는 열정적인 오물 전문가로, 앞발을 더럽히는 것을 두려워하지 않는다. 트위치는 필트오버의 부유층을 향해 화학물질로 강화한 석궁을 겨누며, 지상의 인간들의 더러움을 적나라하게 드러내기로 다짐했다. 지하동굴에 웅크리고 있을 때를 제외하면 늘 비밀스럽게 교활한 움직임을 일삼는 트위치는 버려진 보물을 찾아 쓰레기 더미를 뒤지고 있다. 곰팡이 슨 샌드위치라도 찾을 수 있을까 하며.","blurb":"자운에서 전염병을 옮기는 쥐로 태어난 트위치는 열정적인 오물 전문가로, 앞발을 더럽히는 것을 두려워하지 않는다. 트위치는 필트오버의 부유층을 향해 화학물질로 강화한 석궁을 겨누며, 지상의 인간들의 더러움을 적나라하게 드러내기로 다짐했다. 지하동굴에 웅크리고 있을 때를 제외하면 늘 비밀스럽게 교활한 움직임을 일삼는 트위치는 버려진 보물을 찾아 쓰레기 더미를 뒤지고 있다. 곰팡이 슨 샌드위치라도 찾을 수 있을까 하며.","allytips":["- 트위치는 공격 속도가 챔피언 중 가장 높은 편입니다. 칠흑의 양날 도끼 또는 마법사의 최후처럼 적중 시 발동 효과가 있는 아이템을 구입하여 효과를 극대화하십시오.","- 오염 스킬은 사거리가 긴 편입니다. 적에게 맹독을 최대한 많이 맞춘 후 사용하십시오.","- 공격 사거리 밖으로 나간 적은 독약 병을 사용하여 따라잡을 수 있습니다."],"enemytips":["- 트위치는 체력이 매우 낮습니다. 위장 상태의 트위치를 찾아내면 팀원들과 힘을 합쳐 빨리 처치하십시오.","- 마법 보호막은 트위치의 맹독 스킬이 가지는 피해 자체를 막을 수는 없으나 기타 다른 효과는 막아낼 수 있습니다.","- 트위치가 공격로에서 사라진 것 같으면 동료들에게 트위치가 행방불명(미아)되었다는 것을 꼭 알리십시오."],"tags":["Marksman","Assassin"],"partype":"마나","info":{"attack":9,"defense":2,"magic":3,"difficulty":6},"stats":{"armor":32,"armorperlevel":3,"attackdamage":63,"attackdamageperlevel":2.41,"attackrange":550,"attackspeedoffset":-0.08,"attackspeedperlevel":3.38,"crit":0,"critperlevel":0,"hp":525.08,"hpperlevel":81,"hpregen":6.008,"hpregenperlevel":0.6,"movespeed":330,"mp":287.2,"mpperlevel":40,"mpregen":7.256,"mpregenperlevel":0.45,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"매복","description":"트위치의 이동 속도가 빨라지고 짧은 시간 동안 위장 상태가 됩니다. 위장 효과가 끝나면 잠시 공격 속도가 증가합니다.<br><br>맹독에 걸린 적 챔피언이 죽으면 매복의 재사용 대기시간이 초기화됩니다.","sanitizedDescription":"트위치의 이동 속도가 빨라지고 짧은 시간 동안 위장 상태가 됩니다. 위장 효과가 끝나면 잠시 공격 속도가 증가합니다. 맹독에 걸린 적 챔피언이 죽으면 매복의 재사용 대기시간이 초기화됩니다.","tooltip":"트위치가 <span class=\"colorcd90ee\">위장</span> 상태에 돌입해 {{ e2 }}초 동안 이동 속도가 {{ e3 }}% 증가합니다. 트위치를 볼 수 없는 적 챔피언 근처에서는 이동 속도 증가 효과가 세 배로 올라갑니다.<br /><br />매복이 종료되면 {{ e6 }}초 동안 트위치의 공격 속도가 {{ e1 }}% 증가합니다. <span class=\"color3ca126\">맹독</span>에 감염된 적이 죽으면 매복이 초기화됩니다.<br /><br /><font color='#cd90ee'size='16'><u>은신 - 위장:</u></span> <font color='#8C8C8C'size='16'>트위치는 적 챔피언이 감지 가능한 범위 안에 들어오지 않는 한 시야에서 보이지 않습니다. 기본 공격이나 스킬을 사용하면 위장이 해제됩니다.</span>","sanitizedTooltip":"트위치가 위장 상태에 돌입해 {{ e2 }}초 동안 이동 속도가 {{ e3 }}% 증가합니다. 트위치를 볼 수 없는 적 챔피언 근처에서는 이동 속도 증가 효과가 세 배로 올라갑니다. 매복이 종료되면 {{ e6 }}초 동안 트위치의 공격 속도가 {{ e1 }}% 증가합니다. 맹독에 감염된 적이 죽으면 매복이 초기화됩니다. 은신 - 위장: 트위치는 적 챔피언이 감지 가능한 범위 안에 들어오지 않는 한 시야에서 보이지 않습니다. 기본 공격이나 스킬을 사용하면 위장이 해제됩니다.","leveltip":{"label":["위장 지속 시간","공격 속도"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%"]},"image":{"full":"TwitchHideInShadows.png","sprite":"spell12.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[16,16,16,16,16],"cooldownBurn":"16","effect":[null,[30,35,40,45,50],[10,11,12,13,14],[10,10,10,10,10],[1,1,1,1,1],[1,1,1,1,1],[5,5,5,5,5],[3,3,3,3,3],[500,500,500,500,500],[1000,1000,1000,1000,1000],[30,30,30,30,30]],"effectBurn":["","30/35/40/45/50","10/11/12/13/14","10","1","1","5","3","500","1000","30"],"range":[20,20,20,20,20],"rangeBurn":"20","key":"TwitchHideInShadows"},{"name":"독약 병","description":"트위치가 명중하면 폭발하는 독약 병을 던져, 범위 내 대상들에게 둔화 효과를 부여하고 맹독을 적용합니다.","sanitizedDescription":"트위치가 명중하면 폭발하는 독약 병을 던져, 범위 내 대상들에게 둔화 효과를 부여하고 맹독을 적용합니다.","tooltip":"트위치가 독약 병을 던져 맞힌 모든 적에게 <span class=\"color3ca126\">맹독</span>을 중첩시키고 {{ e3 }}초 동안 지속되는 독구름을 남깁니다.<br /><br />독구름 안의 적은 이동 속도가 {{ e2 }}% 감소하고 매초 <span class=\"color3ca126\">맹독</span> 중첩이 쌓입니다.","sanitizedTooltip":"트위치가 독약 병을 던져 맞힌 모든 적에게 맹독을 중첩시키고 {{ e3 }}초 동안 지속되는 독구름을 남깁니다. 독구름 안의 적은 이동 속도가 {{ e2 }}% 감소하고 매초 맹독 중첩이 쌓입니다.","leveltip":{"label":["둔화","재사용 대기시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TwitchVenomCask.png","sprite":"spell12.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[2,2,2,2,2],[25,30,35,40,45],[3,3,3,3,3],[300,300,300,300,300],[3.5,3.5,3.5,3.5,3.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2","25/30/35/40/45","3","300","3.5","0","0","0","0","0"],"range":[950,950,950,950,950],"rangeBurn":"950","key":"TwitchVenomCask"},{"name":"오염","description":"트위치가 역병을 퍼뜨려 중독된 적들에게 더 큰 피해를 줍니다.","sanitizedDescription":"트위치가 역병을 퍼뜨려 중독된 적들에게 더 큰 피해를 줍니다.","tooltip":"<span class=\"color3ca126\">맹독</span>에 감염된 주위 적 모두에게 {{ e2 }}의 물리 피해를 입히고 추가적으로 중첩된 <span class=\"color3ca126\">맹독</span> 하나 당 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }})</span> <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 추가 피해를 입힙니다. <span class=\"colora3554e\">(중첩 최대 피해량: {{ f2 }})</span>","sanitizedTooltip":"맹독에 감염된 주위 적 모두에게 {{ e2 }}의 물리 피해를 입히고 추가적으로 중첩된 맹독 하나 당 {{ e1 }} (+{{ a1 }}) (+{{ f1 }})의 추가 피해를 입힙니다. (중첩 최대 피해량: {{ f2 }})","leveltip":{"label":["기본 피해량","중첩 당 피해량","마나 소모량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"TwitchExpunge.png","sprite":"spell12.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[15,20,25,30,35],[20,35,50,65,80],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/20/25/30/35","20/35/50/65/80","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[1200,1200,1200,1200,1200],"rangeBurn":"1200","key":"TwitchExpunge"},{"name":"무차별 난사","description":"트위치가 석궁의 위력을 최대한으로 끌어올려 멀리로 관통 화살들을 발사하며, 경로 상의 모든 적을 꿰뚫습니다.","sanitizedDescription":"트위치가 석궁의 위력을 최대한으로 끌어올려 멀리로 관통 화살들을 발사하며, 경로 상의 모든 적을 꿰뚫습니다.","tooltip":"{{ e2 }}초 동안 트위치의 공격 사거리가 {{ e5 }}만큼 증가하고, 공격력은 {{ e1 }}만큼 증가합니다.<br /><br />이 동안 트위치의 기본 공격은 적을 관통하며, 한 번 관통할 때마다 피해량이 {{ e3 }}%씩 감소됩니다. 최소 피해량은 {{ e4 }}%까지 내려갑니다.<br /><br /><font color='#cd90ee'size='16'><u>은신 - 위장:</u></span> <font color='#8C8C8C'size='16'>무차별 난사를 활성화해도 위장 상태가 해제되지 않습니다.","sanitizedTooltip":"{{ e2 }}초 동안 트위치의 공격 사거리가 {{ e5 }}만큼 증가하고, 공격력은 {{ e1 }}만큼 증가합니다. 이 동안 트위치의 기본 공격은 적을 관통하며, 한 번 관통할 때마다 피해량이 {{ e3 }}%씩 감소됩니다. 최소 피해량은 {{ e4 }}%까지 내려갑니다. 은신 - 위장: 무차별 난사를 활성화해도 위장 상태가 해제되지 않습니다.","leveltip":{"label":["공격력 증가"],"effect":["{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"TwitchFullAutomatic.png","sprite":"spell12.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[90,90,90],"cooldownBurn":"90","effect":[null,[20,30,40],[5,5,5],[20,20,20],[40,40,40],[300,300,300],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","20/30/40","5","20","40","300","0","0","0","0","0"],"range":[1200,1200,1200],"rangeBurn":"1200","key":"TwitchFullAutomatic"}],"passive":{"name":"맹독","description":"트위치의 기본 공격은 대상을 중독시켜 초당 고정 피해를 입힙니다.","sanitizedDescription":"트위치의 기본 공격은 대상을 중독시켜 초당 고정 피해를 입힙니다.","image":{"full":"Twitch_Passive.png","sprite":"passive3.png","group":"passive","x":288,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Twitch","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1},{"id":3144,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1053,"count":1},{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3144,"count":1},{"id":1043,"count":1},{"id":3153,"count":1}]}]},{"champion":"Twitch","title":"TwitchARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3153,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Twitch","title":"TwitchCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Twitch","title":"TwitchFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1043,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3046,"count":1},{"id":3031,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3036,"count":1},{"id":3033,"count":1},{"id":3072,"count":1},{"id":3139,"count":1},{"id":3508,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2031,"count":1},{"id":2140,"count":1},{"id":3363,"count":1}]}]},{"champion":"Twitch","title":"TwitchKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3006,"count":1},{"id":3085,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3153,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3139,"count":1},{"id":3156,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"Twitch","title":"TwitchSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]}]},{"champion":"Twitch","title":"TwitchSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1038,"count":1},{"id":3086,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3031,"count":1},{"id":3085,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3153,"count":1},{"id":3087,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3814,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":2032,"count":1},{"id":3706,"count":1},{"id":1043,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1416,"count":1},{"id":3117,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3085,"count":1},{"id":3031,"count":1},{"id":3036,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3072,"count":1},{"id":3139,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Twitch","title":"TwitchTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3085,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3036,"count":1},{"id":3031,"count":1},{"id":3087,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3102,"count":1},{"id":3814,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"DrMundo":{"id":36,"key":"DrMundo","name":"문도 박사","title":"자운의 광인","image":{"full":"DrMundo.png","sprite":"champion0.png","group":"champion","x":96,"y":96,"w":48,"h":48},"skins":[{"id":36000,"name":"default","num":0},{"id":36001,"name":"독극물 문도 박사","num":1},{"id":36002,"name":"몸짱 문도씨","num":2},{"id":36003,"name":"CEO 문도","num":3},{"id":36004,"name":"분장한다 문도!","num":4},{"id":36005,"name":"처형자 문도","num":5},{"id":36006,"name":"전장을 누비는 문도","num":6},{"id":36007,"name":"TPA 문도","num":7},{"id":36008,"name":"수영장 파티 문도","num":8},{"id":36009,"name":"프로레슬러 문도","num":9}],"lore":"끔찍한 보라색 피부의 문도 박사는 죄책감이라고는 없는 미치광이 살인마이자 자운 사람들이 몹시 어두운 밤에 집 밖에 나가지 못하는 이유이기도 하다. 단음절로 말하는 이 흉측한 괴물은 오직 고통만을 주거나 받기를 원하는 것처럼 보인다. 대형식칼을 새털같이 가볍게 휘두르는 문도는 자운 시민 수십 명을 붙잡아 의미도 목적도 전혀 없어 보이는 '수술'로 사악하게 고문한 것으로 악명이 높다. 문도 박사는 잔인하고 예측 불가하다. 그저 가고 싶은 데로 간다. 그리고 엄밀히 말해 박사도 아니다.","blurb":"끔찍한 보라색 피부의 문도 박사는 죄책감이라고는 없는 미치광이 살인마이자 자운 사람들이 몹시 어두운 밤에 집 밖에 나가지 못하는 이유이기도 하다. 단음절로 말하는 이 흉측한 괴물은 오직 고통만을 주거나 받기를 원하는 것처럼 보인다. 대형식칼을 새털같이 가볍게 휘두르는 문도는 자운 시민 수십 명을 붙잡아 의미도 목적도 전혀 없어 보이는 '수술'로 사악하게 고문한 것으로 악명이 높다. 문도 박사는 잔인하고 예측 불가하다. 그저 가고 싶은 데로 간다...","allytips":["- 가학증을 시기 적절하게 사용하면 적 챔피언이 자신의 불리한 처지도 잊고 덤벼들게 할 수 있습니다.","- 정령의 형상은 궁극기에서 얻는 치료 효과를 높이고 다른 스킬의 재사용 대기시간을 줄여줍니다.","- 칠흑의 양날도끼는 중립 몬스터를 제거하는 데 효과적인 무기입니다. 본진으로 돌아가기 보다는 중립 몬스터를 제거하며 궁극기로 체력을 회복하십시오."],"enemytips":["- 문도 박사가 궁극기를 사용하고 나면 그 즉시 아군들과 함께 협력하여 공격하십시오. 만에 하나 문도 박사를 신속하게 쓰러뜨리지 못하면 문도 박사의 체력이 입은 피해 이상으로 회복되기 때문입니다.","- 문도 박사가 가학증 스킬을 사용하려고 할 때 소환사 주문 점화를 사용하여 체력 회복을 막으십시오."],"tags":["Fighter","Tank"],"partype":"없음","info":{"attack":5,"defense":7,"magic":6,"difficulty":5},"stats":{"armor":36,"armorperlevel":3.5,"attackdamage":61.27,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.8,"crit":0,"critperlevel":0,"hp":582.52,"hpperlevel":89,"hpregen":7.76,"hpregenperlevel":0.75,"movespeed":345,"mp":0,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"오염된 대형식칼","description":"문도 박사가 식칼을 던져 적의 현재 체력에 비례한 피해를 입히며, 짧은 시간 적의 속도를 늦춥니다. 공격이 성공하면 문도 박사는 적의 고통에 희열을 느끼며 소모한 체력의 절반을 회복합니다. (이 때 적을 처치하면 소모한 체력을 전부 회복합니다.)","sanitizedDescription":"문도 박사가 식칼을 던져 적의 현재 체력에 비례한 피해를 입히며, 짧은 시간 적의 속도를 늦춥니다. 공격이 성공하면 문도 박사는 적의 고통에 희열을 느끼며 소모한 체력의 절반을 회복합니다. (이 때 적을 처치하면 소모한 체력을 전부 회복합니다.)","tooltip":"문도 박사가 식칼을 던져 적의 현재 체력의 {{ e2 }}%(최소 {{ e1 }})만큼 마법 피해를 입히고 {{ e5 }}초 동안 적의 속도를 {{ e4 }}% 늦춥니다.<br /><br />식칼이 적중하면 체력을 {{ f1 }}만큼 돌려받습니다. (처치할 경우 {{ f2 }})<br /><br /><rules>오염된 대형식칼은 몬스터 대상으로 최대 {{ e6 }}의 피해를 입힙니다.</rules>","sanitizedTooltip":"문도 박사가 식칼을 던져 적의 현재 체력의 {{ e2 }}%(최소 {{ e1 }})만큼 마법 피해를 입히고 {{ e5 }}초 동안 적의 속도를 {{ e4 }}% 늦춥니다. 식칼이 적중하면 체력을 {{ f1 }}만큼 돌려받습니다. (처치할 경우 {{ f2 }}) 오염된 대형식칼은 몬스터 대상으로 최대 {{ e6 }}의 피해를 입힙니다.","leveltip":{"label":["대형식칼 피해량","최소 피해량","최대 피해량 (몬스터 대상)","소모값"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e1 }} -> {{ e1NL }}","{{ e6 }} -> {{ e6NL }}","{{ e3 }} -> {{ e3NL }}"]},"image":{"full":"InfectedCleaverMissileCast.png","sprite":"spell2.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"체력 {{ e3 }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[80,130,180,230,280],[15,17.5,20,22.5,25],[50,60,70,80,90],[40,40,40,40,40],[2,2,2,2,2],[300,350,400,450,500],[0.5,0.5,0.5,0.5,0.5],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/130/180/230/280","15/17.5/20/22.5/25","50/60/70/80/90","40","2","300/350/400/450/500","0.5","1","0","0"],"range":[975,975,975,975,975],"rangeBurn":"975","key":"InfectedCleaverMissileCast"},{"name":"타오르는 고통","description":"문도 박사가 체력을 소진하여 방해 효과의 지속 시간을 줄이고 주변 적에게 지속적인 피해를 입힙니다.","sanitizedDescription":"문도 박사가 체력을 소진하여 방해 효과의 지속 시간을 줄이고 주변 적에게 지속적인 피해를 입힙니다.","tooltip":"<spellActive>활성화/비활성화:</spellActive> 문도 박사가 자신에게 불을 질러 매초 주변 적에게 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다.<br /><br />불이 붙은 동안 문도 박사에게 걸린 방해 효과의 지속 시간이 {{ e5 }}% 감소합니다.","sanitizedTooltip":"활성화/비활성화: 문도 박사가 자신에게 불을 질러 매초 주변 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 불이 붙은 동안 문도 박사에게 걸린 방해 효과의 지속 시간이 {{ e5 }}% 감소합니다.","leveltip":{"label":["피해량","방해 효과 감소","소모값"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"BurningAgony.png","sprite":"spell2.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"매초 체력 {{ e2 }}","maxrank":5,"cost":[0,0,0,0,0],"costBurn":"0","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[40,55,70,85,100],[10,15,20,25,30],[2,2,2,2,2],[325,325,325,325,325],[10,15,20,25,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","40/55/70/85/100","10/15/20/25/30","2","325","10/15/20/25/30","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"BurningAgony"},{"name":"피학증","description":"문도 박사가 잃은 체력에 비례하여 추가 공격력을 얻고, 다음 기본 공격으로 대상에게 박치기를 하여 추가 피해를 입힙니다. 또한 문도 박사가 마법 피해를 입거나 스킬에 체력을 소모하면 마법 저항력을 증가시킵니다.","sanitizedDescription":"문도 박사가 잃은 체력에 비례하여 추가 공격력을 얻고, 다음 기본 공격으로 대상에게 박치기를 하여 추가 피해를 입힙니다. 또한 문도 박사가 마법 피해를 입거나 스킬에 체력을 소모하면 마법 저항력을 증가시킵니다.","tooltip":"<spellPassive>기본 지속 효과:</spellPassive> 문도 박사가 마법 피해를 받거나 스킬로 체력을 소모할 때 {{ e0 }}초 동안 마법 저항력이 {{ e8 }}% 증가합니다. (최대 {{ f3*100 }}%)<br /><br /><spellActive>사용 시:</spellActive> 문도 박사의 다음 기본 공격은 적에게 박치기를 하여<scaleHealth>{{ f1 }}</scaleHealth>의 물리 피해를 추가로 입힙니다. (최대 체력의 {{ e1 }}%) 문도 박사는 이 스킬을 사용 시 체력 {{ e2 }}를 소모합니다.<br /><br />활성화 시 문도 박사가 잃은 체력에 비례하여 {{ e6 }}초 동안 공격력을 최대 {{ e4 }}까지 얻습니다. (최소 {{ e5 }})<br /><br /><rules>피학증으로 최소 추가 공격력 외에 잃은 체력 1%당 {{ f2 }}의 공격력을 더 얻습니다. (<scaleHealth>{{ f5 }}</scaleHealth>)</rules>","sanitizedTooltip":"기본 지속 효과: 문도 박사가 마법 피해를 받거나 스킬로 체력을 소모할 때 {{ e0 }}초 동안 마법 저항력이 {{ e8 }}% 증가합니다. (최대 {{ f3*100 }}%) 사용 시: 문도 박사의 다음 기본 공격은 적에게 박치기를 하여{{ f1 }}의 물리 피해를 추가로 입힙니다. (최대 체력의 {{ e1 }}%) 문도 박사는 이 스킬을 사용 시 체력 {{ e2 }}를 소모합니다. 활성화 시 문도 박사가 잃은 체력에 비례하여 {{ e6 }}초 동안 공격력을 최대 {{ e4 }}까지 얻습니다. (최소 {{ e5 }}) 피학증으로 최소 추가 공격력 외에 잃은 체력 1%당 {{ f2 }}의 공격력을 더 얻습니다. ({{ f5 }})","leveltip":{"label":["박치기 피해량","박치기 소모값","최대 공격력","최소 공격력","최대 마법 저항력"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}","{{ e4 }} -> {{ e4NL }}","{{ e5 }} -> {{ e5NL }}","{{ f3*100 }}% -> {{ f4*100 }}%"]},"image":{"full":"Masochism.png","sprite":"spell2.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[3,3.5,4,4.5,5],[25,35,45,55,65],[25,25,25,25,25],[60,100,140,180,220],[30,50,70,90,110],[5,5,5,5,5],[0,0,0,0,0],[2,2,2,2,2],[3,6,9,12,15],[2,2,2,2,2]],"effectBurn":["","3/3.5/4/4.5/5","25/35/45/55/65","25","60/100/140/180/220","30/50/70/90/110","5","0","2","3/6/9/12/15","2"],"range":[300,300,300,300,300],"rangeBurn":"300","key":"Masochism"},{"name":"가학증","description":"문도 박사가 체력의 일부를 희생하여 이동 속도를 높이고 체력 재생력을 크게 높입니다.","sanitizedDescription":"문도 박사가 체력의 일부를 희생하여 이동 속도를 높이고 체력 재생력을 크게 높입니다.","tooltip":"문도 박사가 {{ e2 }}초에 걸쳐 <scaleHealth>{{ f1 }}</scaleHealth>의 체력을 (최대 체력의 {{ e1 }}%) 회복합니다. 또한 이 동안 이동 속도가 {{ e3 }}% 증가합니다.","sanitizedTooltip":"문도 박사가 {{ e2 }}초에 걸쳐 {{ f1 }}의 체력을 (최대 체력의 {{ e1 }}%) 회복합니다. 또한 이 동안 이동 속도가 {{ e3 }}% 증가합니다.","leveltip":{"label":["재생","이동 속도","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"Sadism.png","sprite":"spell2.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"현재 체력의 {{ e4 }}%","maxrank":3,"cost":[0,0,0],"costType":"%","costBurn":"0","cooldown":[100,85,70],"cooldownBurn":"100/85/70","effect":[null,[40,50,60],[12,12,12],[15,25,35],[20,20,20],[0.015,0.015,0.015],[5,5,5],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","40/50/60","12","15/25/35","20","0.01","5","0","0","0","0"],"range":[20,20,20],"rangeBurn":"20","key":"Sadism"}],"passive":{"name":"아드레날린 분출","description":"문도 박사는 매초 최대 체력의 0.3%가 회복됩니다.","sanitizedDescription":"문도 박사는 매초 최대 체력의 0.3%가 회복됩니다.","image":{"full":"DrMundo_Passive.png","sprite":"passive0.png","group":"passive","x":96,"y":96,"w":48,"h":48}},"recommended":[{"champion":"DrMundo","title":"DrMundoARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3075,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"DrMundo","title":"DrMundoCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3211,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3091,"count":1},{"id":3075,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"DrMundo","title":"DrMundoFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3022,"count":1},{"id":3091,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3075,"count":1},{"id":3083,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1},{"id":3361,"count":1}]}]},{"champion":"DrMundo","title":"DrMundoKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3075,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3190,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"DrMundo","title":"DrMundoSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3091,"count":1},{"id":3075,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3102,"count":1}]}]},{"champion":"DrMundo","title":"DrMundoSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3211,"count":1},{"id":3751,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3715,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3009,"count":1},{"id":1413,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3001,"count":1},{"id":3075,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"DrMundo","title":"DrMundoTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":3065,"count":1},{"id":3068,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3009,"count":1},{"id":1401,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3091,"count":1},{"id":3075,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Orianna":{"id":61,"key":"Orianna","name":"오리아나","title":"시계태엽 소녀","image":{"full":"Orianna.png","sprite":"champion2.png","group":"champion","x":48,"y":96,"w":48,"h":48},"skins":[{"id":61000,"name":"default","num":0},{"id":61001,"name":"고스족 오리아나","num":1},{"id":61002,"name":"혼돈의 인형 오리아나","num":2},{"id":61003,"name":"암살 인형 오리아나","num":3},{"id":61004,"name":"TPA 오리아나","num":4},{"id":61005,"name":"겨울 동화 오리아나","num":5},{"id":61006,"name":"사랑의 추적자 오리아나","num":6},{"id":61007,"name":"암흑의 별 오리아나","num":7}],"lore":"오리아나는 한 때 살아있는 육신을 가진 호기심 많은 소녀였지만, 이제는 전체가 시계태엽 장치로 만들어진 놀라운 기술의 산물이다. 오리아나는 자운 남부지방에서 사고를 당한 후 매우 위태로운 상황에 처했고, 다쳐서 움직일 수 없는 신체의 부분 부분이 정교한 인공 신체로 교체되었다. 오리아나는 자신을 보호하는 친구 역할을 해 주는 강력한 황동 구체와 함께, 이제 필트오버를 비롯해 온 세상에 있는 불가사의를 자유롭게 탐험한다.","blurb":"오리아나는 한 때 살아있는 육신을 가진 호기심 많은 소녀였지만, 이제는 전체가 시계태엽 장치로 만들어진 놀라운 기술의 산물이다. 오리아나는 자운 남부지방에서 사고를 당한 후 매우 위태로운 상황에 처했고, 다쳐서 움직일 수 없는 신체의 부분 부분이 정교한 인공 신체로 교체되었다. 오리아나는 자신을 보호하는 친구 역할을 해 주는 강력한 황동 구체와 함께, 이제 필트오버를 비롯해 온 세상에 있는 불가사의를 자유롭게 탐험한다.","allytips":["- 명령: 보호를 자신에게 사용하면 구체가 빠르게 되돌아옵니다. 이 스킬을 명령: 공격과 연계하면 빠른 공격이 가능합니다.","- 명령: 불협화음은 구체를 가진 오리아나를 빠르게 탈출시킬 수 있습니다. 적을 느리게 만드는 장애물을 남기며 빠르게 이동하는 조합은 대단히 강력합니다.","- 명령: 충격파를 사용하면 구체의 위치에 따라 적을 자기 쪽으로 잡아당기거나 밀어낼 수 있습니다."],"enemytips":["- 오리아나는 구체가 있는 지역에만 영향을 줄 수 있으므로 이 점을 활용하십시오.","- 오리아나의 구체는 거리가 너무 멀어지면 되돌아오므로 주의하십시오. 예상치 못한 일이 발생할 수 있습니다."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":4,"defense":3,"magic":9,"difficulty":7},"stats":{"armor":17.04,"armorperlevel":3,"attackdamage":40.368,"attackdamageperlevel":2.6,"attackrange":525,"attackspeedoffset":-0.05,"attackspeedperlevel":3.5,"crit":0,"critperlevel":0,"hp":530,"hpperlevel":91,"hpregen":6.874,"hpregenperlevel":0.55,"movespeed":325,"mp":334,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"명령: 공격","description":"오리아나가 구체에게 목표 지점으로 돌진하라고 명령하여 구체가 대상 지점으로 가는 동안 마주치는 대상에게 마법 피해를 줍니다. 여러 대상을 맞히는 경우 뒤로 갈수록 피해량이 작아집니다. 구체는 목표 지점에 머뭅니다.","sanitizedDescription":"오리아나가 구체에게 목표 지점으로 돌진하라고 명령하여 구체가 대상 지점으로 가는 동안 마주치는 대상에게 마법 피해를 줍니다. 여러 대상을 맞히는 경우 뒤로 갈수록 피해량이 작아집니다. 구체는 목표 지점에 머뭅니다.","tooltip":"오리아나가 구체에게 목표 지점으로 돌진하라고 명령하여 구체가 대상 지점으로 가는 동안 마주치는 대상에게 {{ e1 }}<span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 줍니다. 여러 대상을 공격 시 매 타격마다 {{ e2 }}%만큼 적은 피해를 줍니다. (최저 {{ e3 }}%)<br /><br />구체는 목표 위치 지점에 머뭅니다.","sanitizedTooltip":"오리아나가 구체에게 목표 지점으로 돌진하라고 명령하여 구체가 대상 지점으로 가는 동안 마주치는 대상에게 {{ e1 }}(+{{ a1 }})의 마법 피해를 줍니다. 여러 대상을 공격 시 매 타격마다 {{ e2 }}%만큼 적은 피해를 줍니다. (최저 {{ e3 }}%) 구체는 목표 위치 지점에 머뭅니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"OrianaIzunaCommand.png","sprite":"spell8.png","group":"spell","x":144,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,35,40,45,50],"costBurn":"30/35/40/45/50","cooldown":[6,5.25,4.5,3.75,3],"cooldownBurn":"6/5.25/4.5/3.75/3","effect":[null,[60,90,120,150,180],[10,10,10,10,10],[40,40,40,40,40],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/90/120/150/180","10","40","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[815,815,815,815,815],"rangeBurn":"815","key":"OrianaIzunaCommand"},{"name":"명령: 불협화음","description":"오리아나가 구체에게 에너지파를 방출하도록 명령하여 근처에 있는 적에게 마법 피해를 줍니다. 이때 생긴 자기장은 아군의 이동 속도를 높이고 적의 이동 속도는 늦춥니다.","sanitizedDescription":"오리아나가 구체에게 에너지파를 방출하도록 명령하여 근처에 있는 적에게 마법 피해를 줍니다. 이때 생긴 자기장은 아군의 이동 속도를 높이고 적의 이동 속도는 늦춥니다.","tooltip":"오리아나가 구체에게 에너지를 방출하도록 명령하여 주변에 있는 적에게 {{ e1 }}<span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 줍니다.<br /><br />이때 자기장이 {{ e4 }}초 동안 발생하여 {{ e5 }}초 동안 적의 이동 속도를 {{ e2 }}%만큼 낮추고 아군의 이동 속도는 {{ e3 }}%만큼 높입니다. 이 효과는 시간이 흐르면 점점 약해집니다.","sanitizedTooltip":"오리아나가 구체에게 에너지를 방출하도록 명령하여 주변에 있는 적에게 {{ e1 }}(+{{ a1 }})의 마법 피해를 줍니다. 이때 자기장이 {{ e4 }}초 동안 발생하여 {{ e5 }}초 동안 적의 이동 속도를 {{ e2 }}%만큼 낮추고 아군의 이동 속도는 {{ e3 }}%만큼 높입니다. 이 효과는 시간이 흐르면 점점 약해집니다.","leveltip":{"label":["피해량","추가 이동 속도","둔화","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"OrianaDissonanceCommand.png","sprite":"spell8.png","group":"spell","x":192,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[60,105,150,195,240],[20,25,30,35,40],[20,25,30,35,40],[3,3,3,3,3],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/105/150/195/240","20/25/30/35/40","20/25/30/35/40","3","2","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[255,255,255,255,255],"rangeBurn":"255","key":"OrianaDissonanceCommand"},{"name":"명령: 보호","description":"오리아나가 구체에게 아군을 따라다니며 이들을 보호하고 도중에 마주치는 적에게 마법 피해를 주도록 명령합니다. 구체는 또한 보호하는 챔피언의 방어력 및 마법 저항력을 높여줍니다.","sanitizedDescription":"오리아나가 구체에게 아군을 따라다니며 이들을 보호하고 도중에 마주치는 적에게 마법 피해를 주도록 명령합니다. 구체는 또한 보호하는 챔피언의 방어력 및 마법 저항력을 높여줍니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>구체가 보호하는 아군 챔피언의 방어력과 마법 저항력이 {{ e2 }}만큼 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>오리아나가 구체에게 아군을 따라다니며 보호하도록 명령하고 {{ e5 }}초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해를 막는 보호막을 씌웁니다. 중간에 마주치는 적은 {{ e3 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입습니다.","sanitizedTooltip":"기본 지속 효과: 구체가 보호하는 아군 챔피언의 방어력과 마법 저항력이 {{ e2 }}만큼 증가합니다. 사용 시: 오리아나가 구체에게 아군을 따라다니며 보호하도록 명령하고 {{ e5 }}초 동안 {{ e1 }} (+{{ a1 }})의 피해를 막는 보호막을 씌웁니다. 중간에 마주치는 적은 {{ e3 }} (+{{ a2 }})의 마법 피해를 입습니다.","leveltip":{"label":["피해량","추가 방어력","추가 마법 저항력","피해 흡수량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ e2 }} -> {{ e2NL }}","{{ e2 }} -> {{ e2NL }}","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"OrianaRedactCommand.png","sprite":"spell8.png","group":"spell","x":240,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[9,9,9,9,9],"cooldownBurn":"9","effect":[null,[60,100,140,180,220],[10,15,20,25,30],[60,90,120,150,180],[75,75,75,75,75],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/100/140/180/220","10/15/20/25/30","60/90/120/150/180","75","4","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[1095,1095,1095,1095,1095],"rangeBurn":"1095","key":"OrianaRedactCommand"},{"name":"명령: 충격파","description":"오리아나가 구체에게 충격파를 방출하도록 명령하여 근처에 있는 적에게 마법 피해를 주며 잠시 뒤 적을 구체 쪽으로 잡아당깁니다.","sanitizedDescription":"오리아나가 구체에게 충격파를 방출하도록 명령하여 근처에 있는 적에게 마법 피해를 주며 잠시 뒤 적을 구체 쪽으로 잡아당깁니다.","tooltip":"오리아나가 구체에게 충격파를 방출하도록 명령하여 근처에 있는 적에게 {{ e1 }}<span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 주며 잠시 뒤 적을 구체 쪽으로 잡아당깁니다.","sanitizedTooltip":"오리아나가 구체에게 충격파를 방출하도록 명령하여 근처에 있는 적에게 {{ e1 }}(+{{ a1 }})의 마법 피해를 주며 잠시 뒤 적을 구체 쪽으로 잡아당깁니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"OrianaDetonateCommand.png","sprite":"spell8.png","group":"spell","x":288,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[110,95,80],"cooldownBurn":"110/95/80","effect":[null,[150,225,300],[40,50,60],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","150/225/300","40/50/60","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[410,410,410],"rangeBurn":"410","key":"OrianaDetonateCommand"}],"passive":{"name":"시계태엽 감기","description":"오리아나의 자동 공격은 추가 마법 피해를 줍니다. 같은 적을 연속으로 공격할수록 추가 마법 피해량도 커집니다.","sanitizedDescription":"오리아나의 자동 공격은 추가 마법 피해를 줍니다. 같은 적을 연속으로 공격할수록 추가 마법 피해량도 커집니다.","image":{"full":"OriannaPassive.png","sprite":"passive2.png","group":"passive","x":48,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Orianna","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1052,"count":1},{"id":1027,"count":1},{"id":3802,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3108,"count":1},{"id":1052,"count":1},{"id":3165,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3116,"count":1},{"id":3089,"count":1},{"id":3285,"count":1}]}]},{"champion":"Orianna","title":"OriannaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3802,"count":1},{"id":1001,"count":1},{"id":2003,"count":4}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1},{"id":3285,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Orianna","title":"OriannaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Orianna","title":"OriannaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3157,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3285,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3174,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Orianna","title":"OriannaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":3303,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3165,"count":1},{"id":3020,"count":1},{"id":3003,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3089,"count":1},{"id":3285,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Orianna","title":"OriannaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3174,"count":1}]}]},{"champion":"Orianna","title":"OriannaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3089,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3174,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Orianna","title":"OriannaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3165,"count":1},{"id":3090,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3285,"count":1},{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3174,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Evelynn":{"id":28,"key":"Evelynn","name":"이블린","title":"고통스런 포옹","image":{"full":"Evelynn.png","sprite":"champion0.png","group":"champion","x":240,"y":96,"w":48,"h":48},"skins":[{"id":28000,"name":"default","num":0},{"id":28001,"name":"그림자 이블린","num":1},{"id":28002,"name":"가면 무도회 이블린","num":2},{"id":28003,"name":"탱고 이블린","num":3},{"id":28004,"name":"금고털이 이블린","num":4}],"lore":"룬테라의 어두운 경계선 안에서, 악마 이블린은 다음 먹잇감을 찾고 있다. 먼저 관능적인 인간 여성의 얼굴로 사냥감을 유혹한다. 희생자가 그 매력에 넘어오면, 이블린은 악마의 참모습을 드러낸다. 이블린은 희생자에게 말로 형언할 수 없는 고통을 안기고, 자신은 그 고통에 희열을 느낀다. 이블린이라는 악마에게는 이것이 한바탕 즐기는 유희일 뿐이지만, 룬테라 주민에게는 엇나간 욕망을 발산했다가는 그 대가로 끔찍한 종말을 맞게 되리라는 교훈을 되새겨주는 무시무시한 이야기이다.","blurb":"룬테라의 어두운 경계선 안에서, 악마 이블린은 다음 먹잇감을 찾고 있다. 먼저 관능적인 인간 여성의 얼굴로 사냥감을 유혹한다. 희생자가 그 매력에 넘어오면, 이블린은 악마의 참모습을 드러낸다. 이블린은 희생자에게 말로 형언할 수 없는 고통을 안기고, 자신은 그 고통에 희열을 느낀다. 이블린이라는 악마에게는 이것이 한바탕 즐기는 유희일 뿐이지만, 룬테라 주민에게는 엇나간 욕망을 발산했다가는 그 대가로 끔찍한 종말을 맞게 되리라는 교훈을 되새겨주는...","allytips":["황홀한 저주의 매혹 시전 시간이 길게 느껴질 수도 있지만 이블린은 매혹과 마법 저항력 감소 효과로 매우 유리한 입장에서 싸울 수 있기 때문에 기다릴 만한 가치가 있습니다.","은신 상태에서는 적 챔피언에게 얼마나 다가가면 감지되는지 주의를 기울이십시오. 근처 적 챔피언 위에 노란색이나 빨간색 눈이 빛나므로 적의 감지 여부를 파악할 수 있습니다.","체력이 낮을 때는 악의 장막이 주는 체력 회복 촉진 및 위장 효과로 전투에 복귀해 적의 빈틈을 노릴 수 있습니다."],"enemytips":["투명 감지 와드를 구입하면 이블린의 위치를 확인하는 데 도움이 되므로, 기습 공격에 대비할 수 있습니다.","이블린이 위협적인 것은 대부분 '황홀한 저주' 때문입니다. 황홀한 저주에 걸린 아군을 보호하고, 자신이 저주에 걸렸을 때는 이블린이 공격해 올만한 곳과 자신 사이에 아군이 위치하도록 하세요.","이블린의 기습 공격이 의심되면, 미니맵 신호나 채팅을 통해 동료들에게 알려 주세요."],"tags":["Assassin","Mage"],"partype":"마나","info":{"attack":4,"defense":2,"magic":7,"difficulty":10},"stats":{"armor":37,"armorperlevel":3.5,"attackdamage":61,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.1,"crit":0,"critperlevel":0,"hp":572,"hpperlevel":84,"hpregen":8.5,"hpregenperlevel":0.75,"movespeed":335,"mp":315.6,"mpperlevel":42,"mpregen":8.108,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"증오의 가시","description":"이블린이 가시를 발사해 처음 적중한 유닛에게 피해를 줍니다. 그다음 근처 적에게 일직선상의 가시를 세 번까지 발사할 수 있습니다.","sanitizedDescription":"이블린이 가시를 발사해 처음 적중한 유닛에게 피해를 줍니다. 그다음 근처 적에게 일직선상의 가시를 세 번까지 발사할 수 있습니다.","tooltip":"이블린이 대상 방향으로 가시를 발사해 처음 적중한 유닛에게 {{ e5 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 줍니다. 그후 동일 대상에게 가하는 이블린의 다음 3번의 스킬 또는 공격이 {{ e4 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 추가 마법 피해를 줍니다. 증오의 가시는 첫 시전 후 최대 세 번까지 재시전할 수 있습니다.<br /><br /><span class=\"colorFF9900\">재시전:</span> 발사한 가시가 가장 가까운 적을 통과하고 적중한 모든 적에게 {{ e5 }} <span class=\"color99FF99\">(+{{ a2 }})</span>의 마법 피해를 입힙니다.<br /><br /><rules><span class=\"color8c8c8c\">적중한 대상이 몬스터라면 증오의 가시의 재사용 대기시간이 {{ e1 }}% 감소합니다. 증오의 가시는 이블린이 현재 공격하는 적을 먼저 공격합니다.</span></rules>","sanitizedTooltip":"이블린이 대상 방향으로 가시를 발사해 처음 적중한 유닛에게 {{ e5 }} (+{{ a2 }})의 마법 피해를 줍니다. 그후 동일 대상에게 가하는 이블린의 다음 3번의 스킬 또는 공격이 {{ e4 }} (+{{ a1 }})의 추가 마법 피해를 줍니다. 증오의 가시는 첫 시전 후 최대 세 번까지 재시전할 수 있습니다. 재시전: 발사한 가시가 가장 가까운 적을 통과하고 적중한 모든 적에게 {{ e5 }} (+{{ a2 }})의 마법 피해를 입힙니다. 적중한 대상이 몬스터라면 증오의 가시의 재사용 대기시간이 {{ e1 }}% 감소합니다. 증오의 가시는 이블린이 현재 공격하는 적을 먼저 공격합니다.","leveltip":{"label":["채찍 및 가시 피해량","추가 피해량","마나 소모량"],"effect":["{{ e5 }} -> {{ e5NL }}","{{ e4 }} -> {{ e4NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EvelynnQ.png","sprite":"spell2.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[60,60,60,60,60],[30,30,30,30,30],[60,60,60,60,60],[10,20,30,40,50],[25,30,35,40,45],[6,6,6,6,6],[30,30,30,30,30],[50,50,50,50,50],[8,8,8,8,8],[-0.25,-0.25,-0.25,-0.25,-0.25]],"effectBurn":["","60","30","60","10/20/30/40/50","25/30/35/40/45","6","30","50","8","-0.25"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.25]},{"key":"a2","link":"spelldamage","coeff":[0.3]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"EvelynnQ"},{"name":"황홀한 저주","description":"이블린이 대상에게 저주를 겁니다. 이 대상에게 공격 또는 스킬을 시전하면 잠시 후 매혹 효과가 발동되며 대상의 마법 저항력이 감소합니다.","sanitizedDescription":"이블린이 대상에게 저주를 겁니다. 이 대상에게 공격 또는 스킬을 시전하면 잠시 후 매혹 효과가 발동되며 대상의 마법 저항력이 감소합니다.","tooltip":"대상 챔피언 또는 몬스터에게 5초 동안 저주를 겁니다. 저주에 걸린 대상에게 기본 공격을 가하거나 스킬을 사용하면 저주가 풀리면서 황홀한 저주로 소모했던 마나가 회복되고 잠시 대상의 이동 속도를 {{ e3 }}% 떨어뜨립니다.<br /><br />저주가 2.5초 이상 지속되면 저주가 풀리면서 대상을 {{ e2 }}초 동안 매혹하며 대상에 따라 다음의 효과가 적용됩니다. <li>적 챔피언: 마법 저항력이 {{ e0 }}초 동안 {{ e9 }}% 감소<br />몬스터: {{ e7 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 가하며 매혹 지속시간이 {{ e1 }}초 증가</li><br /><rules><span class=\"color8c8c8c\">황홀한 저주를 시전해도 악의 장막 효과는 없어지지 않습니다.</span></rules>","sanitizedTooltip":"대상 챔피언 또는 몬스터에게 5초 동안 저주를 겁니다. 저주에 걸린 대상에게 기본 공격을 가하거나 스킬을 사용하면 저주가 풀리면서 황홀한 저주로 소모했던 마나가 회복되고 잠시 대상의 이동 속도를 {{ e3 }}% 떨어뜨립니다. 저주가 2.5초 이상 지속되면 저주가 풀리면서 대상을 {{ e2 }}초 동안 매혹하며 대상에 따라 다음의 효과가 적용됩니다. 적 챔피언: 마법 저항력이 {{ e0 }}초 동안 {{ e9 }}% 감소 몬스터: {{ e7 }} (+{{ a1 }})의 마법 피해를 가하며 매혹 지속시간이 {{ e1 }}초 증가 황홀한 저주를 시전해도 악의 장막 효과는 없어지지 않습니다.","leveltip":{"label":["매혹 지속시간","마법 저항력 감소","몬스터 피해량","재사용 대기시간","시전 사거리"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e9 }}% -> {{ e9NL }}%","{{ e7 }} -> {{ e7NL }}","{{ f8 }} -> {{ f9 }}","{{ castrange }} -> {{ castrangeNL }}"]},"image":{"full":"EvelynnW.png","sprite":"spell3.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[0,0,0,0,0],"cooldownBurn":"0","effect":[null,[2,2,2,2,2],[1,1.25,1.5,1.75,2],[65,65,65,65,65],[15,14,13,12,11],[5,5,5,5,5],[1.5,1.5,1.5,1.5,1.5],[250,300,350,400,450],[0.75,0.75,0.75,0.75,0.75],[25,27.5,30,32.5,35],[4,4,4,4,4]],"effectBurn":["","2","1/1.25/1.5/1.75/2","65","15/14/13/12/11","5","1.5","250/300/350/400/450","0.75","25/27.5/30/32.5/35","4"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[1200,1300,1400,1500,1600],"rangeBurn":"1200/1300/1400/1500/1600","key":"EvelynnW"},{"name":"채찍유린","description":"이블린이 대상을 가격하여 피해를 줍니다. 이후 짧은 시간 동안 이동 속도가 증가합니다.","sanitizedDescription":"이블린이 대상을 가격하여 피해를 줍니다. 이후 짧은 시간 동안 이동 속도가 증가합니다.","tooltip":"이블린이 채찍으로 적을 가격하여 적중 시 효과를 적용하고 {{ f1 }} + 대상 최대 체력의 {{ e5 }}% <span class=\"color99FF99\">(+{{ a1 }}%)</span>만큼의 마법 피해를 줍니다. 이후 {{ e4 }}초 동안 이블린의 이동 속도가 {{ e3 }}% 증가합니다.<br /><br /><span class=\"color9542f4\">악의 장막</span>이 활성화되면 <span class=\"colorFFFFFF\"><i>채찍유린</i></span>의 재사용 대기시간이 초기화되고 채찍유린이 강화됩니다. 강화된 <span class=\"colorFFFFFF\"><i>채찍유린</i></span>을 사용하면 이블린이 대상에게 접근하며, 대상 및 경로에 있는 모든 적에게 {{ f2 }} + 대상 최대 체력의 {{ e6 }}% <span class=\"color99FF99\">(+{{ a2 }}%)</span>만큼의 마법 피해를 줍니다.","sanitizedTooltip":"이블린이 채찍으로 적을 가격하여 적중 시 효과를 적용하고 {{ f1 }} + 대상 최대 체력의 {{ e5 }}% (+{{ a1 }}%)만큼의 마법 피해를 줍니다. 이후 {{ e4 }}초 동안 이블린의 이동 속도가 {{ e3 }}% 증가합니다. 악의 장막이 활성화되면 채찍유린의 재사용 대기시간이 초기화되고 채찍유린이 강화됩니다. 강화된 채찍유린을 사용하면 이블린이 대상에게 접근하며, 대상 및 경로에 있는 모든 적에게 {{ f2 }} + 대상 최대 체력의 {{ e6 }}% (+{{ a2 }}%)만큼의 마법 피해를 줍니다.","leveltip":{"label":["기본 피해량","강화된 피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"EvelynnE.png","sprite":"spell3.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[40,55,70,85,100],[70,90,110,130,150],[30,30,30,30,30],[2,2,2,2,2],[4,4,4,4,4],[6,6,6,6,6],[450,450,450,450,450],[0.5,0.6,0.7,0.8,0.9],[2,2,2,2,2],[0.9,1.05,1.2,1.35,1.5]],"effectBurn":["","40/55/70/85/100","70/90/110/130/150","30","2","4","6","450","0.5/0.6/0.7/0.8/0.9","2","0.9/1.05/1.2/1.35/1.5"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.4]},{"key":"a1","link":"spelldamage","coeff":[0.025]},{"key":"a2","link":"spelldamage","coeff":[0.035]}],"range":[210,210,210,210,210],"rangeBurn":"210","key":"EvelynnE"},{"name":"최후의 포옹","description":"이블린이 잠시 대상으로 지정할 수 없게 되며 전방 범위의 적에게 피해를 준 다음 순간적으로 뒤쪽으로 이동합니다.","sanitizedDescription":"이블린이 잠시 대상으로 지정할 수 없게 되며 전방 범위의 적에게 피해를 준 다음 순간적으로 뒤쪽으로 이동합니다.","tooltip":"이블린이 악마의 기운을 방출해 대상으로 지정할 수 없게 되면서 전방의 적에게 {{ e1 }}<span class=\"color99FF99\"> (+{{ a1 }})</span>의 마법 피해를 준 다음 순간적으로 뒤쪽으로 이동합니다. 체력이 {{ e7 }}% 아래인 적에게는 {{ f1 }}<span class=\"color99FF99\"> (+{{ f2 }})</span>의 피해를 줍니다.","sanitizedTooltip":"이블린이 악마의 기운을 방출해 대상으로 지정할 수 없게 되면서 전방의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 준 다음 순간적으로 뒤쪽으로 이동합니다. 체력이 {{ e7 }}% 아래인 적에게는 {{ f1 }} (+{{ f2 }})의 피해를 줍니다.","leveltip":{"label":["피해량","강화된 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"EvelynnR.png","sprite":"spell3.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,110,80],"cooldownBurn":"140/110/80","effect":[null,[300,550,800],[1,1,1],[2.5,2.5,2.5],[150,225,300],[3,3,3],[5,4,3],[30,30,30],[700,700,700],[30,45,60],[0,0,0]],"effectBurn":["","300/550/800","1","2.5","150/225/300","3","5/4/3","30","700","30/45/60","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[25000,25000,25000],"rangeBurn":"25000","key":"EvelynnR"}],"passive":{"name":"악의 장막","description":"이블린은 전투에서 벗어나 있을 때 악의 장막에 휩싸입니다. 악의 장막에 싸이면 낮은 체력에서 체력이 회복되며 6레벨부터는 위장 효과도 제공합니다.","sanitizedDescription":"이블린은 전투에서 벗어나 있을 때 악의 장막에 휩싸입니다. 악의 장막에 싸이면 낮은 체력에서 체력이 회복되며 6레벨부터는 위장 효과도 제공합니다.","image":{"full":"Evelynn_Passive.png","sprite":"passive0.png","group":"passive","x":240,"y":96,"w":48,"h":48}},"recommended":[{"champion":"Evelynn","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3102,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3100,"count":1},{"id":3285,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3102,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3113,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3285,"count":1},{"id":3100,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3152,"count":1},{"id":3157,"count":1},{"id":3151,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3135,"count":1},{"id":3102,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3100,"count":1},{"id":3146,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3057,"count":1},{"id":3706,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3117,"count":1},{"id":3116,"count":1}]},{"type":"standardjungle","recMath":false,"items":[{"id":3285,"count":1},{"id":3151,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3001,"count":1},{"id":3742,"count":1},{"id":3146,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"kingporosnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3100,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3152,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3102,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeoffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegedefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3117,"count":1},{"id":3151,"count":1},{"id":3285,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3100,"count":1},{"id":3152,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3135,"count":1},{"id":3102,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1082,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3113,"count":1},{"id":3108,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3151,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3100,"count":1},{"id":3157,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3152,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3113,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3136,"count":1},{"id":3020,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3100,"count":1},{"id":3151,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3152,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2139,"count":1}]}]},{"champion":"Evelynn","title":"EvelynnTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3117,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3100,"count":1},{"id":3151,"count":1},{"id":3152,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3090,"count":1},{"id":3285,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3135,"count":1},{"id":3116,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3113,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3117,"count":1},{"id":3100,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3090,"count":1},{"id":3151,"count":1},{"id":3152,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3742,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"RekSai":{"id":421,"key":"RekSai","name":"렉사이","title":"공허의 복병","image":{"full":"RekSai.png","sprite":"champion2.png","group":"champion","x":384,"y":96,"w":48,"h":48},"skins":[{"id":421000,"name":"default","num":0},{"id":421001,"name":"이터늄 렉사이","num":1},{"id":421002,"name":"수영장 파티 렉사이","num":2}],"lore":"최상위 포식자 렉사이는 무자비한 공허 태생 생명체로, 땅굴을 파고 들어가 있다가 방심한 먹잇감을 덮쳐 게걸스럽게 집어삼킨다. 렉사이의 그칠 줄 모르는 식탐 때문에 위대한 슈리마 제국 전체가 초토화되었을 정도다. 사막을 오가는 상인이나 여행자들은 아무리 철저하게 무장을 했더라도 렉사이의 영토를 피하려고 일부러 멀고 먼 길을 돌아가곤 한다. 렉사이가 지평선에 보이면, 지하에서 기다리고 있는 것은 죽음 뿐이라는 것을 모르는 사람은 없다.","blurb":"최상위 포식자 렉사이는 무자비한 공허 태생 생명체로, 땅굴을 파고 들어가 있다가 방심한 먹잇감을 덮쳐 게걸스럽게 집어삼킨다. 렉사이의 그칠 줄 모르는 식탐 때문에 위대한 슈리마 제국 전체가 초토화되었을 정도다. 사막을 오가는 상인이나 여행자들은 아무리 철저하게 무장을 했더라도 렉사이의 영토를 피하려고 일부러 멀고 먼 길을 돌아가곤 한다. 렉사이가 지평선에 보이면, 지하에서 기다리고 있는 것은 죽음 뿐이라는 것을 모르는 사람은 없다.","allytips":["- 땅굴을 맵 전역에 분산시켜두면 공허의 돌진 스킬에 유용하게 활용할 수 있습니다.","- 맵에서 이동하기 전에 매복을 시전하여 이동 속도 증가 효과를 받는 동시에 진동 감지의 이득도 챙기세요.","- 진동 감지 효과는 적들이 다가올 때 경고가 뜨므로, 적진으로 들어갈 때 특히 유용합니다."],"enemytips":["- 렉사이의 땅굴이 보이면 입구 위에 잠깐 서서 파괴하세요.","- 렉사이의 성난 이빨 스킬은 분노가 상승할수록 피해량도 커집니다. 렉사이의 분노가 최대치일 때는 특히 주의하세요.","- 렉사이 근처에 있을 때 움직이면 자신과 아군의 위치가 발각됩니다."],"tags":["Fighter"],"partype":"분노","info":{"attack":8,"defense":5,"magic":2,"difficulty":3},"stats":{"armor":33,"armorperlevel":3.75,"attackdamage":65.5,"attackdamageperlevel":3.35,"attackrange":175,"attackspeedoffset":0,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":570,"hpperlevel":85,"hpregen":7.342,"hpregenperlevel":0.65,"movespeed":335,"mp":100,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"여왕의 진노 / 먹잇감 추적","description":"렉사이의 다음 3번의 기본 공격은 주변 적들에게 추가 물리 피해를 입힙니다.<br><br>매복 상태일 때는 렉사이가 공허 에너지가 주입된 흙을 발사하여, 여기 맞는 적들은 물리 피해를 입고 위치가 드러납니다.","sanitizedDescription":"렉사이의 다음 3번의 기본 공격은 주변 적들에게 추가 물리 피해를 입힙니다. 매복 상태일 때는 렉사이가 공허 에너지가 주입된 흙을 발사하여, 여기 맞는 적들은 물리 피해를 입고 위치가 드러납니다.","tooltip":"<span class=\"colorFF8C00\">돌출 상태:</span> 렉사이의 기본 공격은 5초 안에 최대 3회까지 주변 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 추가 물리 피해를 입힙니다.<br /><br /><span class=\"colorFF8C00\">매복 상태:</span> 렉사이가 공허 에너지가 주입된 흙을 발사하면 처음 맞는 적 위에서 폭발하며 {{ e4 }} <span class=\"color99FF99\">(+{{ a2 }})</span> <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고, {{ e6 }}초 동안 비 은신 상태인 적의 위치를 드러냅니다.","sanitizedTooltip":"돌출 상태: 렉사이의 기본 공격은 5초 안에 최대 3회까지 주변 적에게 {{ e1 }} (+{{ a1 }})의 추가 물리 피해를 입힙니다. 매복 상태: 렉사이가 공허 에너지가 주입된 흙을 발사하면 처음 맞는 적 위에서 폭발하며 {{ e4 }} (+{{ a2 }}) (+{{ a1 }})의 물리 피해를 입히고, {{ e6 }}초 동안 비 은신 상태인 적의 위치를 드러냅니다.","leveltip":{"label":["여왕의 진노 피해량","먹잇감 추적 피해량","먹잇감 추적 재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ e5 }} -> {{ e5NL }}"]},"image":{"full":"RekSaiQ.png","sprite":"spell9.png","group":"spell","x":48,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[20,25,30,35,40],[0,0,0,0,0],[0,0,0,0,0],[60,90,120,150,180],[11,10,9,8,7],[2.5,2.5,2.5,2.5,2.5],[5,5,5,5,5],[300,300,300,300,300],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","20/25/30/35/40","0","0","60/90/120/150/180","11/10/9/8/7","2.5","5","300","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.4]},{"key":"a2","link":"spelldamage","coeff":[0.7]},{"key":"a1","link":"bonusattackdamage","coeff":[0.4]}],"range":[325,325,325,325,325],"rangeBurn":"325","key":"RekSaiQ"},{"name":"매복 / 돌출","description":"렉사이가 지면을 파고들어가 새로운 스킬을 사용하게 되며 이동 속도가 상승합니다. 시야 범위가 좁아지며 기본 공격을 할 수 없게 됩니다.<br><br>매복 상태일 때는 렉사이가 돌출 스킬을 사용하여 튀어올라, 주위 적들에게 피해를 입힐 수 있습니다.","sanitizedDescription":"렉사이가 지면을 파고들어가 새로운 스킬을 사용하게 되며 이동 속도가 상승합니다. 시야 범위가 좁아지며 기본 공격을 할 수 없게 됩니다. 매복 상태일 때는 렉사이가 돌출 스킬을 사용하여 튀어올라, 주위 적들에게 피해를 입힐 수 있습니다.","tooltip":"<span class=\"colorFF8C00\">돌출 상태:</span> 지면을 파고 들어갑니다. <br /><br /><span class=\"colorFF8C00\">매복 상태:</span> 매복을 풀고 나와 {{ e2 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고, 가장 가까이 있는 적을 {{ e5 }}초 동안 띄워올립니다. 다른 근처의 적은 모두 뒤로 밀려납니다. 공중에 띄워졌던 적은 {{ e6 }}초 동안 돌출 효과에 면역됩니다.<br /><br /><span class=\"colorFF8C00\">매복 상태 효과:</span> 새로운 스킬 사용, 이동 속도 <span class=\"colorFFFFFF\">+{{ f1 }}</span>, 시야 범위 축소, 기본 공격 불가, <span class=\"color993299\">진동 감지:</span> 주변의 전장의 안개 속에서 이동하는 적들의 위치를 렉사이와 아군이 감지합니다.","sanitizedTooltip":"돌출 상태: 지면을 파고 들어갑니다. 매복 상태: 매복을 풀고 나와 {{ e2 }} (+{{ a1 }})의 물리 피해를 입히고, 가장 가까이 있는 적을 {{ e5 }}초 동안 띄워올립니다. 다른 근처의 적은 모두 뒤로 밀려납니다. 공중에 띄워졌던 적은 {{ e6 }}초 동안 돌출 효과에 면역됩니다. 매복 상태 효과: 새로운 스킬 사용, 이동 속도 +{{ f1 }}, 시야 범위 축소, 기본 공격 불가, 진동 감지: 주변의 전장의 안개 속에서 이동하는 적들의 위치를 렉사이와 아군이 감지합니다.","leveltip":{"label":["돌출 피해량"],"effect":["{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"RekSaiW.png","sprite":"spell9.png","group":"spell","x":96,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[1500,1500,1500,1500,1500],[55,70,85,100,115],[0,0,0,0,0],[0,0,0,0,0],[1,1,1,1,1],[10,10,10,10,10],[250,250,250,250,250],[175,175,175,175,175],[3,3,3,3,3],[0.3,0.3,0.3,0.3,0.3]],"effectBurn":["","1500","55/70/85/100/115","0","0","1","10","250","175","3","0.3"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.8]}],"range":[1650,1650,1650,1650,1650],"rangeBurn":"1650","key":"RekSaiW"},{"name":"성난 이빨 / 땅굴 파기","description":"렉사이가 대상을 물어뜯습니다. 분노가 최대치일 때는 두 배의 고정 피해를 입힙니다.<br><br>렉사이가 재사용 가능하며 오래 지속되는 땅굴을 만듭니다. 적이 이 땅굴 입구에 올라서면 파괴됩니다.","sanitizedDescription":"렉사이가 대상을 물어뜯습니다. 분노가 최대치일 때는 두 배의 고정 피해를 입힙니다. 렉사이가 재사용 가능하며 오래 지속되는 땅굴을 만듭니다. 적이 이 땅굴 입구에 올라서면 파괴됩니다.","tooltip":"<span class=\"colorFF8C00\">돌출 상태:</span> 렉사이가 대상을 물어뜯어 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. 분노가 최대치일 경우 피해량이 100% 증가하고 고정 피해로 적용됩니다.<br /><br />최대 피해량: <span class=\"colorFFFFFF\">{{ f2 }}</span><br /><br /><span class=\"colorFF8C00\">매복 상태:</span> 렉사이가 땅굴을 파고 전진하여 연결된 두 개의 <span class=\"color993299\">땅굴 입구</span>를 남깁니다. <span class=\"color993299\">땅굴 입구</span>중 하나를 클릭하면 렉사이가 다른쪽 입구로 뛰어듭니다.<br /><br /><span class=\"color993299\">땅굴 입구</span>는 {{ e5 }}분간 유지되며, 적이 파괴할 수 있습니다. 렉사이는 한 번에 최대 {{ e6 }}개의 땅굴을 유지할 수 있습니다. 터널은 이용하고 나면 {{ e8 }}초의 재사용 대기시간이 적용됩니다.","sanitizedTooltip":"돌출 상태: 렉사이가 대상을 물어뜯어 {{ e1 }} (+{{ a1 }})의 물리 피해를 입힙니다. 분노가 최대치일 경우 피해량이 100% 증가하고 고정 피해로 적용됩니다. 최대 피해량: {{ f2 }} 매복 상태: 렉사이가 땅굴을 파고 전진하여 연결된 두 개의 땅굴 입구를 남깁니다. 땅굴 입구중 하나를 클릭하면 렉사이가 다른쪽 입구로 뛰어듭니다. 땅굴 입구는 {{ e5 }}분간 유지되며, 적이 파괴할 수 있습니다. 렉사이는 한 번에 최대 {{ e6 }}개의 땅굴을 유지할 수 있습니다. 터널은 이용하고 나면 {{ e8 }}초의 재사용 대기시간이 적용됩니다.","leveltip":{"label":["성난 이빨 피해량","땅굴 파기 재사용 대기시간","땅굴 사용 재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ f4 }} -> {{ f5 }}","{{ e8 }} -> {{ e8NL }}"]},"image":{"full":"RekSaiE.png","sprite":"spell9.png","group":"spell","x":144,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[55,65,75,85,95],[0,0,0,0,0],[12,12,12,12,12],[0,0,0,0,0],[10,10,10,10,10],[8,8,8,8,8],[0,0,0,0,0],[10,8,6,4,2],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","55/65/75/85/95","0","12","0","10","8","0","10/8/6/4/2","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[0.85]}],"range":[250,250,250,250,250],"rangeBurn":"250","key":"RekSaiE"},{"name":"공허의 돌진","description":"렉사이가 지하로 들어갔다가 대상에게 도약해 큰 피해를 입힙니다.","sanitizedDescription":"렉사이가 지하로 들어갔다가 대상에게 도약해 큰 피해를 입힙니다.","tooltip":"<span class=\"colorFF8C00\">기본 지속 효과:</span> 적 챔피언에게 피해를 입히면 {{ e6 }}초 동안 표식을 남깁니다.<br /><br /><span class=\"colorFF8C00\">사용 시:</span> 렉사이가 매복하기 전 괴기스러운 울음소리를 내며 표식이 남은 대상을 찾습니다. 몇 초 후, 지하에서 도약해 {{ e8 }} <span class=\"colorFF8C00\">(+{{ a2 }})</span>의 물리 피해 + 대상 잃은 체력의 {{ e9 }}%에 해당하는 피해를 입힙니다.","sanitizedTooltip":"기본 지속 효과: 적 챔피언에게 피해를 입히면 {{ e6 }}초 동안 표식을 남깁니다. 사용 시: 렉사이가 매복하기 전 괴기스러운 울음소리를 내며 표식이 남은 대상을 찾습니다. 몇 초 후, 지하에서 도약해 {{ e8 }} (+{{ a2 }})의 물리 피해 + 대상 잃은 체력의 {{ e9 }}%에 해당하는 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간","잃은 체력 비례 피해량"],"effect":["{{ e8 }} -> {{ e8NL }}","{{ f7 }} -> {{ f8 }}","{{ e9 }}% -> {{ e9NL }}%"]},"image":{"full":"RekSaiRWrapper.png","sprite":"spell9.png","group":"spell","x":192,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[0,0,0],"cooldownBurn":"0","effect":[null,[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[5,5,5],[0,0,0],[100,250,400],[20,25,30],[0,0,0]],"effectBurn":["","0","0","0","0","0","5","0","100/250/400","20/25/30","0"],"vars":[{"key":"a2","link":"bonusattackdamage","coeff":[1.85]}],"range":[1500,1500,1500],"rangeBurn":"1500","key":"RekSaiRWrapper"}],"passive":{"name":"제르사이의 분노","description":"렉사이는 돌출 상태에서 스킬과 기본 공격 시 분노가 생성됩니다. 매복 상태에서는 분노를 소모하여 체력을 회복합니다.","sanitizedDescription":"렉사이는 돌출 상태에서 스킬과 기본 공격 시 분노가 생성됩니다. 매복 상태에서는 분노를 소모하여 체력을 회복합니다.","image":{"full":"RekSai_Passive.png","sprite":"passive2.png","group":"passive","x":384,"y":96,"w":48,"h":48}},"recommended":[{"champion":"RekSai","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1033,"count":1},{"id":3111,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3133,"count":1},{"id":3044,"count":1},{"id":3071,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]}]},{"champion":"RekSai","title":"RekSaiARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"RekSai","title":"RekSaiCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3074,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3068,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"RekSai","title":"RekSaiFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3047,"count":1},{"id":3044,"count":1},{"id":3052,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3742,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3156,"count":1},{"id":3812,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3022,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":3706,"count":1},{"id":3133,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3748,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"RekSai","title":"RekSaiKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3074,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1},{"id":2033,"count":1}]}]},{"champion":"RekSai","title":"RekSaiSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3074,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3068,"count":1}]}]},{"champion":"RekSai","title":"RekSaiSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3074,"count":1},{"id":3065,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3071,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3068,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3706,"count":1},{"id":3077,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1400,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3053,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3742,"count":1},{"id":3065,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"RekSai","title":"RekSaiTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":2},{"id":1001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"early","recMath":false,"items":[{"id":3133,"count":1},{"id":3044,"count":1},{"id":3077,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3071,"count":1},{"id":3047,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3748,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3053,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Lux":{"id":99,"key":"Lux","name":"럭스","title":"광명의 소녀","image":{"full":"Lux.png","sprite":"champion2.png","group":"champion","x":240,"y":0,"w":48,"h":48},"skins":[{"id":99000,"name":"default","num":0},{"id":99001,"name":"마법사 럭스","num":1},{"id":99002,"name":"마법도둑 럭스","num":2},{"id":99003,"name":"특공대 럭스","num":3},{"id":99004,"name":"제국군 럭스","num":4},{"id":99005,"name":"강철 군단 럭스","num":5},{"id":99006,"name":"별 수호자 럭스","num":6},{"id":99007,"name":"원소술사 럭스","num":7}],"lore":"럭산나 크라운가드는 마법 능력을 공포와 의심을 담은 편협한 시선으로 바라보는 데마시아 출신이다. 자유자재로 빛을 다루는 능력을 지닌 럭스는 자신의 능력이 발견되어 추방될 것을 두려워하며 자랐으며, 자신의 능력을 비밀리에 감추어 자신의 가문의 고귀한 지위를 지키려고 했다. 하지만 그럼에도 럭스가 가지고 있는 낙관주의와 인내력 덕분에 자신만의 고유한 재능을 받아들이게 되었고, 이제 럭스는 조국을 위해 그 능력을 은밀하게 사용한다.","blurb":"럭산나 크라운가드는 마법 능력을 공포와 의심을 담은 편협한 시선으로 바라보는 데마시아 출신이다. 자유자재로 빛을 다루는 능력을 지닌 럭스는 자신의 능력이 발견되어 추방될 것을 두려워하며 자랐으며, 자신의 능력을 비밀리에 감추어 자신의 가문의 고귀한 지위를 지키려고 했다. 하지만 그럼에도 럭스가 가지고 있는 낙관주의와 인내력 덕분에 자신만의 고유한 재능을 받아들이게 되었고, 이제 럭스는 조국을 위해 그 능력을 은밀하게 사용한다.","allytips":["- 럭스는 시야 밝히기, 범위 둔화 스킬 등 일정한 지역에 영향을 끼치는 데 유리한 챔피언입니다. 적의 돌진 또는 탈출을 막으려면 광휘의 특이점 스킬을 사용하십시오.","- 프리즘 보호막 사용이 어려운 경우 보호막은 최대 사거리에 도달하면 다시 캐릭터에게 돌아온다는 사실을 참고하십시오. 보호막이 돌아올 때 아군을 맞힐 수 있도록 이동하십시오.","- 광휘의 특이점 스킬은 정찰에도 유용합니다. 수풀로 들어가기 전에 이 스킬을 사용하여 적의 유무를 확인할 수 있습니다."],"enemytips":["- 럭스는 강력한 광역 군중 제어기를 자랑하는 챔피언입니다. 가능하다면 사방으로 넓게 퍼져 싸우십시오.","- 체력이 낮은 상태에서 후퇴할 때는 럭스의 최후의 섬광 스킬을 조심하십시오. 붉은 조준용 빛이 먼저 나타나므로 미리 옆으로 피하십시오."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":2,"defense":4,"magic":9,"difficulty":5},"stats":{"armor":18.72,"armorperlevel":4,"attackdamage":53.54,"attackdamageperlevel":3.3,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":1.36,"crit":0,"critperlevel":0,"hp":490,"hpperlevel":91,"hpregen":5.4,"hpregenperlevel":0.55,"movespeed":330,"mp":384,"mpperlevel":47,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"빛의 속박","description":"럭스가 빛의 구를 발사하여 최대 2명의 적 유닛을 속박하며 피해를 입힙니다.","sanitizedDescription":"럭스가 빛의 구를 발사하여 최대 2명의 적 유닛을 속박하며 피해를 입힙니다.","tooltip":"빛의 구체를 발사하여 적중한 적 두 명까지 {{ e3 }}초 동안 제자리에 묶고 각각에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"빛의 구체를 발사하여 적중한 적 두 명까지 {{ e3 }}초 동안 제자리에 묶고 각각에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"LuxLightBinding.png","sprite":"spell6.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[13,12.5,12,11.5,11],"cooldownBurn":"13/12.5/12/11.5/11","effect":[null,[50,100,150,200,250],[50,50,50,50,50],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/100/150/200/250","50","2","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[1175,1175,1175,1175,1175],"rangeBurn":"1175","key":"LuxLightBinding"},{"name":"프리즘 보호막","description":"럭스가 마법봉을 던져 아군 주변의 빛을 구부리며 적의 공격으로부터 보호해줍니다.","sanitizedDescription":"럭스가 마법봉을 던져 아군 주변의 빛을 구부리며 적의 공격으로부터 보호해줍니다.","tooltip":"럭스가 지정한 방향으로 마법봉을 던져 자신과 봉에 맞은 모든 아군 챔피언을 3초 동안 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해로부터 보호합니다.<br /><br />마법봉이 지정한 위치에 도달한 뒤 다시 돌아올 때도 럭스와 봉에 맞은 모든 아군 챔피언을 3초 동안 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 피해로부터 보호합니다.<br /><br /><rules>마법봉을 던질 때 아군에게 보호막을 씌웠다면 되돌아오는 마법봉이 생성하는 보호막의 흡수량이 2배 증가합니다.</rules>","sanitizedTooltip":"럭스가 지정한 방향으로 마법봉을 던져 자신과 봉에 맞은 모든 아군 챔피언을 3초 동안 {{ e2 }} (+{{ a1 }})의 피해로부터 보호합니다. 마법봉이 지정한 위치에 도달한 뒤 다시 돌아올 때도 럭스와 봉에 맞은 모든 아군 챔피언을 3초 동안 {{ e2 }} (+{{ a1 }})의 피해로부터 보호합니다. 마법봉을 던질 때 아군에게 보호막을 씌웠다면 되돌아오는 마법봉이 생성하는 보호막의 흡수량이 2배 증가합니다.","leveltip":{"label":["보호막","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LuxPrismaticWave.png","sprite":"spell7.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,60,60,60,60],"costBurn":"60","cooldown":[14,13,12,11,10],"cooldownBurn":"14/13/12/11/10","effect":[null,[2,4,6,8,10],[50,65,80,95,110],[3,3,3,3,3],[100,100,100,100,100],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","2/4/6/8/10","50/65/80/95/110","3","100","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"LuxPrismaticWave"},{"name":"광휘의 특이점","description":"지정한 지역에 뒤틀린 빛의 구체를 띄워 주변 적의 속도를 늦춥니다. 럭스는 이 빛을 폭발시켜 피해를 입힐 수 있습니다.","sanitizedDescription":"지정한 지역에 뒤틀린 빛의 구체를 띄워 주변 적의 속도를 늦춥니다. 럭스는 이 빛을 폭발시켜 피해를 입힐 수 있습니다.","tooltip":"적의 이동 속도를 {{ e1 }}% 느리게 하는 지역을 조성합니다. {{ e3 }}초 후 폭발이 일어나 해당 지역의 적에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />스킬을 다시 시전하면 더 빨리 폭발합니다.","sanitizedTooltip":"적의 이동 속도를 {{ e1 }}% 느리게 하는 지역을 조성합니다. {{ e3 }}초 후 폭발이 일어나 해당 지역의 적에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 스킬을 다시 시전하면 더 빨리 폭발합니다.","leveltip":{"label":["피해량","둔화","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"LuxLightStrikeKugel.png","sprite":"spell7.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,85,100,115,130],"costBurn":"70/85/100/115/130","cooldown":[10,10,10,10,10],"cooldownBurn":"10","effect":[null,[25,30,35,40,45],[60,105,150,195,240],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","25/30/35/40/45","60/105/150/195/240","5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[1100,1100,1100,1100,1100],"rangeBurn":"1100","key":"LuxLightStrikeKugel"},{"name":"최후의 섬광","description":"럭스가 에너지를 모아 빛 기둥을 발사하며 목표 지역에 있는 모든 대상에게 피해를 입힙니다. 최후의 섬광으로 챔피언을 처치하면 재사용 대기시간을 일부 돌려받습니다. 또한 이는 럭스의 기본 지속 효과 스킬을 발동시키고 광채 효과의 지속 시간을 갱신합니다.","sanitizedDescription":"럭스가 에너지를 모아 빛 기둥을 발사하며 목표 지역에 있는 모든 대상에게 피해를 입힙니다. 최후의 섬광으로 챔피언을 처치하면 재사용 대기시간을 일부 돌려받습니다. 또한 이는 럭스의 기본 지속 효과 스킬을 발동시키고 광채 효과의 지속 시간을 갱신합니다.","tooltip":"눈부신 광선을 발사하여 일직선 상에 있는 모든 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 최후의 섬광으로 적 챔피언을 처치하면 재사용 대기시간을 {{ e3 }}% 돌려받습니다.<br /><br />최후의 섬광은 광채 효과를 점화시키며 재적용시킵니다. ","sanitizedTooltip":"눈부신 광선을 발사하여 일직선 상에 있는 모든 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 최후의 섬광으로 적 챔피언을 처치하면 재사용 대기시간을 {{ e3 }}% 돌려받습니다. 최후의 섬광은 광채 효과를 점화시키며 재적용시킵니다.","leveltip":{"label":["피해량","돌려받는 재사용 대기시간","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"LuxMaliceCannon.png","sprite":"spell7.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[80,65,50],"cooldownBurn":"80/65/50","effect":[null,[300,400,500],[1,1,1],[10,30,50],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","300/400/500","1","10/30/50","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.75]}],"range":[3340,3340,3340],"rangeBurn":"3340","key":"LuxMaliceCannon"}],"passive":{"name":"광채","description":"럭스의 공격 스킬은 6초 동안 적을 빛의 에너지로 가득 채웁니다. 럭스의 기본 공격으로 이 에너지를 불태우면 적은 럭스의 레벨에 비례하여 일정한 마법 피해를 받습니다.","sanitizedDescription":"럭스의 공격 스킬은 6초 동안 적을 빛의 에너지로 가득 채웁니다. 럭스의 기본 공격으로 이 에너지를 불태우면 적은 럭스의 레벨에 비례하여 일정한 마법 피해를 받습니다.","image":{"full":"LuxIlluminatingFraulein.png","sprite":"passive2.png","group":"passive","x":240,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Lux","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Lux","title":"LuxARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3098,"count":1},{"id":3028,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3092,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lux","title":"LuxCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3041,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lux","title":"LuxFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3114,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3041,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lux","title":"LuxKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":3303,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3098,"count":1},{"id":3028,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3174,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1},{"id":3092,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lux","title":"LuxSG","type":"riot","map":"CP","mode":"STARGUARDIAN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3100,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lux","title":"LuxSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3041,"count":1},{"id":3100,"count":1}]}]},{"champion":"Lux","title":"LuxSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3802,"count":1},{"id":1058,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3100,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Lux","title":"LuxTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3090,"count":1},{"id":3165,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3102,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Sion":{"id":14,"key":"Sion","name":"사이온","title":"언데드 학살병기","image":{"full":"Sion.png","sprite":"champion3.png","group":"champion","x":432,"y":0,"w":48,"h":48},"skins":[{"id":14000,"name":"default","num":0},{"id":14001,"name":"마법공학 사이온","num":1},{"id":14002,"name":"야만전사 사이온","num":2},{"id":14003,"name":"나무꾼 사이온","num":3},{"id":14004,"name":"전쟁광 사이온","num":4},{"id":14005,"name":"메카 제로 사이온","num":5}],"lore":"사이온은 지난 시대의 전쟁 영웅으로, 데마시아 왕을 맨손으로 목 졸라 살해해 녹서스에서 존경을 받았다. 하지만 시간이 지나 잊혀진 사이온은 죽은 상태에서도 녹서스 제국에 충성을 다하기 위해 부활했다. 사이온은 무차별적 학살로 충성도와 상관없이 앞을 가로막는 모든 이를 처치했다. 이제 사이온에게는 예전의 인간성이 더 이상 남아있지 않은 것이다. 그렇긴 하지만, 부패한 육체에 고정된 거친 방어구를 걸친 사이온은 계속해서 고삐 풀린 말처럼 제멋대로 전장으로 돌격하며 진정한 자신을 기억해 내기 위해 강력한 도끼를 휘두른다.","blurb":"사이온은 지난 시대의 전쟁 영웅으로, 데마시아 왕을 맨손으로 목 졸라 살해해 녹서스에서 존경을 받았다. 하지만 시간이 지나 잊혀진 사이온은 죽은 상태에서도 녹서스 제국에 충성을 다하기 위해 부활했다. 사이온은 무차별적 학살로 충성도와 상관없이 앞을 가로막는 모든 이를 처치했다. 이제 사이온에게는 예전의 인간성이 더 이상 남아있지 않은 것이다. 그렇긴 하지만, 부패한 육체에 고정된 거친 방어구를 걸친 사이온은 계속해서 고삐 풀린 말처럼 제멋대로...","allytips":["- 멈출 수 없는 맹공 중에는 방향을 바꿀 수 있는 폭이 매우 좁으므로 직선 방향으로 사용하세요.","- 학살자의 포효를 잘 사용하면 강력한 대량 학살 강타를 맞힐 수 있습니다.","- 영혼의 용광로 효과에는 현재 남아있는 보호막의 체력이 표시되므로, 이 정보를 활용하여 폭발시킬 정확한 타이밍을 잡으세요."],"enemytips":["- 사이온이 대량 학살 강타로 내리칠 때, 충전량을 미리 방출하게 하면 피해량을 줄일 수 있습니다.","- 사이온이 죽은 다음에는 다시 유리한 위치를 잡아서 부활한 다음을 노리세요."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":5,"defense":9,"magic":3,"difficulty":5},"stats":{"armor":32,"armorperlevel":3,"attackdamage":68,"attackdamageperlevel":4,"attackrange":175,"attackspeedoffset":-0.08,"attackspeedperlevel":1.3,"crit":0,"critperlevel":0,"hp":542.64,"hpperlevel":73,"hpregen":10.18,"hpregenperlevel":0.8,"movespeed":345,"mp":325.6,"mpperlevel":42,"mpregen":8.008,"mpregenperlevel":0.6,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"대량 학살 강타","description":"사이온이 강력한 한 방을 충전하여 전방의 적들에게 피해를 입힙니다. 충분한 시간 동안 충전하면, 이 타격에 맞은 적들을 공중으로 띄우고 기절시킵니다.</font>","sanitizedDescription":"사이온이 강력한 한 방을 충전하여 전방의 적들에게 피해를 입힙니다. 충분한 시간 동안 충전하면, 이 타격에 맞은 적들을 공중으로 띄우고 기절시킵니다.","tooltip":"사이온이 2초 동안 강력한 일격을 준비합니다. 일격을 날리면 적중한 적들에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span> ~ {{ e4 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>의 물리 피해를 입히고 (미니언에게는 {{ e8 }}%의 피해)  잠깐 동안 속도를 느려지게 합니다.<br /><br />사이온이 최소 1초라도 정신을 집중했을 때는 적들이 띄워올려지고 1.25초에서 2.25초 동안 기절합니다.","sanitizedTooltip":"사이온이 2초 동안 강력한 일격을 준비합니다. 일격을 날리면 적중한 적들에게 {{ e1 }} (+{{ f1 }}) ~ {{ e4 }} (+{{ f2 }})의 물리 피해를 입히고 (미니언에게는 {{ e8 }}%의 피해) 잠깐 동안 속도를 느려지게 합니다. 사이온이 최소 1초라도 정신을 집중했을 때는 적들이 띄워올려지고 1.25초에서 2.25초 동안 기절합니다.","leveltip":{"label":["최소 피해량","최대 피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SionQ.png","sprite":"spell10.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,45,45,45,45],"costBurn":"45","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[20,40,60,80,100],[1.25,1.25,1.25,1.25,1.25],[0.65,0.65,0.65,0.65,0.65],[60,120,180,240,300],[2.5,2.5,2.5,2.5,2.5],[1.95,1.95,1.95,1.95,1.95],[7.5,7.5,7.5,7.5,7.5],[60,60,60,60,60],[80,80,80,80,80],[-0.8,-0.8,-0.8,-0.8,-0.8]],"effectBurn":["","20/40/60/80/100","1.25","0.65","60/120/180/240/300","2.5","1.95","7.5","60","80","-0.8"],"vars":[{"key":"f1","link":"attackdamage","coeff":[0.6]},{"key":"f2","link":"attackdamage","coeff":[1.8]}],"range":[10000,10000,10000,10000,10000],"rangeBurn":"10000","key":"SionQ"},{"name":"영혼의 용광로","description":"사이온이 자기 자신에게 보호막을 씌우고 3초 후에 재시전하면 주변 적들에게 마법 피해를 입힙니다.","sanitizedDescription":"사이온이 자기 자신에게 보호막을 씌우고 3초 후에 재시전하면 주변 적들에게 마법 피해를 입힙니다.","tooltip":"<span class=\"colorFFE076\">기본 지속 효과:</span> 사이온은 유닛을 하나 처치할 때마다 최대 체력이 {{ e5 }} 증가합니다. (챔피언 처치와 어시스트, 대형 미니언 및 대형 몬스터 처치의 경우 {{ e6 }}) <span class=\"colorFF3300\">현재 추가 수치: {{ f1 }} </span><br /><br /><span class=\"colorFFE076\">사용 시:</span> 사이온이 6초 동안 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorFF3300\">(+{{ f2 }})</span> (최대 체력의 {{ e3 }}%)의 보호막을 자기 자신에게 씌웁니다. {{ e7 }}초 후에 보호막이 유지되는 동안 사이온이 이 스킬을 재시전하면 보호막이 폭발하여 주변 적들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span> + 대상의 최대 체력의 {{ e4 }}%의 마법 피해를 입힙니다. (미니언과 몬스터에게는 최대 400의 추가 피해)","sanitizedTooltip":"기본 지속 효과: 사이온은 유닛을 하나 처치할 때마다 최대 체력이 {{ e5 }} 증가합니다. (챔피언 처치와 어시스트, 대형 미니언 및 대형 몬스터 처치의 경우 {{ e6 }}) 현재 추가 수치: {{ f1 }} 사용 시: 사이온이 6초 동안 {{ e1 }} (+{{ a1 }}) (+{{ f2 }}) (최대 체력의 {{ e3 }}%)의 보호막을 자기 자신에게 씌웁니다. {{ e7 }}초 후에 보호막이 유지되는 동안 사이온이 이 스킬을 재시전하면 보호막이 폭발하여 주변 적들에게 {{ e2 }} (+{{ a1 }}) + 대상의 최대 체력의 {{ e4 }}%의 마법 피해를 입힙니다. (미니언과 몬스터에게는 최대 400의 추가 피해)","leveltip":{"label":["보호막","피해량","최대 체력 비례 피해량","최대 체력 비례 보호막","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ e3 }}% -> {{ e3NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SionW.png","sprite":"spell10.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[65,70,75,80,85],"costBurn":"65/70/75/80/85","cooldown":[11,11,11,11,11],"cooldownBurn":"11","effect":[null,[30,55,80,105,130],[40,65,90,115,140],[8,9,10,11,12],[10,11,12,13,14],[3,3,3,3,3],[10,10,10,10,10],[3,3,3,3,3],[10,10,10,10,10],[6,6,6,6,6],[0,0,0,0,0]],"effectBurn":["","30/55/80/105/130","40/65/90/115/140","8/9/10/11/12","10/11/12/13/14","3","10","3","10","6","0"],"vars":[{"key":"f1","link":"health","coeff":[0.1]},{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[500,500,500,500,500],"rangeBurn":"500","key":"SionW"},{"name":"학살자의 포효","description":"사이온이 단거리 충격파를 발사해 첫 번째로 맞는 적에게 피해를 입히고 속도를 늦추며, 방어력을 낮춥니다. 충격파가 미니언이나 몬스터를 맞히면 뒤로 밀려나며 피해를 입고, 관통하는 모든 적의 속도를 늦춥니다.","sanitizedDescription":"사이온이 단거리 충격파를 발사해 첫 번째로 맞는 적에게 피해를 입히고 속도를 늦추며, 방어력을 낮춥니다. 충격파가 미니언이나 몬스터를 맞히면 뒤로 밀려나며 피해를 입고, 관통하는 모든 적의 속도를 늦춥니다.","tooltip":"사이온이 충격파를 발사해 첫번째로 맞는 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 속도를 {{ e2 }}%, 늦추며 2.5초간 방어력을 {{ e5 }}% 낮춥니다.<br /><br />대상이 챔피언이 아닐 경우 뒤로 밀려납니다. 뒤로 밀려난 유닛에 부딪히는 적들은 {{ e6 }}%의 추가 피해를 입고 속도가 {{ e2 }}% 느려집니다.","sanitizedTooltip":"사이온이 충격파를 발사해 첫번째로 맞는 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 속도를 {{ e2 }}%, 늦추며 2.5초간 방어력을 {{ e5 }}% 낮춥니다. 대상이 챔피언이 아닐 경우 뒤로 밀려납니다. 뒤로 밀려난 유닛에 부딪히는 적들은 {{ e6 }}%의 추가 피해를 입고 속도가 {{ e2 }}% 느려집니다.","leveltip":{"label":["피해량","둔화","재사용 대기시간","마나 소모량 "],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SionE.png","sprite":"spell10.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[35,40,45,50,55],"costBurn":"35/40/45/50/55","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[70,105,140,175,210],[40,45,50,55,60],[5,5,5,5,5],[40,45,50,55,60],[20,20,20,20,20],[30,30,30,30,30],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/105/140/175/210","40/45/50/55/60","5","40/45/50/55/60","20","30","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"SionE"},{"name":"멈출 수 없는 맹공","description":"사이온이 한 방향으로 돌진하며 점차 속도가 상승합니다. 돌진 방향은 마우스 커서 위치로 약간 조종할 수 있습니다. 적과 충돌하면 돌진한 거리에 비례하여 피해를 입히고 띄워올립니다.","sanitizedDescription":"사이온이 한 방향으로 돌진하며 점차 속도가 상승합니다. 돌진 방향은 마우스 커서 위치로 약간 조종할 수 있습니다. 적과 충돌하면 돌진한 거리에 비례하여 피해를 입히고 띄워올립니다.","tooltip":"사이온이 8초 동안 일정한 방향으로 돌진하며 서서히 마우스 커서 방향으로 조종됩니다. 돌진하는 동안 사이온은 모든 군중 제어기에 면역이 됩니다. 이 스킬을 다시 사용하여 사이온의 돌진을 일찍 끝낼 수 있습니다.<br /><br />사이온이 적 챔피언이나 벽과 충돌하면 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 작은 반경 안의 적들을 {{ e5 }}초 동안 공중으로 띄워올립니다. 더 넓은 반경의 적들은 3초 동안 같은 양의 피해를 입고 이동 속도가 {{ e3 }}% 감소합니다.<br /><br />사이온이 돌진하는 거리가 길어지면 피해량이 {{ e2 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>, 기절 지속 시간이 {{ e6 }}초 증가합니다.","sanitizedTooltip":"사이온이 8초 동안 일정한 방향으로 돌진하며 서서히 마우스 커서 방향으로 조종됩니다. 돌진하는 동안 사이온은 모든 군중 제어기에 면역이 됩니다. 이 스킬을 다시 사용하여 사이온의 돌진을 일찍 끝낼 수 있습니다. 사이온이 적 챔피언이나 벽과 충돌하면 {{ e1 }} (+{{ f1 }})의 물리 피해를 입히고 작은 반경 안의 적들을 {{ e5 }}초 동안 공중으로 띄워올립니다. 더 넓은 반경의 적들은 3초 동안 같은 양의 피해를 입고 이동 속도가 {{ e3 }}% 감소합니다. 사이온이 돌진하는 거리가 길어지면 피해량이 {{ e2 }} (+{{ f2 }}), 기절 지속 시간이 {{ e6 }}초 증가합니다.","leveltip":{"label":["최소 피해량","최대 피해량","둔화","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"SionR.png","sprite":"spell10.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,100,60],"cooldownBurn":"140/100/60","effect":[null,[150,300,450],[400,800,1200],[40,45,50],[500,500,500],[0.75,0.75,0.75],[1.75,1.75,1.75],[950,950,950],[0,0,0],[2,2,2],[0,0,0]],"effectBurn":["","150/300/450","400/800/1200","40/45/50","500","0.75","1.75","950","0","2","0"],"vars":[{"key":"f1","link":"bonusattackdamage","coeff":[0.4]},{"key":"f2","link":"bonusattackdamage","coeff":[0.8]}],"range":[7500,7500,7500],"rangeBurn":"7500","key":"SionR"}],"passive":{"name":"영광스러운 죽음","description":"사이온은 사망한 이후 되살아나지만 체력이 급속히 떨어집니다. 이 동안 사이온은 매우 빠르게 공격하며 100%의 생명력 흡수 효과를 얻습니다. 공격 적중 시 대상 최대 체력의 10%에 해당하는 추가 피해를 입힙니다. (몬스터에게는 최대 75의 추가 피해)<br><br>모든 스킬이 죽음의 물결로 대체되어 이동 속도가 대폭 상승합니다.","sanitizedDescription":"사이온은 사망한 이후 되살아나지만 체력이 급속히 떨어집니다. 이 동안 사이온은 매우 빠르게 공격하며 100%의 생명력 흡수 효과를 얻습니다. 공격 적중 시 대상 최대 체력의 10%에 해당하는 추가 피해를 입힙니다. (몬스터에게는 최대 75의 추가 피해) 모든 스킬이 죽음의 물결로 대체되어 이동 속도가 대폭 상승합니다.","image":{"full":"Sion_Passive1.png","sprite":"passive3.png","group":"passive","x":432,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Sion","title":"SionARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sion","title":"SionCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3075,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3512,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sion","title":"SionFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3211,"count":1},{"id":3110,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3117,"count":1},{"id":3800,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3083,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":3361,"count":1}]}]},{"champion":"Sion","title":"SionKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3083,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2033,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sion","title":"SionSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3075,"count":1},{"id":3143,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3512,"count":1},{"id":3102,"count":1}]}]},{"champion":"Sion","title":"SionSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3211,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3143,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3194,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2138,"count":1}]}]},{"champion":"Sion","title":"SionTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1055,"count":1},{"id":2003,"count":2}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3068,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3143,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Camille":{"id":164,"key":"Camille","name":"카밀","title":"강철의 그림자","image":{"full":"Camille.png","sprite":"champion0.png","group":"champion","x":240,"y":48,"w":48,"h":48},"skins":[{"id":164000,"name":"default","num":0},{"id":164001,"name":"프로그램 카밀","num":1}],"lore":"카밀은 법의 테두리 밖에서 활동하도록 자신의 몸을 무기화한 우아한 엘리트 첩보원으로, 페로스 가문의 최고 정보 요원이기도 한 그녀의 임무는 고도화된 필트오버와 그 하층부의 자운의 원활한 운영을 위해 만전을 기하는 것이다. 카밀은 뛰어난 적응력과 정밀함을 갖추었으며 엉성한 기술은 바로잡아야 할 수치라고 생각한다. 마법공학 증강을 통해 최고가 되기를 추구하는 모습, 그리고 자신이 품고 있는 칼만큼이나 날카로운 지성을 지닌 카밀의 모습을 보면 그녀가 여자라기보다는 기계가 아닌가 하는 의구심을 품게 된다.","blurb":"카밀은 법의 테두리 밖에서 활동하도록 자신의 몸을 무기화한 우아한 엘리트 첩보원으로, 페로스 가문의 최고 정보 요원이기도 한 그녀의 임무는 고도화된 필트오버와 그 하층부의 자운의 원활한 운영을 위해 만전을 기하는 것이다. 카밀은 뛰어난 적응력과 정밀함을 갖추었으며 엉성한 기술은 바로잡아야 할 수치라고 생각한다. 마법공학 증강을 통해 최고가 되기를 추구하는 모습, 그리고 자신이 품고 있는 칼만큼이나 날카로운 지성을 지닌 카밀의 모습을 보면 그녀가...","allytips":["- 상대 팀이 전투로 진영이 흐트러질 때까지 기다렸다가 갈고리 발사 스킬을 사용해 가장 약한 대상을 노리세요.","- 군중 제어 스킬을 이용해 정확성 프로토콜 공격을 두 번 다 적중시켜 보세요."],"enemytips":["- 카밀의 보호막은 물리 혹은 마법 피해 중 하나만 흡수합니다. 보호막 유형을 잘 확인한 후 피해를 입혀 보세요.","- 마법공학 최후통첩은 사거리가 매우 짧은 스킬이므로 카밀이 가까이 다가오면 점멸로 거리를 벌리세요."],"tags":["Fighter","Tank"],"partype":"마나","info":{"attack":8,"defense":6,"magic":3,"difficulty":4},"stats":{"armor":35,"armorperlevel":3.8,"attackdamage":68,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":575.6,"hpperlevel":85,"hpregen":8.5,"hpregenperlevel":0.8,"movespeed":340,"mp":338.8,"mpperlevel":32,"mpregen":8.15,"mpregenperlevel":0.75,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"정확성 프로토콜","description":"카밀이 다음 기본 공격 시 추가 피해를 입히고 이동 속도가 증가합니다. 이 스킬은 사용 후 일정 시간 동안 재사용할 수 있으며, 잠시 기다렸다가 재사용하면 추가 피해량이 크게 증가합니다.","sanitizedDescription":"카밀이 다음 기본 공격 시 추가 피해를 입히고 이동 속도가 증가합니다. 이 스킬은 사용 후 일정 시간 동안 재사용할 수 있으며, 잠시 기다렸다가 재사용하면 추가 피해량이 크게 증가합니다.","tooltip":"카밀이 다음 기본 공격 시 <span class=\"colorFF8C00\">{{ f1 }}</span>의 추가 물리 피해를 입히고 {{ e5 }}초 동안 이동 속도가 {{ e4 }}% 증가합니다. 사용 후 {{ e0 }}초 안에 소모값 없이 재사용할 수 있습니다.<br /><br />첫 번째 정확성 프로토콜 공격 후 {{ e1 }}초가 지난 뒤 두 번째 정확성 프로토콜 공격 시 추가 피해량이 {{ e8 }}% 증가해 <span class=\"colorFF8C00\">{{ f2 }}</span>의 피해를 입히고, 이 중 <span class=\"colorFFFFFF\">{{ f3 }}%</span>는 고정 피해로 적용됩니다.<br /><br /><span class=\"size16 colorFFEB7F\">정확성 프로토콜</span> <span class=\"size16 color8C8C8C\"> 공격에는 치명타가 적용되지 않습니다.</span>","sanitizedTooltip":"카밀이 다음 기본 공격 시 {{ f1 }}의 추가 물리 피해를 입히고 {{ e5 }}초 동안 이동 속도가 {{ e4 }}% 증가합니다. 사용 후 {{ e0 }}초 안에 소모값 없이 재사용할 수 있습니다. 첫 번째 정확성 프로토콜 공격 후 {{ e1 }}초가 지난 뒤 두 번째 정확성 프로토콜 공격 시 추가 피해량이 {{ e8 }}% 증가해 {{ f2 }}의 피해를 입히고, 이 중 {{ f3 }}%는 고정 피해로 적용됩니다. 정확성 프로토콜 공격에는 치명타가 적용되지 않습니다.","leveltip":{"label":["총 공격력 %","재사용 대기시간","이동 속도"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ e4 }}% -> {{ e4NL }}%"]},"image":{"full":"CamilleQ.png","sprite":"spell1.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[25,25,25,25,25],"costBurn":"25","cooldown":[9,8.25,7.5,6.75,6],"cooldownBurn":"9/8.25/7.5/6.75/6","effect":[null,[1.5,1.5,1.5,1.5,1.5],[50,50,50,50,50],[20,25,30,35,40],[20,25,30,35,40],[1,1,1,1,1],[0.4,0.4,0.4,0.4,0.4],[0.04,0.04,0.04,0.04,0.04],[100,100,100,100,100],[2,2,2,2,2],[3.5,3.5,3.5,3.5,3.5]],"effectBurn":["","1.5","50","20/25/30/35/40","20/25/30/35/40","1","0.4","0.04","100","2","3.5"],"range":[325,325,325,325,325],"rangeBurn":"325","key":"CamilleQ"},{"name":"전술적 휩쓸기","description":"카밀이 잠시 후 전방을 원뿔형으로 휩쓸어 피해를 입힙니다. 원뿔의 바깥쪽 절반에 있는 적은 이동 속도가 느려지고 추가 피해를 입으며, 카밀의 체력을 회복시킵니다.","sanitizedDescription":"카밀이 잠시 후 전방을 원뿔형으로 휩쓸어 피해를 입힙니다. 원뿔의 바깥쪽 절반에 있는 적은 이동 속도가 느려지고 추가 피해를 입으며, 카밀의 체력을 회복시킵니다.","tooltip":"카밀이 다리를 감아올려 대상 방향을 휩쓸며 맞힌 적 모두에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입힙니다.<br /><br />바깥쪽 절반에서 맞은 적은 이동 속도가 {{ e4 }}% 느려졌다가 {{ e2 }}초에 걸쳐 정상으로 돌아오며, 최대 체력의 {{ e5 }}% (<span class=\"colorFF8C00\">+{{ f2 }}</span>%)에 해당하는 추가 물리 피해를 입습니다. 이때 카밀은 챔피언에게 입힌 추가 피해량의 {{ e9 }}%만큼 체력을 회복합니다.<br /><br /><span class=\"size16 colorFFEB7F\">전술적 휩쓸기</span> <span class=\"size16 color8C8C8C\">대상이 에픽 몬스터가 아닐 경우, 피해량이 {{ e8 }}% 감소합니다.</span>","sanitizedTooltip":"카밀이 다리를 감아올려 대상 방향을 휩쓸며 맞힌 적 모두에게 {{ e1 }} (+{{ f1 }})의 물리 피해를 입힙니다. 바깥쪽 절반에서 맞은 적은 이동 속도가 {{ e4 }}% 느려졌다가 {{ e2 }}초에 걸쳐 정상으로 돌아오며, 최대 체력의 {{ e5 }}% (+{{ f2 }}%)에 해당하는 추가 물리 피해를 입습니다. 이때 카밀은 챔피언에게 입힌 추가 피해량의 {{ e9 }}%만큼 체력을 회복합니다. 전술적 휩쓸기 대상이 에픽 몬스터가 아닐 경우, 피해량이 {{ e8 }}% 감소합니다.","leveltip":{"label":["마나 소모량","피해량","적 최대 체력 비례 피해량","재사용 대기시간"],"effect":["{{ cost }} -> {{ costNL }}","{{ e1 }} -> {{ e1NL }}","{{ e5 }}% -> {{ e5NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"CamilleW.png","sprite":"spell2.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[15,13.5,12,10.5,9],"cooldownBurn":"15/13.5/12/10.5/9","effect":[null,[70,100,130,160,190],[2,2,2,2,2],[0.75,0.75,0.75,0.75,0.75],[80,80,80,80,80],[6,6.5,7,7.5,8],[650,650,650,650,650],[30,30,30,30,30],[50,50,50,50,50],[100,100,100,100,100],[0.1,0.1,0.1,0.1,0.1]],"effectBurn":["","70/100/130/160/190","2","0.75","80","6/6.5/7/7.5/8","650","30","50","100","0.1"],"range":[610,610,610,610,610],"rangeBurn":"610","key":"CamilleW"},{"name":"갈고리 발사","description":"카밀이 벽으로 자신을 끌어당겼다가 다시 도약해 착지 시 적들을 기절시킵니다.","sanitizedDescription":"카밀이 벽으로 자신을 끌어당겼다가 다시 도약해 착지 시 적들을 기절시킵니다.","tooltip":"<span class=\"colorFF8C00\">첫 사용 시:</span> 카밀이 지형에 걸리는 갈고리를 발사해 자신을 지형으로 끌어당깁니다. 1초 동안 갈고리 발사를 재사용할 수 있습니다.<br /><br /><span class=\"colorFF8C00\">재사용 시:</span> 카밀이 지형으로부터 도약해 처음 마주치는 적 챔피언과 충돌하며 {{ e3 }} <span class=\"colorFF8C00\">(+{{ f1 }})</span>의 물리 피해를 입히고 근처의 적을 {{ e1 }}초 동안 기절시킵니다. 적 챔피언을 향해 도약할 경우 도약 거리가 두 배로 증가하고, 충돌 시 {{ e5 }}초 동안 공격 속도가 {{ e2 }}% 빨라집니다.","sanitizedTooltip":"첫 사용 시: 카밀이 지형에 걸리는 갈고리를 발사해 자신을 지형으로 끌어당깁니다. 1초 동안 갈고리 발사를 재사용할 수 있습니다. 재사용 시: 카밀이 지형으로부터 도약해 처음 마주치는 적 챔피언과 충돌하며 {{ e3 }} (+{{ f1 }})의 물리 피해를 입히고 근처의 적을 {{ e1 }}초 동안 기절시킵니다. 적 챔피언을 향해 도약할 경우 도약 거리가 두 배로 증가하고, 충돌 시 {{ e5 }}초 동안 공격 속도가 {{ e2 }}% 빨라집니다.","leveltip":{"label":["재사용 대기시간","피해량","공격 속도"],"effect":["{{ cooldown }} -> {{ cooldownNL }}","{{ e3 }} -> {{ e3NL }}","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"CamilleE.png","sprite":"spell2.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[16,14.5,13,11.5,10],"cooldownBurn":"16/14.5/13/11.5/10","effect":[null,[0.75,0.75,0.75,0.75,0.75],[40,50,60,70,80],[75,120,175,210,255],[1050,1050,1050,1050,1050],[5,5,5,5,5],[1,1,1,1,1],[800,800,800,800,800],[400,400,400,400,400],[130,130,130,130,130],[0,0,0,0,0]],"effectBurn":["","0.75","40/50/60/70/80","75/120/175/210/255","1050","5","1","800","400","130","0"],"range":[800,800,800,800,800],"rangeBurn":"800","key":"CamilleE"},{"name":"마법공학 최후통첩","description":"카밀이 대상 챔피언에게 돌진해 일정 지역 내에 가둡니다. 대상에게 기본 공격 시 추가 마법 피해를 입힙니다.","sanitizedDescription":"카밀이 대상 챔피언에게 돌진해 일정 지역 내에 가둡니다. 대상에게 기본 공격 시 추가 마법 피해를 입힙니다.","tooltip":"카밀이 잠시 대상으로 지정할 수 없게 되며 적 챔피언에게 도약해 {{ e3 }}초 동안 어떤 방법으로도 탈출할 수 없도록 일정 지역 내에 가두고 정신 집중을 방해합니다. 근처의 다른 적은 뒤로 밀려납니다. 갇힌 적에 대한 카밀의 기본 공격은 {{ e2 }} + 대상 현재 체력의 {{ e1 }}%에 해당하는 추가 마법 피해를 입힙니다.<br /><br />카밀이 해당 지역을 벗어나면 <span class=\"size16 colorFFEB7F\">마법공학 최후통첩</span> <span class=\"size16 color8C8C8C\">효과가 끝납니다.","sanitizedTooltip":"카밀이 잠시 대상으로 지정할 수 없게 되며 적 챔피언에게 도약해 {{ e3 }}초 동안 어떤 방법으로도 탈출할 수 없도록 일정 지역 내에 가두고 정신 집중을 방해합니다. 근처의 다른 적은 뒤로 밀려납니다. 갇힌 적에 대한 카밀의 기본 공격은 {{ e2 }} + 대상 현재 체력의 {{ e1 }}%에 해당하는 추가 마법 피해를 입힙니다. 카밀이 해당 지역을 벗어나면 마법공학 최후통첩 효과가 끝납니다.","leveltip":{"label":["지속시간","재사용 대기시간","추가 피해량","적 현재 체력 비례 피해량"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%"]},"image":{"full":"CamilleR.png","sprite":"spell2.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[140,115,90],"cooldownBurn":"140/115/90","effect":[null,[4,6,8],[5,10,15],[2.5,3.25,4],[-0.9,-0.9,-0.9],[425,425,425],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","4/6/8","5/10/15","2.5/3.25/4","-0.9","425","0","0","0","0","0"],"range":[475,475,475],"rangeBurn":"475","key":"CamilleR"}],"passive":{"name":"적응형 방어 체계","description":"챔피언에게 기본 공격 시 1.5~2.5초 동안 카밀 최대 체력의 20%에 해당하는 피해를 흡수하는 보호막이 생깁니다. 적 챔피언이 어떤 피해를 주는지에 따라 물리 혹은 마법 보호막 중 하나만 생성됩니다.<br><br>이 효과에는 20~10초의 재사용 대기시간이 있습니다.","sanitizedDescription":"챔피언에게 기본 공격 시 1.5~2.5초 동안 카밀 최대 체력의 20%에 해당하는 피해를 흡수하는 보호막이 생깁니다. 적 챔피언이 어떤 피해를 주는지에 따라 물리 혹은 마법 보호막 중 하나만 생성됩니다. 이 효과에는 20~10초의 재사용 대기시간이 있습니다.","image":{"full":"Camille_Passive.png","sprite":"passive0.png","group":"passive","x":240,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Camille","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":3340,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3057,"count":1},{"id":3101,"count":1},{"id":3044,"count":1},{"id":3078,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3110,"count":1}]}]},{"champion":"Camille","title":"CamilleARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3748,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Camille","title":"CamilleCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3074,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3812,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"Camille","title":"CamilleFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3156,"count":1},{"id":3153,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"Camille","title":"CamilleKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3748,"count":1},{"id":3111,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3812,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3065,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Camille","title":"CamilleSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3074,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3812,"count":1},{"id":3083,"count":1}]}]},{"champion":"Camille","title":"CamilleSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":3057,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3074,"count":1},{"id":3078,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":1001,"count":1},{"id":3077,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3078,"count":1},{"id":3074,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3053,"count":1},{"id":3142,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3026,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3812,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"Camille","title":"CamilleTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3057,"count":1},{"id":3077,"count":1},{"id":3044,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3078,"count":1},{"id":3111,"count":1},{"id":3053,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3156,"count":1},{"id":3071,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":3057,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3078,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3053,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"MasterYi":{"id":11,"key":"MasterYi","name":"마스터 이","title":"우주 검사","image":{"full":"MasterYi.png","sprite":"champion2.png","group":"champion","x":432,"y":0,"w":48,"h":48},"skins":[{"id":11000,"name":"default","num":0},{"id":11001,"name":"암살자 마스터 이","num":1},{"id":11002,"name":"선택받은 마스터 이","num":2},{"id":11003,"name":"아이오니아 마스터 이","num":3},{"id":11004,"name":"사무라이 마스터 이","num":4},{"id":11005,"name":"인간사냥꾼 마스터 이","num":5},{"id":11009,"name":"프로젝트: 이","num":9},{"id":11010,"name":"우주 검객 마스터 이","num":10},{"id":11011,"name":"불멸의 영웅 마스터 이","num":11}],"lore":"마스터 이는 생각과 행동이 일치하도록 육체를 단련하고 정신을 수양했다. 최후의 수단으로 무력을 사용할 것을 결심하기는 했지만, 마스터 이는 품위 있고 빠른 검 놀림으로 자신의 결단을 언제나 빠르게 수행했다. 아이오니아의 우주류 검술의 살아있는 마지막 전승자인 마스터 이는 자신의 '통찰의 칠안경'과 함께 제자가 되려는 후보자 중 가장 적합한 자를 꼼꼼히 조사하는 등 고향의 유산을 이어가는 데에 일생을 바쳤다.","blurb":"마스터 이는 생각과 행동이 일치하도록 육체를 단련하고 정신을 수양했다. 최후의 수단으로 무력을 사용할 것을 결심하기는 했지만, 마스터 이는 품위 있고 빠른 검 놀림으로 자신의 결단을 언제나 빠르게 수행했다. 아이오니아의 우주류 검술의 살아있는 마지막 전승자인 마스터 이는 자신의 '통찰의 칠안경'과 함께 제자가 되려는 후보자 중 가장 적합한 자를 꼼꼼히 조사하는 등 고향의 유산을 이어가는 데에 일생을 바쳤다.","allytips":["- 원거리형 챔피언과 대치할 경우, 명상 레벨을 올리면 보다 오랫동안 공격로에서 버틸 수 있습니다.","- 우주류 검술은 게임 초반 미니언 결정타를 날릴 때 유용합니다.","- 적 챔피언 앞에 있는 미니언에게 일격 필살을 사용하면 스킬이 끝날 때 안전한 위치에 있을 수 있습니다."],"enemytips":["- 마스터 이가 쓰는 명상은 피해를 치료하는 능력이 뛰어나지만, 초반 아군의 조직적인 기습에는 취약합니다.","- 마스터 이가 일격 필살로 미니언을 사냥하려 하면, 수 차례 공격하여 명상으로 마나를 소비하도록 유도하십시오.","- 마스터 이가 최후의 전사를 사용할 때에는 둔화 스킬이 소용이 없으니 기절 등 다른 방해 효과가 있는 스킬을 사용하십시오."],"tags":["Assassin","Fighter"],"partype":"마나","info":{"attack":10,"defense":4,"magic":2,"difficulty":4},"stats":{"armor":33,"armorperlevel":3,"attackdamage":68,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":-0.08,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":598.56,"hpperlevel":92,"hpregen":7.592,"hpregenperlevel":0.65,"movespeed":355,"mp":250.56,"mpperlevel":42,"mpregen":7.256,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"일격 필살","description":"마스터 이가 전장을 순식간에 가로질러 여러 명의 적 유닛에게 물리 피해를 입히며, 이 동안 적이 공격 대상으로 삼을 수 없는 상태가 됩니다. 일격 필살은 치명타가 발동하여 미니언과 몬스터에게 추가 물리 피해를 입힐 확률이 있습니다. 기본 공격을 하면 일격 필살의 재사용 대기시간이 감소합니다.","sanitizedDescription":"마스터 이가 전장을 순식간에 가로질러 여러 명의 적 유닛에게 물리 피해를 입히며, 이 동안 적이 공격 대상으로 삼을 수 없는 상태가 됩니다. 일격 필살은 치명타가 발동하여 미니언과 몬스터에게 추가 물리 피해를 입힐 확률이 있습니다. 기본 공격을 하면 일격 필살의 재사용 대기시간이 감소합니다.","tooltip":"마스터 이가 전장을 순간 이동하며 최대 적 {{ e8 }}명을 공격하여, 각각에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 미니언과 몬스터에게는 {{ e3 }}의 추가 피해를 입힙니다. 이 동안 마스터 이는 공격을 받지 않습니다.<br /><br />일격 필살에는 치명타가 적용될 수 있으며, 이 경우 <span class=\"colorFF8C00\">{{ f1 }}</span>의 물리 피해를 추가로 입힙니다. 기본 공격을 하면 일격 필살의 재사용 대기시간이 {{ e7 }}초 감소합니다.","sanitizedTooltip":"마스터 이가 전장을 순간 이동하며 최대 적 {{ e8 }}명을 공격하여, 각각에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 미니언과 몬스터에게는 {{ e3 }}의 추가 피해를 입힙니다. 이 동안 마스터 이는 공격을 받지 않습니다. 일격 필살에는 치명타가 적용될 수 있으며, 이 경우 {{ f1 }}의 물리 피해를 추가로 입힙니다. 기본 공격을 하면 일격 필살의 재사용 대기시간이 {{ e7 }}초 감소합니다.","leveltip":{"label":["피해량","미니언/몬스터에 대한 추가 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"AlphaStrike.png","sprite":"spell7.png","group":"spell","x":240,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,80,90,100,110],"costBurn":"70/80/90/100/110","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[25,60,95,130,165],[50,50,50,50,50],[75,100,125,150,175],[1,1,1,1,1],[0.25,0.25,0.25,0.25,0.25],[0.6,0.6,0.6,0.6,0.6],[1,1,1,1,1],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","25/60/95/130/165","50","75/100/125/150/175","1","0.25","0.6","1","4","0","0"],"vars":[{"key":"a1","link":"attackdamage","coeff":[1]},{"key":"f1","link":"attackdamage","coeff":[0.6]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"AlphaStrike"},{"name":"명상","description":"마스터 이가 정신을 집중하며 체력을 회복해, 짧은 시간 동안 받는 피해량이 감소합니다. 정신을 집중하는 동안 매초 2연속 공격 중첩을 얻고 최후의 전사와 우주류 검술의 남은 지속시간이 정지됩니다.","sanitizedDescription":"마스터 이가 정신을 집중하며 체력을 회복해, 짧은 시간 동안 받는 피해량이 감소합니다. 정신을 집중하는 동안 매초 2연속 공격 중첩을 얻고 최후의 전사와 우주류 검술의 남은 지속시간이 정지됩니다.","tooltip":"마스터 이가 정신을 집중하여 4초간 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 체력을 회복합니다. 마스터 이의 체력이 {{ e5 }}% 줄어들 때마다 재생되는 체력이 {{ e4 }}% 증가합니다.<br /><br />정신 집중을 하는 동안 마스터 이에게 적이 가하는 피해가 {{ e3 }}% 감소합니다. 포탑의 경우 감소하는 피해량은 절반이 됩니다.<br /><br />정신을 집중하는 동안 매초 2연속 공격 중첩을 얻고 최후의 전사와 우주류 검술의 남은 지속시간이 정지됩니다.","sanitizedTooltip":"마스터 이가 정신을 집중하여 4초간 초당 {{ e1 }} (+{{ a1 }})의 체력을 회복합니다. 마스터 이의 체력이 {{ e5 }}% 줄어들 때마다 재생되는 체력이 {{ e4 }}% 증가합니다. 정신 집중을 하는 동안 마스터 이에게 적이 가하는 피해가 {{ e3 }}% 감소합니다. 포탑의 경우 감소하는 피해량은 절반이 됩니다. 정신을 집중하는 동안 매초 2연속 공격 중첩을 얻고 최후의 전사와 우주류 검술의 남은 지속시간이 정지됩니다.","leveltip":{"label":["피해량 감소율","체력 회복량"],"effect":["{{ e3 }}% -> {{ e3NL }}%","{{ e1 }} -> {{ e1NL }}"]},"image":{"full":"Meditate.png","sprite":"spell7.png","group":"spell","x":288,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[35,35,35,35,35],"cooldownBurn":"35","effect":[null,[30,50,70,90,110],[100,150,200,250,300],[50,55,60,65,70],[1,1,1,1,1],[1,1,1,1,1],[50,50,50,50,50],[4,4,4,4,4],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/50/70/90/110","100/150/200/250/300","50/55/60/65/70","1","1","50","4","0.5","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.25]}],"range":[20,20,20,20,20],"rangeBurn":"20","key":"Meditate"},{"name":"우주류 검술","description":"마스터 이가 우주류 검술을 한껏 펼쳐내어 공격력이 증가합니다. 우주류 검술을 사용하면 기본 공격으로 추가 고정 피해를 입힐 수 있지만, 재사용 대기시간 중에는 기본 지속 효과가 사라집니다.","sanitizedDescription":"마스터 이가 우주류 검술을 한껏 펼쳐내어 공격력이 증가합니다. 우주류 검술을 사용하면 기본 공격으로 추가 고정 피해를 입힐 수 있지만, 재사용 대기시간 중에는 기본 지속 효과가 사라집니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 공격력이 {{ e1 }}% <span class=\"colorFF8C00\">({{ f1 }})</span> 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> {{ e5 }}초 동안 기본 공격으로 {{ e3 }} <span class=\"colorFF8C00\">(+{{ f2 }})</span>의 추가 고정 피해를 입힙니다. 그 후 우주류 검술 스킬이 재사용 대기에 들어가면 기본 지속 효과가 사라집니다.","sanitizedTooltip":"기본 지속 효과: 공격력이 {{ e1 }}% ({{ f1 }}) 증가합니다. 사용 시: {{ e5 }}초 동안 기본 공격으로 {{ e3 }} (+{{ f2 }})의 추가 고정 피해를 입힙니다. 그 후 우주류 검술 스킬이 재사용 대기에 들어가면 기본 지속 효과가 사라집니다.","leveltip":{"label":["활성화 시 추가 피해량","재사용 대기시간"],"effect":["{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"WujuStyle.png","sprite":"spell7.png","group":"spell","x":336,"y":48,"w":48,"h":48},"resource":"소모값 없음","maxrank":5,"cost":[0,0,0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[18,17,16,15,14],"cooldownBurn":"18/17/16/15/14","effect":[null,[10,10,10,10,10],[25,25,25,25,25],[14,23,32,41,50],[20,30,40,50,60],[5,5,5,5,5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10","25","14/23/32/41/50","20/30/40/50/60","5","0","0","0","0","0"],"vars":[{"key":"f2","link":"attackdamage","coeff":[0.1,0.125,0.15,0.175,0.2]}],"range":[20,20,20,20,20],"rangeBurn":"20","key":"WujuStyle"},{"name":"최후의 전사","description":"마스터 이가 엄청난 속도로 이동하며 순간적으로 자신의 이동과 공격 속도를 높이고 모든 둔화 효과에 대해 면역이 됩니다. 스킬이 활성화된 동안 적 챔피언을 처치하거나 어시스트를 올리면 최후의 전사 지속 시간이 늘어납니다. 적 챔피언을 처치하거나 어시스트를 올리면 기본 지속 효과로 다른 스킬들의 재사용 대기시간이 감소합니다.","sanitizedDescription":"마스터 이가 엄청난 속도로 이동하며 순간적으로 자신의 이동과 공격 속도를 높이고 모든 둔화 효과에 대해 면역이 됩니다. 스킬이 활성화된 동안 적 챔피언을 처치하거나 어시스트를 올리면 최후의 전사 지속 시간이 늘어납니다. 적 챔피언을 처치하거나 어시스트를 올리면 기본 지속 효과로 다른 스킬들의 재사용 대기시간이 감소합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 챔피언을 처치하거나 어시스트를 올리면 마스터 이의 기본 스킬 재사용 대기시간이 {{ e5 }}% 감소합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 이동 속도가 {{ e3 }}%, 공격 속도가 {{ e2 }}% 상승하며, {{ e1 }}초 동안 모든 둔화 효과에 대해 면역이 됩니다. 스킬이 활성화된 동안 챔피언을 처치하거나 어시스트를 올리면 최후의 전사의 지속 시간이 {{ e4 }}초 늘어납니다.","sanitizedTooltip":"기본 지속 효과: 챔피언을 처치하거나 어시스트를 올리면 마스터 이의 기본 스킬 재사용 대기시간이 {{ e5 }}% 감소합니다. 사용 시: 이동 속도가 {{ e3 }}%, 공격 속도가 {{ e2 }}% 상승하며, {{ e1 }}초 동안 모든 둔화 효과에 대해 면역이 됩니다. 스킬이 활성화된 동안 챔피언을 처치하거나 어시스트를 올리면 최후의 전사의 지속 시간이 {{ e4 }}초 늘어납니다.","leveltip":{"label":["공격 속도","이동 속도"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"Highlander.png","sprite":"spell7.png","group":"spell","x":384,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[85,85,85],"cooldownBurn":"85","effect":[null,[7,7,7],[30,55,80],[25,35,45],[7,7,7],[70,70,70],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","7","30/55/80","25/35/45","7","70","0","0","0","0","0"],"range":[1,1,1],"rangeBurn":"1","key":"Highlander"}],"passive":{"name":"2연속 공격","description":"마스터 이는 기본 공격 시 주기적으로 2연속 공격합니다.","sanitizedDescription":"마스터 이는 기본 공격 시 주기적으로 2연속 공격합니다.","image":{"full":"MasterYi_Passive1.png","sprite":"passive2.png","group":"passive","x":432,"y":0,"w":48,"h":48}},"recommended":[{"champion":"MasterYi","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1036,"count":1},{"id":1053,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1042,"count":1},{"id":3006,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":1038,"count":1},{"id":3072,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3087,"count":1},{"id":3031,"count":1},{"id":3036,"count":1},{"id":3812,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3087,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1001,"count":1},{"id":1043,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3022,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1419,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3087,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3026,"count":1},{"id":3812,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2032,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3184,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3153,"count":1},{"id":3087,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2140,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3022,"count":1},{"id":3026,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3144,"count":1},{"id":1001,"count":1},{"id":1043,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3715,"count":1},{"id":1001,"count":1},{"id":1043,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3006,"count":1},{"id":3153,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1419,"count":1},{"id":3006,"count":1},{"id":3153,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3142,"count":1},{"id":3156,"count":1},{"id":3814,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3022,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2032,"count":1},{"id":2140,"count":1}]}]},{"champion":"MasterYi","title":"MasterYiTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1036,"count":2},{"id":2003,"count":3}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3142,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1412,"count":1},{"id":3153,"count":1},{"id":3006,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3031,"count":1},{"id":3087,"count":1},{"id":3036,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3156,"count":1},{"id":3022,"count":1},{"id":3139,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Ryze":{"id":13,"key":"Ryze","name":"라이즈","title":"룬 마법사","image":{"full":"Ryze.png","sprite":"champion3.png","group":"champion","x":144,"y":0,"w":48,"h":48},"skins":[{"id":13000,"name":"default","num":0},{"id":13001,"name":"인간 라이즈","num":1},{"id":13002,"name":"제사장 라이즈","num":2},{"id":13003,"name":"엉클샘 라이즈","num":3},{"id":13004,"name":"승리의 라이즈","num":4},{"id":13005,"name":"라이즈 교수님","num":5},{"id":13006,"name":"좀비 라이즈","num":6},{"id":13007,"name":"암흑 수정 라이즈","num":7},{"id":13008,"name":"해적 라이즈","num":8},{"id":13009,"name":"백색의 라이즈","num":9},{"id":13010,"name":"SKT T1 라이즈","num":10}],"lore":"룬테라의 최고 마법사로 널리 알려진 라이즈는 산전수전을 겪으며 중차대한 임무를 수행하는 고대의 대마법사다. 가공할 마력과 무한한 체력을 보유한 그는, 태초에 무에서 세계를 창조한 원초적 마법의 파편인 룬을 찾기 위해 쉴 틈 없이 이곳저곳을 떠돌고 있다. 룬이 룬테라에 어떤 참사를 일으킬 수 있는지 알고 있기에 라이즈는 룬이 잘못된 손에 들어가지 않도록 빠짐없이 찾아야만 한다.","blurb":"룬테라의 최고 마법사로 널리 알려진 라이즈는 산전수전을 겪으며 중차대한 임무를 수행하는 고대의 대마법사다. 가공할 마력과 무한한 체력을 보유한 그는, 태초에 무에서 세계를 창조한 원초적 마법의 파편인 룬을 찾기 위해 쉴 틈 없이 이곳저곳을 떠돌고 있다. 룬이 룬테라에 어떤 참사를 일으킬 수 있는지 알고 있기에 라이즈는 룬이 잘못된 손에 들어가지 않도록 빠짐없이 찾아야만 한다.","allytips":["- 과부하의 기본 지속 효과를 활용하면 피해량을 극대화시키거나 생존력을 극대화시킬 수 있습니다.","- 주문 전이는 재사용 대기시간이 짧기 때문에 많은 대상에게 전이 표식을 남길 수 있습니다.","- 공간 왜곡 사용 후 차원문이 닫히기 전까지 자유롭게 이동하고 스킬을 써도 공간 왜곡이 취소되지 않습니다."],"enemytips":["- 전이 표식이 남아 있다면 라이즈를 특히 조심해야 합니다.","- 공간 왜곡이 마무리되는 시간을 확인하면 차원문으로 순간이동해 오는 적에게 대응하는 데 도움이 됩니다.","- 공간 왜곡이 마무리되려 할 때 라이즈에게 군중 제어 스킬을 쓰면 차원문이 취소됩니다."],"tags":["Mage","Fighter"],"partype":"마나","info":{"attack":2,"defense":2,"magic":10,"difficulty":7},"stats":{"armor":21.552,"armorperlevel":3,"attackdamage":55.04,"attackdamageperlevel":3,"attackrange":550,"attackspeedoffset":0,"attackspeedperlevel":2.112,"crit":0,"critperlevel":0,"hp":570.48,"hpperlevel":98,"hpregen":7,"hpregenperlevel":0.55,"movespeed":340,"mp":400,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"과부하","description":"기본 지속 효과로 다른 피해 스킬을 사용하면 과부하의 재사용 대기시간이 초기화되고 과부하를 강화시킬 수 있는 룬이 충전되기 시작합니다.<br><br>사용 시 라이즈가 순수한 에너지를 일직선으로 발사해 첫 번째 맞는 적에게 피해를 입힙니다. 룬이 최대치까지 충전되면 보호막을 얻고 이동 속도가 증가합니다.","sanitizedDescription":"기본 지속 효과로 다른 피해 스킬을 사용하면 과부하의 재사용 대기시간이 초기화되고 과부하를 강화시킬 수 있는 룬이 충전되기 시작합니다. 사용 시 라이즈가 순수한 에너지를 일직선으로 발사해 첫 번째 맞는 적에게 피해를 입힙니다. 룬이 최대치까지 충전되면 보호막을 얻고 이동 속도가 증가합니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 룬 감옥과 주문 전이 사용 시 과부하의 재사용 대기시간이 초기화되고 {{ e2 }}초 동안 <span class=\"colorFFF673\">룬</span>이 충전됩니다. <span class=\"colorFFF673\">룬</span>은 최대 {{ e9 }} 개까지 충전됩니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 룬의 돌풍을 발사하여 처음으로 맞힌 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"color44DDFF\">(+{{ f1 }})</span>의 마법 피해를 입힙니다. 활성화된 모든 <span class=\"colorFFF673\">룬</span>이 방출됩니다.<br /><br /><span class=\"colorFFF673\">룬</span>이 {{ e9 }}개 방출되면 과부하되어 라이즈에게 <span class=\"colorFFFFFF\">{{ f3 }}</span> <span class=\"color99FF99\">(+{{ a2 }})</span> <span class=\"color44DDFF\">(+{{ f2 }})</span>의 피해를 흡수하는 보호막을 씌우고 {{ e5 }}초 동안 이동 속도를 {{ e4 }}% 상승시킵니다.","sanitizedTooltip":"기본 지속 효과: 룬 감옥과 주문 전이 사용 시 과부하의 재사용 대기시간이 초기화되고 {{ e2 }}초 동안 룬이 충전됩니다. 룬은 최대 {{ e9 }} 개까지 충전됩니다. 사용 시: 룬의 돌풍을 발사하여 처음으로 맞힌 적에게 {{ e1 }} (+{{ a1 }}) (+{{ f1 }})의 마법 피해를 입힙니다. 활성화된 모든 룬이 방출됩니다. 룬이 {{ e9 }}개 방출되면 과부하되어 라이즈에게 {{ f3 }} (+{{ a2 }}) (+{{ f2 }})의 피해를 흡수하는 보호막을 씌우고 {{ e5 }}초 동안 이동 속도를 {{ e4 }}% 상승시킵니다.","leveltip":{"label":["기본 피해량","이동 속도"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }}% -> {{ e4NL }}%"]},"image":{"full":"RyzeQWrapper.png","sprite":"spell9.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":6,"cost":[40,40,40,40,40,40],"costBurn":"40","cooldown":[6,6,6,6,6,6],"cooldownBurn":"6","effect":[null,[60,85,110,135,160,185],[4,4,4,4,4,4],[55,55,55,55,55,55],[25,28,31,34,37,40],[2,2,2,2,2,2],[2,2,2,2,2,2],[3,3,3,3,3,3],[3,3,3,3,3,3],[2,2,2,2,2,2],[0,0,0,0,0,0]],"effectBurn":["","60/85/110/135/160/185","4","55","25/28/31/34/37/40","2","2","3","3","2","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.45]},{"key":"a2","link":"spelldamage","coeff":[0.6]}],"range":[1000,1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"RyzeQWrapper"},{"name":"룬 감옥","description":"라이즈가 적 유닛이 움직일 수 없게 룬 감옥에 가두고 피해를 입힙니다.","sanitizedDescription":"라이즈가 적 유닛이 움직일 수 없게 룬 감옥에 가두고 피해를 입힙니다.","tooltip":"즉시 적을 {{ e1 }}초 동안 제 자리에 묶고, {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"color44DDFF\">(+{{ f1 }})</span>의 마법 피해를 입힙니다.","sanitizedTooltip":"즉시 적을 {{ e1 }}초 동안 제 자리에 묶고, {{ e2 }} (+{{ a1 }}) (+{{ f1 }})의 마법 피해를 입힙니다.","leveltip":{"label":["기본 피해량","재사용 대기시간","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"RyzeW.png","sprite":"spell9.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":6,"cost":[50,60,70,80,90,100],"costBurn":"50/60/70/80/90/100","cooldown":[13,12,11,10,9,9],"cooldownBurn":"13/12/11/10/9/9","effect":[null,[0.75,0.75,0.75,0.75,0.75,0.75],[80,100,120,140,160,180],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],"effectBurn":["","0.75","80/100/120/140/160/180","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[615,615,615,615,615,615],"rangeBurn":"615","key":"RyzeW"},{"name":"주문 전이","description":"라이즈가 순수한 마법의 구체를 던져 적에게 피해를 입히고 표식을 남깁니다. 표식이 남은 적에게 라이즈가 스킬을 사용하면 추가 효과가 적용됩니다.","sanitizedDescription":"라이즈가 순수한 마법의 구체를 던져 적에게 피해를 입히고 표식을 남깁니다. 표식이 남은 적에게 라이즈가 스킬을 사용하면 추가 효과가 적용됩니다.","tooltip":"적에게 전이 표식을 남겨 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"color44DDFF\">(+{{ f1 }})</span>의 마법 피해를 입힙니다. 스킬 사용 시 표식을 소모하여 추가 효과를 얻습니다.<br /><br /><span class=\"colorFFF673\">과부하:</span> 피해량이 {{ e2 }}% 증가하고 근처 전이 표식이 있는 적에게도 퍼져나갑니다.<br /><span class=\"colorFFF673\">룬 감옥:</span> 속박의 지속 시간이 {{ e6 }}초로 늘어납니다.<br /><span class=\"colorFFF673\">주문 전이:</span> 주변의 적 모두에게 전이 표식이 퍼집니다.<br /><br /><i>스킬을 사용해 전이 표식이 남은 적을 처치하면 주변의 모든 적에게 전이 표식이 남습니다.","sanitizedTooltip":"적에게 전이 표식을 남겨 {{ e1 }} (+{{ a1 }}) (+{{ f1 }})의 마법 피해를 입힙니다. 스킬 사용 시 표식을 소모하여 추가 효과를 얻습니다. 과부하: 피해량이 {{ e2 }}% 증가하고 근처 전이 표식이 있는 적에게도 퍼져나갑니다. 룬 감옥: 속박의 지속 시간이 {{ e6 }}초로 늘어납니다. 주문 전이: 주변의 적 모두에게 전이 표식이 퍼집니다. 스킬을 사용해 전이 표식이 남은 적을 처치하면 주변의 모든 적에게 전이 표식이 남습니다.","leveltip":{"label":["기본 피해량","과부하 피해량 증가","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"RyzeE.png","sprite":"spell9.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":6,"cost":[40,55,70,85,100,115],"costBurn":"40/55/70/85/100/115","cooldown":[3.25,3,2.75,2.5,2.25,2.25],"cooldownBurn":"3.25/3/2.75/2.5/2.25/2.25","effect":[null,[50,75,100,125,150,175],[40,50,60,70,80,90],[167,167,167,167,167,167],[0.1,0.1,0.1,0.1,0.1,0.1],[1.5,1.5,1.5,1.5,1.5,1.5],[2,2,2,2,2,2],[4,4,4,4,4,4],[0,0,0,0,0,0],[0,0,0,0,0,0],[0,0,0,0,0,0]],"effectBurn":["","50/75/100/125/150/175","40/50/60/70/80/90","167","0.1","1.5","2","4","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[615,615,615,615,615,615],"rangeBurn":"615","key":"RyzeE"},{"name":"공간 왜곡","description":"라이즈가 근처에 차원문을 생성합니다. 몇 초 후, 차원문 주변의 모든 아군이 대상 지점으로 순간이동 합니다.","sanitizedDescription":"라이즈가 근처에 차원문을 생성합니다. 몇 초 후, 차원문 주변의 모든 아군이 대상 지점으로 순간이동 합니다.","tooltip":"최대 {{ e7 }} 사거리까지 이동할 수 있는 차원문을 엽니다. {{ e4 }}초 후, 차원문 근처의 모든 아군이 해당 위치로 순간이동합니다.<br /><br /><i>라이즈가 이동 혹은 스킬 사용 불가 상태가 되면 공간 왜곡이 취소됩니다.</i>","sanitizedTooltip":"최대 {{ e7 }} 사거리까지 이동할 수 있는 차원문을 엽니다. {{ e4 }}초 후, 차원문 근처의 모든 아군이 해당 위치로 순간이동합니다. 라이즈가 이동 혹은 스킬 사용 불가 상태가 되면 공간 왜곡이 취소됩니다.","leveltip":{"label":["사거리"],"effect":["{{ e7 }} -> {{ e7NL }}"]},"image":{"full":"RyzeR.png","sprite":"spell9.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":2,"cost":[100,100],"costBurn":"100","cooldown":[120,120],"cooldownBurn":"120","effect":[null,[2.1,2.1],[0.65,0.65],[0.75,0.75],[2,2],[150,250],[6,6],[1750,3000],[0,0],[0,0],[0,0]],"effectBurn":["","2.1","0.65","0.75","2","150/250","6","1750/3000","0","0","0"],"range":[1750,3000],"rangeBurn":"1750/3000","key":"RyzeR"}],"passive":{"name":"비전 연마","description":"<mainText>라이즈의 스킬이 추가 마나에 따라 추가 피해를 입히고, 최대 마나가 주문력에 비례해 증가합니다.</mainText>","sanitizedDescription":"라이즈의 스킬이 추가 마나에 따라 추가 피해를 입히고, 최대 마나가 주문력에 비례해 증가합니다.","image":{"full":"Ryze_P.png","sprite":"passive3.png","group":"passive","x":144,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Ryze","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1027,"count":1},{"id":3070,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3070,"count":1},{"id":1058,"count":1},{"id":3003,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]}]},{"champion":"Ryze","title":"RyzeARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1028,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3007,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3116,"count":1},{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ryze","title":"RyzeBT","type":"riot","map":"SR","mode":"TUTORIAL","blocks":[{"type":"starting","recMath":false,"items":[{"id":1027,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3070,"count":1},{"id":3020,"count":1},{"id":3010,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3003,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3001,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Ryze","title":"RyzeCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1027,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3073,"count":1},{"id":1001,"count":1},{"id":3010,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3029,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3007,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3100,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ryze","title":"RyzeFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3158,"count":1},{"id":3003,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ryze","title":"RyzeKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":1028,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3003,"count":1},{"id":3158,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3165,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3116,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ryze","title":"RyzeSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3029,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3007,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3001,"count":1},{"id":3100,"count":1}]}]},{"champion":"Ryze","title":"RyzeSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1027,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3070,"count":1},{"id":1001,"count":1},{"id":3010,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3027,"count":1},{"id":3165,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3003,"count":1},{"id":3135,"count":1},{"id":3089,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3116,"count":1},{"id":3102,"count":1},{"id":3157,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2031,"count":1},{"id":2139,"count":1}]}]},{"champion":"Ryze","title":"RyzeTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3070,"count":1},{"id":3027,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3003,"count":1},{"id":3165,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3090,"count":1},{"id":3001,"count":1},{"id":3116,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Malphite":{"id":54,"key":"Malphite","name":"말파이트","title":"거석의 파편","image":{"full":"Malphite.png","sprite":"champion2.png","group":"champion","x":288,"y":0,"w":48,"h":48},"skins":[{"id":54000,"name":"default","num":0},{"id":54001,"name":"토끼풀 말파이트","num":1},{"id":54002,"name":"산호초 말파이트","num":2},{"id":54003,"name":"대리석 말파이트","num":3},{"id":54004,"name":"흑요석 말파이트","num":4},{"id":54005,"name":"빙하의 말파이트","num":5},{"id":54006,"name":"메카 말파이트","num":6},{"id":54007,"name":"철갑병기 말파이트","num":7}],"lore":"말파이트는 살아 움직이는 거대한 암석으로 된 생명체로, 혼돈으로 어지러운 세상에서 질서를 수호하기 위해 노력하고 있다. 초자연적인 거석의 파편으로 태어난 말파이트는 거대한 자연의 힘을 사용해 거석을 유지하고 보호하려 했지만 결국 실패하고 말았다. 거석이 파괴된 후, 유일하게 생존한 말파이트는 이제 룬테라의 무른 생명체들과 그들의 변덕스러운 성미를 참아내며, 마지막 생존자에게 걸맞은 새 역할을 찾고 있다.","blurb":"말파이트는 살아 움직이는 거대한 암석으로 된 생명체로, 혼돈으로 어지러운 세상에서 질서를 수호하기 위해 노력하고 있다. 초자연적인 거석의 파편으로 태어난 말파이트는 거대한 자연의 힘을 사용해 거석을 유지하고 보호하려 했지만 결국 실패하고 말았다. 거석이 파괴된 후, 유일하게 생존한 말파이트는 이제 룬테라의 무른 생명체들과 그들의 변덕스러운 성미를 참아내며, 마지막 생존자에게 걸맞은 새 역할을 찾고 있다.","allytips":["- 방어력은 화강암 방패를 뚫고 들어오는 피해를 줄여주므로, 난폭한 일격은 적이 가하는 물리 피해에 대한 방어막을 강화해줍니다.","- 말파이트의 스킬은 높은 방어력을 기반으로 위력이 증가하지만, 일부 게임에서는 마법 저항력을 올려야 하기도 합니다. 이럴 경우 군단의 방패, 헤르메스의 발걸음, 수호 천사를 구매하십시오."],"enemytips":["- 물리 피해 위주의 챔피언이라면 말파이트와 싸울 때에는 아군 뒤로 피하십시오. 지면 강타에 당하면 가할 수 있는 피해량이 현저하게 감소하기 때문입니다.","- 말파이트는 정글링이 가능한 탱커 중 하나입니다. 말파이트에게 강타 주문이 있을 경우 주의하십시오."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":5,"defense":9,"magic":7,"difficulty":2},"stats":{"armor":37,"armorperlevel":3.75,"attackdamage":61.97,"attackdamageperlevel":3.375,"attackrange":125,"attackspeedoffset":-0.02,"attackspeedperlevel":3.4,"crit":0,"critperlevel":0,"hp":574.2,"hpperlevel":90,"hpregen":7,"hpregenperlevel":0.55,"movespeed":335,"mp":282.2,"mpperlevel":40,"mpregen":7.324,"mpregenperlevel":0.55,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"지진의 파편","description":"말파이트가 원초적인 원소 에너지를 사용하여 땅을 통해 대지의 조각을 날려 피해를 입히며 4초 동안 이동 속도를 훔칩니다.","sanitizedDescription":"말파이트가 원초적인 원소 에너지를 사용하여 땅을 통해 대지의 조각을 날려 피해를 입히며 4초 동안 이동 속도를 훔칩니다.","tooltip":"대상에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초동안 적의 이동 속도를 {{ e2 }}% 훔칩니다.","sanitizedTooltip":"대상에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초동안 적의 이동 속도를 {{ e2 }}% 훔칩니다.","leveltip":{"label":["피해량","이동 속도","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"SeismicShard.png","sprite":"spell7.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,75,80,85,90],"costBurn":"70/75/80/85/90","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[70,120,170,220,270],[14,17,20,23,26],[4,4,4,4,4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/120/170/220/270","14/17/20/23/26","4","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[625,625,625,625,625],"rangeBurn":"625","key":"SeismicShard"},{"name":"난폭한 일격","description":"말파이트가 강력한 힘으로 공격하여 전방의 모든 유닛에게 피해를 입힙니다. 기본 지속 효과로 방어력이 상승합니다. (화강암 방패가 활성화되어 있을 때는 3배로 적용)","sanitizedDescription":"말파이트가 강력한 힘으로 공격하여 전방의 모든 유닛에게 피해를 입힙니다. 기본 지속 효과로 방어력이 상승합니다. (화강암 방패가 활성화되어 있을 때는 3배로 적용)","tooltip":"<span class=\"colorFF9900\">기본 지속 효과: </span>말파이트의 방어력이 {{ e1 }}%(<span class=\"colorFFFF00\">{{ f1 }}</span>) 증가합니다. 화강암 방패가 발동 중일 경우, 추가 방어력은 세 배가 되어 {{ f4.0 }}% (<span class=\"colorFFFF00\">{{ f3 }}</span>)만큼 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시: </span>기본 공격 시 대상과 대상 주변 적들에게 추가로 {{ e2 }} <span class=\"colorFFFF00\">(+{{ f2 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 물리 피해를 입힙니다. {{ e3 }}초간 유지됩니다.","sanitizedTooltip":"기본 지속 효과: 말파이트의 방어력이 {{ e1 }}%({{ f1 }}) 증가합니다. 화강암 방패가 발동 중일 경우, 추가 방어력은 세 배가 되어 {{ f4.0 }}% ({{ f3 }})만큼 증가합니다. 사용 시: 기본 공격 시 대상과 대상 주변 적들에게 추가로 {{ e2 }} (+{{ f2 }}) (+{{ a1 }})의 물리 피해를 입힙니다. {{ e3 }}초간 유지됩니다.","leveltip":{"label":["방어력","피해량"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"Obduracy.png","sprite":"spell7.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[25,25,25,25,25],"costBurn":"25","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[10,15,20,25,30],[15,30,45,60,75],[6,6,6,6,6],[225,225,225,225,225],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/15/20/25/30","15/30/45/60/75","6","225","3","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.1]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"Obduracy"},{"name":"지면 강타","description":"말파이트가 땅을 내리쳐 충격파를 만들어 냅니다. 충격파는 말파이트 방어력의 일부에 해당하는 마법 피해를 입히며, 이에 맞은 적은 잠시 동안 공격 속도가 감소합니다.","sanitizedDescription":"말파이트가 땅을 내리쳐 충격파를 만들어 냅니다. 충격파는 말파이트 방어력의 일부에 해당하는 마법 피해를 입히며, 이에 맞은 적은 잠시 동안 공격 속도가 감소합니다.","tooltip":"말파이트가 바닥을 내려쳐 주변 적에게 {{ e2 }} <span class=\"colorFFFF00\">(+{{ f1 }})</span> <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 적들의 공격 속도를 {{ e4 }}초 동안 {{ e1 }}% 감소시킵니다.<br /><br />이 스킬은 방어력의 {{ e3 }}% 만큼의 피해를 추가로 가합니다.","sanitizedTooltip":"말파이트가 바닥을 내려쳐 주변 적에게 {{ e2 }} (+{{ f1 }}) (+{{ a1 }})의 마법 피해를 입히고 적들의 공격 속도를 {{ e4 }}초 동안 {{ e1 }}% 감소시킵니다. 이 스킬은 방어력의 {{ e3 }}% 만큼의 피해를 추가로 가합니다.","leveltip":{"label":["피해량","공격 속도 감소량","마나 소모량"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ cost }} -> {{ costNL }}"]},"image":{"full":"Landslide.png","sprite":"spell7.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,55,60,65,70],"costBurn":"50/55/60/65/70","cooldown":[7,7,7,7,7],"cooldownBurn":"7","effect":[null,[30,35,40,45,50],[60,95,130,165,200],[40,40,40,40,40],[3,3,3,3,3],[6,6,6,6,6],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","30/35/40/45/50","60/95/130/165/200","40","3","6","0","0","0","0","0"],"vars":[{"key":"f1","link":"armor","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.2]}],"range":[400,400,400,400,400],"rangeBurn":"400","key":"Landslide"},{"name":"멈출 수 없는 힘","description":"말파이트가 목표 위치로 난폭하게 돌진하여 적에게 피해를 입히고 공중으로 띄워 올립니다.","sanitizedDescription":"말파이트가 목표 위치로 난폭하게 돌진하여 적에게 피해를 입히고 공중으로 띄워 올립니다.","tooltip":"말파이트가 지정한 지역으로 돌격하여 근처 적들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 공중에 띄웁니다.","sanitizedTooltip":"말파이트가 지정한 지역으로 돌격하여 근처 적들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 공중에 띄웁니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"UFSlash.png","sprite":"spell7.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[130,115,100],"cooldownBurn":"130/115/100","effect":[null,[1.5,1.75,2],[200,300,400],[1.5,1.5,1.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","1.5/1.75/2","200/300/400","1.5","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1]}],"range":[1000,1000,1000],"rangeBurn":"1000","key":"UFSlash"}],"passive":{"name":"화강암 방패","description":"말파이트는 여러 겹의 돌로 감싸여 있어 자신의 최대 체력 10%만큼의 피해를 흡수할 수 있습니다. 말파이트가 10초 동안 공격 받지 않으면 보호막이 재생성됩니다.","sanitizedDescription":"말파이트는 여러 겹의 돌로 감싸여 있어 자신의 최대 체력 10%만큼의 피해를 흡수할 수 있습니다. 말파이트가 10초 동안 공격 받지 않으면 보호막이 재생성됩니다.","image":{"full":"Malphite_GraniteShield.png","sprite":"passive2.png","group":"passive","x":288,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Malphite","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1027,"count":1},{"id":1029,"count":1},{"id":3024,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3082,"count":1},{"id":3024,"count":1},{"id":3110,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3105,"count":1},{"id":3068,"count":1},{"id":3001,"count":1},{"id":3083,"count":1}]}]},{"champion":"Malphite","title":"MalphiteARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3024,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3742,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3001,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Malphite","title":"MalphiteCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3751,"count":1},{"id":1001,"count":1},{"id":3024,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3025,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3748,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Malphite","title":"MalphiteFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3110,"count":1},{"id":3047,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3285,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Malphite","title":"MalphiteKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3024,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3742,"count":1},{"id":3030,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3001,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Malphite","title":"MalphiteSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3025,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3748,"count":1},{"id":3001,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3075,"count":1},{"id":3102,"count":1}]}]},{"champion":"Malphite","title":"MalphiteSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3751,"count":1},{"id":1001,"count":1},{"id":3024,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":1001,"count":1},{"id":3751,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3025,"count":1},{"id":3047,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3001,"count":1},{"id":3143,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3193,"count":1},{"id":3194,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Malphite","title":"MalphiteTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1027,"count":1},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3751,"count":1},{"id":3024,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3110,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2003,"count":3}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3110,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Anivia":{"id":34,"key":"Anivia","name":"애니비아","title":"얼음불사조","image":{"full":"Anivia.png","sprite":"champion0.png","group":"champion","x":240,"y":0,"w":48,"h":48},"skins":[{"id":34000,"name":"default","num":0},{"id":34001,"name":"국가대표 애니비아","num":1},{"id":34002,"name":"독수리 애니비아","num":2},{"id":34003,"name":"녹서스 사냥꾼 애니비아","num":3},{"id":34004,"name":"마법공학 애니비아","num":4},{"id":34005,"name":"어둠서리 애니비아","num":5},{"id":34006,"name":"선사시대 애니비아","num":6},{"id":34007,"name":"삼바 애니비아","num":7}],"lore":"애니비아는 프렐요드를 지키기 위해 끊임없는 삶, 죽음과 부활의 순환을 인내하는 자애로운 날개 달린 영혼이다. 자비를 모르는 얼음과 매서운 바람에서 태어난 반신으로, 그녀는 이런 자연의 힘을 이용해 감히 그녀의 고향을 휘젓는 자들에게 본때를 보여준다. 애니비아는 추운 북쪽에 터를 잡은 부족들을 이끌고 보호하며, 그들은 그녀를 희망의 상징이자 큰 변화의 징조로 숭배한다. 자신을 희생해도 이전 기억을 품은 채 새로운 내일로 부활할 것을 알기에 애니비아는 전력을 다해 싸운다.","blurb":"애니비아는 프렐요드를 지키기 위해 끊임없는 삶, 죽음과 부활의 순환을 인내하는 자애로운 날개 달린 영혼이다. 자비를 모르는 얼음과 매서운 바람에서 태어난 반신으로, 그녀는 이런 자연의 힘을 이용해 감히 그녀의 고향을 휘젓는 자들에게 본때를 보여준다. 애니비아는 추운 북쪽에 터를 잡은 부족들을 이끌고 보호하며, 그들은 그녀를 희망의 상징이자 큰 변화의 징조로 숭배한다. 자신을 희생해도 이전 기억을 품은 채 새로운 내일로 부활할 것을 알기에 애니비아는...","allytips":["- 동상과 냉기 폭발을 함께 사용하면 엄청난 파괴력을 낼 수 있습니다.","- 얼음 폭풍 스킬은 마나를 많이 소모합니다. 마나 최대치를 늘리는 아이템을 착용하거나 푸른 파수꾼을 처치하여 지속적인 마나 회복 효과를 얻도록 하십시오.","- 게임 초반에는 적 챔피언이 애니비아의 알을 깨기 어렵습니다. 이를 이용하여 공격적인 플레이로 우세를 점하십시오."],"enemytips":["- 애니비아가 공격로에 있을 때 협공하십시오. 여럿이서 함께 공격하면 손쉽게 애니비아의 알을 제거할 수 있습니다.","- 원거리형 챔피언을 플레이 중이라면 애니비아의 냉기 폭발을 좀 더 쉽게 회피할 수 있도록 충분한 거리를 유지하십시오.","- 애니비아가 공격로에 있을 때 공격하는 것이 좋습니다. 애니비아는 정글에서 저레벨 결정화 스킬로 이동로를 차단할 수 있습니다."],"tags":["Mage","Support"],"partype":"마나","info":{"attack":1,"defense":4,"magic":10,"difficulty":10},"stats":{"armor":21.22,"armorperlevel":4,"attackdamage":51.376,"attackdamageperlevel":3.2,"attackrange":600,"attackspeedoffset":0,"attackspeedperlevel":1.68,"crit":0,"critperlevel":0,"hp":480,"hpperlevel":82,"hpregen":5.574,"hpregenperlevel":0.55,"movespeed":325,"mp":396.04,"mpperlevel":50,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"냉기 폭발","description":"애니비아가 날개를 모아 얼음 구체를 소환한 뒤 발사하여 명중 당한 적들을 추위에 떨게 하고 피해를 입힙니다. 폭발 시 일정 반경 안에 있는 적에게 피해를 입히고 기절시킵니다.","sanitizedDescription":"애니비아가 날개를 모아 얼음 구체를 소환한 뒤 발사하여 명중 당한 적들을 추위에 떨게 하고 피해를 입힙니다. 폭발 시 일정 반경 안에 있는 적에게 피해를 입히고 기절시킵니다.","tooltip":"거대한 얼음 덩어리를 지정한 지역에 발사하여 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />사거리 끝에 다다르거나 애니비아가 다시 이 스킬을 사용할 경우 구체가 폭발하며 작은 지역에 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e4 }}초 동안 적을 기절시킵니다.<br /><br />냉기 폭발로 피해를 입은 적은 {{ e5 }}초 동안 {{ f1 }}% 둔화됩니다.","sanitizedTooltip":"거대한 얼음 덩어리를 지정한 지역에 발사하여 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 사거리 끝에 다다르거나 애니비아가 다시 이 스킬을 사용할 경우 구체가 폭발하며 작은 지역에 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e4 }}초 동안 적을 기절시킵니다. 냉기 폭발로 피해를 입은 적은 {{ e5 }}초 동안 {{ f1 }}% 둔화됩니다.","leveltip":{"label":["피해량","기절 시간","재사용 대기시간","마나 소모"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }} -> {{ e4NL }}","{{ cooldown }} -> {{ cooldownNL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"FlashFrost.png","sprite":"spell0.png","group":"spell","x":432,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,90,100,110,120],"costBurn":"80/90/100/110/120","cooldown":[12,11,10,9,8],"cooldownBurn":"12/11/10/9/8","effect":[null,[60,85,110,135,160],[13,12,11,10,9],[0,0,0,0,0],[1.1,1.2,1.3,1.4,1.5],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/85/110/135/160","13/12/11/10/9","0","1.1/1.2/1.3/1.4/1.5","3","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.4]},{"key":"a1","link":"spelldamage","coeff":[0.4]}],"range":[1075,1075,1075,1075,1075],"rangeBurn":"1075","key":"FlashFrost"},{"name":"결정화","description":"애니비아가 공기 중의 수분을 빙결시켜 지나갈 수 없는 얼음 벽을 만듭니다. 벽은 얼마 지나지 않아 녹아버립니다.","sanitizedDescription":"애니비아가 공기 중의 수분을 빙결시켜 지나갈 수 없는 얼음 벽을 만듭니다. 벽은 얼마 지나지 않아 녹아버립니다.","tooltip":"애니비아가 {{ e2 }} 너비의 지나갈 수 없는 얼음 벽을 만들어 적의 움직임을 제한합니다. 벽은 {{ e1 }}초 뒤 녹습니다.","sanitizedTooltip":"애니비아가 {{ e2 }} 너비의 지나갈 수 없는 얼음 벽을 만들어 적의 움직임을 제한합니다. 벽은 {{ e1 }}초 뒤 녹습니다.","leveltip":{"label":["너비"],"effect":["{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"Crystallize.png","sprite":"spell1.png","group":"spell","x":0,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[70,70,70,70,70],"costBurn":"70","cooldown":[17,17,17,17,17],"cooldownBurn":"17","effect":[null,[5,5,5,5,5],[400,500,600,700,800],[4,5,6,7,8],[120,120,120,120,120],[250,250,250,250,250],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","5","400/500/600/700/800","4/5/6/7/8","120","250","0","0","0","0","0"],"range":[1000,1000,1000,1000,1000],"rangeBurn":"1000","key":"Crystallize"},{"name":"동상","description":"애니비아가 날개를 퍼덕이며 적에게 얼음 바람을 일으켜 약간의 피해를 입힙니다. 최근 냉기 폭발로 인해 기절했거나 최대 크기에 도달한 얼음 폭풍에 적중당한 대상이 입는 피해는 2배로 증가합니다.","sanitizedDescription":"애니비아가 날개를 퍼덕이며 적에게 얼음 바람을 일으켜 약간의 피해를 입힙니다. 최근 냉기 폭발로 인해 기절했거나 최대 크기에 도달한 얼음 폭풍에 적중당한 대상이 입는 피해는 2배로 증가합니다.","tooltip":"애니비아가 목표 적에게 냉기의 바람을 날려 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다.<br /><br />대상이 애니비아에게 기절 당하거나 최대 크기에 도달한 얼음 폭풍에 피해를 입은 경우 동상 피해량이 두 배로 증가합니다.","sanitizedTooltip":"애니비아가 목표 적에게 냉기의 바람을 날려 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 대상이 애니비아에게 기절 당하거나 최대 크기에 도달한 얼음 폭풍에 피해를 입은 경우 동상 피해량이 두 배로 증가합니다.","leveltip":{"label":["피해량","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}"," {{ cost }} -> {{ costNL }}"]},"image":{"full":"Frostbite.png","sprite":"spell1.png","group":"spell","x":48,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,60,70,80,90],"costBurn":"50/60/70/80/90","cooldown":[4,4,4,4,4],"cooldownBurn":"4","effect":[null,[50,75,100,125,150],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","50/75/100/125/150","0","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.5]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"Frostbite"},{"name":"얼음 폭풍","description":"애니비아가 얼음의 비와 폭풍우를 소환하여 적에게 피해를 입히고 이동 속도를 늦춥니다.","sanitizedDescription":"애니비아가 얼음의 비와 폭풍우를 소환하여 적에게 피해를 입히고 이동 속도를 늦춥니다.","tooltip":"<span class=\"colorFF9900\">활성화: </span>초당 {{ e2 }}의 마나가 소모됩니다. <br /><br />애니비아가 {{ e7 }}초에 걸쳐 크기가 커지는 얼음의 폭풍우를 소환하여 적에게 초당 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 이동 속도를 {{ e4 }}% 늦춥니다. <br /><br />최대 크기 도달 시 대상의 이동 속도를 {{ f1 }}% 감소시키고 {{ e3 }}%의 피해를 입힙니다.","sanitizedTooltip":"활성화: 초당 {{ e2 }}의 마나가 소모됩니다. 애니비아가 {{ e7 }}초에 걸쳐 크기가 커지는 얼음의 폭풍우를 소환하여 적에게 초당 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 이동 속도를 {{ e4 }}% 늦춥니다. 최대 크기 도달 시 대상의 이동 속도를 {{ f1 }}% 감소시키고 {{ e3 }}%의 피해를 입힙니다.","leveltip":{"label":["초당 피해","추위로 인한 둔화","초당 마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"GlacialStorm.png","sprite":"spell1.png","group":"spell","x":96,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[75,75,75],"costBurn":"75","cooldown":[6,6,6],"cooldownBurn":"6","effect":[null,[40,60,80],[40,50,60],[300,300,300],[20,30,40],[0,0,0],[1,1,1],[1.5,1.5,1.5],[50,50,50],[800,800,800],[1000,1000,1000]],"effectBurn":["","40/60/80","40/50/60","300","20/30/40","0","1","1.5","50","800","1000"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.125]}],"range":[750,750,750],"rangeBurn":"750","key":"GlacialStorm"}],"passive":{"name":"환생","description":"애니비아는 죽을 때 알로 변합니다. 이 알이 6초 동안 깨지지 않으면 애니비아가 되살아납니다.","sanitizedDescription":"애니비아는 죽을 때 알로 변합니다. 이 알이 6초 동안 깨지지 않으면 애니비아가 되살아납니다.","image":{"full":"Anivia_P.png","sprite":"passive0.png","group":"passive","x":240,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Anivia","title":"AniviaARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3073,"count":1},{"id":1028,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3007,"count":1},{"id":3029,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3285,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Anivia","title":"AniviaCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3073,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3029,"count":1},{"id":3007,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3030,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Anivia","title":"AniviaFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3070,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3027,"count":1},{"id":3003,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3174,"count":1},{"id":3116,"count":1},{"id":3151,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Anivia","title":"AniviaKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":1028,"count":1},{"id":2003,"count":5}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3027,"count":1},{"id":3003,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3157,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3285,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Anivia","title":"AniviaSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3029,"count":1},{"id":3007,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3030,"count":1},{"id":3285,"count":1}]}]},{"champion":"Anivia","title":"AniviaSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3010,"count":1},{"id":3070,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3027,"count":1},{"id":3003,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3157,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3030,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Anivia","title":"AniviaTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":3070,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3003,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3090,"count":1},{"id":3135,"count":1},{"id":3030,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3285,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Anivia","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1027,"count":1},{"id":1028,"count":1},{"id":3010,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3151,"count":1},{"id":3027,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]}]},"Shen":{"id":98,"key":"Shen","name":"쉔","title":"황혼의 눈","image":{"full":"Shen.png","sprite":"champion3.png","group":"champion","x":288,"y":0,"w":48,"h":48},"skins":[{"id":98000,"name":"default","num":0},{"id":98001,"name":"얼어붙은 쉔","num":1},{"id":98002,"name":"황색자켓 쉔","num":2},{"id":98003,"name":"외과의사 쉔","num":3},{"id":98004,"name":"불의 축제 쉔","num":4},{"id":98005,"name":"무사 쉔","num":5},{"id":98006,"name":"TPA 쉔","num":6}],"lore":"쉔은 킨코우로 알려진 아이오니아 비밀결사단의 수장으로, 황혼의 눈으로서 활동하고 있다. 쉔은 감정, 편견, 아집으로부터 자유로운 정신을 유지하기 위해 노력하며, 영적 세계와 현실 세계 사이에서 감정에 흔들리지 않는 공명정대를 실현하기 위한 새로운 길을 걸어 간다. 두 세계 사이의 균형을 맞추는 임무를 맡은 쉔은 그 균형을 위협하는 자에게 강철검을 휘두르고 신비한 기운을 사용한다.","blurb":"쉔은 킨코우로 알려진 아이오니아 비밀결사단의 수장으로, 황혼의 눈으로서 활동하고 있다. 쉔은 감정, 편견, 아집으로부터 자유로운 정신을 유지하기 위해 노력하며, 영적 세계와 현실 세계 사이에서 감정에 흔들리지 않는 공명정대를 실현하기 위한 새로운 길을 걸어 간다. 두 세계 사이의 균형을 맞추는 임무를 맡은 쉔은 그 균형을 위협하는 자에게 강철검을 휘두르고 신비한 기운을 사용한다.","allytips":["- 아군 상황을 잘 살피고 있다가 순간이동으로 구해내세요.","- 장기전에선 기력 챔피언이 마나 챔피언보다 유리하다는 것을 잘 활용하세요."],"enemytips":["- 쉔의 도발을 피하고, 도발이 빗나가면 응징하세요.","- 쉔이 6레벨이 되면 맵 전역에 활용할 수 있는 궁극기를 주의해야 합니다. 전황을 빠르게 뒤집을 수 있으니까요."],"tags":["Tank"],"partype":"기력","info":{"attack":3,"defense":9,"magic":3,"difficulty":4},"stats":{"armor":34,"armorperlevel":3,"attackdamage":60,"attackdamageperlevel":3,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2,"crit":0,"critperlevel":0,"hp":540,"hpperlevel":85,"hpregen":8.5,"hpregenperlevel":0.75,"movespeed":340,"mp":400,"mpperlevel":0,"mpregen":50,"mpregenperlevel":0,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"황혼 강습","description":"쉔이 기의 검을 불러들여 공격해 대상의 최대 체력에 비례한 피해를 입힙니다. 기의 검이 적 챔피언과 충돌하면 이 공격이 크게 강화되며, 기의 검에 부딪힌 적들은 쉔으로부터 달아날 때 둔화됩니다.","sanitizedDescription":"쉔이 기의 검을 불러들여 공격해 대상의 최대 체력에 비례한 피해를 입힙니다. 기의 검이 적 챔피언과 충돌하면 이 공격이 크게 강화되며, 기의 검에 부딪힌 적들은 쉔으로부터 달아날 때 둔화됩니다.","tooltip":"쉔이 <span class=\"colorBB77FF\">기의 검</span>을 불러내 뽑습니다. 기의 검에 부딪히는 적들은 {{ e5 }}초 동안 쉔으로부터 멀어지려 할 때 {{ e4 }}% 둔화됩니다.<br /><br />쉔의 다음 기본 공격 {{ e3 }}회는 대상 최대 체력 {{ e2 }} <span class=\"color99FF99\">(+{{ charabilitypower*.01 }})</span>% + <scaleLevel>{{ f1 }}</scaleLevel>의 추가 마법 피해를 입힙니다. <span class=\"colorBB77FF\">기의 검</span>이 적 챔피언에게 부딪힌 경우, 강화된 공격은 {{ e6 }} <span class=\"color99FF99\">(+{{ charabilitypower2*.01 }})</span>% + <scaleLevel>{{ f2 }}</scaleLevel>의 추가 피해를 입히며 {{ e9 }}%의 추가 공격 속도가 적용됩니다.<br /><br /><rules>몬스터 상대로는 피해량이 {{ e1 }}% 증가합니다. (최대 피해량: {{ e7 }})</rules>","sanitizedTooltip":"쉔이 기의 검을 불러내 뽑습니다. 기의 검에 부딪히는 적들은 {{ e5 }}초 동안 쉔으로부터 멀어지려 할 때 {{ e4 }}% 둔화됩니다. 쉔의 다음 기본 공격 {{ e3 }}회는 대상 최대 체력 {{ e2 }} (+{{ charabilitypower*.01 }})% + {{ f1 }}의 추가 마법 피해를 입힙니다. 기의 검이 적 챔피언에게 부딪힌 경우, 강화된 공격은 {{ e6 }} (+{{ charabilitypower2*.01 }})% + {{ f2 }}의 추가 피해를 입히며 {{ e9 }}%의 추가 공격 속도가 적용됩니다. 몬스터 상대로는 피해량이 {{ e1 }}% 증가합니다. (최대 피해량: {{ e7 }})","leveltip":{"label":["최대 체력 비례 피해량 % (기본)","최대 체력 비례 피해량 % (강화)","기력","몬스터 대상 최대 피해량","재사용 대기시간"],"effect":["{{ e2 }}% -> {{ e2NL }}%","{{ e6 }}% -> {{ e6NL }}%","{{ cost }} -> {{ costNL }}","{{ e7 }} -> {{ e7NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ShenQ.png","sprite":"spell10.png","group":"spell","x":144,"y":0,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[140,130,120,110,100],"costBurn":"140/130/120/110/100","cooldown":[8,7.25,6.5,5.75,5],"cooldownBurn":"8/7.25/6.5/5.75/5","effect":[null,[100,100,100,100,100],[2,2.5,3,3.5,4],[3,3,3,3,3],[35,35,35,35,35],[2,2,2,2,2],[4,4.5,5,5.5,6],[75,100,125,150,175],[8,8,8,8,8],[50,50,50,50,50],[75,75,75,75,75]],"effectBurn":["","100","2/2.5/3/3.5/4","3","35","2","4/4.5/5/5.5/6","75/100/125/150/175","8","50","75"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"ShenQ"},{"name":"의지의 결계","description":"쉔이나 기의 검 근처 아군에 대한 공격이 차단됩니다.","sanitizedDescription":"쉔이나 기의 검 근처 아군에 대한 공격이 차단됩니다.","tooltip":"쉔의 <span class=\"colorBB77FF\">기의 검</span>이 {{ e1 }}초 동안 지속되는 보호 결계를 생성합니다. 쉔이나 결계 안의 아군 챔피언에 대한 기본 공격이 차단됩니다.<br /><br />결계 안에 보호할 아군 챔피언이 없으면 <span class=\"colorBB77FF\">기의 검</span>은 아군이 결계 안에 들어오거나 {{ e2 }}초가 지나기 전까지 활성화되지 않습니다.","sanitizedTooltip":"쉔의 기의 검이 {{ e1 }}초 동안 지속되는 보호 결계를 생성합니다. 쉔이나 결계 안의 아군 챔피언에 대한 기본 공격이 차단됩니다. 결계 안에 보호할 아군 챔피언이 없으면 기의 검은 아군이 결계 안에 들어오거나 {{ e2 }}초가 지나기 전까지 활성화되지 않습니다.","leveltip":{"label":["재사용 대기시간"],"effect":["{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ShenW.png","sprite":"spell10.png","group":"spell","x":192,"y":0,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[40,40,40,40,40],"costBurn":"40","cooldown":[18,16.5,15,13.5,11],"cooldownBurn":"18/16.5/15/13.5/11","effect":[null,[1.75,1.75,1.75,1.75,1.75],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.75","2","0","0","0","0","0","0","0","0"],"range":[400,400,400,400,400],"rangeBurn":"400","key":"ShenW"},{"name":"그림자 돌진","description":"쉔이 지정한 방향으로 돌진해, 경로상의 적들을 도발합니다.","sanitizedDescription":"쉔이 지정한 방향으로 돌진해, 경로상의 적들을 도발합니다.","tooltip":"<span class=\"colorFF9900\">지속 효과:</span> 그림자 돌진이나 황혼 강습으로 피해를 입히면 기력을 <span class=\"colorFFFFFF\">{{ f1 }}</span> 회복합니다.<br /><br /><span class=\"colorFF9900\">사용 효과:</span> 쉔이 지정한 방향으로 돌진해 경로상의 적 챔피언과 중립 몬스터에게 {{ e2 }} <span class=\"colorCC3300\">[+{{ f2 }}]</span>의 물리 피해를 입히고 {{ e1 }}초 동안 도발합니다.","sanitizedTooltip":"지속 효과: 그림자 돌진이나 황혼 강습으로 피해를 입히면 기력을 {{ f1 }} 회복합니다. 사용 효과: 쉔이 지정한 방향으로 돌진해 경로상의 적 챔피언과 중립 몬스터에게 {{ e2 }} [+{{ f2 }}]의 물리 피해를 입히고 {{ e1 }}초 동안 도발합니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ShenE.png","sprite":"spell10.png","group":"spell","x":240,"y":0,"w":48,"h":48},"resource":"기력 {{ cost }}","maxrank":5,"cost":[150,150,150,150,150],"costBurn":"150","cooldown":[18,16,14,12,10],"cooldownBurn":"18/16/14/12/10","effect":[null,[1.5,1.5,1.5,1.5,1.5],[50,75,100,125,150],[25,25,25,25,25],[300,300,300,300,300],[125,125,125,125,125],[150,150,150,150,150],[800,800,800,800,800],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","1.5","50/75/100/125/150","25","300","125","150","800","0","0","0"],"range":[600,600,600,600,600],"rangeBurn":"600","key":"ShenE"},{"name":"단결된 의지","description":"쉔이 공격 받는 아군을 포착하여 해당 위치로 순간 이동하며 아군에게 보호막을 쳐 줍니다.","sanitizedDescription":"쉔이 공격 받는 아군을 포착하여 해당 위치로 순간 이동하며 아군에게 보호막을 쳐 줍니다.","tooltip":"쉔이 아군 챔피언에게 대상이 잃은 체력에 비례해 최대 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> ~ {{ e8 }} <span class=\"color99FF99\">(+{{ f2 }})</span>의 피해를 흡수하는 보호막을 씌워줍니다. 보호막은 {{ e2 }}초 동안 유지됩니다. {{ f1 }}초 동안 정신을 집중한 후, 쉔과 <span class=\"colorBB77FF\">기의 검</span>이 해당 아군의 위치로 순간이동합니다.","sanitizedTooltip":"쉔이 아군 챔피언에게 대상이 잃은 체력에 비례해 최대 {{ e1 }} (+{{ a1 }}) ~ {{ e8 }} (+{{ f2 }})의 피해를 흡수하는 보호막을 씌워줍니다. 보호막은 {{ e2 }}초 동안 유지됩니다. {{ f1 }}초 동안 정신을 집중한 후, 쉔과 기의 검이 해당 아군의 위치로 순간이동합니다.","leveltip":{"label":["보호막 최소 흡수량","보호막 최대 흡수량","재사용 대기시간"],"effect":[" {{ e1 }} -> {{ e1NL }}","{{ e8 }} -> {{ e8NL }} "," {{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ShenR.png","sprite":"spell10.png","group":"spell","x":288,"y":0,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[200,180,160],"cooldownBurn":"200/180/160","effect":[null,[175,350,525],[5,5,5],[175,175,175],[2000,2000,2000],[600,600,600],[0.4,0.4,0.4],[1.6,1.6,1.6],[280,560,840],[0,0,0],[0,0,0]],"effectBurn":["","175/350/525","5","175","2000","600","0.4","1.6","280/560/840","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[1.35]}],"range":[35000,35000,35000],"rangeBurn":"35000","key":"ShenR"}],"passive":{"name":"기 보호막","description":"스킬을 시전하면 쉔이 보호막을 얻습니다. 다른 챔피언에게 스킬로 영향을 주면 이 효과의 재사용 대기시간이 감소합니다.","sanitizedDescription":"스킬을 시전하면 쉔이 보호막을 얻습니다. 다른 챔피언에게 스킬로 영향을 주면 이 효과의 재사용 대기시간이 감소합니다.","image":{"full":"Shen_Passive.png","sprite":"passive3.png","group":"passive","x":288,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Shen","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1054,"count":1}]},{"type":"beginner_Starter","items":[{"id":1054,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3068,"count":1},{"id":3091,"count":1},{"id":3065,"count":1},{"id":3083,"count":1}]}]},{"champion":"Shen","title":"ShenARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3748,"count":1},{"id":3022,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shen","title":"ShenCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3512,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shen","title":"ShenFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3211,"count":1},{"id":3068,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3047,"count":1},{"id":1401,"count":1},{"id":3211,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3078,"count":1},{"id":3091,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3065,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1}]}]},{"champion":"Shen","title":"ShenKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3748,"count":1},{"id":3022,"count":1},{"id":3109,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Shen","title":"ShenSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3512,"count":1}]}]},{"champion":"Shen","title":"ShenSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":3715,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3748,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3111,"count":1},{"id":1413,"count":1},{"id":3748,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3083,"count":1},{"id":3065,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3143,"count":1},{"id":3194,"count":1},{"id":3193,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Shen","title":"ShenTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3068,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3078,"count":1},{"id":3022,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3105,"count":1},{"id":3143,"count":1},{"id":3083,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"JarvanIV":{"id":59,"key":"JarvanIV","name":"자르반 4세","title":"데마시아의 귀감","image":{"full":"JarvanIV.png","sprite":"champion1.png","group":"champion","x":96,"y":48,"w":48,"h":48},"skins":[{"id":59000,"name":"default","num":0},{"id":59001,"name":"특공대 자르반 4세","num":1},{"id":59002,"name":"용 사냥꾼 자르반 4세","num":2},{"id":59003,"name":"흑기사 자르반 4세","num":3},{"id":59004,"name":"승리의 자르반 4세","num":4},{"id":59005,"name":"대장군 자르반 4세","num":5},{"id":59006,"name":"Fnatic 자르반 4세","num":6}],"lore":"라이트실드 왕조의 자손인 자르반 왕자는 데마시아의 왕좌를 물려받을 후계자이다. 데마시아의 덕목을 대표하는 귀감으로 자라난 자르반 왕자는 자신의 어깨에 짊어진 큰 기대와 전선에서 싸우고 싶다는 개인적 욕망 사이에서 갈등해야 했다. 자르반 왕자는 가공할만한 용기와 자신을 돌보지 않는 투지로 병사들을 고무시키며, 데마시아의 기치를 높이 들고 자신의 백성을 이끄는 미래의 지도자로서 진정한 힘을 뿜어낸다.","blurb":"라이트실드 왕조의 자손인 자르반 왕자는 데마시아의 왕좌를 물려받을 후계자이다. 데마시아의 덕목을 대표하는 귀감으로 자라난 자르반 왕자는 자신의 어깨에 짊어진 큰 기대와 전선에서 싸우고 싶다는 개인적 욕망 사이에서 갈등해야 했다. 자르반 왕자는 가공할만한 용기와 자신을 돌보지 않는 투지로 병사들을 고무시키며, 데마시아의 기치를 높이 들고 자신의 백성을 이끄는 미래의 지도자로서 진정한 힘을 뿜어낸다.","allytips":["- 용의 일격과 데마시아의 깃발을 연계하여 대격변으로 생성된 벽에서 벗어날 수 있습니다.","- 전투 초반에 여러 적 챔피언에게 기본 공격을 가하면 피해를 최대화할 수 있습니다.","- 적의 공격이 걱정된다면 데마시아의 깃발로 주변을 정찰하십시오."],"enemytips":["- 자르반 4세와 데마시아의 깃발 사이에 서지 않도록 주의하십시오. 그렇지 않으면 플레이어의 챔피언이 하늘로 날아갈 수 있습니다.","- 대격변의 지형은 성가신 방해물이지만 이동 관련 스킬로 벗어날 수 있습니다."],"tags":["Tank","Fighter"],"partype":"마나","info":{"attack":6,"defense":8,"magic":3,"difficulty":5},"stats":{"armor":38,"armorperlevel":3.6,"attackdamage":64,"attackdamageperlevel":3.4,"attackrange":175,"attackspeedoffset":-0.05,"attackspeedperlevel":2.5,"crit":0,"critperlevel":0,"hp":571.2,"hpperlevel":90,"hpregen":8.176,"hpregenperlevel":0.7,"movespeed":340,"mp":302.2,"mpperlevel":40,"mpregen":6.756,"mpregenperlevel":0.45,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"용의 일격","description":"자르반 4세가 창을 길게 늘여 창에 맞는 적에게 물리 피해를 입히고 방어력을 낮춥니다. 또한 이 스킬을 데마시아의 깃발에게 사용하면 자르반이 깃발 쪽으로 이동하며, 그 과정에서 부딪히는 적들을 모두 공중에 띄웁니다.","sanitizedDescription":"자르반 4세가 창을 길게 늘여 창에 맞는 적에게 물리 피해를 입히고 방어력을 낮춥니다. 또한 이 스킬을 데마시아의 깃발에게 사용하면 자르반이 깃발 쪽으로 이동하며, 그 과정에서 부딪히는 적들을 모두 공중에 띄웁니다.","tooltip":"자르반 4세가 창을 길게 늘여 창에 맞는 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e3 }}초 동안 방어력을 {{ e2 }}% 낮춥니다.<br /><br />창이 깃발에 맞으면 자르반 4세가 깃발이 있는 곳으로 이동하며 자르반과 부딪히는 적들을 모두 공중으로 날려 버립니다. 이 효과는 이동 불가 상태로도 발동시킬 수 있습니다.","sanitizedTooltip":"자르반 4세가 창을 길게 늘여 창에 맞는 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e3 }}초 동안 방어력을 {{ e2 }}% 낮춥니다. 창이 깃발에 맞으면 자르반 4세가 깃발이 있는 곳으로 이동하며 자르반과 부딪히는 적들을 모두 공중으로 날려 버립니다. 이 효과는 이동 불가 상태로도 발동시킬 수 있습니다.","leveltip":{"label":["피해량","방어력 감소 비율","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }}% -> {{ e2NL }}%","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"JarvanIVDragonStrike.png","sprite":"spell4.png","group":"spell","x":336,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[45,50,55,60,65],"costBurn":"45/50/55/60/65","cooldown":[10,9,8,7,6],"cooldownBurn":"10/9/8/7/6","effect":[null,[80,120,160,200,240],[10,14,18,22,26],[3,3,3,3,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","10/14/18/22/26","3","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.2]}],"range":[770,770,770,770,770],"rangeBurn":"770","key":"JarvanIVDragonStrike"},{"name":"황금빛 방패","description":"자르반 4세가 데마시아의 고대 왕들의 힘을 빌려 피해를 흡수하는 보호막을 소환하고 주변 적의 이동 속도를 늦춥니다.","sanitizedDescription":"자르반 4세가 데마시아의 고대 왕들의 힘을 빌려 피해를 흡수하는 보호막을 소환하고 주변 적의 이동 속도를 늦춥니다.","tooltip":"{{ e4 }}초 동안 {{ e1 }} (+ 근처에 있는 적 챔피언 한 명 당 <span class=\"colorCC3300\">{{ f1 }}</span> [최대 체력의 {{ e6 }}%])의 피해를 막아주는 방패를 만들고, {{ e5 }}초 동안 주변 적의 속도를 {{ e2 }}% 늦춥니다.","sanitizedTooltip":"{{ e4 }}초 동안 {{ e1 }} (+ 근처에 있는 적 챔피언 한 명 당 {{ f1 }} [최대 체력의 {{ e6 }}%])의 피해를 막아주는 방패를 만들고, {{ e5 }}초 동안 주변 적의 속도를 {{ e2 }}% 늦춥니다.","leveltip":{"label":["보호막","추가 보호막 체력 %","둔화"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e6 }}% -> {{ e6NL }}%","{{ e2 }}% -> {{ e2NL }}%"]},"image":{"full":"JarvanIVGoldenAegis.png","sprite":"spell4.png","group":"spell","x":384,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[12,12,12,12,12],"cooldownBurn":"12","effect":[null,[60,85,110,135,160],[15,20,25,30,35],[10,20,30,40,50],[5,5,5,5,5],[2,2,2,2,2],[2,2.25,2.5,2.75,3],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","60/85/110/135/160","15/20/25/30/35","10/20/30/40/50","5","2","2/2.25/2.5/2.75/3","0","0","0","0"],"range":[625,625,625,625,625],"rangeBurn":"625","key":"JarvanIVGoldenAegis"},{"name":"데마시아의 깃발","description":"데마시아의 긍지를 품은 자르반 4세의 공격 속도가 상승합니다. 데마시아의 깃발을 사용하면 자르반 4세가 데마시아의 깃발을 꽂아 마법 피해를 가하며, 주변 아군 챔피언의 공격 속도를 올려 줍니다.","sanitizedDescription":"데마시아의 긍지를 품은 자르반 4세의 공격 속도가 상승합니다. 데마시아의 깃발을 사용하면 자르반 4세가 데마시아의 깃발을 꽂아 마법 피해를 가하며, 주변 아군 챔피언의 공격 속도를 올려 줍니다.","tooltip":"<span class=\"colorFF9900\">기본 지속 효과:</span> 공격 속도가 {{ e3 }}% 증가합니다.<br /><br /><span class=\"colorFF9900\">사용 시:</span> 데마시아의 깃발을 근처에 던져 적들에게 {{ e2 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 깃발은 {{ e4 }}초 동안 유지되며 주변 아군 챔피언의 공격 속도를 {{ e3 }}% 올려줍니다.","sanitizedTooltip":"기본 지속 효과: 공격 속도가 {{ e3 }}% 증가합니다. 사용 시: 데마시아의 깃발을 근처에 던져 적들에게 {{ e2 }} (+{{ a1 }})의 마법 피해를 입힙니다. 깃발은 {{ e4 }}초 동안 유지되며 주변 아군 챔피언의 공격 속도를 {{ e3 }}% 올려줍니다.","leveltip":{"label":["피해량","기본 지속 효과 공격 속도","사용 시 공격 속도","재사용 대기시간"],"effect":["{{ e2 }} -> {{ e2NL }}"," {{ e3 }}% -> {{ e3NL }}%","{{ e3 }}% -> {{ e3NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JarvanIVDemacianStandard.png","sprite":"spell4.png","group":"spell","x":432,"y":96,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[55,55,55,55,55],"costBurn":"55","cooldown":[13,12.5,12,11.5,11],"cooldownBurn":"13/12.5/12/11.5/11","effect":[null,[10,13,16,19,22],[60,105,150,195,240],[15,17.5,20,22.5,25],[8,8,8,8,8],[0.15,0.025,0.025,0.025,0.025],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/13/16/19/22","60/105/150/195/240","15/17.5/20/22.5/25","8","0.15/0.025/0.025/0.025/0.025","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[860,860,860,860,860],"rangeBurn":"860","key":"JarvanIVDemacianStandard"},{"name":"대격변","description":"자르반 4세가 적을 향해 엄청난 기세로 뛰어들어 주변 지역을 투기장으로 만들어버립니다. 착지하는 순간 주위 적들에게 피해를 입힙니다.","sanitizedDescription":"자르반 4세가 적을 향해 엄청난 기세로 뛰어들어 주변 지역을 투기장으로 만들어버립니다. 착지하는 순간 주위 적들에게 피해를 입힙니다.","tooltip":"적 챔피언을 향해 용감하게 뛰어들어 근처의 적에게 {{ e1 }} <span class=\"colorFF8C00\">(+{{ a1 }})</span>의 물리 피해를 입히고 {{ e2 }}초 동안 지나갈 수 없는 벽으로 둘러 쌉니다.<br /><br />스킬을 다시 사용하면 벽을 무너뜨릴 수 있습니다.","sanitizedTooltip":"적 챔피언을 향해 용감하게 뛰어들어 근처의 적에게 {{ e1 }} (+{{ a1 }})의 물리 피해를 입히고 {{ e2 }}초 동안 지나갈 수 없는 벽으로 둘러 쌉니다. 스킬을 다시 사용하면 벽을 무너뜨릴 수 있습니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"JarvanIVCataclysm.png","sprite":"spell4.png","group":"spell","x":0,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,105,90],"cooldownBurn":"120/105/90","effect":[null,[200,325,450],[3.5,3.5,3.5],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","200/325/450","3.5","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"bonusattackdamage","coeff":[1.5]}],"range":[650,650,650],"rangeBurn":"650","key":"JarvanIVCataclysm"}],"passive":{"name":"전장의 군가","description":"자르반 4세의 첫 기본 공격은 적에게 추가 물리 피해를 줍니다. 이 효과에 당한 목표는 짧은 시간동안 이 효과로 인한 피해를 다시 받지 않습니다.","sanitizedDescription":"자르반 4세의 첫 기본 공격은 적에게 추가 물리 피해를 줍니다. 이 효과에 당한 목표는 짧은 시간동안 이 효과로 인한 피해를 다시 받지 않습니다.","image":{"full":"JarvanIV_MartialCadence.png","sprite":"passive1.png","group":"passive","x":96,"y":48,"w":48,"h":48}},"recommended":[{"champion":"JarvanIV","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1055,"count":1}]},{"type":"beginner_Starter","items":[{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1036,"count":1},{"id":3044,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3044,"count":1},{"id":3057,"count":1},{"id":3086,"count":1},{"id":3078,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3105,"count":1},{"id":3071,"count":1},{"id":3102,"count":1},{"id":3068,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3044,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3748,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2140,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3110,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3047,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2140,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3077,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3748,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3812,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3143,"count":1},{"id":3190,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3026,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":2033,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3077,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3071,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3026,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3748,"count":1},{"id":3742,"count":1},{"id":3026,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3193,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]},{"champion":"JarvanIV","title":"JarvanIVTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1055,"count":1},{"id":1001,"count":1},{"id":2003,"count":2}]},{"type":"early","recMath":false,"items":[{"id":3077,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3074,"count":1},{"id":3742,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3071,"count":1},{"id":3156,"count":1},{"id":3142,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3102,"count":1},{"id":3143,"count":1},{"id":3083,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":1055,"count":1},{"id":2003,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3133,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1400,"count":1},{"id":3111,"count":1},{"id":3071,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3074,"count":1},{"id":3142,"count":1},{"id":3156,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2140,"count":1}]}]}]},"Malzahar":{"id":90,"key":"Malzahar","name":"말자하","title":"공허의 예언자","image":{"full":"Malzahar.png","sprite":"champion2.png","group":"champion","x":336,"y":0,"w":48,"h":48},"skins":[{"id":90000,"name":"default","num":0},{"id":90001,"name":"술탄 말자하","num":1},{"id":90002,"name":"그림자 왕자 말자하","num":2},{"id":90003,"name":"램프의 요정 말자하","num":3},{"id":90004,"name":"지배자 말자하","num":4},{"id":90005,"name":"눈싸움 달인 말자하","num":5},{"id":90006,"name":"중간보스 말자하","num":6}],"lore":"말자하는 모든 생명의 통합에 대한 믿음이 깊은 광신도로, 새롭게 부각된 공허가 룬테라의 구원으로 향하는 입구라고 생각한다. 슈리마의 사막 황무지에서 말자하는 세상에 마음을 열었고, 귓가에 들려오는 속삭임이 그를 이케시아로 이끌었다. 옛 이케시아의 폐허 가운데에서 말자하는 공허의 칠흑같은 심장부를 건너다보았다. 그곳에는 변한 말자하의 모습이 있었다. 그건 힘을 얻은 목자였다. 다른 이들을 자신의 뜻에 동참시킬 수 있는 힘이었다. 그게 아니라면, 심연에 사는 공허충을 풀어놓을 힘이었다.","blurb":"말자하는 모든 생명의 통합에 대한 믿음이 깊은 광신도로, 새롭게 부각된 공허가 룬테라의 구원으로 향하는 입구라고 생각한다. 슈리마의 사막 황무지에서 말자하는 세상에 마음을 열었고, 귓가에 들려오는 속삭임이 그를 이케시아로 이끌었다. 옛 이케시아의 폐허 가운데에서 말자하는 공허의 칠흑같은 심장부를 건너다보았다. 그곳에는 변한 말자하의 모습이 있었다. 그건 힘을 얻은 목자였다. 다른 이들을 자신의 뜻에 동참시킬 수 있는 힘이었다. 그게 아니라면, 심연에...","allytips":["- 공허충이 공격하거나 처치할 수 있는 적이 근처에 있을 때 공허의 무리를 사용하세요.","- 공허의 부름과 황천의 손아귀를 사용하면 적에게 걸린 재앙의 환상 지속시간이 초기화됩니다.","- 공격로에서 피해를 입지 않으면 공허 태세의 지속시간이 길어져 굉장히 안전하게 플레이할 수 있습니다."],"enemytips":["- 말자하가 재앙의 환상에 걸린 대상에게 스킬을 적중시키면 환상이 다시 시작됩니다.","- 재앙의 환상에 걸린 미니언들에게 가까이 가지 마십시오. 이들이 언제 죽어 재앙의 환상을 플레이어에게 옮길지 알 수 없기 때문입니다.","- 공허의 무리가 불어난 말자하는 매우 위험한 상대입니다."],"tags":["Mage","Assassin"],"partype":"마나","info":{"attack":2,"defense":2,"magic":9,"difficulty":6},"stats":{"armor":18,"armorperlevel":3.5,"attackdamage":55,"attackdamageperlevel":3,"attackrange":500,"attackspeedoffset":0,"attackspeedperlevel":1.5,"crit":0,"critperlevel":0,"hp":537,"hpperlevel":87,"hpregen":6,"hpregenperlevel":0.6,"movespeed":335,"mp":300,"mpperlevel":55,"mpregen":6,"mpregenperlevel":0.8,"spellblock":30,"spellblockperlevel":0.5},"spells":[{"name":"공허의 부름","description":"말자하가 공허로 이어지는 두 개의 문을 엽니다. 얼마 뒤 문에서 투사체가 발사되어 적에게 마법 피해를 입히고 침묵 효과를 부여합니다.","sanitizedDescription":"말자하가 공허로 이어지는 두 개의 문을 엽니다. 얼마 뒤 문에서 투사체가 발사되어 적에게 마법 피해를 입히고 침묵 효과를 부여합니다.","tooltip":"말자하가 공허로 이어지는 두 개의 문을 엽니다. 두 개의 문 사이로 공허의 파동이 발사되어 적에게 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입히고 {{ e2 }}초 동안 침묵시킵니다.","sanitizedTooltip":"말자하가 공허로 이어지는 두 개의 문을 엽니다. 두 개의 문 사이로 공허의 파동이 발사되어 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e2 }}초 동안 침묵시킵니다.","leveltip":{"label":["피해량","침묵 지속시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}"]},"image":{"full":"MalzaharQ.png","sprite":"spell7.png","group":"spell","x":336,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[80,80,80,80,80],"costBurn":"80","cooldown":[6,6,6,6,6],"cooldownBurn":"6","effect":[null,[70,105,140,175,210],[1,1.25,1.5,1.75,2],[0.4,0.4,0.4,0.4,0.4],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","70/105/140/175/210","1/1.25/1.5/1.75/2","0.4","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[900,900,900,900,900],"rangeBurn":"900","key":"MalzaharQ"},{"name":"공허의 무리","description":"말자하가 공허충을 소환해 주변 적을 공격하게 합니다.","sanitizedDescription":"말자하가 공허충을 소환해 주변 적을 공격하게 합니다.","tooltip":"<span class=\"colorFF8C00\">기본 지속 효과:</span> 말자하가 다른 스킬을 사용하면 공허충 증식 효과를 받아 공허의 무리로 소환하는 공허충의 수가 최대 {{ e6 }}마리까지 추가됩니다.<br /><br /><span class=\"colorFF8C00\">사용 시:</span> 공허충을 한 마리 또는 그 이상 소환합니다. 공허충은 {{ e1 }}초 동안 유지되며 공격 시마다 {{ e2 }} <scaleAP>(+{{ a1 }})</scaleAP> <scaleAD>(+{{ a2 }})</scaleAD>의 추가 마법 피해를 입힙니다.<br /><br /><span class=\"color919191\"><i>공허충은 재앙의 환상 효과가 적용된 공격로 미니언에게 {{ e3 }}%의 피해를 입힙니다.<br />공허충은 에픽 몬스터에게 {{ e4 }}%의 피해를 입힙니다.</i></span>","sanitizedTooltip":"기본 지속 효과: 말자하가 다른 스킬을 사용하면 공허충 증식 효과를 받아 공허의 무리로 소환하는 공허충의 수가 최대 {{ e6 }}마리까지 추가됩니다. 사용 시: 공허충을 한 마리 또는 그 이상 소환합니다. 공허충은 {{ e1 }}초 동안 유지되며 공격 시마다 {{ e2 }} (+{{ a1 }}) (+{{ a2 }})의 추가 마법 피해를 입힙니다. 공허충은 재앙의 환상 효과가 적용된 공격로 미니언에게 {{ e3 }}%의 피해를 입힙니다. 공허충은 에픽 몬스터에게 {{ e4 }}%의 피해를 입힙니다.","leveltip":{"label":["공허충 추가 피해량","공허충 지속시간","소모값"],"effect":["{{ e2 }} -> {{ e2NL }}","{{ e1 }} -> {{ e1NL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"MalzaharW.png","sprite":"spell7.png","group":"spell","x":384,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[40,45,50,55,60],"costBurn":"40/45/50/55/60","cooldown":[8,8,8,8,8],"cooldownBurn":"8","effect":[null,[8,8,9,9,10],[12,14,16,18,20],[300,300,300,300,300],[50,50,50,50,50],[25000,25000,25000,25000,25000],[2,2,2,2,2],[0.5,0.5,0.5,0.5,0.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","8/8/9/9/10","12/14/16/18/20","300","50","25000","2","0.5","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.2]},{"key":"a2","link":"bonusattackdamage","coeff":[0.4]}],"range":[150,150,150,150,150],"rangeBurn":"150","key":"MalzaharW"},{"name":"재앙의 환상","description":"말자하가 대상의 머릿속에 최후의 광경을 보여주며 지속적으로 피해를 입힙니다. 말자하가 대상에게 다른 스킬을 사용하면 환상의 지속시간이 초기화됩니다.<br><br>이 동안 대상이 쓰러지면 환상은 주변 적에게 옮겨가고, 말자하는 마나를 획득합니다. 말자하의 공허충은 환상으로 오염된 대상에게 몰려갑니다.","sanitizedDescription":"말자하가 대상의 머릿속에 최후의 광경을 보여주며 지속적으로 피해를 입힙니다. 말자하가 대상에게 다른 스킬을 사용하면 환상의 지속시간이 초기화됩니다. 이 동안 대상이 쓰러지면 환상은 주변 적에게 옮겨가고, 말자하는 마나를 획득합니다. 말자하의 공허충은 환상으로 오염된 대상에게 몰려갑니다.","tooltip":"{{ e3 }}초 동안 하나의 적 대상에게 {{ e1 }} <scaleAP>(+{{ a1 }})</scaleAP>의 마법 피해를 입힙니다. 이 동안 대상에게 공허의 부름이나 황천의 손아귀를 사용하면 환상의 지속시간이 초기화됩니다.<br /><br />대상이 죽으면 말자하는 <scaleMana>{{ f1 }}</scaleMana>의 마나를 얻고 (최대 마나의 {{ e5 }}%), 환상은 가장 가까이 있는 적에게 옮겨갑니다.","sanitizedTooltip":"{{ e3 }}초 동안 하나의 적 대상에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 이 동안 대상에게 공허의 부름이나 황천의 손아귀를 사용하면 환상의 지속시간이 초기화됩니다. 대상이 죽으면 말자하는 {{ f1 }}의 마나를 얻고 (최대 마나의 {{ e5 }}%), 환상은 가장 가까이 있는 적에게 옮겨갑니다.","leveltip":{"label":["기본 피해량","재사용 대기시간","소모값"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"MalzaharE.png","sprite":"spell7.png","group":"spell","x":432,"y":0,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,70,80,90,100],"costBurn":"60/70/80/90/100","cooldown":[15,13,11,9,7],"cooldownBurn":"15/13/11/9/7","effect":[null,[80,115,150,185,220],[8,8,8,8,8],[4,4,4,4,4],[8,8,8,8,8],[2,2,2,2,2],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/115/150/185/220","8","4","8","2","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.8]}],"range":[650,650,650,650,650],"rangeBurn":"650","key":"MalzaharE"},{"name":"황천의 손아귀","description":"말자하가 공허의 정수를 쏟아부어 적 챔피언을 제압하고 지대를 생성해 내부의 적에게 피해를 입힙니다.","sanitizedDescription":"말자하가 공허의 정수를 쏟아부어 적 챔피언을 제압하고 지대를 생성해 내부의 적에게 피해를 입힙니다.","tooltip":"말자하가 대상 챔피언을 제압해 {{ e4 }}초 동안 {{ e7 }} <scaleAP>(+{{ a2 }})</scaleAP>의 마법 피해를 입힙니다. 대상 주변에 생성되는 황천의 지대는 {{ e3 }}초 동안 유지되며 근처의 적은 매 초 최대 체력의 {{ e1 }}% <scaleAP>(+{{ a1 }}%)</scaleAP>에 해당하는 마법 피해를 입습니다.","sanitizedTooltip":"말자하가 대상 챔피언을 제압해 {{ e4 }}초 동안 {{ e7 }} (+{{ a2 }})의 마법 피해를 입힙니다. 대상 주변에 생성되는 황천의 지대는 {{ e3 }}초 동안 유지되며 근처의 적은 매 초 최대 체력의 {{ e1 }}% (+{{ a1 }}%)에 해당하는 마법 피해를 입습니다.","leveltip":{"label":["황천의 손아귀 피해량","황천의 지대 피해량","재사용 대기시간"],"effect":["{{ e7 }} -> {{ e7NL }}","{{ e1 }}% -> {{ e1NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"MalzaharR.png","sprite":"spell7.png","group":"spell","x":0,"y":48,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[2,3,4],[120,100,80],[5,5,5],[2.5,2.5,2.5],[120,120,120],[10,10,10],[125,200,275],[1250,1250,1250],[0,0,0],[0,0,0]],"effectBurn":["","2/3/4","120/100/80","5","2.5","120","10","125/200/275","1250","0","0"],"vars":[{"key":"a2","link":"spelldamage","coeff":[0.8]},{"key":"a1","link":"spelldamage","coeff":[0.005]}],"range":[700,700,700],"rangeBurn":"700","key":"MalzaharR"}],"passive":{"name":"공허 태세","description":"일정 시간 동안 군중 제어기에 적중당하거나 피해를 입지 않으면 받는 피해량이 큰 폭으로 감소하고 군중 제어기에 면역이 됩니다. 이 효과는 피해를 입거나 군중 제어기에 적중당하면 잠시 후 사라집니다.<br><br>공격로 미니언이 피해를 입히는 경우에는 적용되지 않습니다.</mainText>","sanitizedDescription":"일정 시간 동안 군중 제어기에 적중당하거나 피해를 입지 않으면 받는 피해량이 큰 폭으로 감소하고 군중 제어기에 면역이 됩니다. 이 효과는 피해를 입거나 군중 제어기에 적중당하면 잠시 후 사라집니다. 공격로 미니언이 피해를 입히는 경우에는 적용되지 않습니다.","image":{"full":"Malzahar_Passive.png","sprite":"passive2.png","group":"passive","x":336,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Malzahar","title":"MalzaharARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3029,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Malzahar","title":"MalzaharCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Malzahar","title":"MalzaharKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3158,"count":1},{"id":3116,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3151,"count":1},{"id":3089,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2033,"count":1},{"id":2139,"count":1}]}]},{"champion":"Malzahar","title":"MalzaharSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]}]},{"champion":"Malzahar","title":"MalzaharSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3108,"count":1},{"id":3802,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":1001,"count":1},{"id":3715,"count":1},{"id":3113,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3165,"count":1},{"id":3116,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3158,"count":1},{"id":1414,"count":1},{"id":3116,"count":1}]},{"type":"standard","recMath":false,"items":[{"id":3089,"count":1},{"id":3135,"count":1},{"id":3151,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3157,"count":1},{"id":3001,"count":1},{"id":3102,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Malzahar","title":"MalzaharTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":1056,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3151,"count":1},{"id":3116,"count":1},{"id":3020,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3135,"count":1},{"id":3285,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3001,"count":1},{"id":3090,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]}]},"Zac":{"id":154,"key":"Zac","name":"자크","title":"비밀 병기","image":{"full":"Zac.png","sprite":"champion4.png","group":"champion","x":144,"y":48,"w":48,"h":48},"skins":[{"id":154000,"name":"default","num":0},{"id":154001,"name":"특수 병기 자크","num":1},{"id":154002,"name":"수영장 파티 자크","num":2},{"id":154006,"name":"SKT T1 자크","num":6}],"lore":"자크는 화학공학 지층을 따라 흐른 독성물질이 자운의 지하동굴 깊은 곳에 위치한 웅덩이에 모여 만들어진 생명체이다. 이처럼 변변치 못한 태생에도 불구하고 자크는 원시적인 진흙의 상태에서 지성을 갖춘 존재로 성장했다. 그는 자운의 배관 속에 살면서 도움이 필요한 이들을 돕거나 자운의 망가진 기반시설을 재건하기 위해 이따금 모습을 드러낸다.","blurb":"자크는 화학공학 지층을 따라 흐른 독성물질이 자운의 지하동굴 깊은 곳에 위치한 웅덩이에 모여 만들어진 생명체이다. 이처럼 변변치 못한 태생에도 불구하고 자크는 원시적인 진흙의 상태에서 지성을 갖춘 존재로 성장했다. 그는 자운의 배관 속에 살면서 도움이 필요한 이들을 돕거나 자운의 망가진 기반시설을 재건하기 위해 이따금 모습을 드러낸다.","allytips":["- 전장에서 살아남으려면 반드시 떨어져나간 조각을 흡수해야 합니다.","- 세포 분열을 사용할 수 있을 때는 적 팀이 갈라진 몸 조각을 처치하기 어려운 곳으로 가서 죽는 게 유리합니다.","- 적이 대응할 틈이 없도록, 새총 발사는 전장의 안개 속에 숨어서 충전하세요."],"enemytips":["- 자크는 몸에서 떨어져나간 조각을 흡수해 체력을 회복합니다. 이 조각을 밟아 으깨세요.","- 자크가 죽었을 때 갈라져나간 조각들을 각각 처치하여 부활하지 못하게 막으세요.","- 자크가 새총 발사를 충전 중일 때는 침묵, 기절, 속박, 띄우기로 끊을 수 있습니다."],"tags":["Tank","Fighter"],"partype":"없음","info":{"attack":3,"defense":7,"magic":7,"difficulty":8},"stats":{"armor":33,"armorperlevel":3.5,"attackdamage":60,"attackdamageperlevel":3.4,"attackrange":175,"attackspeedoffset":-0.02,"attackspeedperlevel":1.6,"crit":0,"critperlevel":0,"hp":615,"hpperlevel":95,"hpregen":8,"hpregenperlevel":0.5,"movespeed":340,"mp":0,"mpperlevel":0,"mpregen":0,"mpregenperlevel":0,"spellblock":32,"spellblockperlevel":1.25},"spells":[{"name":"탄성 주먹","description":"자크가 팔을 쭉 뻗어 적을 붙잡습니다. 다른 적을 공격하면 둘을 서로에게 던져 충돌하게 합니다.","sanitizedDescription":"자크가 팔을 쭉 뻗어 적을 붙잡습니다. 다른 적을 공격하면 둘을 서로에게 던져 충돌하게 합니다.","tooltip":"자크가 팔을 뻗어 처음 맞힌 적을 붙잡고 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorCC3300\">(+{{ f2 }})</span>의 마법 피해를 입히며 잠깐 동안 둔화시킵니다. 자크의 다음 기본 공격은 원거리 펀치로 바뀌어 첫 번째 공격과 똑같은 마법 피해와 둔화 효과를 입힙니다.<br /><br />자크가 다른 대상을 공격하면 둘을 서로에게 집어던져 충돌 시 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span> <span class=\"colorCC3300\">(+{{ f2 }})</span>의 광역 마법 피해를 입힙니다.</span>","sanitizedTooltip":"자크가 팔을 뻗어 처음 맞힌 적을 붙잡고 {{ e1 }} (+{{ a1 }}) (+{{ f2 }})의 마법 피해를 입히며 잠깐 동안 둔화시킵니다. 자크의 다음 기본 공격은 원거리 펀치로 바뀌어 첫 번째 공격과 똑같은 마법 피해와 둔화 효과를 입힙니다. 자크가 다른 대상을 공격하면 둘을 서로에게 집어던져 충돌 시 {{ e1 }} (+{{ a1 }}) (+{{ f2 }})의 광역 마법 피해를 입힙니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZacQ.png","sprite":"spell13.png","group":"spell","x":48,"y":144,"w":48,"h":48},"resource":"현재 체력의 {{ e2 }}% 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":"% 소모","costBurn":"0","cooldown":[13,12,11,10,9],"cooldownBurn":"13/12/11/10/9","effect":[null,[30,40,50,60,70],[8,8,8,8,8],[800,800,800,800,800],[-0.6,-0.6,-0.6,-0.6,-0.6],[0.5,0.5,0.5,0.5,0.5],[2.5,2.5,2.5,2.5,2.5],[1000,1000,1000,1000,1000],[700,700,700,700,700],[300,300,300,300,300],[300,300,300,300,300]],"effectBurn":["","30/40/50/60/70","8","800","-0.6","0.5","2.5","1000","700","300","300"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]},{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[800,800,800,800,800],"rangeBurn":"800","key":"ZacQ"},{"name":"불안정 물질","description":"자크의 몸이 터져서 주변 적들에게 피해를 입힙니다.","sanitizedDescription":"자크의 몸이 터져서 주변 적들에게 피해를 입힙니다.","tooltip":"자크의 몸이 터져서 주위에 있는 적 모두에게 {{ e1 }}의 마법 피해 + 대상의 최대 체력의 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span>%의 마법 피해를 입힙니다.<br /><br /><span class=\"color3ca126\">조각</span>을 흡수하면 불안정 물질의 재사용 대기시간이 {{ e4 }}초 감소합니다.<br /><br /><span class=\"size16 color8C8C8C\">미니언과 몬스터의 경우 최대 체력 비례 피해량은 최대 {{ e5 }}까지만 입힐 수 있습니다.</span></span>","sanitizedTooltip":"자크의 몸이 터져서 주위에 있는 적 모두에게 {{ e1 }}의 마법 피해 + 대상의 최대 체력의 {{ e3 }} (+{{ a1 }})%의 마법 피해를 입힙니다. 조각을 흡수하면 불안정 물질의 재사용 대기시간이 {{ e4 }}초 감소합니다. 미니언과 몬스터의 경우 최대 체력 비례 피해량은 최대 {{ e5 }}까지만 입힐 수 있습니다.","leveltip":{"label":["기본 피해량","최대 체력 비례 피해량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }}% -> {{ e3NL }}%"]},"image":{"full":"ZacW.png","sprite":"spell13.png","group":"spell","x":96,"y":144,"w":48,"h":48},"resource":"현재 체력의 {{ e2 }}% 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":"% 소모","costBurn":"0","cooldown":[5,5,5,5,5],"cooldownBurn":"5","effect":[null,[15,30,45,60,75],[4,4,4,4,4],[4,5,6,7,8],[1,1,1,1,1],[200,200,200,200,200],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","15/30/45/60/75","4","4/5/6/7/8","1","200","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.02]}],"range":[350,350,350,350,350],"rangeBurn":"350","key":"ZacW"},{"name":"새총 발사","description":"자크가 지면에 두 팔을 붙이고 뒤로 늘어난 다음, 전방으로 몸을 날립니다.","sanitizedDescription":"자크가 지면에 두 팔을 붙이고 뒤로 늘어난 다음, 전방으로 몸을 날립니다.","tooltip":"<span class=\"colorFF9900\">첫 번째 사용 시:</span> 자크가 마우스 커서 방향을 바라본 채 {{ e4 }}초 동안 힘을 모읍니다.<br /><br /><span class=\"colorFF9900\">두 번째 사용 시:</span> 자크가 지정한 위치로 날아갑니다. 힘을 모은 시간에 비례해 {{ f2 }} ~ {{ f3 }}초 동안 부딪친 적 모두를 뒤로 밀어내며 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입힙니다. 적 챔피언을 하나 맞힐 때마다 <span class=\"color3ca126\">조각</span>이 하나씩 생성됩니다.<br /><br /><span class=\"size16 color8C8C8C\">이동 시 스킬이 취소되며 재사용 대기시간과 소모값이 절반만큼 회복됩니다.</span>","sanitizedTooltip":"첫 번째 사용 시: 자크가 마우스 커서 방향을 바라본 채 {{ e4 }}초 동안 힘을 모읍니다. 두 번째 사용 시: 자크가 지정한 위치로 날아갑니다. 힘을 모은 시간에 비례해 {{ f2 }} ~ {{ f3 }}초 동안 부딪친 적 모두를 뒤로 밀어내며 {{ e1 }} (+{{ a1 }})의 마법 피해를 입힙니다. 적 챔피언을 하나 맞힐 때마다 조각이 하나씩 생성됩니다. 이동 시 스킬이 취소되며 재사용 대기시간과 소모값이 절반만큼 회복됩니다.","leveltip":{"label":["피해량","사거리","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZacE.png","sprite":"spell13.png","group":"spell","x":144,"y":144,"w":48,"h":48},"resource":"현재 체력의 {{ e2 }}% 소모","maxrank":5,"cost":[0,0,0,0,0],"costType":"% 소모","costBurn":"0","cooldown":[24,21,18,15,12],"cooldownBurn":"24/21/18/15/12","effect":[null,[60,110,160,210,260],[4,4,4,4,4],[1200,1350,1500,1650,1800],[0.9,1,1.1,1.2,1.3],[0.5,0.5,0.5,0.5,0.5],[500,500,500,500,500],[1350,1350,1350,1350,1350],[0.6,0.6,0.6,0.6,0.6],[265,265,265,265,265],[1,1,1,1,1]],"effectBurn":["","60/110/160/210/260","4","1200/1350/1500/1650/1800","0.9/1/1.1/1.2/1.3","0.5","500","1350","0.6","265","1"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[300,300,300,300,300],"rangeBurn":"300","key":"ZacE"},{"name":"바운스!","description":"자크가 납작해지며 군중 제어 스킬에 면역됩니다. 자크 몸 위에 선 적은 모두 둔화됩니다. 잠시 후 스킬을 다시 사용하면 몸 위에 있던 적을 모두 감싸 지정한 위치로 날아갑니다.","sanitizedDescription":"자크가 납작해지며 군중 제어 스킬에 면역됩니다. 자크 몸 위에 선 적은 모두 둔화됩니다. 잠시 후 스킬을 다시 사용하면 몸 위에 있던 적을 모두 감싸 지정한 위치로 날아갑니다.","tooltip":"<span class=\"colorFF9900\">첫 번째 사용 시: </span>자크가 바닥으로 퍼지며 충전을 시작합니다. 이때 자크는 {{ e5 }}초 동안 군중 제어 스킬에 면역되고, 자크의 몸 위에 선 적은 {{ e4 }}% 둔화됩니다.<br /><br /><span class=\"colorFF9900\">두 번째 사용 시: </span>{{ f1 }}초 이상 충전 후 스킬을 다시 사용하면 위에 있는 적을 감싼 채 지정한 위치로 날아갑니다. 착지 시 주변의 적은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 잠깐 동안 둔화됩니다.<br /><br />완전히 충전하기 전에 스킬을 다시 사용하면 즉시 근처의 적을 뒤로 밀어냅니다.</span></span>","sanitizedTooltip":"첫 번째 사용 시: 자크가 바닥으로 퍼지며 충전을 시작합니다. 이때 자크는 {{ e5 }}초 동안 군중 제어 스킬에 면역되고, 자크의 몸 위에 선 적은 {{ e4 }}% 둔화됩니다. 두 번째 사용 시: {{ f1 }}초 이상 충전 후 스킬을 다시 사용하면 위에 있는 적을 감싼 채 지정한 위치로 날아갑니다. 착지 시 주변의 적은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 잠깐 동안 둔화됩니다. 완전히 충전하기 전에 스킬을 다시 사용하면 즉시 근처의 적을 뒤로 밀어냅니다.","leveltip":{"label":["피해량","사거리","둔화 %","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e3 }} -> {{ e3NL }}","{{ e4 }}% -> {{ e4NL }}%","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"ZacR.png","sprite":"spell13.png","group":"spell","x":192,"y":144,"w":48,"h":48},"resource":"소모값 없음","maxrank":3,"cost":[0,0,0],"costType":"소모값 없음","costBurn":"0","cooldown":[130,115,100],"cooldownBurn":"130/115/100","effect":[null,[150,250,350],[1.1,1.1,1.1],[700,850,1000],[30,40,50],[2.5,2.5,2.5],[275,275,275],[300,300,300],[1,1,1],[0.25,0.25,0.25],[0.1,0.1,0.1]],"effectBurn":["","150/250/350","1.1","700/850/1000","30/40/50","2.5","275","300","1","0.25","0.1"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[300,300,300],"rangeBurn":"300","key":"ZacR"}],"passive":{"name":"세포 분열","description":"자크는 스킬로 적을 맞힐 때마다 몸에서 조각이 떨어져 나갑니다. 이 조각들을 다시 흡수하면 체력을 회복할 수 있습니다. 자크는 치명상을 입으면 4조각으로 갈라졌다가 다시 합쳐지려고 모입니다. 몸 조각 중 하나라도 생존할 경우, 살아남은 조각의 체력에 비례한 체력을 가지고 부활합니다. 각각의 조각은 자크의 최대 체력, 방어력과 마법 저항력의 일부를 보유합니다. 이 스킬의 재사용 대기시간은 5분입니다.","sanitizedDescription":"자크는 스킬로 적을 맞힐 때마다 몸에서 조각이 떨어져 나갑니다. 이 조각들을 다시 흡수하면 체력을 회복할 수 있습니다. 자크는 치명상을 입으면 4조각으로 갈라졌다가 다시 합쳐지려고 모입니다. 몸 조각 중 하나라도 생존할 경우, 살아남은 조각의 체력에 비례한 체력을 가지고 부활합니다. 각각의 조각은 자크의 최대 체력, 방어력과 마법 저항력의 일부를 보유합니다. 이 스킬의 재사용 대기시간은 5분입니다.","image":{"full":"ZacPassive.png","sprite":"passive4.png","group":"passive","x":144,"y":48,"w":48,"h":48}},"recommended":[{"champion":"Zac","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","blocks":[{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_starter","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"beginner_advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":3067,"count":1},{"id":3211,"count":1}]},{"type":"beginner_movementspeed","recMath":true,"items":[{"id":1001,"count":1},{"id":1029,"count":1},{"id":3047,"count":1}]},{"type":"beginner_legendaryitem","recMath":true,"items":[{"id":3065,"count":1}]},{"type":"beginner_morelegendaryitems","recMath":false,"items":[{"id":3068,"count":1},{"id":3001,"count":1},{"id":3742,"count":1}]}]},{"champion":"Zac","title":"ZacARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":2051,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3065,"count":1},{"id":3190,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3001,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Zac","title":"ZacCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3742,"count":1},{"id":3026,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2138,"count":1}]}]},{"champion":"Zac","title":"ZacFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3047,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3742,"count":1},{"id":3102,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":3340,"count":1},{"id":2003,"count":3}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3711,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1409,"count":1},{"id":3047,"count":1},{"id":3742,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3065,"count":1},{"id":3102,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3800,"count":1},{"id":3151,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2138,"count":1}]}]},{"champion":"Zac","title":"ZacKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":1001,"count":1},{"id":2051,"count":1},{"id":2031,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3111,"count":1},{"id":3065,"count":1},{"id":3190,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3068,"count":1},{"id":3001,"count":1},{"id":3151,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3083,"count":1},{"id":3075,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1},{"id":2033,"count":1}]}]},{"champion":"Zac","title":"ZacSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3001,"count":1},{"id":3742,"count":1},{"id":3026,"count":1}]}]},{"champion":"Zac","title":"ZacSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":1},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":1001,"count":1},{"id":3751,"count":1},{"id":1011,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3158,"count":1},{"id":3068,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3194,"count":1},{"id":3742,"count":1},{"id":3083,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2031,"count":1},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3158,"count":1},{"id":3065,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3190,"count":1},{"id":3075,"count":1},{"id":3193,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3194,"count":1},{"id":3742,"count":1},{"id":3083,"count":1},{"id":3001,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]},{"champion":"Zac","title":"ZacTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1054,"count":1},{"id":2003,"count":2},{"id":1001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2031,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3751,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3751,"count":1},{"id":3706,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3068,"count":1},{"id":3065,"count":1},{"id":3047,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3065,"count":1},{"id":3047,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3143,"count":1},{"id":3102,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3001,"count":1},{"id":3170,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3151,"count":1},{"id":3001,"count":1},{"id":3170,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]},"Gragas":{"id":79,"key":"Gragas","name":"그라가스","title":"술취한 난동꾼","image":{"full":"Gragas.png","sprite":"champion1.png","group":"champion","x":192,"y":0,"w":48,"h":48},"skins":[{"id":79000,"name":"default","num":0},{"id":79001,"name":"스쿠버 그라가스","num":1},{"id":79002,"name":"촌뜨기 농부 그라가스","num":2},{"id":79003,"name":"산타 그라가스","num":3},{"id":79004,"name":"멋쟁이 그라가스","num":4},{"id":79005,"name":"파괴단 그라가스","num":5},{"id":79006,"name":"옥토버페스트 그라가스","num":6},{"id":79007,"name":"축구광 그라가스","num":7},{"id":79008,"name":"Fnatic 그라가스","num":8},{"id":79009,"name":"술통 파괴자 그라가스","num":9}],"lore":"그라가스는 몸집이 크고 소란스러워서 한 번 보면 잊기 힘든 쾌활한 주조가로, 완벽한 술을 만들기 위한 여정을 떠나게 되었다. 그라가스가 어디서 왔는지는 아무도 모르지만, 프렐요드의 때묻지 않은 불모지를 뒤지며 희귀한 재료를 찾아 주조법을 하나씩 시험해 보고 있다. 대부분 술에 취해 있어 극도로 충동적인 그라가스는 소동을 일으키는 데에는 전설적인 소질이 있는데, 그 소동은 밤샘 파티와 엄청난 기물 파손으로 이어지기 일쑤다. 그라가스를 보게 된다면 곧 음주, 그리고 파괴가 잇따를 것이라고 생각해도 좋다.","blurb":"그라가스는 몸집이 크고 소란스러워서 한 번 보면 잊기 힘든 쾌활한 주조가로, 완벽한 술을 만들기 위한 여정을 떠나게 되었다. 그라가스가 어디서 왔는지는 아무도 모르지만, 프렐요드의 때묻지 않은 불모지를 뒤지며 희귀한 재료를 찾아 주조법을 하나씩 시험해 보고 있다. 대부분 술에 취해 있어 극도로 충동적인 그라가스는 소동을 일으키는 데에는 전설적인 소질이 있는데, 그 소동은 밤샘 파티와 엄청난 기물 파손으로 이어지기 일쑤다. 그라가스를 보게 된다면 곧...","allytips":["- 취중 분노의 피해량 감소 효과는 마시기 시작할 때 적용되므로, 적의 공격이 들어오면 바로 사용하세요.","- 술통 폭발로 적을 아군 포탑 쪽으로 밀어버리십시오.","- 몸통 박치기와 술통 폭발을 연계하여 아군이 킬을 올릴 수 있도록 도우십시오."],"enemytips":["- 그라가스는 궁극기로 모든 유닛을 밀어낼 수 있습니다. 그라가스나 적 포탑의 공격 범위 안으로 밀려 들어가지 않도록 조심하십시오.","- 몸통 박치기는 재사용 대기시간이 무척 짧기 때문에 그라가스를 추적하기는 매우 어렵습니다. 너무 깊숙히 추격하지 않도록 조심하십시오."],"tags":["Fighter","Mage"],"partype":"마나","info":{"attack":4,"defense":7,"magic":6,"difficulty":5},"stats":{"armor":35,"armorperlevel":3.6,"attackdamage":61.38,"attackdamageperlevel":3.5,"attackrange":125,"attackspeedoffset":0,"attackspeedperlevel":2.05,"crit":0,"critperlevel":0,"hp":583.52,"hpperlevel":89,"hpregen":5.5,"hpregenperlevel":0.5,"movespeed":330,"mp":400,"mpperlevel":47,"mpregen":6,"mpregenperlevel":0.8,"spellblock":32.1,"spellblockperlevel":1.25},"spells":[{"name":"술통 굴리기","description":"그라가스가 술통을 굴려 폭발시킵니다. 술통은 4초 뒤 자동으로 폭발하며 스킬을 다시 사용하여 직접 폭발시킬수도 있습니다. 이 스킬에 당한 적은 이동 속도가 느려집니다.","sanitizedDescription":"그라가스가 술통을 굴려 폭발시킵니다. 술통은 4초 뒤 자동으로 폭발하며 스킬을 다시 사용하여 직접 폭발시킬수도 있습니다. 이 스킬에 당한 적은 이동 속도가 느려집니다.","tooltip":"그라가스가 술통을 지정한 위치로 던집니다. 스킬을 다시 사용하거나 {{ e4 }}초가 지나면 술통이 폭발해 근처의 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% 늦춥니다.<br /><br />피해량과 둔화 효과는 술통이 오래 남아 있을수록 증가하여, {{ e5 }}초 후 최대 {{ e6 }}%까지 올라갑니다. 미니언에게는 {{ e7 }}%의 피해를 입힙니다.","sanitizedTooltip":"그라가스가 술통을 지정한 위치로 던집니다. 스킬을 다시 사용하거나 {{ e4 }}초가 지나면 술통이 폭발해 근처의 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 {{ e3 }}초 동안 이동 속도를 {{ e2 }}% 늦춥니다. 피해량과 둔화 효과는 술통이 오래 남아 있을수록 증가하여, {{ e5 }}초 후 최대 {{ e6 }}%까지 올라갑니다. 미니언에게는 {{ e7 }}%의 피해를 입힙니다.","leveltip":{"label":["피해량","둔화 %","재사용 대기시간","마나 소모량"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ e2 }} -> {{ e2NL }}","{{ cooldown }} -> {{ cooldownNL }}","{{ cost }} -> {{ costNL }}"]},"image":{"full":"GragasQ.png","sprite":"spell3.png","group":"spell","x":240,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[60,65,70,75,80],"costBurn":"60/65/70/75/80","cooldown":[11,10,9,8,7],"cooldownBurn":"11/10/9/8/7","effect":[null,[80,120,160,200,240],[40,45,50,55,60],[2,2,2,2,2],[4,4,4,4,4],[2,2,2,2,2],[150,150,150,150,150],[70,70,70,70,70],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/120/160/200/240","40/45/50/55/60","2","4","2","150","70","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[850,850,850,850,850],"rangeBurn":"850","key":"GragasQ"},{"name":"취중 분노","description":"그라가스가 1초 동안 술통에 든 술을 마십니다. 술에 취한 그라가스는 매우 강해져 받는 피해가 줄어들고 다음번 기본 공격 시 근처의 모든 대상에게 추가 마법 피해를 입힙니다.","sanitizedDescription":"그라가스가 1초 동안 술통에 든 술을 마십니다. 술에 취한 그라가스는 매우 강해져 받는 피해가 줄어들고 다음번 기본 공격 시 근처의 모든 대상에게 추가 마법 피해를 입힙니다.","tooltip":"그라가스가 술통에 든 술을 마시고 {{ e5 }}초 동안 받는 피해량이 {{ e1 }}% 감소합니다.<br /><br />술에 취한 그라가스의 다음 기본 공격은 {{ e3 }} <span class=\"color99FF99\">(+{{ a1 }})</span> + 대상의 최대 체력의 {{ e2 }}% (몬스터 상대로는 최대 {{ e4 }})에 해당하는 마법 피해를 입힙니다.","sanitizedTooltip":"그라가스가 술통에 든 술을 마시고 {{ e5 }}초 동안 받는 피해량이 {{ e1 }}% 감소합니다. 술에 취한 그라가스의 다음 기본 공격은 {{ e3 }} (+{{ a1 }}) + 대상의 최대 체력의 {{ e2 }}% (몬스터 상대로는 최대 {{ e4 }})에 해당하는 마법 피해를 입힙니다.","leveltip":{"label":["피해량 감소","기본 피해량","재사용 대기시간"],"effect":["{{ e1 }}% -> {{ e1NL }}%","{{ e3 }} -> {{ e3NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GragasW.png","sprite":"spell3.png","group":"spell","x":288,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[30,30,30,30,30],"costBurn":"30","cooldown":[8,7,6,5,4],"cooldownBurn":"8/7/6/5/4","effect":[null,[10,12,14,16,18],[8,8,8,8,8],[20,50,80,110,140],[300,300,300,300,300],[2.5,2.5,2.5,2.5,2.5],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","10/12/14/16/18","8","20/50/80/110/140","300","2.5","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.3]}],"range":[20,20,20,20,20],"rangeBurn":"20","key":"GragasW"},{"name":"몸통 박치기","description":"그라가스가 지정 위치로 몸을 날려 가장 먼저 부딪히는 적과 그 주변의 다른 적 유닛에게 피해를 주며 기절시킵니다.","sanitizedDescription":"그라가스가 지정 위치로 몸을 날려 가장 먼저 부딪히는 적과 그 주변의 다른 적 유닛에게 피해를 주며 기절시킵니다.","tooltip":"그라가스가 앞으로 돌진하여 첫 번째 적 유닛에게 부딪힙니다. 부딪히는 적과 그 주변 적에게 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입히고 뒤로 밀어내며, {{ e2 }}초동안 기절시킵니다.<br /><br />그라가스가 유닛과 충돌하면 몸통 박치기의 재사용 대기시간이 {{ f1 }}초 단축됩니다.","sanitizedTooltip":"그라가스가 앞으로 돌진하여 첫 번째 적 유닛에게 부딪힙니다. 부딪히는 적과 그 주변 적에게 {{ e1 }} (+{{ a1 }})의 마법 피해를 입히고 뒤로 밀어내며, {{ e2 }}초동안 기절시킵니다. 그라가스가 유닛과 충돌하면 몸통 박치기의 재사용 대기시간이 {{ f1 }}초 단축됩니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GragasE.png","sprite":"spell3.png","group":"spell","x":336,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":5,"cost":[50,50,50,50,50],"costBurn":"50","cooldown":[16,15,14,13,12],"cooldownBurn":"16/15/14/13/12","effect":[null,[80,130,180,230,280],[1,1,1,1,1],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0],[0,0,0,0,0]],"effectBurn":["","80/130/180/230/280","1","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.6]}],"range":[600,600,600,600,600],"rangeBurn":"600","key":"GragasE"},{"name":"술통 폭발","description":"그라가스가 술통을 지정한 위치에 던져, 폭발 반경 내의 적들에게 피해를 입히고 멀리 밀어냅니다.","sanitizedDescription":"그라가스가 술통을 지정한 위치에 던져, 폭발 반경 내의 적들에게 피해를 입히고 멀리 밀어냅니다.","tooltip":"그라가스가 술통을 던져 지면에 떨어지는 순간 폭발이 일어납니다. 폭발에 맞은 적은 {{ e1 }} <span class=\"color99FF99\">(+{{ a1 }})</span>의 마법 피해를 입고 폭발 지점으로부터 뒤로 밀려납니다.","sanitizedTooltip":"그라가스가 술통을 던져 지면에 떨어지는 순간 폭발이 일어납니다. 폭발에 맞은 적은 {{ e1 }} (+{{ a1 }})의 마법 피해를 입고 폭발 지점으로부터 뒤로 밀려납니다.","leveltip":{"label":["피해량","재사용 대기시간"],"effect":["{{ e1 }} -> {{ e1NL }}","{{ cooldown }} -> {{ cooldownNL }}"]},"image":{"full":"GragasR.png","sprite":"spell3.png","group":"spell","x":384,"y":144,"w":48,"h":48},"resource":"마나 {{ cost }}","maxrank":3,"cost":[100,100,100],"costBurn":"100","cooldown":[120,100,80],"cooldownBurn":"120/100/80","effect":[null,[200,300,400],[900,900,900],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],"effectBurn":["","200/300/400","900","0","0","0","0","0","0","0","0"],"vars":[{"key":"a1","link":"spelldamage","coeff":[0.7]}],"range":[1000,1000,1000],"rangeBurn":"1000","key":"GragasR"}],"passive":{"name":"서비스 시간","description":"스킬을 사용할 때마다 그라가스는 술을 마시고 최대 체력의 6%를 회복합니다. 이 효과는 8초에 한 번씩만 발동됩니다.","sanitizedDescription":"스킬을 사용할 때마다 그라가스는 술을 마시고 최대 체력의 6%를 회복합니다. 이 효과는 8초에 한 번씩만 발동됩니다.","image":{"full":"GragasPassiveHeal.png","sprite":"passive1.png","group":"passive","x":192,"y":0,"w":48,"h":48}},"recommended":[{"champion":"Gragas","title":"Beginner","type":"riot","map":"SR","mode":"INTRO","priority":false,"blocks":[{"type":"beginner_Starter","items":[{"id":1056,"count":1}]},{"type":"beginner_Starter","items":[{"id":1056,"count":1},{"id":2003,"count":1}]},{"type":"beginner_Advanced","recMath":true,"items":[{"id":1028,"count":1},{"id":1027,"count":1},{"id":3010,"count":1}]},{"type":"beginner_MovementSpeed","recMath":true,"items":[{"id":1001,"count":1},{"id":3020,"count":1}]},{"type":"beginner_LegendaryItem","recMath":true,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":3027,"count":1}]},{"type":"beginner_MoreLegendaryItems","items":[{"id":3151,"count":1},{"id":3174,"count":1},{"id":3116,"count":1},{"id":3089,"count":1}]}]},{"champion":"Gragas","title":"GragasARAM","type":"riot","map":"HA","mode":"ARAM","blocks":[{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3025,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3029,"count":1},{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Gragas","title":"GragasCS","type":"riot","map":"CS","mode":"ODIN","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3020,"count":1},{"id":3152,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3065,"count":1},{"id":3110,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2055,"count":1},{"id":2139,"count":1}]}]},{"champion":"Gragas","title":"GragasFIRSTBLOOD","type":"riot","map":"HA","mode":"FIRSTBLOOD","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3157,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":3111,"count":1},{"id":3800,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3151,"count":1},{"id":3100,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3143,"count":1}]},{"type":"consumable","recMath":false,"items":[{"id":2003,"count":1},{"id":2043,"count":1},{"id":2139,"count":1}]}]},{"champion":"Gragas","title":"GragasKINGPORO","type":"riot","map":"HA","mode":"KINGPORO","blocks":[{"type":"KingPoroSnax","recMath":false,"items":[{"id":3680,"count":1},{"id":3681,"count":1},{"id":3682,"count":1},{"id":3683,"count":1}]},{"type":"starting","recMath":false,"items":[{"id":3112,"count":1},{"id":1001,"count":1},{"id":2003,"count":3}]},{"type":"essential","recMath":false,"items":[{"id":3020,"count":1},{"id":3025,"count":1},{"id":3001,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3027,"count":1},{"id":3152,"count":1},{"id":3135,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3065,"count":1},{"id":3742,"count":1},{"id":3143,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Gragas","title":"GragasSIEGE","type":"riot","map":"SR","mode":"SIEGE","blocks":[{"type":"siegeOffense","recMath":false,"items":[{"id":3631,"count":1},{"id":3641,"count":1},{"id":3647,"count":1},{"id":3635,"count":1},{"id":3642,"count":1}]},{"type":"siegeDefense","recMath":false,"items":[{"id":3634,"count":1},{"id":3640,"count":1},{"id":3643,"count":1},{"id":3636,"count":1},{"id":3642,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3029,"count":1},{"id":3020,"count":1},{"id":3152,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3065,"count":1},{"id":3110,"count":1}]}]},{"champion":"Gragas","title":"GragasSR","type":"riot","map":"SR","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":1},{"id":2003,"count":2},{"id":3340,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":1026,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3020,"count":1},{"id":3152,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3100,"count":1},{"id":3089,"count":1},{"id":3165,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3001,"count":1},{"id":3065,"count":1},{"id":3110,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1039,"count":1},{"id":2003,"count":3},{"id":3340,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3113,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1402,"count":1},{"id":3158,"count":1},{"id":3057,"count":1}]},{"type":"offensive","recMath":false,"items":[{"id":3025,"count":1},{"id":3001,"count":1},{"id":3800,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3193,"count":1},{"id":3065,"count":1},{"id":3742,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2139,"count":1}]}]},{"champion":"Gragas","title":"GragasTT","type":"riot","map":"TT","mode":"CLASSIC","blocks":[{"type":"starting","recMath":false,"items":[{"id":1056,"count":2},{"id":2003,"count":1}]},{"type":"early","recMath":false,"items":[{"id":3010,"count":1},{"id":1001,"count":1}]},{"type":"essential","recMath":false,"items":[{"id":3027,"count":1},{"id":3111,"count":1}]},{"type":"defensive","recMath":false,"items":[{"id":3110,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"situational","recMath":false,"items":[{"id":3800,"count":1},{"id":3090,"count":1},{"id":3001,"count":1}]},{"type":"startingjungle","recMath":false,"items":[{"id":1041,"count":1},{"id":1039,"count":1},{"id":2031,"count":1}]},{"type":"earlyjungle","recMath":false,"items":[{"id":3706,"count":1},{"id":3751,"count":1},{"id":1001,"count":1}]},{"type":"essentialjungle","recMath":false,"items":[{"id":1401,"count":1},{"id":3190,"count":1},{"id":3111,"count":1}]},{"type":"defensivejungle","recMath":false,"items":[{"id":3742,"count":1},{"id":3065,"count":1},{"id":3075,"count":1}]},{"type":"situationaljungle","recMath":false,"items":[{"id":3800,"count":1},{"id":3001,"count":1},{"id":3090,"count":1}]},{"type":"consumables","recMath":false,"items":[{"id":2003,"count":1},{"id":2138,"count":1}]}]}]}},"keys":{"1":"Annie","2":"Olaf","3":"Galio","4":"TwistedFate","5":"XinZhao","6":"Urgot","7":"Leblanc","8":"Vladimir","9":"Fiddlesticks","10":"Kayle","11":"MasterYi","12":"Alistar","13":"Ryze","14":"Sion","15":"Sivir","16":"Soraka","17":"Teemo","18":"Tristana","19":"Warwick","20":"Nunu","21":"MissFortune","22":"Ashe","23":"Tryndamere","24":"Jax","25":"Morgana","26":"Zilean","27":"Singed","28":"Evelynn","29":"Twitch","30":"Karthus","31":"Chogath","32":"Amumu","33":"Rammus","34":"Anivia","35":"Shaco","36":"DrMundo","37":"Sona","38":"Kassadin","39":"Irelia","40":"Janna","41":"Gangplank","42":"Corki","43":"Karma","44":"Taric","45":"Veigar","48":"Trundle","50":"Swain","51":"Caitlyn","53":"Blitzcrank","54":"Malphite","55":"Katarina","56":"Nocturne","57":"Maokai","58":"Renekton","59":"JarvanIV","60":"Elise","61":"Orianna","62":"MonkeyKing","63":"Brand","64":"LeeSin","67":"Vayne","68":"Rumble","69":"Cassiopeia","72":"Skarner","74":"Heimerdinger","75":"Nasus","76":"Nidalee","77":"Udyr","78":"Poppy","79":"Gragas","80":"Pantheon","81":"Ezreal","82":"Mordekaiser","83":"Yorick","84":"Akali","85":"Kennen","86":"Garen","89":"Leona","90":"Malzahar","91":"Talon","92":"Riven","96":"KogMaw","98":"Shen","99":"Lux","101":"Xerath","102":"Shyvana","103":"Ahri","104":"Graves","105":"Fizz","106":"Volibear","107":"Rengar","110":"Varus","111":"Nautilus","112":"Viktor","113":"Sejuani","114":"Fiora","115":"Ziggs","117":"Lulu","119":"Draven","120":"Hecarim","121":"Khazix","122":"Darius","126":"Jayce","127":"Lissandra","131":"Diana","133":"Quinn","134":"Syndra","136":"AurelionSol","141":"Kayn","142":"Zoe","143":"Zyra","150":"Gnar","154":"Zac","157":"Yasuo","161":"Velkoz","163":"Taliyah","164":"Camille","201":"Braum","202":"Jhin","203":"Kindred","222":"Jinx","223":"TahmKench","236":"Lucian","238":"Zed","240":"Kled","245":"Ekko","254":"Vi","266":"Aatrox","267":"Nami","268":"Azir","412":"Thresh","420":"Illaoi","421":"RekSai","427":"Ivern","429":"Kalista","432":"Bard","497":"Rakan","498":"Xayah","516":"Ornn"},"format":"full","type":"champion","version":"7.24.2"}

/***/ })
/******/ ]);